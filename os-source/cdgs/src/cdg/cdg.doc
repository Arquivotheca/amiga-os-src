TABLE OF CONTENTS

cdg.library/--background--
cdg.library/_CDGOpen
cdg.library/CDGBack
cdg.library/CDGBegin
cdg.library/CDGChannel
cdg.library/CDGDiskRemoved
cdg.library/CDGDraw
cdg.library/CDGEnd
cdg.library/CDGFastForward
cdg.library/CDGFront
cdg.library/CDGNextTrack
cdg.library/CDGPause
cdg.library/CDGPlay
cdg.library/CDGPrevTrack
cdg.library/CDGRewind
cdg.library/CDGStop
cdg.library/--background--                         cdg.library/--background--

   CD+G

	CD+G is a standard format for encoding graphics data on
	audio CD's.  This data is stored with the audio data such
	that the graphics data retrieved is synchronized with the
	audio.

	CD+G currently defines a limited set of graphics operations
	including --

	o Setting border color (0..15)

	o Drawing a 6 bit wide, by 12 bit high graphic image
	  at a specific ROW/COLUMN position.  The graphic image
	  is drawn in 2 colors.  The pen colors to use are encoded
	  in the graphic data.

	  A 6x12 pixel element is known as a FONT.

	o Exclusive-OR a 6x12 bit graphic image with another.
	  EOR makes it possible to draw a graphic image, and
	  color it in more than 2 colors by EORing the previous
	  bit-pattern with a new one using 2 new pen colors.

	o Clear the entire display with a color (0..15).

	o Change the color table (0..15).  Separate CD+G instructions
	  are used to load pen colors 0-7, and 8-15.

	o Scroll screen left/right, up/down.  The vacated portion
	  is filled in with a pen color (0..15).  Smooth scrolling
	  is possible.

	o Scroll screen left/right, up/down.  The vacated portion
	  is filled in with the data which is scrolled off screen.

	There are currently two kinds of graphics --

	o Line Graphics - the display is a VISIBLE 2 rows, by
	  48 columns.  Each FONT element in the display is 6 pixels
	  wide by 12 pixels high.  This mode is currently NOT
	  supported.

	o TV Graphics - the display is a VISIBLE 16 rows, by
	  48 columns.  Each FONT element in the display is 6 pixels
	  wide by 12 pixels high.  This mode IS supported by
	  cdg.library.

   CHANNELS -

	Two of the CD+G drawing instructions can be divided into
	channel numbers.  These are the WRITE FONT intruction
	which draws a 2 color 6x12 image on the screen, and the EOR
	FONT instruction which uses EOR logic to draw over an existing
	font.

	The primary channel number is 0, and would typically be used
	to draw a picture.  Infact, some CD+G disks will only use
	channel 0.

	In addition to channel 0, there are 15 other channels which
	can be used for additional graphics imagery, such as the
	text for more than one language.

	By default the cdg.library uses channels 0, and 1 for
	graphic data.  The cdg.library also provides a function
	so that channels 2-15 can be used instead of channel
	1.  Therefore, two channels are always active.

	While the CD+G specification recommends that there be
	a mechanism for selectively turning on/off all 16 channels,
	it is also not entirely clear if, or how the data should
	be mixed on screen.

	Because there are already variations in CD+G implementations
	regarding channel selection, and usage, the scheme provided
	for in cdg.library is probably the least complicated for the
	user.  It is however admittedly not completely within the
	ideal specification.

   PACKS & PACKETS

	CD+G data is stored in something called a PACKET.  There
	are up to 4 TV GRAPHIC'S PACKS per PACKET.  Each PACK
	in a PACKET can be a separate graphics instruction from
	those listed above.

	Because a new PACKET is available 75x/second, CD+G requires
	most of the available CPU time on a 68000 based system to
	keep up with the data.

   ERROR CORRECTION

	Because of the nature of CD's, data can be munged.  Because
	audio data must be played in real-time, it is not possible
	to retry a bad block of data.  The CD standard includes
	an error CORRECTION method which helps to minimize data loss.

	Error correction may, or may not be implemented in the
	cdg.library.  Error correction requires a considerable
	amount of CPU time, or error correcting hardware if
	available.  Even with error correction it is not always
	possible to correct the data.

	The result of NON-CORRECTED data which is in error may be
	a display glitch.

	The result of NON-CORRECTABLE data which is in error is
	missed graphics data, also resulting in a display glitch.
	While better than no error correction, there is still the
	possibility of an imperfect display.

   cdg.library (V38)

	The cdg.library provides a set of functions for use with   
	the Commodore CDTV player.  These functions are meant to be
	used by the Player Preferences module which lets the user
	select audio tracks to play.  Note that these functions
	were not available in the initial cdg.library, and the V38
	functions are not compatable with the earlier version of
	the library.

	The caller of cdg.library functions is responsible for managing
	user input, and CD activity, including selecting tracks to
	play, starting play, stopping play, etc.

	In the typical case, the following steps are recommended -

	1.) Initialize a CDGPrefs structure.  This structure
	must be entirely filled in, and contains many pointers to
	sprite data which must be initialized.

	The sprites are used to display activity information to the
	user when the CD+G display is active.  An example would be
	a change in channel selection.  A new channel number is
	automatically displayed for a few moments for the user's
	benefit.  Sprites are also used to display disk activity
	such as PAUSE mode.
	
	Each image is composed of 4 sprites.  Two sprites are
	used for the left side of the symbol, and two for the
	right.  The image can use 8 colors because attached
	sprites are used.  Each symbol requires pointers to
	FOUR sprites arranged in this order -

		1st ptr -> Left side sprite
		2nd ptr -> Left side, attached sprite
		3rd ptr -> Right side sprite
		4th ptr -> Right side, attached sprite

	The ordering arrangement is designed to be convienent
	for the cdg.library, and provides enough colors to make
	attractive images.  Because sprites are used, the total width
	of each image is always 32 bits wide, and the height is
	variable.  It is highly recommended that the images not be
	more than 32 bits high to insure they fit on the screen, and
	avoid excessive memory usage.

	Sprite data should be in CHIP RAM, and be stored in the
	simple sprite format including space for the posctrl words, and
	NULL terminating words.  The height of all sprites must be
	the same.

	The CDGPrefs structure includes other fields defined in the
	cdgprefs.i/h file such as display position, and an array of
	8 colors to be used for the sprites.

	2.) Call CDGBegin() with the CDGPrefs() structure as an argument.
	This function starts the cdg.library.  The call may fail due to
	lack of memory, or inability to open a needed system resource.
	Of interest, the cdg.library will only process MIDI packets IF
	the serial port, and control bits have not been allocated by
	some other task (e.g., the serial.device).

	Once started, the cdg.library starts collecting PACKETS as
	available.  The PACKETS are buffered (though because of the
	rate and size of the PACKETS), assume no more than 1 seconds
	worth of PACKET data will be buffered before it is overwritten
	by more recent PACKETS.

	3.) Call CDGPlay(), and start the CD playing.  Once the CD starts
	playing, assume the cdg.library is receiving CD+G PACKETS.  At this
	point your code should call CDGDraw() as often as possible.  During
	every call, CDGDraw() will process any pending PACKS.

	CDGDraw() also returns a value indicating if ANY CD+G, or CD+MIDI
	PACKS have been processed.  This is meant to be used as an indicator
	that the CD+G screen should be brought to front, or perhaps a gadget
	would be displayed indicating that CD+G is available.  The user will
	probably prefer the CD+G screen automatically coming to front, or they
	will miss the initial portion of the animation.

	To bring the CD+G screen to front, use the CDGFront() call.
	It is recommended that you first call CDGDraw() so that
	any pending PACKS will be processed before the screen is
	made visible.

	4.) The player program is now responsible for switching to
	CD+G mode by efficiently checking for user input, and busy
	looping on the CDGDraw() function.  The loop should be coded
	to provide maximum CPU time for CDGDraw().

	5.) If the user presses a key, or button indicating they want 
	to bring the Player program to front, you must use the CDGBack()
	function to tell CD+G to turn off any sprites it has on screen, and
	notify it not to bring its own screen to front again until CDGFront()
	is called.

	6.) The cdg.library provides a number of functions for
	telling it what the CD is doing, as well the ability to
	change the active channels 1-15.  These are functions are also
	used to provide some visual indication to the user that their input
	has been noticed, and what is happening.  In addition to the channel
	selection, there are sprite images in CDGPrefs for the following
	modes --

		PLAY	- Image is displayed for a few moments.
			  Indicates the disk has started PLAY.
			  Should be displayed whenever the disk
			  starts playing, including after PAUSE,
			  STOP, FF, REW, NEXT TRACK, PREVIOUS TRACK.

		PAUSE	- Image is displayed indefinitely.

		STOP	- Image is displayed indefinitely.

		FF	- Image is displayed indefinitely.

		REW	- Image is displayed indefinitely.

		NEXT TRACK - Image is displayed for a few moments.
			     PLAY is implied.

		PREV TRACK - Image is displayed for a few moments.
			     PLAY is implied.

		CHANNEL    - Image is displayed for a few moments.

	See AutoDocs for the functions used to display these images.

	7.) If the CD is removed, the CDGDiskRemoved() function should
	be called.

	8.) To close down the cdg.library, use the CDGEnd() function.

	Note that while your own screen is displayed, it is not
	necessary to call CDGDraw() on a timely basis, however it
	is important to call it often (e.g., once every 1/2-3/4
	seconds) so that CD+G/+MIDI data is not lost.

	Note that sprite images can be replaced by a more recent
	sprite image if the image has not already been removed
	from the display.  For example, if the user is changing
	channel numbers, you can call CDGChannel() at any time,
	and the most recent channel will be displayed.

	If you call CDGBack() while a sprite image is being
	displayed, the sprite image is turned off at the next
	VBLANK.

    SPECIAL CONSIDERATIONS

	During FF and REW, CD+G data is missed.  Because data is
	missed, the CD+G display is cleared during these operations,
	and it can take a while for the display to be properly
	updated.  For example, if the color tables were supposed to
	have been changed during the section of the CD which is
	skipped in FF/REW modes, the colors will be wrong when the
	disk starts to PLAY again.

	Because there is no work around for this problem, you can
	either disable FF/REW during CD+G, or allow the problem.
	Ideally CD+G instructions will contain enough repetative
	information that this won't be a significant problem.  If
	for example the CD+G data reloads the color tables often,
	and redraws the screen often enough, the problem is tolerable.

    MIDI DATA

	CD's can also contain MIDI data.  The cdg.library optionally
	handle MIDI PACKETS during CDGDraw(), and sends this data
	at MIDI Baud rates out the serial port.  However because
	of variations in MIDI implementations, the cdg.library
	code may not work with all MIDI devices.  Incompatability
	reports will be considered if a cdg.library upgrade is
	implemented in the future.

cdg.library/_CDGOpen                                     cdg.library/_CDGOpen

   NAME
	CDGOpen -- Open library
   
   SYNOPSIS
	cdgbase = CDGOpen( CDGBase )
	D0                    A6

	struct CDGBase *CDGOpen( struct CDGBase * );

   FUNCTION
	Returns pointer to library base if the library has not been
	previously opened.  Because of limited hardware resources
	(e.g., sprites, and CPU bandwidth) only one CD+G display
	is currently feasable.

	Therefore this OpenLibrary() of "cdg.library" returns a
	pointer to the library base only if some other task has not
	already opened it.
	
	You must call CDGBegin() with a CDGPrefs structure to actually
	start CD+G.

   RETURNS
	Library base pointer, or NULL indicating the library is in use.

   NOTES

cdg.library/CDGBack                                       cdg.library/CDGBack

   NAME
	CDGBack -- Called before you bring your own screen to front.
   
   SYNOPSIS
	VOID CDGBack( VOID )


	VOID CDGBack( VOID );

   FUNCTION
	Tells CD+G you are going to bring your own screen in front
	of CD+G's screen.  This tells CD+G that it should not display
	any sprites, or bring its own screen to front.  The programmer
	must call CDGBegin() first - failure to do so will result in a
	crash.

   RETURNS
	N/A

   NOTES

cdg.library/CDGBegin                                     cdg.library/CDGBegin

   NAME
	CDGBegin -- Start the CD+G display system
   
   SYNOPSIS
	result = CDGBegin( CDGPrefs )
	D0                    A0

	BOOL CDGBegin( struct CDGPrefs * );

   FUNCTION
	Starts CD+G with given preferences.  You must call CDGFront()
	to bring the CD+G screen to front.  CD+G uses graphics.library
	functions, and is not meant to be used in an Intuition
	screen environment.

   INPUTS
	CDGPrefs -- pointer to a CDGPrefs structure.  The structure
	includes the following information -

		Sprite image data for CD+G Channel selection.
		Sprite image data for CD play, pause, etc.
		Top/Left edge corder of CD+G screen.
		Interlaced display (TRUE or FALSE) - does not affect
		display resolution.

   RETURNS
	TRUE if CD+G started.  FALSE indicates failure, most likely
	due to lack of memory, or inability to obtain some other
	resource.

   NOTES
	Once started, the CD+G library will start buffering CD+G PACKETS.
	These packets will be lost if you do not call CDGDraw() often
	enough.  The CD+G screen can be made visible by calling
	CDGFront().

cdg.library/CDGChannel                                 cdg.library/CDGChannel

   NAME
	CDGChannel -- Set active channel number for FONT data
   
   SYNOPSIS
	VOID CDGChannel( channel )
			    D0

	VOID CDGChannel( ULONG );

   FUNCTION
	Tells the cdg.library to use a new channel.  Channel 0 is always
	displayed.  In addition, one of 15 other channels can also be
	displayed.  The selected channel number is automatically displayed
	on the CD+G screen for a reasonable amount of time (approximately
	2-3 seconds).

   INPUTS
	channel - A number from 1-15.  Error checking is not performed; you
	must pass in valid values.

   RETURNS
	N/A

   NOTES
	The caller is responsible for managing user input, including
	polling for some button press indicating that the user would
	like to increment, or set a new active channel.

cdg.library/CDGDiskRemoved                         cdg.library/CDGDiskRemoved

   NAME
	CDGDiskRemoved -- Tell CD+G that the CD has been removed
   
   SYNOPSIS
	VOID CDGDiskRemoved( VOID )

	VOID CDGDiskRemoved( VOID );

   FUNCTION
	Tell the cdg.library  that the CD has been removed.  The CDTV "+G",
	and/or "+MIDI" control panel lights are turned off (if they are
	already on).

   INPUTS
	N/A

   RETURNS
	N/A

   NOTES
	The the cdg.library turns on the "+G", and/or "+MIDI" front panel
	lights if a +G, or +MIDI PACK has been processed during
	CDGDraw().  There is currently no good way to determine if
	a disk is +G, or +MIDI before a track has been played.

cdg.library/CDGDraw                                       cdg.library/CDGDraw

   NAME
	CDGDraw -- Main CD+G PACKET handling routine
   
   SYNOPSIS
	flags=CDGDraw( VOID );
	D0

	UWORD CDGDraw( VOID );

   FUNCTION
	Process pending packets.  CDGDraw() must be called in
	a loop from an efficient, relatively high priority task.
	Failure to call this function often enough will result
	in CD+G data being lost.

	Currently this function must be called at least once every
	3/4 of a second, but while the CD+G screen is in front, it
	should be called as frequently as possible.  Ideally it is
	called in a loop which does little more than check for
	user input, and use the cd.device to control disk play,
	stop, pause, etc.

   RETURNS
	flags - A set of flags as defined in cdgprefs.h/i.  The
	flags are used by the caller to determine if any +G, or
	+MIDI PACKS have been processed.

   NOTES
       Currently this function knows how to process TVGRAPHICS
	PACKS, and MIDI PACKS.  MIDI PACKS causes data to be sent
	at MIDI baud rates via the serial port.  The first MIDI
	PACK received also causes MIDI initialization information
	to be transmitted.

	It is also possible to use Wait() instead of calling this
	function in a pure busy loop.  This requires providing a
	pointer to a task structure, and signal mask in the CDGPrefs
	structure when you call CDGBegin().  Because your task
	will be signaled approximately 75 times per second, your
	code needs to be efficient.

	In addition, the calling task must be of a high enough
	priority to avoid long delays.  In the typical CDTV application
	only one task is effectively running, so this may not be
	a significant problem.  Even short delays can result in
	rough animation which is undesirable.

	It is allowable to call this function a pure busy loop,
	and not wait for a signal.  This function will simply
	return if there are no PACKs to be processed.

cdg.library/CDGEnd                                         cdg.library/CDGEnd

   NAME
	CDGEnd -- End CDG playing
   
   SYNOPSIS
	VOID CDGEnd( VOID )

	VOID CDGEnd( VOID );

   FUNCTION
	Stops CD+G.  All memory is freed.  Should never be called
	if CDGBegin() failed.

   RETURNS
	N/A

   NOTES

cdg.library/CDGFastForward                         cdg.library/CDGFastForward

   NAME
	CDGFastForward -- Tell CD+G that the disk is in FF mode
   
   SYNOPSIS
	VOID CDGFastForward( VOID )

	VOID CDGFastForward( VOID );

   FUNCTION
	Tell the cdg.library that the disk is in the FF mode.

	Sprites, passed in a CDGPrefs structure at CDGBegin()
	time, are used to display the mode.

   INPUTS
	N/A

   RETURNS
	N/A

   NOTES
	The FF mode sprite(s) is displayed until CDGPlay() is called,
	CDGBack() is called, or some other cdg.library mode function
	is called. 

cdg.library/CDGFront                                     cdg.library/CDGFront

   NAME
	CDGFront -- Bring CDG screen to front
   
   SYNOPSIS
	VOID CDGFront( VOID )


	VOID CDGFront( VOID );

   FUNCTION
	Brings CD+G screen to front.  Programmer must call CDGBegin()
	first - failure to do so will result in a crash.

   RETURNS
	N/A

   NOTES
	Recommend calling CDGDraw() once before calling this function.
	This will cause the CD+G display to get up to date before
	its screen is brought to front.  Do not call this function
	in a busy loop; not needed.

	See CDGBack() which should be called before bringing your
	own screen to front.

cdg.library/CDGNextTrack                             cdg.library/CDGNextTrack

   NAME
	CDGNextTrack -- Tell CD+G that the disk is in NEXT TRACK mode
   
   SYNOPSIS
	VOID CDGNextTrack( VOID )

	VOID CDGNextTrack( VOID );

   FUNCTION
	Tell the cdg.library that the disk is in the NEXT TRACK mode.

	Sprites, passed in a CDGPrefs structure at CDGBegin()
	time, are used to display the mode.

   INPUTS
	N/A

   RETURNS
	N/A

   NOTES
	The NEXT TRACK mode sprite(s) is automatically turned off after
	a few moments (e.g., 1 second), or when CDGBack() is called.

cdg.library/CDGPause                                     cdg.library/CDGPause

   NAME
	CDGPause -- Tell CD+G that the disk is in PAUSE mode
   
   SYNOPSIS
	VOID CDGPause( VOID )

	VOID CDGPause( VOID );

   FUNCTION
	Tell the cdg.library that the disk is in PAUSE mode.

	Sprites, passed in a CDGPrefs structure at CDGBegin()
	time, are used to display the mode.

   INPUTS
	N/A

   RETURNS
	N/A

   NOTES
	The PAUSE mode sprite(s) is displayed until CDGPlay() is called,
	CDGBack() is called, or some other cdg.library mode function
	is called. 

cdg.library/CDGPlay                                       cdg.library/CDGPlay

   NAME
	CDGPlay -- Tell CD+G that the disk is in PLAY mode
   
   SYNOPSIS
	VOID CDGPlay( Show )
	               D0

	VOID CDGPlay( BOOL );

   FUNCTION
	Tell the cdg.library that the disk is in PLAY mode.  You must call
	this function each time you start the CD playing to enable
	subcodes (R through W).
	
	Sprites, passed in a CDGPrefs structure at CDGBegin()
	time, are used to display the mode.

   INPUTS
	Show -- If TRUE, the PLAY sprite is displayed on the
	CD+G screen for a few moments.

   RETURNS
	N/A

   NOTES
	The PLAY mode sprite(s) is automatically turned off after
	a few moments (e.g., 1 second), or when CDGBack() is called.

cdg.library/CDGPrevTrack                             cdg.library/CDGPrevTrack

   NAME
	CDGPrevTrack -- Tell CD+G that the disk is in PREV TRACK mode
   
   SYNOPSIS
	VOID CDGPrevTrack( VOID )

	VOID CDGPrevTrack( VOID );

   FUNCTION
	Tell the cdg.library that the disk is in the PREV TRACK mode.

	Sprites, passed in a CDGPrefs structure at CDGBegin()
	time, are used to display the mode.

   INPUTS
	N/A

   RETURNS
	N/A

   NOTES
	The PREV TRACK mode sprite(s) is automatically turned off after
	a few moments (e.g., 1 second), or when CDGBack() is called.

cdg.library/CDGRewind                                   cdg.library/CDGRewind

   NAME
	CDGRewind -- Tell CD+G that the disk is in REW mode
   
   SYNOPSIS
	VOID CDGRewind( VOID )

	VOID CDGRewind( VOID );

   FUNCTION
	Tell CD+G that the disk is in the REW mode.

	Sprites, passed in a CDGPrefs structure at CDGBegin()
	time, are used to display the mode.

   INPUTS
	N/A

   RETURNS
	N/A

   NOTES
	The REW mode sprite(s) is displayed until CDGPlay() is called,
	CDGBack() is called, or some other cdg.library mode function
	is called. 

cdg.library/CDGStop                                       cdg.library/CDGStop

   NAME
	CDGStop -- Tell CD+G that the disk is in STOP mode
   
   SYNOPSIS
	VOID CDGStop( VOID )

	VOID CDGStop( VOID );

   FUNCTION
	Tell the cdg.library that the disk is in STOP mode.

	Sprites, passed in a CDGPrefs structure at CDGBegin()
	time, are used to display the mode.

   INPUTS
	N/A

   RETURNS
	N/A

   NOTES
	The STOP mode sprite(s) is displayed until CDGPlay() is called,
	CDGBack() is called, or some other cdg.library mode function
	is called. 

