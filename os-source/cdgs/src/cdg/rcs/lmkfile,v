head     1.15;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.15
date     93.04.15.09.03.01;  author darren;  state Exp;
branches ;
next     1.14;

1.14
date     93.02.18.16.30.36;  author darren;  state Exp;
branches ;
next     1.13;

1.13
date     93.02.03.12.11.01;  author darren;  state Exp;
branches ;
next     1.12;

1.12
date     92.04.21.12.13.56;  author darren;  state Exp;
branches ;
next     1.11;

1.11
date     92.02.25.13.03.31;  author darren;  state Exp;
branches ;
next     1.10;

1.10
date     92.02.24.16.43.37;  author darren;  state Exp;
branches ;
next     1.9;

1.9
date     92.02.24.13.17.03;  author darren;  state Exp;
branches ;
next     1.8;

1.8
date     92.02.24.12.24.22;  author darren;  state Exp;
branches ;
next     1.7;

1.7
date     92.02.18.16.42.46;  author darren;  state Exp;
branches ;
next     1.6;

1.6
date     92.02.17.14.44.10;  author darren;  state Exp;
branches ;
next     1.5;

1.5
date     92.02.14.13.48.16;  author darren;  state Exp;
branches ;
next     1.4;

1.4
date     92.02.14.11.29.53;  author darren;  state Exp;
branches ;
next     1.3;

1.3
date     92.01.30.16.43.24;  author darren;  state Exp;
branches ;
next     1.2;

1.2
date     92.01.30.16.06.39;  author darren;  state Exp;
branches ;
next     1.1;

1.1
date     92.01.30.16.02.21;  author darren;  state Exp;
branches ;
next     ;


desc
@Initial check-in of ALPHA cdg.library for CDTV-CR
@


1.15
log
@Store all external includes in CDGS:include libraries
pragmas, and clib
@
text
@VERSION=	40
SOURCE=		CDGS:
SUBSYSNAME=	cdg
MAKEFILE=	lmkfile

SRCDIR=		src/cdg/
FULLPATH=	$(SOURCE)$(SRCDIR)
INTERNAL=	$(SOURCE)include/internal
EXTERNAL=	$(SOURCE)include/libraries
EXTPROTOS=	$(SOURCE)include/clib
EXTPRAGMAS=	$(SOURCE)include/pragmas
DOCPATH=	$(SOURCE)doc/
LOCAL=		work:cdtv/cdg/

LIBDIR=		lib:
INCDIR=		include:+$(INTERNAL)
STRIP=		BLINK QUIET NODEBUG FROM

AFILES=	library.asm \
 init.asm \
 dispatch.asm \
 interrupts.asm \
 modes.asm \
 font.asm \
 setcolors.asm \
 scroll.asm \
 midi.asm \
 ecc.asm \
 debug.asm \
 endmodule.asm

PRAGMAFILE=	$(SUBSYSNAME)_cr_pragmas.h

FDFILE=		$(SUBSYSNAME)_cr_lib.fd

PROTOFILE=	$(SUBSYSNAME)_cr_protos.h

EXTERNHFILE=	cdgprefs.h

EXTERNIFILE=    cdgprefs.i

SFDFILE=	$(SUBSYSNAME)_cr_lib.sfd

MYIFILES=       cdgbase.i debug.i $(EXTERNIFILE)

HARDWARE=	cdgs:include/internal/cdgs_hw.i

BINFILES=	cdg.ld cdg.ld.strip

AFLAGS=		-cfvqrsy
LFLAGS=		BATCH BUFSIZE 1024 SMALLCODE SMALLDATA MAP cdg.map,f,l,h,s,x

MYLIBS=		lib:debug.lib lib:amiga.lib

FIRSTO=		library.o
OFILES=		init.o \
		dispatch.o \
		interrupts.o \
		modes.o \
		font.o \
		setcolors.o \
		scroll.o \
		midi.o \
		ecc.o \
		debug.o \
		endmodule.o

.asm.o:	
	@@echo "assembling $*.asm"
	casm -a $*.asm -o $*.o -i $(INCDIR) $(AFLAGS)

.c.o:
	@@echo "compiling $*.c"
	lc -cfist -mal -r -v $*.c

all:	$(SUBSYSNAME).ld

$(SUBSYSNAME).ld:	$(FIRSTO) $(OFILES)
	BLINK <with <
	$(LFLAGS)
	FROM $(FIRSTO) $(OFILES)
	TO $(SUBSYSNAME).ld
	LIB $(LIBDIR)debug.lib $(LIBDIR)amiga.lib
	VERBOSE
	<
	$(STRIP) $(SUBSYSNAME).ld TO $(SUBSYSNAME).ld.strip

bumprev:
	bumprev $(VERSION) $(SUBSYSNAME)_rev

release:
	@@delete \#?.o
	@@copy $(FULLPATH)$(SUBSYSNAME)_rev.rev $(SUBSYSNAME)_rev.rev
	@@lmk bumprev
	@@lmk pragmas
	@@lmk

internal:
	@@echo "Copying .ld files to source"
	@@copy $(BINFILES) $(FULLPATH)
	
	@@echo "Copying .asm files to source"
	@@delete $(FULLPATH)\#?.asm FORCE
	@@copy $(AFILES) $(FULLPATH)

	@@echo "Copying include files to source"
	@@delete $(FULLPATH)\#?.i FORCE
	@@delete $(FULLPATH)\#?.h FORCE
	@@delete $(FULLPATH)\#?.fd FORCE
	@@copy $(MYIFILES) $(FULLPATH)
	@@copy $(EXTERNHFILE) $(FULLPATH)

	@@echo "Copying _rev files to source"
	@@copy $(SUBSYSNAME)_rev.rev $(FULLPATH)
	@@copy $(SUBSYSNAME)_rev.i $(FULLPATH)
	@@copy $(SUBSYSNAME)_rev.h $(FULLPATH)

	@@echo "Copying lmkfile to source"
	@@delete $(FULLPATH)$(MAKEFILE) FORCE
	@@copy $(MAKEFILE) $(FULLPATH)

	@@echo "Copying external include files to CDGS includes"
	@@delete $(EXTERNAL)/$(EXTERNIFILE) FORCE
	@@delete $(EXTERNAL)/$(EXTERNHFILE) FORCE
	@@copy $(EXTERNIFILE) $(EXTERNAL)/
	@@copy $(EXTERNHFILE) $(EXTERNAL)/
	@@copy $(PRAGMAFILE) $(EXTPRAGMAS)/
	@@copy $(PROTOFILE) $(EXTPROTOS)/

	@@echo "Copying .doc file to CDGS docs"
	@@copy $(SUBSYSNAME).doc $(DOCPATH)

	@@echo "Done"

pragmas:
	@@echo "Making pragmas/protos"
	@@execute < <
	failat 21 ;
	makedir ram:sfd ;
	copy $(SFDFILE) ram:sfd ;
	cd ram:sfd ;
	sfd $(SFDFILE) ;
	copy PROTOS/\#? TO $(LOCAL) QUIET;
	copy PRAGMAS/\#? TO $(LOCAL) QUIET;
	copy FD/\#? TO $(LOCAL) QUIET;
	cd ram: ;
	delete ram:sfd/\#? ALL FORCE QUIET;
	delete ram:sfd QUIET ;
	<


docs:
	@@echo "Making docs"
	@@delete $(SUBSYSNAME).doc
	@@delete $(SUBSYSNAME).cat
	@@join $(AFILES) TO $(SUBSYSNAME).cat
	@@autodoc > $(SUBSYSNAME).doc -a -C -s -l78 $(SUBSYSNAME).cat

library.o:	library.asm $(SUBSYSNAME)_rev.i $(MYIFILES) $(HARDWARE)

init.o:		init.asm  $(MYIFILES) $(HARDWARE)

dispatch.o:	dispatch.asm $(MYIFILES) $(HARDWARE)

interrupts.o:	interrupts.asm $(MYIFILES) $(HARDWARE)

modes.o:	modes.asm $(MYIFILES) $(HARDWARE)

font.o:		font.asm $(MYIFILES) $(HARDWARE)

setcolors.o:	setcolors.asm $(MYIFILES) $(HARDWARE)

scroll.o:	scroll.asm $(MYIFILES) $(HARDWARE)

midi.o:		midi.asm $(MYIFILES) $(HARDWARE)

ecc.o:		ecc.asm $(MYIFILES)

debug.o:	debug.asm debug.i

endmodule.o:	endmodule.asm $(MYIFILES) $(HARDWARE)

	@


1.14
log
@Make V40
@
text
@d9 3
a11 1
INTPRAGMA=	$(SOURCE)include/cdg
a39 2
FUNCTIONS=	$(PRAGMAFILE) $(FDFILE) $(PROTOFILE)

d123 6
a128 5
	@@delete $(INTPRAGMA)/$(EXTERNIFILE) FORCE
	@@delete $(INTPRAGMA)/$(EXTERNHFILE) FORCE
	@@copy $(EXTERNIFILE) $(INTPRAGMA)/
	@@copy $(EXTERNHFILE) $(INTPRAGMA)/
	@@copy $(FUNCTIONS) $(INTPRAGMA)/
@


1.13
log
@Rework for release procedure
@
text
@d1 1
a1 1
VERSION=	39
@


1.12
log
@Make fd, protos, pragmas from new sfd; copy to server
@
text
@d1 2
a2 2
VERSION=	38
SOURCE=		CDTV:
d9 1
a9 1
INTPRAGMA=	$(SOURCE)include/cdtv
d17 12
a28 12
AFILES=		library.asm \
		init.asm \
		dispatch.asm \
		interrupts.asm \
		modes.asm \
		font.asm \
		setcolors.asm \
		scroll.asm \
		midi.asm \
		ecc.asm \
		debug.asm \
		endmodule.asm
d46 1
a46 1
HARDWARE=	cdtv:include/internal/cdtv_cr_hw.i
d122 1
a122 1
	@@echo "Copying external include files to CDTV includes"
d129 1
a129 1
	@@echo "Copying .doc file to CDTV docs"
@


1.11
log
@Builds ecc.asm (Reed-Solomon Error Correction code)
@
text
@d11 1
d30 6
d38 2
d42 1
a42 3
PRAGMAFILE=	$(SUBSYSNAME)_cr_pragmas.h

FDFILE=		$(SUBSYSNAME)_cr_lib.fd
d109 1
d127 1
a127 3

	@@delete $(INTPRAGMA)/$(PRAGMAFILE) FORCE
	@@copy $(PRAGMAFILE) $(INTPRAGMA)/
a131 5
	@@echo "Copying FD/PRAGMA file to source"
	@@delete $(FULLPATH)$(FDFILE) FORCE
	@@copy $(FDFILE) $(FULLPATH)
	@@copy $(PRAGMAFILE) $(FULLPATH)

d135 15
a149 2
	@@echo "Making cdg_pragmas.h"
	fd2pragma $(FDFILE) $(PRAGMAFILE)
@


1.10
log
@*** empty log message ***
@
text
@d25 1
d57 1
d65 4
d161 2
@


1.9
log
@Ack - change name of fd & pragmas to cdg_cr_...  So we
can use cdg_... for cdg.classic
@
text
@a121 1
	@@delete $(FULLPATH)$(PRAGMAFILE) FORCE
@


1.8
log
@*** empty log message ***
@
text
@d32 1
a32 1
PRAGMAFILE=	$(SUBSYSNAME)_pragmas.h
d34 1
a34 1
FDFILE=		$(SUBSYSNAME)_lib.fd
@


1.7
log
@Add midi.asm/.o
@
text
@d123 2
a124 1
	@@copy $(FDFILE) $(PRAGMAFILE) to $(FULLPATH)
@


1.6
log
@Add internal line to copy .doc file to cdtv:doc/
@
text
@d24 1
d55 1
d153 2
@


1.5
log
@Mods to internal procedure.  Copies all includes to cdtv:include/cdtv/
@
text
@d10 1
d114 3
@


1.4
log
@Include cdtv_cr_hw.i in assembly path.  Make 'internal' routine
copy includes to proper places on server.  Copy FD, and PRAGMA
file to proper places (really need to do a .sfd file too).  'release'
now also makes new pragmas file.
@
text
@d106 4
a109 4
	@@delete $(INTERNAL)/$(EXTERNIFILE) FORCE
	@@delete $(INTERNAL)/$(EXTERNHFILE) FORCE
	@@copy $(EXTERNIFILE) $(INTERNAL)/
	@@copy $(EXTERNHFILE) $(INTERNAL)/
d115 2
a116 1
	@@delete $(FULLPATH) $(FDFILE) $(PRAGMAFILE) FORCE
@


1.3
log
@use delete instead of protect during internal
@
text
@d8 2
d12 1
a12 1
INCDIR=		include:
d30 4
d36 2
d79 1
d105 13
d122 1
a122 1
	fd2pragma cdg_lib.fd cdg_pragmas.h
d131 1
a131 1
library.o:	library.asm $(SUBSYSNAME)_rev.i $(MYIFILES)
d133 1
a133 1
init.o:		init.asm  $(MYIFILES)
d135 7
a141 7
dispatch.o:	dispatch.asm $(MYIFILES)

interrupts.o:	interrupts.asm $(MYIFILES)

modes.o:	modes.asm $(MYIFILES)

font.o:		font.asm $(MYIFILES)
d143 1
a143 1
setcolors.o:	setcolors.asm $(MYIFILES)
d145 1
a145 1
scroll.o:	scroll.asm $(MYIFILES)
d149 1
a149 1
endmodule.o:	endmodule.asm $(MYIFILES)
@


1.2
log
@Build as V38
@
text
@d24 1
a24 1
EXTERNIFILE=
d26 1
a26 1
MYIFILES=       cdgbase.i cdgprefs.i debug.i $(EXTERNIFILE)
d28 2
d78 1
a78 1
	@@protect $(FULLPATH)\#?.asm +wd
d82 2
a83 2
	@@protect $(FULLPATH)\#?.i +wd
	@@protect $(FULLPATH)\#?.h +wd
d93 1
a93 1
	@@protect $(FULLPATH)$(MAKEFILE) +wd
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
VERSION=	37
@
