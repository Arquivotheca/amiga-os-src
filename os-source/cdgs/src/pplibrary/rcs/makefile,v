head     1.16;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.16
date     93.04.07.10.49.48;  author peter;  state Exp;
branches ;
next     1.15;

1.15
date     93.04.06.15.19.11;  author peter;  state Exp;
branches ;
next     1.14;

1.14
date     93.03.31.18.04.59;  author peter;  state Exp;
branches ;
next     1.13;

1.13
date     93.03.31.15.06.47;  author peter;  state Exp;
branches ;
next     1.12;

1.12
date     93.03.19.19.01.57;  author peter;  state Exp;
branches ;
next     1.11;

1.11
date     93.03.17.16.48.28;  author peter;  state Exp;
branches ;
next     1.10;

1.10
date     93.03.08.18.45.42;  author peter;  state Exp;
branches ;
next     1.9;

1.9
date     93.03.08.18.25.15;  author peter;  state Exp;
branches ;
next     1.8;

1.8
date     93.02.26.19.02.38;  author peter;  state Exp;
branches ;
next     1.7;

1.7
date     93.02.23.15.43.16;  author peter;  state Exp;
branches ;
next     1.6;

1.6
date     93.02.17.16.00.22;  author jerryh;  state Exp;
branches ;
next     1.5;

1.5
date     93.02.17.15.56.22;  author jerryh;  state Exp;
branches ;
next     1.4;

1.4
date     92.12.18.11.47.34;  author jerryh;  state Exp;
branches ;
next     1.3;

1.3
date     92.08.20.12.09.04;  author jerryh;  state Exp;
branches ;
next     1.2;

1.2
date     92.07.30.14.20.13;  author jerryh;  state Exp;
branches ;
next     1.1;

1.1
date     92.07.24.13.31.21;  author jerryh;  state Exp;
branches ;
next     ;


desc
@makefile for entire playerprefs library
@


1.16
log
@Temporarily copy .ld to softserve 
@
text
@SRCDIR=	CDGS:src/pplibrary
CFILES=		display.c commoncode.c
HFILES1=	playerprefs_protos.h playerprefsbase.h playerprefs.h
HFILES2=	other_protos.h display_protos.h playerprefs_private_pragmas.h
HFILES3=	display.h playerprefs_pragmas.h screencoords.h playerprefs_rev.h animate.h
AFILES=		animcontrol.a libent.a libfunc.a enddata.a
IFILES=		playerprefsbase.i playerprefs_func.i playerprefs_rev.i playerprefs.i animate.i
MISCFILES1=	makefile playerprefs_rev.rev playerprefs.ld.cr
MISCFILES2=	playerprefs_private_lib.fd playerprefs_lib.fd

OBJ=		obj/

OFILES=		obj/libent.o obj/libfunc.o obj/commoncode.o obj/display.o obj/animcontrol.o

PLAYEROFILES=	Player/obj/player.o Player/obj/gadgets.o Player/obj/cdg.o \
		Player/obj/scrdata.o Player/obj/scrbuttons.o \
		Player/obj/cdgnumb.o

SSOFILES=	ScreenSaver/obj/ScreenSaver.o

TMOFILES=	TradeMark/obj/cdtv_tm.o TradeMark/obj/cdtm.o

BASICOFILES=	BasicIO/obj/libinit.o BasicIO/obj/routines.o \
		BasicIO/obj/amigafunc.o BasicIO/obj/clicker.o \
		BasicIO/obj/screen.o BasicIO/obj/viewmgr.o \
		BasicIO/obj/bookmark.o BasicIO/obj/joy.o

LASTO=		obj/enddata.o

INCLUDE=	-iinclude: 

CFLAGS=		-cfimsq -rr -m2 -ml -v -. -O -ms -d1 -dRELEASE=1 -o$(OBJ) $(INCLUDE)

AFLAGS=		-o$(OBJ) -iinclude: 
LFLAGS=		BATCH SMALLDATA SMALLCODE NOICONS ADDSYM

LIBRARIES=	lib:lcr.lib lib:small.lib lib:debug.lib

LIBNAME=	playerprefs.library

all:	_all
	execute <<
failat 1;
cd Player;
lmk $*;
cd /BasicIO;
lmk $*;
cd /ScreenSaver;
lmk $*;
cd /TradeMark;
lmk $*;
cd /;
lmk pplibrary.ld;
<

_all:
	@@echo "Building playerprefs.library..."


pplibrary.ld:   $(OFILES) $(LASTO)
                blink <with <(temp2_lmk.tmp)
FROM $(OFILES) +
$(PLAYEROFILES) +
$(SSOFILES) +
$(TMOFILES) +
$(BASICOFILES) +
$(LASTO)
TO playerprefs.library
LIBPREFIX _LIB LIBFD playerprefs_private_lib.fd
BATCH SMALLCODE NOICONS
VER ERRORFILE LIB $(LIBRARIES) MAP playerprefs.map F H L O S X PLAIN
<
                copy playerprefs.library playerprefs.ld.cr
                blink playerprefs.ld.cr to df0:modules/playerprefs.ld.strip nd

pragmas: playerprefs_lib.fd playerprefs_private_lib.fd
        @@echo "Remaking playerprefs_pragmas.h & playerprefs_private_pragmas.h"
        fd2pragma playerprefs_lib.fd playerprefs_pragmas.h
        fd2pragma playerprefs_private_lib.fd playerprefs_private_pragmas.h


bumprev:
         bumprev 40 playerprefs_rev

release:
         lmk bumprev
         lmk pragmas


.c.o:
        assign ppl: ""
        lc $(CFLAGS) $*.c

.a.o:
        assign ppl: ""
        asm $(AFLAGS) $*.a 

.asm.o:
        assign ppl: ""
        casm -a $*.asm -o $(OBJ)$*.o $(AFLAGS) 

.pic.o:
        @@enforcer off >NIL:
        @@enforcer quiet >NIL:
        sbox -x $*.pic ram:$*.x
        d2o ram:$*.x _$* $(OBJ)$*.o -h "_NOMERGE"
        delete ram:$*.x
        @@enforcer >NIL:


$(OBJ)commoncode.o:     commoncode.c playerprefsbase.h playerprefs.h

$(OBJ)display.o:        display.c playerprefsbase.h playerprefs.h

$(OBJ)libent.o:         libent.a playerprefs_rev.i playerprefsbase.i playerprefs_rev.i
                        asm -u -iCDTV:include/ -iV37:include/ -iinclude: -o$(OBJ)libent.o libent.a

$(OBJ)libfunc.o:        libfunc.a

$(OBJ)animcontrol.o:    animcontrol.a animate.i
			hx68 -a $*.a -csy -i include: -o $(OBJ)$*.o

$(OBJ)enddata.o:        enddata.a

internal:	_internal
	execute <<
cd Player;
lmk $*;
cd /BasicIO;
lmk $*;
cd /ScreenSaver;
lmk $*;
cd /TradeMark;
lmk $*;
cd /;
<

_internal:
	copy $(CFILES) $(SRCDIR) nopro
	copy $(HFILES1) $(SRCDIR) nopro
	copy $(HFILES2) $(SRCDIR) nopro
	copy $(HFILES3) $(SRCDIR) nopro
	copy $(AFILES) $(SRCDIR) nopro
	copy $(IFILES) $(SRCDIR) nopro
	copy $(MISCFILES1) $(SRCDIR) nopro
	copy $(MISCFILES2) $(SRCDIR) nopro
# Temporarily, we copy the .ld file to softserve to circumvent an
# AS225/NFS bug which sometimes makes the file unreadable from heartofgold.
	copy playerprefs.ld.cr softserve:peter/release

clean:	_clean

	execute <<
cd Player;
lmk $*;
cd /BasicIO;
lmk $*;
cd /ScreenSaver;
lmk $*;
cd /TradeMark;
lmk $*;
cd /;
<

_clean:
	delete obj/\#?.o playerprefs.ld.cr playerprefs.library
@


1.15
log
@Made commoncode.o and display.o depend on playerprefs.h.
@
text
@d147 3
@


1.14
log
@Added screencoords.h
@
text
@d111 1
a111 1
$(OBJ)commoncode.o:     commoncode.c playerprefsbase.h
d113 1
a113 1
$(OBJ)display.o:        display.c playerprefsbase.h
@


1.13
log
@Removed random.o from link list.
@
text
@d5 1
a5 1
HFILES3=	display.h playerprefs_pragmas.h cdtvkeys.h playerprefs_rev.h animate.h
@


1.12
log
@Added random.o.  Now use small.lib, not amiga.lib.
@
text
@d16 1
a16 1
		Player/obj/random.o Player/obj/scrdata.o Player/obj/scrbuttons.o \
@


1.11
log
@Removed falselib.a playerstrip.pic, added animcontrol.a.
@
text
@d16 1
a16 1
		Player/obj/scrdata.o Player/obj/scrbuttons.o \
d37 1
a37 1
LIBRARIES=	lib:lcr.lib lib:amiga.lib lib:debug.lib
@


1.10
log
@Removed playerprefs_cr.lnk from list.
@
text
@d5 3
a7 3
HFILES3=	display.h playerprefs_pragmas.h cdtvkeys.h playerprefs_rev.h
AFILES=		falselib.a libent.a libfunc.a enddata.a
IFILES=		playerprefsbase.i playerprefs_func.i playerprefs_rev.i playerprefs.i
d13 1
a13 1
OFILES=		obj/libent.o obj/libfunc.o obj/commoncode.o obj/display.o
d17 1
a17 1
		Player/obj/playerstrip.o Player/obj/cdgnumb.o
d19 1
a19 1
SSOFILES=	 ScreenSaver/obj/ScreenSaver.o
d60 1
a60 2
pplibrary.ld:   $(OBJ)libent.o $(OBJ)libfunc.o \
                $(OBJ)falselib.o $(OBJ)enddata.o $(OBJ)commoncode.o $(OBJ)display.o
d120 2
a121 1
$(OBJ)falselib.o:       falselib.a playerprefsbase.i
@


1.9
log
@Uses local includes only.  No longer have separate with-file, but
specify object files here.
@
text
@d8 1
a8 1
MISCFILES1=	makefile playerprefs_cr.lnk playerprefs_rev.rev playerprefs.ld.cr
@


1.8
log
@Now support multiple directories.
@
text
@d11 1
a11 1
OBJ = obj/
d13 1
a13 1
INCLUDE =       -iCDGS:include/ -iCDTV:include/ -iinclude: 
d15 21
a35 4
CFLAGS =        -cfimsq -rr -m2 -ml -v -. -O -ms -d1 -dRELEASE=1 -o$(OBJ) $(INCLUDE)

AFLAGS =        -iCDTV:include/ -iV37:include/ -o$(OBJ) -iinclude: 
LFLAGS =        BATCH SMALLDATA SMALLCODE NOICONS ADDSYM
d37 1
a37 1
LIBRARIES =     lib:lcr.lib lib:amiga.lib lib:debug.lib
d39 1
a39 1
LIBNAME =       playerprefs.library
d43 1
d62 12
a73 1
                blink VER ERRORFILE with playerprefs_cr.lnk LIB $(LIBRARIES) MAP playerprefs.map F H L O S X PLAIN
@


1.7
log
@Addded -me to save space.
@
text
@d1 9
d13 1
a13 1
INCLUDE =       -iCDTV:include/ -iV37:include/ -iV37:inc.lattice -iinclude: 
d15 1
a15 1
CFLAGS =        -cimsq -me -ml -v -. -O -ms -d1 -dRELEASE=1 -o$(OBJ) $(INCLUDE)
d20 1
a20 1
LIBRARIES =     lib:lc.lib lib:amiga13.lib lib:debug.lib
d24 18
d43 1
a43 1
                $(OBJ)falselib.o $(OBJ)enddata.o $(OBJ)commoncode.o $(OBJ)commonasm.o
d46 1
a46 1
                copy playerprefs.ld.cr df0:modules
d85 1
a85 1
$(OBJ)commonasm.o:      commonasm.a playerprefsbase.i
d96 39
@


1.6
log
@*** empty log message ***
@
text
@d6 1
a6 1
CFLAGS =        -cimsq -ml -v -. -O -ms -d1 -dRELEASE=1 -o$(OBJ) $(INCLUDE)
@


1.5
log
@fixed it up a bit.
@
text
@d28 1
a28 1
         bumprev 40 cd_rev
@


1.4
log
@added pragma make routine.
@
text
@d15 1
a15 1
pplibrary:      $(OBJ)libent.o $(OBJ)libfunc.o \
d25 8
@


1.3
log
@relocated bstrip to basicio directory.
@
text
@d19 7
@


1.2
log
@changed dependancy of libent.o
@
text
@d16 1
a16 1
                $(OBJ)falselib.o $(OBJ)enddata.o $(OBJ)bstrip.o $(OBJ)commoncode.o $(OBJ)commonasm.o
a52 8

$(OBJ)bstrip.o:         bstrip.pic
                        @@enforcer off >NIL:
                        @@enforcer quiet >NIL:
                        sbox -C -R $*.pic ram:$*.x
                        d2o ram:$*.x _$* $(OBJ)$*.o -h "_NOMERGE"
                        delete ram:$*.x
                        @@enforcer >NIL:
@


1.1
log
@Initial revision
@
text
@d45 1
a45 1
$(OBJ)libent.o:         libent.a playerprefs_rev.i playerprefsbase.i
@
