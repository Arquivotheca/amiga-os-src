head     1.6;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.6
date     93.03.08.18.21.42;  author peter;  state Exp;
branches ;
next     1.5;

1.5
date     93.02.26.19.02.09;  author peter;  state Exp;
branches ;
next     1.4;

1.4
date     93.02.26.16.32.35;  author peter;  state Exp;
branches ;
next     1.3;

1.3
date     93.02.23.15.40.12;  author peter;  state Exp;
branches ;
next     1.2;

1.2
date     92.08.20.13.16.04;  author jerryh;  state Exp;
branches ;
next     1.1;

1.1
date     92.07.24.13.11.15;  author jerryh;  state Exp;
branches ;
next     ;


desc
@makefile for BasicIO functions
@


1.6
log
@Now use local includes.
@
text
@SRCDIR=	CDGS:src/pplibrary
SUBDIR=	BasicIO

CFILES= clicker.c libinit.c joy.c screen.c amigafunc.c bookmark.c
AFILES=	routines.a viewmgr.a
HFILES= today.h joymouse.h keyclick.h viewmgr.h
IFILES= viewmgr.i
MISCFILES= makefile

OBJ = obj/

INCLUDE =       -iinclude: -iCDTV:include/

CFLAGS =        -cfimsq -rr -m2 -me -ml -v -. -O -ms -d1 -dRELEASE=1 -o$(OBJ) $(INCLUDE)

AFLAGS =        -o$(OBJ) -iinclude: -iCDTV:include/

_all:	basicio

basicio:        $(OBJ)amigafunc.o $(OBJ)bookmark.o $(OBJ)clicker.o $(OBJ)joy.o $(OBJ)libinit.o $(OBJ)screen.o \
                $(OBJ)routines.o $(OBJ)viewmgr.o \


.c.o:
        assign ppl: /
        lc $(CFLAGS) $*.c

.a.o:
        assign ppl: /
        asm $(AFLAGS) $*.a 

.asm.o:
        assign ppl: /
        casm -a $*.asm -o $(OBJ)$*.o $(AFLAGS) 

$(OBJ)amigafunc.o:      amigafunc.c

$(OBJ)bookmark.o:       bookmark.c /playerprefsbase.h /screensaver/screensaver.h keyclick.h

$(OBJ)clicker.o:        clicker.c /playerprefsbase.h keyclick.h

$(OBJ)joy.o:            joy.c

$(OBJ)libinit.o:        libinit.c /playerprefsbase.h /playerprefs_rev.h
                        lc $(CFLAGS) -b0 libinit.c

$(OBJ)screen.o:         screen.c /playerprefsbase.h viewmgr.h /screensaver/screensaver.h

$(OBJ)routines.o:       routines.a /playerprefs.i

$(OBJ)viewmgr.o:        viewmgr.a viewmgr.i /playerprefs_func.i

# invoked by make internal in parent directory
_internal:
	copy $(CFILES) $(SRCDIR)/$(SUBDIR) nopro
	copy $(HFILES) $(SRCDIR)/$(SUBDIR) nopro
	copy $(AFILES) $(SRCDIR)/$(SUBDIR) nopro
	copy $(IFILES) $(SRCDIR)/$(SUBDIR) nopro
	copy $(MISCFILES) $(SRCDIR)/$(SUBDIR) nopro

_clean:
	delete obj/\#?.o
@


1.5
log
@Now support multiple directories.
@
text
@d12 1
a12 1
INCLUDE =       -iCDTV:include/ -iV37:include/ -iV37:inc.lattice -iinclude: 
d16 1
a16 1
AFLAGS =        -iCDTV:include/ -iV37:include/ -o$(OBJ) -iinclude: 
@


1.4
log
@Removed unneeded stuff.  Changed C flags for better code.
@
text
@d1 2
d4 6
d18 2
d52 11
@


1.3
log
@Now compile -me for space.  No longer build unused pictures.
@
text
@d6 1
a6 1
CFLAGS =        -cimsq -me -ml -v -. -O -ms -d1 -dRELEASE=1 -o$(OBJ) $(INCLUDE)
a8 3
LFLAGS =        BATCH SMALLDATA SMALLCODE NOICONS ADDSYM

LIBRARIES =     lib:lc.lib lib:amiga13.lib # lib:debug.lib
@


1.2
log
@bstrip can now be located in basicio directory.
@
text
@d6 1
a6 1
CFLAGS =        -cimsq -ml -v -. -O -ms -d1 -dRELEASE=1 -o$(OBJ) $(INCLUDE)
a14 1
                $(OBJ)rock.o $(OBJ)ray.o $(OBJ)bstrip.o
a28 10
.pic.o:
        @@enforcer off >NIL:
        @@enforcer quiet >NIL:
        sbox -x $*.pic ram:$*.x
        d2o ram:$*.x _$* $(OBJ)$*.o -h "_NOMERGE"
        delete ram:$*.x
        @@enforcer >NIL:



a44 19

$(OBJ)rock.o:           rock.pic

$(OBJ)ray.o:            ray.pic
                        @@enforcer off >NIL:
                        @@enforcer quiet >NIL:
                        sbox -C -R $*.pic ram:$*.x
                        d2o ram:$*.x _$* $(OBJ)$*.o -h "_NOMERGE"
                        delete ram:$*.x
                        @@enforcer >NIL:

$(OBJ)bstrip.o:         bstrip.pic
                        @@enforcer off >NIL:
                        @@enforcer quiet >NIL:
                        sbox -C -R $*.pic ram:$*.x
                        d2o ram:$*.x _$* $(OBJ)$*.o -h "_NOMERGE"
                        delete ram:$*.x
                        @@enforcer >NIL:

@


1.1
log
@Initial revision
@
text
@d15 1
a15 1
                $(OBJ)rock.o $(OBJ)ray.o
d60 8
@
