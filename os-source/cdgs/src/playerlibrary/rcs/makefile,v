head     1.13;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.13
date     93.04.07.23.34.36;  author peter;  state Exp;
branches ;
next     1.12;

1.12
date     93.03.23.12.50.14;  author peter;  state Exp;
branches ;
next     1.11;

1.11
date     93.03.23.10.49.57;  author peter;  state Exp;
branches ;
next     1.10;

1.10
date     93.02.24.15.01.29;  author jerryh;  state Exp;
branches ;
next     1.9;

1.9
date     93.02.24.14.48.02;  author jerryh;  state Exp;
branches ;
next     1.8;

1.8
date     93.02.17.15.46.49;  author jerryh;  state Exp;
branches ;
next     1.7;

1.7
date     93.01.07.09.43.07;  author jerryh;  state Exp;
branches ;
next     1.6;

1.6
date     92.10.12.16.41.45;  author jerryh;  state Exp;
branches ;
next     1.5;

1.5
date     92.09.21.13.13.59;  author jerryh;  state Exp;
branches ;
next     1.4;

1.4
date     92.09.11.13.09.15;  author jerryh;  state Exp;
branches ;
next     1.3;

1.3
date     92.09.11.11.54.54;  author jerryh;  state Exp;
branches ;
next     1.2;

1.2
date     92.08.21.13.43.44;  author jerryh;  state Exp;
branches ;
next     1.1;

1.1
date     92.07.24.14.10.30;  author jerryh;  state Exp;
branches ;
next     ;


desc
@makefile for playerresource
@


1.13
log
@Now copy playerlibrary.h/i to cdgs:include/internal 
@
text
@# makefile for smake

SRCDIR=	CDGS:src/playerlibrary
LOCAL = gs:playerlibrary/

CFILES=	cd.c vfd.c main.c task.c playlist.c
AFILES=	start.asm endcode.asm
HFILES=	playerlibrary.h defs.h vfd_funcs.h task_funcs.h cd_funcs.h \
	playlist_funcs.h playerlibrary_rev.h
IFILES=		playerlibrary.i internal.i playerlibrary_rev.i
MISCFILES=	makefile player_lib.sfd player_lib.fd playerlibrary.lnk \
		playerlibrary_rev.rev playerlibrary.ld
EXTERNHIFILES=	playerlibrary.h playerlibrary.i

INCLUDE =    IDIR=cdgs:include/ IDIR=V39:include/ IDIR=V39:inc.lattice IDIR=include: 
OBJ = obj/
LST = lst/

CFLAGS =     NMINC MCCONS STRMERGE STREQ NOSTKCHK NOVERSION OPTIMIZE OPTSIZE DEBUG=L CPU=68020 OBJNAME=obj/ \
             $(INCLUDE) GST t:all.gst

AFLAGS =    -icdgs:include/ -iV39:include/ -iinclude: -s

.c.o:
        sc $(CFLAGS) $*.c

.asm.o:
        hx68 -a $*.asm -o $(OBJ)$*.o $(AFLAGS) 

playerlibrary.ld:   $(OBJ)start.o $(OBJ)main.o $(OBJ)task.o $(OBJ)cd.o $(OBJ)vfd.o $(OBJ)playlist.o $(OBJ)endcode.o
                    slink LIBRARY lib:sc.lib lib:amiga.lib lib:debug.lib TO playerlibrary.ld \
                    FROM obj/start.o obj/main.o obj/task.o obj/cd.o obj/vfd.o obj/playlist.o obj/endcode.o \
                    VERBOSE SMALLCODE SMALLDATA addsym ND
                    copy playerlibrary.ld libs:player.library
                    copy libs:player.library df0:libs
                    copy playerlibrary.ld df0:modules

pragmas:
         @@echo "Making pragmas/protos"
         @@execute < <
         failat 21 ;
         makedir ram:sfd ;
         copy player_lib.sfd ram:sfd ;
         cd ram:sfd ;
         sfd player_lib.sfd ;
         copy PROTOS/\#? TO $(LOCAL) QUIET;
         copy PRAGMAS/\#? TO $(LOCAL) QUIET;
         copy FD/\#? TO $(LOCAL) QUIET;
         cd ram: ;
         delete ram:sfd/\#? ALL FORCE QUIET;
         delete ram:sfd QUIET ;
         <

autodoc:
         autodoc >playerlibrary.doc main.c

bumprev:
         bumprev 40 playerlibrary_rev

release:
         smake bumprev
         smake
         smake pragmas
         smake autodoc

internal:
	copy $(CFILES) $(SRCDIR) nopro
	copy $(AFILES) $(SRCDIR) nopro
	copy $(HFILES) $(SRCDIR) nopro
	copy $(IFILES) $(SRCDIR) nopro
	copy $(MISCFILES) $(SRCDIR) nopro
	copy $(EXTERNHIFILES) CDGS:include/internal nopro


$(OBJ)start.o:      start.asm playerlibrary_rev.i internal.i playerlibrary.i

$(OBJ)endcode.o:    endcode.asm playerlibrary_rev.i internal.i playerlibrary.i

$(OBJ)main.o:       main.c playerlibrary.h defs.h

$(OBJ)task.o:       task.c playerlibrary.h defs.h

$(OBJ)cd.o:         cd.c playerlibrary.h defs.h

$(OBJ)vfd.o:        vfd.c playerlibrary.h defs.h

$(OBJ)playlist.o:   playlist.c playerlibrary.h defs.h
@


1.12
log
@Forgot to copy .ld file to server 
@
text
@d13 1
a14 1

d72 1
@


1.11
log
@Added make internal rule 
@
text
@d11 2
a12 1
MISCFILES=	makefile player_lib.sfd player_lib.fd playerlibrary.lnk playerlibrary_rev.rev
@


1.10
log
@reworked again for sas 6.2
@
text
@a0 1

d3 1
d6 8
d64 8
@


1.9
log
@Modified for sas 6.2.
@
text
@d2 1
a2 1
# makefile for lmk
d6 1
a6 1
INCLUDE =    IDIR=CDTV:include/ IDIR=V39:include/ IDIR=V39:inc.lattice IDIR=include: 
d13 1
a13 1
AFLAGS =    -iCDTV:include/ -iV39:include/ -iinclude: -s
d52 4
a55 4
         lmk bumprev
         lmk
         lmk pragmas
         lmk autodoc
@


1.8
log
@major rework.
@
text
@d6 1
a6 1
INCLUDE =       -iCDTV:include/ -iV39:include/ -iV39:inc.lattice -iinclude: 
d10 2
a11 2
CFLAGS =        -cimsq -ml -v -. -O -ms -d1 -o$(OBJ) $(INCLUDE)
AFLAGS =        -iCDTV:include/ -iV39:include/ -iinclude: -s
d13 2
d16 1
a16 1
        lc $(CFLAGS) $*.c
d22 3
a24 1
                    blink with playerlibrary.lnk ND
@


1.7
log
@removed dependency on cdtv_cr_hw.i
@
text
@d17 1
a17 1
        casm -a $*.asm -o $(OBJ)$*.o $(AFLAGS) 
d19 5
a23 5
playerlibrary: $(OBJ)start.o $(OBJ)main.o $(OBJ)task.o $(OBJ)cd.o $(OBJ)vfd.o $(OBJ)playlist.o $(OBJ)endcode.o
                blink with playerlibrary.lnk ND
                copy playerlibrary.ld libs:player.library
                copy libs:player.library df0:libs
                copy playerlibrary.ld df0:modules
d42 1
a42 1
         autodoc >playerlibrary.auto main.c
d44 2
a45 1
$(OBJ)start.o:      start.asm version.i internal.i playerlibrary.i
d47 9
a55 1
$(OBJ)endcode.o:    endcode.asm version.i internal.i playerlibrary.i
@


1.6
log
@no effective change.
@
text
@d22 2
d44 1
a44 1
$(OBJ)start.o:      start.asm version.i internal.i playerlibrary.i /dev/cdtv_cr_hw.i
d46 1
a46 1
$(OBJ)endcode.o:    endcode.asm version.i internal.i playerlibrary.i /dev/cdtv_cr_hw.i
@


1.5
log
@resource is now a library
@
text
@d6 1
a6 1
INCLUDE =       -iCDTV:include/ -iV37:include/ -iV37:inc.lattice -iinclude: 
d11 1
a11 1
AFLAGS =        -iCDTV:include/ -iV37:include/ -iinclude: -s
a13 1
        assign ppl: /
a16 1
        assign ppl: /
d21 1
@


1.4
log
@new modules addec.
           (added).
@
text
@d4 1
a4 1
LOCAL = cr:playerresource/
d21 2
a22 2
playerresource: $(OBJ)start.o $(OBJ)main.o $(OBJ)task.o $(OBJ)cd.o $(OBJ)vfd.o $(OBJ)playlist.o $(OBJ)endcode.o
                blink with playerresource.lnk ND
d41 1
a41 1
         autodoc >playerresource.auto main.c
d43 1
a43 1
$(OBJ)start.o:      start.asm version.i internal.i playerresource.i /dev/cdtv_cr_hw.i
d45 7
a51 7
$(OBJ)endcode.o:    endcode.asm version.i internal.i playerresource.i /dev/cdtv_cr_hw.i

$(OBJ)main.o:       main.c playerresource.h defs.h

$(OBJ)task.o:       task.c playerresource.h defs.h

$(OBJ)cd.o:         cd.c playerresource.h defs.h
d53 1
a53 1
$(OBJ)vfd.o:        vfd.c playerresource.h defs.h
d55 1
a55 1
$(OBJ)playlist.o:   playlist.c playerresource.h defs.h
@


1.3
log
@new modules included.
@
text
@@


1.2
log
@no effective change
@
text
@d6 1
a6 1
INCLDS =  playerresource.i internal.i
d10 12
a21 1
playerresource: $(OBJ)resource.o $(OBJ)endcode.o
d41 1
a41 1
         autodoc >playerresource.auto resource.asm
d43 1
a43 2
$(OBJ)resource.o: resource.asm version.i playerresource.i /dev/cdtv_cr_hw.i     $(INCLDS)
        casm -a resource.asm -o $(OBJ)resource.o -s
d45 7
a51 2
$(OBJ)endcode.o: endcode.asm version.i playerresource.i /dev/cdtv_cr_hw.i       $(INCLDS)
        casm -a endcode.asm -o $(OBJ)endcode.o -s
d53 1
d55 1
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
LOCAL = cr2:playerresource/
@
