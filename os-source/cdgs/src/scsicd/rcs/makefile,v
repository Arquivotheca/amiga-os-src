head     1.3;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.3
date     93.07.07.16.10.58;  author jerryh;  state Exp;
branches ;
next     1.2;

1.2
date     93.07.02.14.28.53;  author jerryh;  state Exp;
branches ;
next     1.1;

1.1
date     93.06.28.14.34.57;  author jerryh;  state Exp;
branches ;
next     ;


desc
@makefile for scsicd's cd.device
@


1.3
log
@replaced blink with slink
@
text
@
# makefile for smake

INCLDS =  cdprivate.i cd_rev.i cd.i cdgs_hw.i
FLAGS  =  -s -i include:
OBJ = obj/
LST = lst/

cd.ld: $(OBJ)main.o $(OBJ)task.o $(OBJ)functions.o $(OBJ)drive.o $(OBJ)interrupt.o $(OBJ)read.o $(OBJ)print.o
       slink obj/main.o obj/task.o obj/drive.o obj/interrupt.o obj/read.o obj/functions.o obj/print.o \
             LIBRARY lib:amiga.lib TO cd.ld VERBOSE SMALLCODE SMALLDATA addsym
       slink cd.ld to cd.ld.strip ND quiet
       copy cd.ld.strip cd.device
       copy cd.ld.strip devs:cd.device


autodoc:
        autodoc >cd.doc main.asm task.asm

.asm.o:
        hx68 -a $*.asm -o $(OBJ)$*.o $(FLAGS)

bumprev:
         bumprev 40 cd_rev

release:
         smake bumprev
         smake
         smake autodoc



$(OBJ)main.o: main.asm                                         $(INCLDS)

$(OBJ)task.o: task.asm                                         $(INCLDS)

$(OBJ)functions.o: functions.asm                               $(INCLDS)

$(OBJ)drive.o: drive.asm                                       $(INCLDS)

$(OBJ)interrupt.o: interrupt.asm                               $(INCLDS)

$(OBJ)read.o: read.asm                                         $(INCLDS)

$(OBJ)print.o: print.asm                                       $(INCLDS)


@


1.2
log
@Removed ecc module.
@
text
@d10 1
a10 1
       blink obj/main.o obj/task.o obj/drive.o obj/interrupt.o obj/read.o obj/functions.o obj/print.o \
d12 1
a12 1
       blink cd.ld to cd.ld.strip ND quiet
@


1.1
log
@Initial revision
@
text
@d9 2
a10 2
cd.ld: $(OBJ)main.o $(OBJ)task.o $(OBJ)functions.o $(OBJ)drive.o $(OBJ)interrupt.o $(OBJ)read.o $(OBJ)ecc.o $(OBJ)print.o
       blink obj/main.o obj/task.o obj/drive.o obj/interrupt.o obj/read.o obj/ecc.o obj/functions.o obj/print.o \
a43 2

$(OBJ)ecc.o: ecc.asm                                           $(INCLDS)
@
