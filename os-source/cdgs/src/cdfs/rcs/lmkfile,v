head     1.8;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.8
date     93.11.09.01.07.08;  author jesup;  state Exp;
branches ;
next     1.7;

1.7
date     93.08.08.21.25.40;  author jesup;  state Exp;
branches ;
next     1.6;

1.6
date     93.03.04.00.45.21;  author jesup;  state Exp;
branches ;
next     1.5;

1.5
date     93.03.04.00.31.34;  author jesup;  state Exp;
branches ;
next     1.4;

1.4
date     93.02.22.17.30.06;  author jesup;  state Exp;
branches ;
next     1.3;

1.3
date     93.01.16.13.36.56;  author jerryh;  state Exp;
branches ;
next     1.2;

1.2
date     92.06.30.19.48.20;  author andy;  state Exp;
branches ;
next     1.1;

1.1
date     92.06.22.11.13.58;  author andy;  state Exp;
branches ;
next     ;


desc
@SAS Makefile for CDFS
@


1.8
log
@make start.o depend on the version file
@
text
@###
### CDFS Makefile (Lattice)
###

VERSION =   40
REMOTE  =   cdgs:src/cdfs
MODULE  =   cdfs
CFILES  =   str.c global.c cdio.c file.c dir.c actions.c path.c iso.c \
        main.c lock.c init.c
AFILES  =   start.asm lib.asm quickio.asm
HDRS    =   main.h cd.h iso.h packets.h global.h std.h stddefs.i

OBJ1    =   start.o main.o init.o global.o actions.o
OBJ2    =   iso.o path.o dir.o lock.o file.o quickio.o
OBJ3    =   cdio.o str.o lib.o 
OBJS    =   $(OBJ1) $(OBJ2) $(OBJ3)

CFLAGS  =   -3 +L +C +Iram:main.pre -k -iCDGS:include/ -iV37:include/ -iCDGS:include/aztec/ -iinclude:
CFLAGS1 =   -3 +L +C -iCDGS:include/ -iV37:include/ -iCDGS:include/aztec/ -iinclude:

AFLAGS  =   -C -N -iinclude:

.asm.o:
    as $(AFLAGS) -o $*.o $*.asm 

.c.o:
    cc $(CFLAGS) $*.c


all:    $(MODULE).ld

$(MODULE).ld:   main.pre $(OBJS) 
        delete main.pre
        ln -o $(MODULE).ld $(OBJS)

main.o:   main.c packets.h

start.o:  start.asm cdfs_rev.i

global.o:   global.c global.h
        cc $(CFLAGS1) global.c

main.pre:   main.h global.h
        cc $(CFLAGS1) -o NIL: +Hmain.pre main.h
        copy main.pre ram:

version:
    @@copy $(REMOTE)/$(MODULE)_rev.rev ""
    @@bumprev $(VERSION) $(MODULE)_rev
    @@copy $(MODULE)_rev.\#? $(REMOTE)

release:
    @@lmk clean
    @@lmk version
    @@lmk
    @@copy $(MODULE).ld\#? $(REMOTE)
    @@execute < < 
    failat 21 ;
    cd $(REMOTE) ;
    co $(CFILES) $(AFILES);
    co $(HDRS) lmkfile ;
    <

clean:
    @@delete (\#?.o|\#?.pre|\#?.tmp|\#?.ld\#?)
@


1.7
log
@
@
text
@d37 2
@


1.6
log
@quickio is a .asm, not a .c
@
text
@d36 1
a36 1
packet.o:   packet.c packets.h
@


1.5
log
@bump to version 40 rev 0
@
text
@d9 2
a10 2
        main.c lock.c init.c quickio.c
AFILES  =   start.asm lib.asm
@


1.4
log
@changes for cdgs
@
text
@d5 1
a5 1
VERSION =   24
@


1.3
log
@cd.device instead of cdtv.device.
@
text
@d6 1
a6 1
REMOTE  =   cdtv:src/cdfs
d18 2
a19 2
CFLAGS  =   -3 +L +C +Iram:main.pre -k -iCDTV:include/ -iV37:include/ -iCDTV:include/aztec/ -iinclude:
CFLAGS1 =   -3 +L +C -iCDTV:include/ -iV37:include/ -iCDTV:include/aztec/ -iinclude:
@


1.2
log
@remote set correctly
@
text
@d2 1
a2 1
###	CDFS Makefile (Lattice)
d5 15
a19 15
VERSION	=	24
REMOTE	=	cdtv:src/cdfs
MODULE	=	cdfs
CFILES	=	str.c global.c cdio.c file.c dir.c actions.c path.c iso.c \
		main.c lock.c init.c quickio.c
AFILES	=	start.asm lib.asm
HDRS	=	main.h cd.h iso.h packets.h global.h std.h stddefs.i

OBJ1	=	start.o main.o init.o global.o actions.o
OBJ2	=	iso.o path.o dir.o lock.o file.o quickio.o
OBJ3	=	cdio.o str.o lib.o 
OBJS	=	$(OBJ1) $(OBJ2) $(OBJ3)

CFLAGS	=	-3 +L +C +Iram:main.pre -k -iCDTV:include/ -iV37:include/ -iCDTV:include/aztec/ -iinclude:
CFLAGS1	=	-3 +L +C -iCDTV:include/ -iV37:include/ -iCDTV:include/aztec/ -iinclude:
d21 1
a21 1
AFLAGS	=	-C -N -iinclude:
d24 1
a24 1
	as $(AFLAGS) -o $*.o $*.asm 
d27 1
a27 1
	cc $(CFLAGS) $*.c
d30 1
a30 1
all:	$(MODULE).ld
d32 8
a39 7
$(MODULE).ld:	main.pre $(OBJS) 
		ln -o $(MODULE).ld $(OBJS)

packet.o:	packet.c packets.h

global.o:	global.c global.h
		cc $(CFLAGS1) global.c
d41 3
a43 3
main.pre:	main.h global.h
		cc $(CFLAGS1) -o NIL: +Hmain.pre main.h
		copy main.pre ram:
d46 3
a48 3
	@@copy $(REMOTE)/$(MODULE)_rev.rev ""
	@@bumprev $(VERSION) $(MODULE)_rev
	@@copy $(MODULE)_rev.\#? $(REMOTE)
d51 10
a60 10
	@@lmk clean
	@@lmk version
	@@lmk
	@@copy $(MODULE).ld\#? $(REMOTE)
	@@execute < < 
	failat 21 ;
	cd $(REMOTE) ;
	co $(CFILES) $(AFILES);
	co $(HDRS) lmkfile ;
	<
d63 1
a63 1
	@@delete (\#?.o|\#?.pre|\#?.tmp|\#?.ld\#?)
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
REMOTE	=	cdtv:src/cdfs.classic
@
