head     1.7;
branch   ;
access   ;
symbols  ;
locks    kcd:1.7; strict;
comment  @ * @;


1.7
date     91.12.30.18.34.49;  author dlarson;  state Exp;
branches ;
next     1.6;

1.6
date     91.12.13.11.52.31;  author dlarson;  state Exp;
branches ;
next     1.5;

1.5
date     91.12.03.14.28.32;  author dlarson;  state Exp;
branches ;
next     1.4;

1.4
date     91.12.03.14.05.12;  author dlarson;  state Exp;
branches ;
next     1.3;

1.3
date     91.11.27.15.49.09;  author dlarson;  state Exp;
branches ;
next     1.2;

1.2
date     91.11.19.09.48.55;  author dlarson;  state Exp;
branches ;
next     1.1;

1.1
date     91.10.21.15.38.11;  author dlarson;  state Exp;
branches ;
next     ;


desc
@Original snapshot from Ameristar
@


1.7
log
@Includes various optimizations and the long packet Christmas fix.  Probably
last working version before enhancements and Novell "ARCNET Packet Header
Definition Standard."
@
text
@/*
 * S2_devicequery() - return information about this device
 */

#ifndef RS485_H
#include "rs485.h"
#endif

#define	LINERATE	2500000
#define QUERYFORMAT	0
#define DEVICELEVEL	0
#define ADDRSIZE	8

int S2_devicequery(struct IOSana2Req *iob)
{
struct Sana2DeviceQuery st;

	if(!iob->ios2_StatData)
	{
		iob->ios2_Req.io_Error = S2ERR_BAD_ARGUMENT;
		iob->ios2_WireError = S2WERR_NULL_POINTER;
		return COMPLETE;
	}
	st.SizeAvailable = ((struct Sana2DeviceQuery *)iob->ios2_StatData)->SizeAvailable;
	st.SizeSupplied = min(sizeof(st), st.SizeAvailable);
	st.DevQueryFormat = QUERYFORMAT;
	st.DeviceLevel = DEVICELEVEL;
	st.AddrFieldSize = ADDRSIZE;
	st.MTU = RS485_MTU;
	st.BPS = LINERATE;
	st.HardwareType = S2WireType_Arcnet;
	memcpy(iob->ios2_StatData, &st, st.SizeSupplied);
	return COMPLETE;
}
@


1.6
log
@raw reads and writes work now.
@
text
@d18 2
a19 1
	if(!iob->ios2_StatData){
a23 2

	KPrintF("iob=%lx, StatData=%lx\n", iob, iob->ios2_StatData);
a31 1

a32 1
	KPrintF("iob=%lx, StatData=%lx iob->SizeSupplied=%ld st.SizeSupplied=%ld\n", iob, iob->ios2_StatData, ((struct Sana2DeviceQuery *)iob->ios2_StatData)->SizeSupplied, st.SizeSupplied);
@


1.5
log
@doesn't print debugging messages...  (bad programmer)
@
text
@@


1.4
log
@Fixed online/offline/onevent.
@
text
@@


1.3
log
@First version which works with inet.library!!!
@
text
@@


1.2
log
@Getting it up to current spec...
@
text
@d5 2
a6 2
#ifndef AMIGANET_H
#include "amiganet.h"
d30 1
a30 1
	st.MTU = AMIGANET_MTU;
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * SANA2CMD_devicequery() - return information about this device
d14 1
a14 2
int SANA2CMD_devicequery(iob)
	struct IOSana2Req *iob;
d16 1
a16 1
	struct Sana2DeviceQuery st;
d18 3
a20 3
	if(!iob->S2io_StatData){
		iob->S2io_Error = S2ERR_BAD_ARGUMENT;
		iob->S2io_WireError = S2WERR_NULL_POINTER;
d24 2
a25 1
	st.SizeAvailable = ((struct Sana2DeviceQuery *)iob->S2io_StatData)->SizeAvailable;
d31 1
a31 1
	st.bps = LINERATE;
d34 2
a35 1
	memcpy(iob->S2io_StatData, &st, st.SizeSupplied);
@
