head     1.5;
branch   ;
access   ;
symbols  ;
locks    kcd:1.5; strict;
comment  @ * @;


1.5
date     91.12.03.14.30.36;  author dlarson;  state Exp;
branches ;
next     1.4;

1.4
date     91.12.03.14.17.01;  author dlarson;  state Exp;
branches ;
next     1.3;

1.3
date     91.11.27.15.50.15;  author dlarson;  state Exp;
branches ;
next     1.2;

1.2
date     91.11.19.09.50.55;  author dlarson;  state Exp;
branches ;
next     1.1;

1.1
date     91.10.21.15.41.30;  author dlarson;  state Exp;
branches ;
next     ;


desc
@Original snapshot from Ameristar
@


1.5
log
@doesn't print debugging messages...  (bad programmer)
@
text
@
/* Prototypes for functions defined libinit.c */
ULONG __saveds __stdargs __asm _LibBeginIO(register __a1 struct IOSana2Req *,
                                 register __a6 struct rs485Device *);
ULONG __saveds __stdargs __asm _LibAbortIO(register __a1 struct IOSana2Req *,
                                 register __a6 struct rs485Device *);
ULONG __saveds __stdargs _LibNull(void);

/* Prototypes for functions defined in libinit.c */
ULONG __saveds __stdargs __asm  _LibInit(register __a0 APTR,
                              register __d0 struct rs485Device *);
LONG __saveds __stdargs __asm _LibOpen(register __a6 struct rs485Device *,
                             register __a1 struct IOSana2Req *,
                             register __d0 long,
                             register __d1 long);
ULONG __saveds __stdargs __asm _LibClose(register __a6 struct rs485Device * libbase,
                               register __a1 struct IOSana2Req * iob);
ULONG __saveds __stdargs __asm _LibExpunge(register __a6 struct rs485Device * libbase);

/* Prototypes for functions defined in config.c */
int S2_configinterface(struct IOSana2Req *);

/* Prototypes for functions defined in devicequery.c */
int S2_devicequery(struct IOSana2Req *);

/* Prototypes for functions defined in board.c */
struct rs485Unit *newunit(void);
void freeunit(struct rs485Unit *);
int getboards(void);
int initboard(struct rs485Unit *);
void shutupboard(struct rs485Unit *);

/* Prototypes for functions defined in devinit.c */
void __saveds rs485Open(struct rs485Device *,
               register struct IOSana2Req *, long unit, long flags);
void __saveds rs485Close(struct rs485Device *,
                register struct IOSana2Req *);
void __saveds rs485Expunge(struct rs485Device *);

/* Prototypes for functions defined in event.c */
int S2_onevent(struct IOSana2Req *);
void wakeup(struct AmigaUnit *, ULONG);

/* Prototypes for functions defined in getstation.c */
int S2_getstationaddress(struct IOSana2Req *);
void daddr(struct rs485Unit *);

/* Prototypes for functions defined in interrupts.c */
int interrupts_on(struct rs485Unit *);
void interrupts_off(struct rs485Unit *);
VOID __saveds __stdargs __asm interruptC(register __a1 struct rs485Unit *);

/* Prototypes for functions defined in offline.c */
int S2_offline(struct IOSana2Req *);
int S2_online(struct IOSana2Req *);
void empty_q(struct List *, UBYTE, ULONG);
void resetstats(struct rs485Unit *);

/* Prototypes for functions defined in rdwr.c */
int CMD_rdwr(struct IOSana2Req *);

/* Prototypes for functions defined in checktype.c */
/*int checktype(struct IOSana2Req *);*/

/* Prototypes for functions defined in stat.c */
int S2_getspecialstats(struct IOSana2Req *);
int S2_getglobalstats(struct IOSana2Req *);

/* Prototypes for functions defined in task.c */
void sigtask(struct rs485Unit *);
int starttask(struct rs485Unit *);
void stoptask(struct rs485Unit *);
void __stdargs __saveds listener(void);

/* Prototypes for functions defined in type.c */
int S2_tracked(struct IOSana2Req *);
struct TrackedType *findtracked(struct rs485Unit *, ULONG);
void free_alltracked(struct rs485Unit *);

/* Prototypes for functions defined in startxmit.c */
int startxmit(struct rs485Unit *);

/* Prototypes for functions defined in recv.c */
void recv(struct rs485Unit *, int);

/* Prototypes for functions defined in getlibbase.c */
void __stdargs *getlibbase(void);

/* prototypes for functions defined in stub.a */
void taskent(void);
void interrupt(void);
void __asm copyin(register __a0 UBYTE *datareg, register __a1 UBYTE *buf,
		register __d0 unsigned int cnt);
void __asm copyout(register __a0 UBYTE *buf, register __a1 UBYTE *datareg,
		register __d0 unsigned int cnt);

@


1.4
log
@Fixed online/offline/onevent.
@
text
@@


1.3
log
@First version which works with inet.library!!!
@
text
@@


1.2
log
@Getting it up to current spec...
@
text
@d4 1
a4 1
                                 register __a6 struct AmiganetDevice *);
d6 1
a6 1
                                 register __a6 struct AmiganetDevice *);
d11 2
a12 2
                              register __d0 struct AmiganetDevice *);
LONG __saveds __stdargs __asm _LibOpen(register __a6 struct AmiganetDevice *,
d16 1
a16 1
ULONG __saveds __stdargs __asm _LibClose(register __a6 struct AmiganetDevice * libbase,
d18 1
a18 1
ULONG __saveds __stdargs __asm _LibExpunge(register __a6 struct AmiganetDevice * libbase);
d27 2
a28 2
struct AmiganetUnit *newunit(void);
void freeunit(struct AmiganetUnit *);
d30 2
a31 2
int initboard(struct AmiganetUnit *);
void shutupboard(struct AmiganetUnit *);
d34 1
a34 1
void __saveds AmiganetOpen(struct AmiganetDevice *,
d36 1
a36 1
void __saveds AmiganetClose(struct AmiganetDevice *,
d38 1
a38 1
void __saveds AmiganetExpunge(struct AmiganetDevice *);
d46 1
a46 1
void daddr(struct AmiganetUnit *);
d49 3
a51 3
int interrupts_on(struct AmiganetUnit *);
void interrupts_off(struct AmiganetUnit *);
VOID __saveds __stdargs __asm interruptC(register __a1 struct AmiganetUnit *);
d57 1
a57 1
void resetstats(struct AmiganetUnit *);
d70 3
a72 3
void sigtask(struct AmiganetUnit *);
int starttask(struct AmiganetUnit *);
void stoptask(struct AmiganetUnit *);
d77 2
a78 2
struct TrackedType *findtracked(struct AmiganetUnit *, ULONG);
void free_alltracked(struct AmiganetUnit *);
d81 1
a81 1
int startxmit(struct AmiganetUnit *);
d84 1
a84 1
void recv(struct AmiganetUnit *, int);
@


1.1
log
@Initial revision
@
text
@d21 1
a21 1
int SANA2CMD_configinterface(struct IOSana2Req *);
d24 1
a24 1
int SANA2CMD_devicequery(struct IOSana2Req *);
d41 1
a41 1
int SANA2CMD_onevent(struct IOSana2Req *);
d45 1
a45 1
int SANA2CMD_getstationaddress(struct IOSana2Req *);
d54 2
a55 2
int SANA2CMD_offline(struct IOSana2Req *);
int SANA2CMD_online(struct IOSana2Req *);
d63 1
a63 1
int checktype(struct IOSana2Req *);
d66 2
a67 2
int SANA2CMD_getspecialstats(struct IOSana2Req *);
int SANA2CMD_getglobalstats(struct IOSana2Req *);
d76 2
a77 2
int SANA2CMD_tracked(struct IOSana2Req *);
struct TrackedType *findtracked(struct AmiganetUnit *, struct Sana2PacketType *);
d92 1
a92 1
void __asm copyin(register __a0 UBYTE *datareg, register __a1 UBYTE *buf, 
d94 1
a94 1
void __asm copyout(register __a0 UBYTE *buf, register __a1 UBYTE *datareg, 
@
