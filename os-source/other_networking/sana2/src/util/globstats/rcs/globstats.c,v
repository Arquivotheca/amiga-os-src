head     1.5;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.5
date     92.01.02.14.24.50;  author dlarson;  state Exp;
branches ;
next     1.4;

1.4
date     91.11.13.11.18.52;  author dlarson;  state Exp;
branches ;
next     1.3;

1.3
date     91.11.08.10.42.27;  author dlarson;  state Exp;
branches ;
next     1.2;

1.2
date     91.10.29.11.58.51;  author dlarson;  state Exp;
branches ;
next     1.1;

1.1
date     91.10.29.11.26.41;  author dlarson;  state Exp;
branches ;
next     ;


desc
@Gets global statistics from a SANA-II driver.
@


1.5
log
@*** empty log message ***
@
text
@/*
**  $Id: globstats.c,v 1.4 91/11/13 11:18:52 dlarson Exp Locker: dlarson $
**
**  SANA-II driver utility -- Print statistics for device.
**
**  Copyright 1991 Commodore-Amiga, Inc.
**
**  This code may be modified and used freely on Amiga computers.
**
*/


#define NOBUFFS 1
#include "/skeleton/skeleton.h"

struct MsgPort   *DevPort = NULL;
struct IOSana2Req *IOB1    = NULL;
struct Sana2DeviceStats Stats;

int    DeviceOpen = 0;
long   DevBits;

void PrintStats(void);


main(argc , argv)
char *argv[];
{
	if(!initdev())
		printf("Open Failed.\n");
	else
	{
		IOB1->ios2_Req.io_Error   = 0;
		IOB1->ios2_Req.io_Command = S2_GETGLOBALSTATS;
		IOB1->ios2_StatData = &Stats;
		DoIO(IOB1);
		if (!IOB1->ios2_Req.io_Error)
			PrintStats();
		else
			printf("Error Returned: %ld WireError: %ld\n" , IOB1->ios2_Req.io_Error , IOB1->ios2_WireError);
	}
bottom:	closedev();
	return(0);
}


void PrintStats(void)
{
	printf("Packets Received:    %d\n" , Stats.PacketsReceived);
	printf("Packets Transmitted: %d\n" , Stats.PacketsSent);
	printf("CRC Errors:          %d\n" , Stats.BadData);
	printf("Unknown Packets:     %d\n" , Stats.UnknownTypesReceived);
	printf("Fifo Overruns:       %d\n" , Stats.Overruns);
	printf("Reconfigurations:    %d\n" , Stats.Reconfigurations);
}
@


1.4
log
@re-introduced comment header
@
text
@d2 1
a2 1
**  $Id: online.c,v 1.2 91/10/29 11:55:50 dlarson Exp $
a23 1
void GetGlobalStats(void);
d33 4
a36 1
		GetGlobalStats();
a45 8
void GetGlobalStats(void)
{
	IOB1->ios2_Req.io_Error   = 0;
	IOB1->ios2_Req.io_Flags   = IOF_QUICK;
	IOB1->ios2_Req.io_Command = S2_GETGLOBALSTATS;
	IOB1->ios2_StatData = &Stats;
	DoIO(IOB1);
}
@


1.3
log
@Recompile with latest includes
@
text
@d1 12
@


1.2
log
@*** empty log message ***
@
text
@a0 12
/*
**  $Id: skeleton.c,v 1.1 91/10/29 11:51:46 dlarson Exp $
**
**  SANA-II driver utility -- Print driver global statistics.
**
**  Copyright 1991 Commodore-Amiga, Inc.
**
**  This code may be modified and used freely on Amiga computers.
**
*/


a9 2
int    Flag = 0;
int    EnableAbort = 1;
a13 6
void _abort()
{
	Flag = 1;
	printf("^C\n");
}

a17 6
int i = 0;

#ifdef LATTICE
	onbreak(&_abort);
#endif

d19 2
a20 2
		printf("Open Failed\n");
	else while (!Flag)
a21 1
		Chk_Abort();
a26 9
		Chk_Abort();
		for (i = 0; i < 50; i++)
		{
			Delay(10);
			Chk_Abort();
			if (Flag)
				break;
			i++;
		}
d43 6
a48 10
	printf("Packets Received:    %d\n" , Stats.packets_received);
	printf("Packets Transmitted: %d\n" , Stats.packets_sent);
	printf("Framing Errors:      %d\n" , Stats.framing_errors);
	printf("CRC Errors:          %d\n" , Stats.bad_data);
	printf("Hard Misses:         %d\n" , Stats.hard_misses);
	printf("Soft Misses:         %d\n" , Stats.soft_misses);
	printf("Unknown Packets:     %d\n" , Stats.unknown_types_received);
	printf("Fifo Overruns:       %d\n" , Stats.fifo_overruns);
	printf("Fifo Underruns:      %d\n" , Stats.fifo_underruns);
	printf("Reconfigurations:    %d\n" , Stats.reconfigurations);
@


1.1
log
@Initial revision
@
text
@d1 12
@
