head     1.15;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.15
date     94.02.17.14.28.17;  author kcd;  state Exp;
branches ;
next     1.14;

1.14
date     93.12.14.14.03.25;  author kcd;  state Exp;
branches ;
next     1.13;

1.13
date     93.12.14.13.59.25;  author kcd;  state Exp;
branches ;
next     1.12;

1.12
date     93.01.04.12.11.26;  author gregm;  state Exp;
branches ;
next     1.11;

1.11
date     92.11.10.13.35.29;  author gregm;  state Exp;
branches ;
next     1.10;

1.10
date     92.01.10.15.10.05;  author dlarson;  state Exp;
branches ;
next     1.9;

1.9
date     92.01.10.15.04.26;  author dlarson;  state Exp;
branches ;
next     1.8;

1.8
date     92.01.10.15.00.18;  author dlarson;  state Exp;
branches ;
next     1.7;

1.7
date     91.12.18.15.51.26;  author dlarson;  state Exp;
branches ;
next     1.6;

1.6
date     91.12.10.10.39.42;  author dlarson;  state Exp;
branches ;
next     1.5;

1.5
date     91.12.09.08.36.01;  author dlarson;  state Exp;
branches ;
next     1.4;

1.4
date     91.11.07.11.34.41;  author dlarson;  state Exp;
branches ;
next     1.3;

1.3
date     91.10.21.11.58.20;  author dlarson;  state Exp;
branches ;
next     1.2;

1.2
date     91.10.17.12.58.16;  author dlarson;  state Exp;
branches ;
next     1.1;

1.1
date     91.10.17.12.36.35;  author dlarson;  state Exp;
branches ;
next     ;


desc
@First revision of sana2device.h.  Includes a rename to match other
device include file names.

CMD name prefixes changed, IORequest struct changed, ARCNET number changed
to match RFC-1060 (easier to remember that way), cosmetic clean up.
@


1.15
log
@Added hardware type for the Liana networking hardware.
@
text
@#ifndef SANA2_SANA2DEVICE_H
#define SANA2_SANA2DEVICE_H 1
/*
**      $Filename: devices/sana2.h $
**      $Revision: 1.14 $
**      $Date: 93/12/14 14:03:25 $
**
**      Structure definitions for SANA-II devices.
**
**      (C) Copyright 1991 Commodore-Amiga Inc.
**              All Rights Reserved
*/


#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif

#ifndef EXEC_PORTS_H
#include <exec/ports.h>
#endif

#ifndef EXEC_IO_H
#include <exec/io.h>
#endif

#ifndef EXEC_ERRORS_H
#include <exec/errors.h>
#endif

#ifndef DEVICES_TIMER_H
#include <devices/timer.h>
#endif

#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif


#define SANA2_MAX_ADDR_BITS     (128)
#define SANA2_MAX_ADDR_BYTES    ((SANA2_MAX_ADDR_BITS+7)/8)

struct IOSana2Req
{
        struct IORequest ios2_Req;
        ULONG ios2_WireError;           /* wire type specific error     */
        ULONG ios2_PacketType;          /* packet type                  */
        UBYTE ios2_SrcAddr[SANA2_MAX_ADDR_BYTES];       /* source addr  */
        UBYTE ios2_DstAddr[SANA2_MAX_ADDR_BYTES];       /* dest address */
        ULONG ios2_DataLength;          /* length of packet data        */
        VOID *ios2_Data;                /* packet data                  */
        VOID *ios2_StatData;            /* statistics data pointer      */
        VOID *ios2_BufferManagement;    /* see SANA-II OpenDevice adoc  */
};


/*
** defines for the io_Flags field
*/
#define SANA2IOB_RAW    (7)             /* raw packet IO requested      */
#define SANA2IOF_RAW    (1<<SANA2IOB_RAW)

#define SANA2IOB_BCAST  (6)             /* broadcast packet (received)  */
#define SANA2IOF_BCAST  (1<<SANA2IOB_BCAST)

#define SANA2IOB_MCAST  (5)             /* multicast packet (received)  */
#define SANA2IOF_MCAST  (1<<SANA2IOB_MCAST)

#define SANA2IOB_QUICK  (IOB_QUICK)     /* quick IO requested (0)       */
#define SANA2IOF_QUICK  (IOF_QUICK)


/*
** defines for OpenDevice() flags
*/
#define SANA2OPB_MINE   (0)             /* exclusive access requested   */
#define SANA2OPF_MINE   (1<<SANA2OPB_MINE)

#define SANA2OPB_PROM   (1)             /* promiscuous mode requested   */
#define SANA2OPF_PROM   (1<<SANA2OPB_PROM)


/*
** defines for OpenDevice() tags
*/
#define S2_Dummy        (TAG_USER + 0xB0000)

#define S2_CopyToBuff   (S2_Dummy + 1)
#define S2_CopyFromBuff (S2_Dummy + 2)
#define S2_PacketFilter (S2_Dummy + 3)

struct Sana2DeviceQuery
{
/*
** Standard information
*/
        ULONG   SizeAvailable;          /* bytes available              */
        ULONG   SizeSupplied;           /* bytes supplied               */
        ULONG   DevQueryFormat;         /* this is type 0               */
        ULONG   DeviceLevel;            /* this document is level 0     */
/*
** Common information
*/
        UWORD   AddrFieldSize;          /* address size in bits         */
        ULONG   MTU;                    /* maximum packet data size     */
        ULONG   BPS;                    /* line rate (bits/sec)         */
        ULONG   HardwareType;           /* what the wire is             */
/*
** Format specific information
*/
};


/*
** defined Hardware types
**
**  If your hardware type isn't listed below contact CATS to get a new
**  type number added for your hardware.
*/
#define S2WireType_Ethernet             1
#define S2WireType_IEEE802              6
#define S2WireType_Arcnet               7
#define S2WireType_LocalTalk            11
#define S2WireType_DyLAN                12

#define S2WireType_AmokNet              200	/* Amiga Floppy Port hardware */

#define S2WireType_Liana		202	/* Villate Tronic parallel port hw */

#define S2WireType_PPP                  253
#define S2WireType_SLIP                 254
#define S2WireType_CSLIP                255	/* Compressed SLIP */

#define S2WireType_PLIP			420	/* SLIP over a parallel port */

struct Sana2PacketTypeStats
{
        ULONG PacketsSent;              /* transmitted count            */
        ULONG PacketsReceived;          /* received count               */
        ULONG BytesSent;                /* bytes transmitted count      */
        ULONG BytesReceived;            /* bytes received count         */
        ULONG PacketsDropped;           /* packets dropped count        */
};


struct Sana2SpecialStatRecord
{
        ULONG Type;                     /* statistic identifier         */
        ULONG Count;                    /* the statistic                */
        char *String;                   /* statistic name               */
};


struct Sana2SpecialStatHeader
{
        ULONG RecordCountMax;           /* room available               */
        ULONG RecordCountSupplied;      /* number supplied              */
        /* struct Sana2SpecialStatRecord[RecordCountMax]; */
};


struct Sana2DeviceStats
{
        ULONG PacketsReceived;          /* received count               */
        ULONG PacketsSent;              /* transmitted count            */
        ULONG BadData;                  /* bad packets received         */
        ULONG Overruns;                 /* hardware miss count          */
        ULONG Unused;                   /* Unused field                 */
        ULONG UnknownTypesReceived;     /* orphan count                 */
        ULONG Reconfigurations;         /* network reconfigurations     */
        struct timeval LastStart;       /* time of last online          */
};


/*
** Device Commands
*/
#define S2_START                (CMD_NONSTD)

#define S2_DEVICEQUERY          (S2_START+ 0)
#define S2_GETSTATIONADDRESS    (S2_START+ 1)
#define S2_CONFIGINTERFACE      (S2_START+ 2)
#define S2_ADDMULTICASTADDRESS  (S2_START+ 5)
#define S2_DELMULTICASTADDRESS  (S2_START+ 6)
#define S2_MULTICAST            (S2_START+ 7)
#define S2_BROADCAST            (S2_START+ 8)
#define S2_TRACKTYPE            (S2_START+ 9)
#define S2_UNTRACKTYPE          (S2_START+10)
#define S2_GETTYPESTATS         (S2_START+11)
#define S2_GETSPECIALSTATS      (S2_START+12)
#define S2_GETGLOBALSTATS       (S2_START+13)
#define S2_ONEVENT              (S2_START+14)
#define S2_READORPHAN           (S2_START+15)
#define S2_ONLINE               (S2_START+16)
#define S2_OFFLINE              (S2_START+17)

#define S2_END                  (S2_START+18)


/*
** defined errors for io_Error  (see also <exec/errors.h>)
*/
#define S2ERR_NO_ERROR          0       /* peachy-keen                  */
#define S2ERR_NO_RESOURCES      1       /* resource allocation failure  */
#define S2ERR_BAD_ARGUMENT      3       /* garbage somewhere            */
#define S2ERR_BAD_STATE         4       /* inappropriate state          */
#define S2ERR_BAD_ADDRESS       5       /* who?                         */
#define S2ERR_MTU_EXCEEDED      6       /* too much to chew             */
#define S2ERR_NOT_SUPPORTED     8       /* hardware can't support cmd   */
#define S2ERR_SOFTWARE          9       /* software error detected      */
#define S2ERR_OUTOFSERVICE      10      /* driver is OFFLINE            */
#define S2ERR_TX_FAILURE        11      /* Transmission attempt failed  */
/*
** From <exec/errors.h>
**
**      IOERR_OPENFAIL   (-1) * device/unit failed to open *
**      IOERR_ABORTED    (-2) * request terminated early [after AbortIO()] *
**      IOERR_NOCMD      (-3) * command not supported by device *
**      IOERR_BADLENGTH  (-4) * not a valid length (usually IO_LENGTH) *
**      IOERR_BADADDRESS (-5) * invalid address (misaligned or bad range) *
**      IOERR_UNITBUSY   (-6) * device opens ok, but requested unit is busy *
**      IOERR_SELFTEST   (-7) * hardware failed self-test *
*/

/*
** defined errors for ios2_WireError
*/
#define S2WERR_GENERIC_ERROR    0       /* no specific info available   */
#define S2WERR_NOT_CONFIGURED   1       /* unit not configured          */
#define S2WERR_UNIT_ONLINE      2       /* unit is currently online     */
#define S2WERR_UNIT_OFFLINE     3       /* unit is currently offline    */
#define S2WERR_ALREADY_TRACKED  4       /* protocol already tracked     */
#define S2WERR_NOT_TRACKED      5       /* protocol not tracked         */
#define S2WERR_BUFF_ERROR       6       /* buff mgt func returned error */
#define S2WERR_SRC_ADDRESS      7       /* source address problem       */
#define S2WERR_DST_ADDRESS      8       /* destination address problem  */
#define S2WERR_BAD_BROADCAST    9       /* broadcast address problem    */
#define S2WERR_BAD_MULTICAST    10      /* multicast address problem    */
#define S2WERR_MULTICAST_FULL   11      /* multicast address list full  */
#define S2WERR_BAD_EVENT        12      /* unsupported event class      */
#define S2WERR_BAD_STATDATA     13      /* statdata failed sanity check */
#define S2WERR_IS_CONFIGURED    15      /* attempt to config twice      */
#define S2WERR_NULL_POINTER     16      /* null pointer detected        */
#define S2WERR_TOO_MANY_RETIRES 17      /* tx failed - too many retries */
#define S2WERR_RCVREL_HDW_ERR   18      /* Driver fixable HW error      */


/*
** defined events
*/
#define S2EVENT_ERROR           (1L<<0) /* error catch all              */
#define S2EVENT_TX              (1L<<1) /* transmitter error catch all  */
#define S2EVENT_RX              (1L<<2) /* receiver error catch all     */
#define S2EVENT_ONLINE          (1L<<3) /* unit is in service           */
#define S2EVENT_OFFLINE         (1L<<4) /* unit is not in service       */
#define S2EVENT_BUFF            (1L<<5) /* buff mgt function error      */
#define S2EVENT_HARDWARE        (1L<<6) /* hardware error catch all     */
#define S2EVENT_SOFTWARE        (1L<<7) /* software error catch all     */


#endif  /* SANA2_SANA2DEVICE_H */
@


1.14
log
@Added Wiretype for PLIP
@
text
@d5 2
a6 2
**      $Revision: 1.13 $
**      $Date: 93/12/14 13:59:25 $
d127 2
@


1.13
log
@Added S2_PACKETFILTER Tag
@
text
@d5 2
a6 2
**      $Revision: 1.12 $
**      $Date: 93/01/04 12:11:26 $
d126 1
a126 1
#define S2WireType_AmokNet              200
d130 1
a130 1
#define S2WireType_CSLIP                255
d132 1
@


1.12
log
@Made several changes for ASDG:
 (1) Added a new S2ERR, for transmission failed.
 (2) Added two S2WERR's -- one of which is a special case for ASDG.
@
text
@d5 2
a6 2
**      $Revision: 1.11 $
**      $Date: 92/11/10 13:35:29 $
d90 1
a90 1

@


1.11
log
@Added the 'unused' field to the SANA2DeviceStats structure to
make up for the inaccuracy between the .h and .i files;
used to be SoftMisses.

Also added the WireType for DyLAN
@
text
@d5 2
a6 2
**      $Revision: 1.10 $
**      $Date: 92/01/10 15:10:05 $
d209 1
d241 2
@


1.10
log
@Really fixed headers.
@
text
@d4 3
a6 3
**	$Filename: devices/sana2.h $
**	$Revision: 1.9 $
**	$Date: 92/01/10 15:04:26 $
d8 1
a8 1
**	Structure definitions for SANA-II devices.
d10 2
a11 2
**	(C) Copyright 1991 Commodore-Amiga Inc.
**		All Rights Reserved
d40 2
a41 2
#define SANA2_MAX_ADDR_BITS	(128)
#define SANA2_MAX_ADDR_BYTES	((SANA2_MAX_ADDR_BITS+7)/8)
d45 26
a70 26
	struct IORequest ios2_Req;
	ULONG ios2_WireError;		/* wire type specific error	*/
	ULONG ios2_PacketType;		/* packet type			*/
	UBYTE ios2_SrcAddr[SANA2_MAX_ADDR_BYTES];	/* source addr	*/
	UBYTE ios2_DstAddr[SANA2_MAX_ADDR_BYTES];	/* dest address	*/
	ULONG ios2_DataLength;		/* length of packet data	*/
	VOID *ios2_Data;		/* packet data			*/
	VOID *ios2_StatData;		/* statistics data pointer	*/
	VOID *ios2_BufferManagement;	/* see SANA-II OpenDevice adoc	*/
};


/*
** defines for the ios2_Flags field
*/
#define SANA2IOB_RAW	(7)		/* raw packet IO requested	*/
#define SANA2IOF_RAW	(1<<SANA2IOB_RAW)

#define	SANA2IOB_BCAST	(6)		/* broadcast packet (received)	*/
#define	SANA2IOF_BCAST	(1<<SANA2IOB_BCAST)

#define	SANA2IOB_MCAST	(5)		/* multicast packet (received)	*/
#define	SANA2IOF_MCAST	(1<<SANA2IOB_MCAST)

#define SANA2IOB_QUICK	(IOB_QUICK)	/* quick IO requested (0)	*/
#define SANA2IOF_QUICK	(IOF_QUICK)
d76 2
a77 2
#define SANA2OPB_MINE	(0)		/* exclusive access requested	*/
#define SANA2OPF_MINE	(1<<SANA2OPB_MINE)
d79 2
a80 2
#define SANA2OPB_PROM	(1)		/* promiscuous mode requested	*/
#define SANA2OPF_PROM	(1<<SANA2OPB_PROM)
d86 1
a86 1
#define S2_Dummy	(TAG_USER + 0xB0000)
d88 2
a89 2
#define S2_CopyToBuff	(S2_Dummy + 1)
#define S2_CopyFromBuff	(S2_Dummy + 2)
d97 4
a100 4
	ULONG	SizeAvailable;		/* bytes available		*/
	ULONG	SizeSupplied;		/* bytes supplied		*/
	ULONG	DevQueryFormat;		/* this is type 0		*/
	ULONG	DeviceLevel;		/* this document is level 0	*/
d104 4
a107 4
	UWORD	AddrFieldSize;		/* address size in bits		*/
	ULONG	MTU;			/* maximum packet data size	*/
	ULONG	BPS;			/* line rate (bits/sec)		*/
	ULONG	HardwareType;		/* what the wire is		*/
d120 11
a130 4
#define S2WireType_Ethernet		1
#define S2WireType_IEEE802		6
#define S2WireType_Arcnet		7
#define S2WireType_LocalTalk		11
a131 5
#define S2WireType_AmokNet		200

#define S2WireType_PPP			253
#define S2WireType_SLIP			254
#define S2WireType_CSLIP		255
a132 1

d135 5
a139 5
	ULONG PacketsSent;		/* transmitted count		*/
	ULONG PacketsReceived;		/* received count		*/
	ULONG BytesSent;		/* bytes transmitted count	*/
	ULONG BytesReceived;		/* bytes received count		*/
	ULONG PacketsDropped;		/* packets dropped count	*/
d145 3
a147 3
	ULONG Type;			/* statistic identifier		*/
	ULONG Count;			/* the statistic		*/
	char *String;			/* statistic name		*/
d153 3
a155 3
	ULONG RecordCountMax;		/* room available		*/
	ULONG RecordCountSupplied;	/* number supplied		*/
	/* struct Sana2SpecialStatRecord[RecordCountMax]; */
d161 8
a168 7
	ULONG PacketsReceived;		/* received count		*/
	ULONG PacketsSent;		/* transmitted count		*/
	ULONG BadData;			/* bad packets received		*/
	ULONG Overruns;			/* hardware miss count		*/
	ULONG UnknownTypesReceived;	/* orphan count			*/
	ULONG Reconfigurations;		/* network reconfigurations	*/
	struct timeval LastStart;	/* time of last online		*/
d175 1
a175 1
#define S2_START		(CMD_NONSTD)
d177 32
a208 32
#define S2_DEVICEQUERY		(S2_START+ 0)
#define S2_GETSTATIONADDRESS	(S2_START+ 1)
#define S2_CONFIGINTERFACE	(S2_START+ 2)
#define S2_ADDMULTICASTADDRESS	(S2_START+ 5)
#define S2_DELMULTICASTADDRESS	(S2_START+ 6)
#define S2_MULTICAST		(S2_START+ 7)
#define S2_BROADCAST		(S2_START+ 8)
#define S2_TRACKTYPE		(S2_START+ 9)
#define S2_UNTRACKTYPE		(S2_START+10)
#define S2_GETTYPESTATS		(S2_START+11)
#define S2_GETSPECIALSTATS	(S2_START+12)
#define S2_GETGLOBALSTATS	(S2_START+13)
#define S2_ONEVENT		(S2_START+14)
#define S2_READORPHAN		(S2_START+15)
#define S2_ONLINE		(S2_START+16)
#define S2_OFFLINE		(S2_START+17)

#define S2_END			(S2_START+18)


/*
** defined errors for ios2_Error  (see also <exec/errors.h>)
*/
#define S2ERR_NO_ERROR		0	/* peachy-keen			*/
#define S2ERR_NO_RESOURCES	1	/* resource allocation failure	*/
#define S2ERR_BAD_ARGUMENT	3	/* garbage somewhere		*/
#define S2ERR_BAD_STATE		4	/* inappropriate state		*/
#define S2ERR_BAD_ADDRESS	5	/* who?				*/
#define	S2ERR_MTU_EXCEEDED	6	/* too much to chew		*/
#define S2ERR_NOT_SUPPORTED	8	/* hardware can't support cmd	*/
#define S2ERR_SOFTWARE		9	/* software error detected	*/
#define S2ERR_OUTOFSERVICE	10	/* driver is OFFLINE		*/
d212 7
a218 7
**	IOERR_OPENFAIL	 (-1) * device/unit failed to open *
**	IOERR_ABORTED	 (-2) * request terminated early [after AbortIO()] *
**	IOERR_NOCMD	 (-3) * command not supported by device *
**	IOERR_BADLENGTH	 (-4) * not a valid length (usually IO_LENGTH) *
**	IOERR_BADADDRESS (-5) * invalid address (misaligned or bad range) *
**	IOERR_UNITBUSY	 (-6) * device opens ok, but requested unit is busy *
**	IOERR_SELFTEST   (-7) * hardware failed self-test *
d224 16
a239 16
#define S2WERR_GENERIC_ERROR	0	/* no specific info available	*/
#define	S2WERR_NOT_CONFIGURED	1	/* unit not configured		*/
#define S2WERR_UNIT_ONLINE	2	/* unit is currently online	*/
#define S2WERR_UNIT_OFFLINE	3	/* unit is currently offline	*/
#define	S2WERR_ALREADY_TRACKED	4	/* protocol already tracked	*/
#define	S2WERR_NOT_TRACKED	5	/* protocol not tracked		*/
#define S2WERR_BUFF_ERROR	6	/* buff mgt func returned error	*/
#define S2WERR_SRC_ADDRESS	7	/* source address problem	*/
#define S2WERR_DST_ADDRESS	8	/* destination address problem	*/
#define S2WERR_BAD_BROADCAST	9	/* broadcast address problem	*/
#define S2WERR_BAD_MULTICAST	10	/* multicast address problem	*/
#define S2WERR_MULTICAST_FULL	11	/* multicast address list full	*/
#define S2WERR_BAD_EVENT	12	/* unsupported event class      */
#define S2WERR_BAD_STATDATA	13	/* statdata failed sanity check */
#define S2WERR_IS_CONFIGURED	15	/* attempt to config twice      */
#define S2WERR_NULL_POINTER	16	/* null pointer detected        */
d245 8
a252 8
#define	S2EVENT_ERROR		(1L<<0)	/* error catch all		*/
#define	S2EVENT_TX		(1L<<1)	/* transmitter error catch all	*/
#define	S2EVENT_RX		(1L<<2)	/* receiver error catch all	*/
#define	S2EVENT_ONLINE		(1L<<3)	/* unit is in service		*/
#define	S2EVENT_OFFLINE		(1L<<4)	/* unit is not in service	*/
#define	S2EVENT_BUFF		(1L<<5)	/* buff mgt function error	*/
#define S2EVENT_HARDWARE	(1L<<6)	/* hardware error catch all	*/
#define S2EVENT_SOFTWARE	(1L<<7)	/* software error catch all	*/
d255 1
a255 1
#endif	/* SANA2_SANA2DEVICE_H */
@


1.9
log
@*** empty log message ***
@
text
@d4 3
a6 3
**	$Source: $
**	$Revision: 1.8 $
**	$Date: 92/01/10 15:00:18 $
@


1.8
log
@fixed headers
@
text
@d4 3
a6 3
**	$Filename: $
**	$Revision: $
**	$Date: $
@


1.7
log
@fixed jjszucs spelling error
@
text
@d4 3
a6 1
**	$Id: sana2.h,v 1.6 91/12/10 10:39:42 dlarson Exp Locker: dlarson $
@


1.6
log
@fixed alias stuff by deletion rather than comment 'obsolete'
@
text
@d4 1
a4 1
**	$Id: sana2.h,v 1.5 91/12/09 08:36:01 dlarson Exp Locker: dlarson $
d50 1
a50 1
	VOID *ios2_StatData;		/* statics data pointer		*/
@


1.5
log
@January 1 Final Version
@
text
@d4 1
a4 1
**	$Id: sana2.h,v 1.4 91/11/07 11:34:41 dlarson Exp Locker: dlarson $
a175 2
#define S2_ADDSTATIONALIAS	(S2_START+ 3)  /*  Obsolete.  */
#define S2_DELSTATIONALIAS	(S2_START+ 4)  /*  Obsolete.  */
@


1.4
log
@updates to final comments and acceptance -- ready for distribution.
@
text
@d4 1
a4 1
**	$Id: sana2.h,v 1.3 91/10/21 11:58:20 dlarson Exp Locker: dlarson $
a117 1

d123 2
d176 2
a177 2
#define S2_ADDSTATIONALIAS	(S2_START+ 3)
#define S2_DELSTATIONALIAS	(S2_START+ 4)
@


1.3
log
@version 1.9.1 revisions
@
text
@d4 1
a4 1
**	$Id: sana2.h,v 1.2 91/10/17 12:58:16 dlarson Exp Locker: dlarson $
d34 1
a34 1
#include <utility/tagsitem.h>
d97 2
a98 2
	LONG	DevQueryFormat;		/* this is type 0		*/
	LONG	DeviceLevel;		/* this document is level 0	*/
d104 2
a105 2
	LONG	bps;			/* line rate (bits/sec)		*/
	LONG	HardwareType;		/* what the wire is		*/
d114 3
d124 4
d131 5
a135 5
	LONG PacketsSent;		/* transmitted count		*/
	LONG PacketsReceived;		/* received count		*/
	LONG BytesSent;			/* bytes transmitted count	*/
	LONG BytesReceived;		/* bytes received count		*/
	LONG PacketsDropped;		/* packets dropped count	*/
d142 1
a142 1
	LONG Count;			/* the statistic		*/
d157 7
a163 11
	LONG packets_received;		/* received count		*/
	LONG packets_sent;		/* transmitted count		*/
	LONG framing_errors;		/* framming errors found	*/
	LONG bad_data;			/* bad packets received		*/
	LONG hard_misses;		/* hardware miss count		*/
	LONG soft_misses;		/* software miss count		*/
	LONG unknown_types_received;	/* orphan count			*/
	LONG fifo_overruns;		/* hardware overruns		*/
	LONG fifo_underruns;		/* hardware underruns		*/
	LONG reconfigurations;		/* network reconfigurations	*/
	struct timeval last_start;	/* time of last online		*/
a198 1
#define S2ERR_UNKNOWN_ENTITY	2	/* unable to find something	*/
a202 1
#define	S2ERR_BAD_PROTOCOL	7	/* bad packet type 		*/
d209 7
a215 7
**	IOERR_OPENFAIL	 (-1) /* device/unit failed to open */
**	IOERR_ABORTED	 (-2) /* request terminated early [after AbortIO()] */
**	IOERR_NOCMD	 (-3) /* command not supported by device */
**	IOERR_BADLENGTH	 (-4) /* not a valid length (usually IO_LENGTH) */
**	IOERR_BADADDRESS (-5) /* invalid address (misaligned or bad range) */
**	IOERR_UNITBUSY	 (-6) /* device opens ok, but requested unit is busy */
**	IOERR_SELFTEST   (-7) /* hardware failed self-test */
d217 1
a234 1
#define S2WERR_PROTOCOL_UNKNOWN	14	/* unknown protocol type        */
d242 8
a249 8
#define	S2EVENT_ERROR		0	/* error catch all		*/
#define	S2EVENT_TX		1	/* transmitter error catch all	*/
#define	S2EVENT_RX		2	/* receiver error catch all	*/
#define	S2EVENT_ONLINE		3	/* unit is in service		*/
#define	S2EVENT_OFFLINE		4	/* unit is not in service	*/
#define	S2EVENT_BUFF		5	/* buff mgt function error	*/
#define S2EVENT_HARDWARE	6	/* hardware error catch all	*/
#define S2EVENT_SOFTWARE	7	/* software error catch all	*/
@


1.2
log
@cleaned up comments, removed netbuff.h
@
text
@d4 1
a4 1
**	$Id: sana2.h,v 1.1 91/10/17 12:36:35 dlarson Exp Locker: dlarson $
d15 2
a16 1
#endif /* !EXEC_TYPES_H */
d19 2
a20 1
#endif /* !EXEC_PORTS_H */
d23 6
a28 1
#endif /* !EXEC_IO_H */
d31 5
a35 1
#endif /* !DEVICES_TIMER_H */
a40 1

d45 1
a45 1
	ULONG ios2_PacketType;		/* packet type	*/
d48 4
a51 4
	ULONG ios2_DataLength;		/* from header			*/
	void *ios2_Data;		/* packet data			*/
	void *ios2_StatData;		/* statics data pointer		*/
	void *ios2_BufferManagement;	/* see SANA-II OpenDevice adoc	*/
a57 1

d72 1
a72 1
** defines for OpenDevice()
a73 1

d81 9
d117 1
d119 1
a166 1

d192 1
a192 1
** defined errors for ios2_Error
a193 1

d201 2
a202 2
#define	S2ERR_BAD_PROTOCOL	7	/* bad packet type structure	*/
#define S2ERR_NOT_SUPPORTED	8	/* command not supported	*/
d204 12
a215 2


a218 1

d225 1
a225 1
#define S2WERR_NETBUFF_ERROR	6	/* netbuff.lib returned error	*/
d230 6
a235 8
#define S2WERR_ALIAS_LIST_FULL	11	/* station alias list full	*/
#define S2WERR_BAD_ALIAS	12	/* bad station alias		*/
#define S2WERR_MULTICAST_FULL	13	/* multicast address list full	*/
#define S2WERR_BAD_EVENT	14	/* unsupported event class      */
#define S2WERR_BAD_STATDATA	15	/* statdata failed sanity check */
#define S2WERR_PROTOCOL_UNKNOWN	16	/* unknown protocol type        */
#define S2WERR_IS_CONFIGURED	17	/* attempt to config twice      */
#define S2WERR_NULL_POINTER	18	/* null pointer detected        */
a240 1

d246 1
a246 1
#define	S2EVENT_NETBUF		5	/* NetBuff error catch all	*/
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
**	$Id: sana2device.h,v 1.1 91/10/16 11:21:56 dlarson Exp Locker: dlarson $
a24 3
#ifndef LIBRARIES_NETBUFF_H
#include <libraries/netbuff.h>
#endif /* !LIBRARIES_NETBUFF_H */
d46 1
a46 1
** defines for the S2io_Flags field
d174 1
a174 1
** defined errors for S2io_Error
d190 1
a190 1
** defined errors for S2io_WireError
@
