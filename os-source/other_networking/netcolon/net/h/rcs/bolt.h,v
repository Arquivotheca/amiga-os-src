head     1.3;
branch   ;
access   ;
symbols  clean:1.2;
locks    ; strict;
comment  @ * @;


1.3
date     91.06.21.16.39.18;  author dlarson;  state Stab;
branches ;
next     1.2;

1.2
date     91.06.04.11.01.11;  author dlarson;  state Stab;
branches ;
next     1.1;

1.1
date     91.06.03.16.26.37;  author dlarson;  state Exp;
branches ;
next     ;


desc
@All and only header information common to handler, server and driver.
@


1.3
log
@moved RPSIZEN and RPBASE from netcomm.h
@
text
@/* bolt.h -- common header for Bolt server, handler and drivers  */

#ifndef D_BOLT_H
#define D_BOLT_H

#include <exec/types.h>

/* Private packets (for a description, see packets.txt) */
#define ACTION_NETWORK_LOGIN		5550L
#define ACTION_NETWORK_PASSWD		5557L

#define ACTION_NETWORK_START		5554L
#define ACTION_NETWORK_END		5556L

#define ACTION_NETWORK_SNAME		5555L

#define ERROR_NODE_DOWN	ERROR_OBJECT_NOT_FOUND


struct RPacket       /* Packet sent to remote node */
{
   char  *DataP;        /* always contains at least MINBUFSIZE bytes    */
   char  *AllocP;       /* always contains at least MINBUFSIZE bytes    */
   short Type;          /* Type of request (AmigaDos packet type)       */
   short DLen;          /* Length of data in Data buffer                */
   void  *handle;       /* Generic handle for association               */
   LONG  Arg1,          /* Equivalent to dp_Arg? in normal devices      */
         Arg2,          /* when transmitting, dp_Res? when receiving    */
         Arg3,
         Arg4;
};


#define SDN_OK   0   /* Successful completion                   */
#define SDN_ERR  1   /* Some error, operation not done          */
#define SDN_NONE 2   /* No packets pending                      */
#define SDN_PEND 3   /* Packet was sent but is now pending      */
#define SDN_FAIL 4   /* Pended packet failed                    */
#define SDN_DOWN 5   /* Node is known but not currently up      */


#define RPBASE(rp)    ((char *)&((rp)->Type))    /* what we send to remote */
#define RPSIZEN       (sizeof(struct RPacket)-8) /* how much of it we send */

/* Prototypes for driver functions */
int SDNSerInit          (APTR *drgp,
                         ULONG *maskp,
                         char *data
                        );
int SDNSerTerm          (APTR drglobal);
int SDNHanInit          (APTR *drgp,
                         ULONG *maskp,
                         char *data
                        );
int SDNHanTerm          (APTR drglobal);
int SDNInitNode         (APTR drglobal,
                         char *name,
                         APTR *con
                        );
void SDNTermNode        (APTR drglobal,
                         APTR con
                        );
int SDNAccept           (APTR drglobal,
                         struct RPacket **rp
                        );
int SDNReply            (APTR drglobal,
                         struct RPacket *rp
                        );
int SDNSend             (APTR drglobal,
                         struct RPacket *rp
                        );
int SDNReceive          (APTR drglobal,
                         ULONG mask,
                         struct RPacket **rp
                        );

struct RPacket *
    SDNAllocRPacket     (APTR drglobal,
                         APTR con,
                         int len
                        );

struct RPacket *
    SDNDupRPacket       (APTR drglobal,
                         struct RPacket *rp
                        );

void SDNFreeRPacket     (APTR drglobal,
                         struct RPacket *rp
                        );

void *SDNGetConData     (APTR drglobal,
                         struct RPacket *rp
                        );

void SDNSetConData      (APTR drglobal,
                         struct RPacket *rp,
                         void *data
                        );
#include "sdn_pragmas.h"


#endif@


1.2
log
@Removed ACTION_NETWORK_ESTABLISH and DISOLVE (sic) because they are only used
by the INet driver.
@
text
@d41 3
@


1.1
log
@Initial revision
@
text
@a16 4
/* Driver private packets */
#define ACTION_NETWORK_ESTABLISH	7777L
#define ACTION_NETWORK_DISOLVE		7778L

@
