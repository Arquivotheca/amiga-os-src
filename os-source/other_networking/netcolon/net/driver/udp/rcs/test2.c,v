head     1.1;
branch   ;
access   ;
symbols  ;
locks    dlarson:1.1; strict;
comment  @ * @;


1.1
date     91.07.08.10.06.34;  author dlarson;  state Exp;
branches ;
next     ;


desc
@continuing development...
@



1.1
log
@Initial revision
@
text
@/*
**  test.c -- Test Bolt driver functions.
**
**  As you develop your driver, test the functions you add by commenting out
**  all sections after those you've not yet implemented.  Remember to use
**  'avail flush' before and after your call to 'test.'
**
**  Unfortunately, you really can't test anything other than SDN*Init(),
**  SDN*RPacket() and SDN*Term() without testing everything.  The other
**  functions are too dependent on each other.
*/

#include <exec/exec.h>
#include <string.h>
#include <proto/exec.h>
#include <bolt.h>

struct library *DriverBase;

main(int argc, char **argv)
{
	int rc;
	struct RPacket *rp;
	APTR serglobal;
	ULONG sermask=0L;

	if(argc != 2)
	{
		printf("usage: %s libraryname\n", argv[0]);
		return(10);
	}
	KPrintF("\n\n\nTEST2: Bolt driver functions test.\n");
	KPrintF("Testing %s.\n", argv[1]);
	DriverBase = OpenLibrary(argv[1], 0L);
	if( !DriverBase )
	{
		KPrintF("TEST2: Unable to open %s\n", argv[1], 0L);
		return(20);
	}
	KPrintF("\nTEST2: Opened %s, about to SDNSerInit().\n", argv[1]);

	rc = SDNSerInit(&serglobal, &sermask, NULL);
	KPrintF("\nTEST2: SDNSerInit() returned %ld, now Wait(%lx)ing.\n",
		rc, sermask);
	Wait(sermask);
	KPrintF("\TEST2: Done waiting!!!");

	KPrintF("\nTEST2:  Accept()ing data.\n");
	if( !SDNAccept(serglobal, &rp) )
		goto cleanup;
	SDNFreeRPacket(serglobal, rp);
cleanup:


	KPrintF("TEST2: About to SDNSerTerm().\n", rc);
	SDNSerTerm(serglobal);
	KPrintF("TEST2: About to CloseLibrary(DriverBase).\n");
	CloseLibrary(DriverBase);
}@
