head     1.1;
branch   ;
access   ;
symbols  ;
locks    dlarson:1.1; strict;
comment  @ * @;


1.1
date     91.07.08.10.06.26;  author dlarson;  state Exp;
branches ;
next     ;


desc
@continuing development...
@



1.1
log
@Initial revision
@
text
@#include <exec/exec.h>
#include <string.h>
#include <proto/exec.h>
#include <bolt.h>

struct library *DriverBase;

main(int argc, char **argv)
{
	int rc;
	struct RPacket *rp;
	APTR serglobal;
	ULONG sermask=0L;

	if(argc != 2)
	{
		printf("usage: %s libraryname\n", argv[0]);
		return(10);
	}
	KPrintF("\n\n\nTEST-SERV: Bolt driver functions test.\n");
	KPrintF("Testing %s.\n", argv[1]);
	DriverBase = OpenLibrary(argv[1], 0L);
	if( !DriverBase )
	{
		KPrintF("TEST-SERV: Unable to open %s\n", argv[1], 0L);
		return(20);
	}
	KPrintF("\nTEST-SERV: Opened %s, about to SDNSerInit().\n", argv[1]);

	rc = SDNSerInit(&serglobal, &sermask, NULL);
	KPrintF("\nTEST-SERV: SDNSerInit() returned %ld, now Wait(%lx)ing.\n",
		rc, sermask);
	for(;;)
	{
		Wait(sermask);
		KPrintF("\nTEST-SERV: Accept()ing data... ");
		if( SDNAccept(serglobal, &rp) != SDN_OK)
		{
			KPrintF("error.\n");
			continue;
		}
		KPrintF("TEST-SERV: Data '%s'\n", rp->DataP);
		SDNFreeRPacket(serglobal, rp);
	}
cleanup:
	KPrintF("TEST-SERV: About to SDNSerTerm().\n", rc);
	SDNSerTerm(serglobal);
	KPrintF("TEST-SERV: About to CloseLibrary(DriverBase).\n");
	CloseLibrary(DriverBase);
}@
