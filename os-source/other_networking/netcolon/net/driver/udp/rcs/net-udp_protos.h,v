head     1.2;
branch   ;
access   ;
symbols  ;
locks    dlarson:1.2; strict;
comment  @ * @;


1.2
date     91.06.21.11.54.01;  author dlarson;  state Exp;
branches ;
next     1.1;

1.1
date     91.06.05.12.50.55;  author dlarson;  state Exp;
branches ;
next     ;


desc
@ANSI prototypes for Bolt UDP driver
@


1.2
log
@work in progress...
@
text
@/*  NET-UDP.library: net-udp_protos.h  */

#ifndef D_UDPPROTOS_H
#define D_UDPPROTOS_H


/*
**  Prototypes for functions defined in INIT.C
*/
int LIBENT UDPSDNSerInit(register __a0 UDPGLOBAL *tgp,
			register __a1 ULONG *maskp,
			register __a2 char *data,
			register __a6 struct DrLibrary *DriverBase);
void LIBENT UDPSDNSerTerm(register __a0 UDPGLOBAL tg,
			register __a6 struct DrLibrary *DriverBase);
int LIBENT UDPSDNHanInit(register __a0 UDPGLOBAL *tgp,
			register __a1 ULONG *maskp,
			register __a2 char *data,
			register __a6 struct DrLibrary *DriverBase);
int LIBENT UDPSDNHanTerm(register __a0 UDPGLOBAL tg,
			register __a6 struct DrLibrary *DriverBase);
UDPGLOBAL UDPInit(ULONG *maskp, char *data);
int UDPprivate(void);
/*
**  Prototypes for functions defined in RPACKET.C
*/
struct RPacket *LIBENT UDPSDNAllocRPacket (register __a0 UDPGLOBAL tg,
			register __a1 APTR con,
			register __d0 int len,
			register __a6 struct DrLibrary *DriverBase);
struct RPacket *LIBENT UDPSDNDupRPacket(register __a0 UDPGLOBAL tg,
			register __a1 struct RPacket *rp,
                        register __a6 struct DrLibrary *DriverBase);
void LIBENT UDPSDNFreeRPacket (register __a0 UDPGLOBAL tg,
			register __a1 struct RPacket *rp,
			register __a6 struct DrLibrary *DriverBase);
/*
**  Prototypes for functions defined in NODE.C
*/
int LIBENT UDPSDNInitNode(register __a0 UDPGLOBAL tg,
			register __a1 char *name,
			register __a1 APTR *con,
			register __a6 struct DrLibrary *DriverBase);
void LIBENT UDPSDNTermNode(register __a0 UDPGLOBAL tg,
			register __a1 APTR con,
			register __a6 struct DrLibrary *DriverBase);
void *LIBENT UDPSDNGetConData(register __a0 UDPGLOBAL tg,
			register __a1 struct RPacket *rp,
			register __a6 struct DrLibrary *DriverBase);
void LIBENT UDPSDNSetConData  (register __a0 UDPGLOBAL tg,
			register __a1 struct RPacket *rp,
			register __a2 void *data,
			register __a6 struct DrLibrary *DriverBase);
/*
**  Prototypes for functions defined in GET.C
*/
int LIBENT UDPSDNAccept(register __a0 UDPGLOBAL tg,
			register __a1 struct RPacket **rp,
			register __a6 struct DrLibrary *DriverBase);

int LIBENT UDPSDNReceive(register __a0 UDPGLOBAL tg,
			register __d0 ULONG mask,
			register __a1 struct RPacket **rp,
			register __a6 struct DrLibrary *DriverBase);
/*
**  Prototypes for functions defined in PUT.C
*/
int LIBENT UDPSDNReply(register __a0 UDPGLOBAL tg,
			register __a1 struct RPacket *rp,
			register __a6 struct DrLibrary *DriverBase);
int LIBENT UDPSDNSend(register __a0 UDPGLOBAL tg,
			register __a1 struct RPacket *rp,
			register __a6 struct DrLibrary *DriverBase);

#endif /* D_UDPPROTOS__H */
@


1.1
log
@Initial revision
@
text
@a73 5
/*
**  Other stuff:
*/
void __stdargs kprintf(char *, ...);
int __stdargs kgetc(void);
@
