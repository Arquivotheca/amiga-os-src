head     1.8;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.8
date     91.06.09.11.23.26;  author dlarson;  state Stab;
branches ;
next     1.7;

1.7
date     91.06.04.11.02.35;  author dlarson;  state Stab;
branches ;
next     1.6;

1.6
date     91.05.10.14.24.54;  author J_Toebes;  state Exp;
branches ;
next     1.5;

1.5
date     91.01.17.01.17.29;  author Doug;  state Exp;
branches ;
next     1.4;

1.4
date     91.01.15.00.18.58;  author J_Toebes;  state Exp;
branches ;
next     1.3;

1.3
date     91.01.14.21.52.00;  author J_Toebes;  state Exp;
branches ;
next     1.2;

1.2
date     90.11.20.21.36.46;  author J_Toebes;  state Exp;
branches ;
next     1.1;

1.1
date     90.11.17.19.01.19;  author J_Toebes;  state Exp;
branches ;
next     ;


desc
@General include file for the INET driver library
@


1.8
log
@???
@
text
@/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\
* |_o_o|\\ Copyright (c) 1990 The Software Distillery.                    *
* |. o.| ||          All Rights Reserved                                  *
* | .  | ||          Written by John Toebes and Doug Walker               *
* | o  | ||          The Software Distillery                              *
* |  . |//           207 Livingstone Drive                                *
* ======             Cary, NC 27513                                       *
*                    BBS:(919)-460-7430                                   *
\* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/*
**      $Filename: SDNInet.h $
**      $Author: dlarson $
**      $Revision: 1.7 $
**      $Date: 91/06/04 11:02:35 $
**      $Log:	SDNInet.h,v $
 * Revision 1.7  91/06/04  11:02:35  dlarson
 * Added ACTION_NETWORK_ESTABLISH and DISOLVE (sic) because they were removed
 * from bolt.h.
 *
 * Revision 1.6  91/05/10  14:24:54  J_Toebes
 * Add in safety check for initialization to ensure proper synchronization.
 *
**
**/
#ifndef D_SDNINET_H
#define D_SDNINET_H

#ifdef DOS_TRUE
#undef DOS_TRUE
#undef DOS_FALSE
#endif

#ifdef min
#undef min
#endif

#include <exec/types.h>
#include <exec/nodes.h>
#include <exec/lists.h>
#include <exec/ports.h>
#include <exec/libraries.h>
#include <exec/devices.h>
#include <exec/io.h>
#include <exec/memory.h>
#include <exec/interrupts.h>
#include <intuition/intuition.h>
#include <devices/console.h>
#include <devices/timer.h>
#include <libraries/dos.h>
#include <libraries/dosextens.h>
#include <libraries/filehandler.h>
#include <string.h>
#include <stdlib.h>
#ifdef MANX
#define U_ARGS(a) ()    /* No support for prototypes - oh well */
#else
#define U_ARGS(a) a     /* prototype checking to ensure all is well */
#include <proto/exec.h>
#include <proto/dos.h>
#include <proto/timer.h>
#endif

#include <sys/errno.h>
#include <sys/types.h>
#include <sys/time.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <socket.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
/*  #include <netinet/inet.h>
  #include <arpa/inet.h>
*/
#include <netdb.h>
#include <proto/inet.h>
#include "sdn_pragmas.h"
#include "bolt.h"

#define RPBASE(rp)    ((char *)&((rp)->Type))
#define RPSIZEN       (sizeof(struct RPacket)-8)


/* Driver private packets */
#define ACTION_NETWORK_ESTABLISH	7777L
#define ACTION_NETWORK_DISOLVE		7778L



void __stdargs KPrintF(char *,...);

#ifdef BUGR
#undef BUGR
#endif
#ifdef BUG
#undef BUG
#endif
#ifdef BUGP
#undef BUGP
#endif

#define BUGR(s)
#define BUG(a)
#define BUGP(a)

#define NETBUFSIZE 8192
#define MAXCONNECT    24
#define INETMASK(f)    (1 << (f))
#define QUICKSIZE  268

#define DEFPACKETS 10  /* Default number of RPackets to start with */

#define PACKET_PERM 0
#define PACKET_FREE 1
#define PACKET_TEMP 2

struct INETRPacket {
   struct RPacket rp;
   char   quickbuf[QUICKSIZE];
   struct INETRPacket *next;
   struct INETCON *con;
   long   class;
};

#define STATUS_NOINIT	0x8000	/* Usage field of the connection is set to this	 */
				/* value before the first true packet comes in 	 */

typedef struct INETCON
{
   short fh;                    /* File handle for this connection               */
   short usage;                 /* Usage count for this connection               */
   struct INETRPacket *opack;   /* Outstanding RPackets for this connection      */
   void *data;                  /* Generic data pointer for library users        */
   long padd;                   /* Padding to make it 16 byte multiple           */
} inetcon;

typedef struct
{
   struct sockaddr_in sin;      /* Socket handle                                   */
   int    fhscount;             /* Number of open connections                      */
   inetcon connect[MAXCONNECT]; /* All connections                                 */
   long   fhsmask;              /* Mask of all open connections                    */
   long   fhscurmask;           /* Mask of unprocessed connections                 */
   struct timerequest tr;       /* timer                                           */
   int    alarm_bit;		/* alarm signal */
   int    curcon;               /* Connection of current packet                    */
   int    sock;                 /* Base socket handle for pending connections      */
   long   sockmask;             /* Base socket mask                                */
   struct INETRPacket *tpack;   /* Temporary packet handles to track               */
   struct INETRPacket *ppack;   /* Permanent packet handles to track               */
   void *_socks[FD_SETSIZE];    /* Sockets of open file handles                    */
   int    socket_sigio;         /* Signal bit for sockets                          */
   int    socket_sigurg;        /* Signal bit for sockets                          */
   int    hostaddr;             /* Default host address                            */
   struct Library *tg_SysBase;
   struct Library *tg_InetBase;
   struct DrLibrary *DriverBase;/* Pointer to driver base                          */
} * INETGLOBAL;

struct DrLibrary {
        struct       Library ml_Lib;
        ULONG        ml_SegList;
        ULONG        ml_Flags;
        APTR         ml_ExecBase;        /* pointer to exec base */
        LONG         ml_Data;                /* Global data */
        };

#define InetBase   (tg->tg_InetBase)
#define SysBase    (tg->tg_SysBase)
#define ABSEXECBASE (*(struct Library **)4)

#define LIBENT __asm

/* Prototypes for functions defined in sdninetutil.c */
int LIBENT INETSDNSerInit      (register __a0 INETGLOBAL *tgp,
                                register __a1 ULONG *maskp,
                                register __a2 char *data,
                                register __a6 struct DrLibrary *DriverBase
                               );
int LIBENT INETSDNSerTerm      (register __a0 INETGLOBAL tg,
                                register __a6 struct DrLibrary *DriverBase
                               );
int LIBENT INETSDNHanInit      (register __a0 INETGLOBAL *tgp,
                                register __a1 ULONG *maskp,
                                register __a2 char *data,
                                register __a6 struct DrLibrary *DriverBase
                               );
int LIBENT INETSDNHanTerm      (register __a0 INETGLOBAL tg,
                                register __a6 struct DrLibrary *DriverBase
                               );

struct RPacket *
    LIBENT INETSDNAllocRPacket (register __a0 INETGLOBAL tg,
                                register __a1 APTR con,
                                register __d0 int len,
                                register __a6 struct DrLibrary *DriverBase
                               );

struct RPacket *
    LIBENT INETSDNDupRPacket   (register __a0 INETGLOBAL tg,
                                register __a1 struct RPacket *rp,
                                register __a6 struct DrLibrary *DriverBase
                               );

void LIBENT INETSDNFreeRPacket (register __a0 INETGLOBAL tg,
                                register __a1 struct RPacket *rp,
                                register __a6 struct DrLibrary *DriverBase
                               );

void *LIBENT INETSDNGetConData (register __a0 INETGLOBAL tg,
                                register __a1 struct RPacket *rp,
                                register __a6 struct DrLibrary *DriverBase
                               );

void LIBENT INETSDNSetConData  (register __a0 INETGLOBAL tg,
                                register __a1 struct RPacket *rp,
                                register __a2 void *data,
                                register __a6 struct DrLibrary *DriverBase
                               );



/* Prototypes for functions defined in sdninetnode.c */
int LIBENT INETSDNInitNode     (register __a0 INETGLOBAL tg,
                                register __a1 char *name,
                                register __a1 APTR *con,
                                register __a6 struct DrLibrary *DriverBase
                               );
void LIBENT INETSDNTermNode    (register __a0 INETGLOBAL tg,
                                register __a1 APTR con,
                                register __a6 struct DrLibrary *DriverBase
                               );


/* Prototypes for functions defined in sdninetget.c */
int LIBENT INETSDNAccept       (register __a0 INETGLOBAL tg,
                                register __a1 struct RPacket **rp,
                                register __a6 struct DrLibrary *DriverBase
                               );

int LIBENT INETSDNReceive      (register __a0 INETGLOBAL tg,
                                register __d0 ULONG mask,
                                register __a1 struct RPacket **rp,
                                register __a6 struct DrLibrary *DriverBase
                               );

/* Prototypes for functions defined in sdninetutil.c */
int LIBENT INETSDNReply        (register __a0 INETGLOBAL tg,
                                register __a1 struct RPacket *rp,
                                register __a6 struct DrLibrary *DriverBase
                               );
int LIBENT INETSDNSend         (register __a0 INETGLOBAL tg,
                                register __a1 struct RPacket *rp,
                                register __a6 struct DrLibrary *DriverBase
                               );

/* Prototypes for functions defined in readn.c */
int readn (INETGLOBAL tg,
           int fd,
           char *ptr,
           int nbytes
          );

int writen(INETGLOBAL tg,
           int fd,
           char *ptr,
           int nbytes
          );

int set_sockopts(INETGLOBAL tg,
                 int fd
                );

int ibind(INETGLOBAL tg,
          int fd,
          void *name,
          int len
         );

int iconnect(INETGLOBAL tg,
             int fd,
             void *name,
             int len
            );

int iaccept(INETGLOBAL tg,
            int fd,
            void *name,
            int *lenp
            );

int isocket(INETGLOBAL tg
           );

void iclose(INETGLOBAL tg,
            int fd
           );

int INETprivate(void);


/* Prototypes for functions defined in inetsup.c */
#endif /* D_SDNINET_H */
@


1.7
log
@Added ACTION_NETWORK_ESTABLISH and DISOLVE (sic) because they were removed
from bolt.h.
@
text
@d12 3
a14 3
**      $Author: J_Toebes $
**      $Revision: 1.6 $
**      $Date: 91/05/10 14:24:54 $
d16 4
d37 26
d71 3
a73 2
#include <netinet/inet.h>
#include <arpa/inet.h>
d77 5
@


1.6
log
@Add in safety check for initialization to ensure proper synchronization.
@
text
@d11 1
a11 1
**      $Filename: SDNInet.h $ 
d13 2
a14 2
**      $Revision: 1.20 $
**      $Date: 91/03/11 11:18:39 $
d16 3
d46 6
@


1.5
log
@Add debugging msgs, check return codes
@
text
@d10 8
d78 3
@


1.4
log
@Add better error checking for dead connections.
@
text
@d36 1
a36 1
void __stdargs KPrintF();
@


1.3
log
@Added Quicksize and quickbuf.
@
text
@d36 2
d87 2
a88 1
   struct timeval timeout;      /* Timeout interval (defaults to 5 seconds)        */
@


1.2
log
@Added support for GetConData, SetConData
@
text
@d53 1
d63 1
@


1.1
log
@Initial revision
@
text
@d69 5
a73 3
   short fh;                    /* File handle for this connection */
   short usage;                 /* Usage count for this connection */
   struct INETRPacket *opack;   /* Outstanding RPackets for this connection */
d145 11
@
