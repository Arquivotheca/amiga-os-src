DATAGRAM
	The chunks of information given to the network protocol.  In the case
	of a UDP driver, these are UDP datagrams.  Datagrams, by definition,
	are not reliable.  Datagrams are of arbitrary size (in UDP/IP, IP
	fragments and reassembles the packets).  Datagrams are
	checksummed by the protocol, so if they arive, they arive intact.

RELIABLE MESSAGE
	Not to be confused with Exec messages, a reliable message is a message
	given to the reliable message service contained in the driver.  The
	reliable message service is usually built on a datagram service.

PACKET
	An AmigaDOS packet.

REPLY
	Packets sent to handlers are returned (usually after being modified by
	the handler) to the sender.  The return is called a reply.

ACKNOWLEDGEMENT
	For each reliable message received, an acknowledgement must be
	returned to the sender.  Acknowledgements happen before replies and
	should not be confused with replies.

======================
*Not Implemented (but desirable for performance and memory-consumtion reasons)
QUICK PACKET
	A quick packet is an AmigaDOS packet which fits into SOME SMALL SIZE.
	Quick packet datagrams sent from a handler to a server may be replied
	by the server rather than the reliable message service.

NON-QUICK PACKET
	A non-quick packet is any AmgaDOS packet which doesn't fit into SOME
	SOME SMALE SIZE.  Non-quick packets are broken up into a header which
	fits into SOME SMALL SIZE and the packet.

PACKET BUFFERS
	In a quick/non-quick packet scheme, a pool of quick-size memory
	buffers can be kept for quick packets.  When non-quick packets
	are recieved, a buffer of a size specified in the header packet can be
	allocated for the data packet.
======================
RELIABLE MESSAGE SERVICE

A reliable message service built on top of UDP must provide:
on the sending side:
	- linear timeout and retransmission (and notification of broken
	  connections).  adaptive timeout probably overkill on LAN.
	- sequence numbers
	- checking replied datagrams to check them off as delivered
and on the receiving side:
	- checking sequence numbers for missed datagrams
	- checking sequence numbers for duplicate datagrams (ack any
	  packets numbered >0 and <current because that means the sender
	  didn't receive our acknowledgement)
	- at least one reply of each datagram

==========================
