head     1.9;
branch   ;
access   ;
symbols  r37-12:1.9 v37r8:1.8 Distillery:1.6;
locks    dlarson:1.9; strict;
comment  @# @;


1.9
date     91.06.07.12.06.58;  author dlarson;  state Stab;
branches ;
next     1.8;

1.8
date     91.04.08.16.17.49;  author dlarson;  state Rel;
branches ;
next     1.7;

1.7
date     91.04.08.12.18.45;  author dlarson;  state Exp;
branches ;
next     1.6;

1.6
date     91.01.15.01.49.08;  author J_Toebes;  state Exp;
branches ;
next     1.5;

1.5
date     90.12.31.15.31.36;  author J_Toebes;  state Exp;
branches ;
next     1.4;

1.4
date     90.11.18.23.59.50;  author Doug;  state Exp;
branches ;
next     1.3;

1.3
date     90.11.18.23.47.22;  author Doug;  state Exp;
branches ;
next     1.2;

1.2
date     90.11.18.22.45.11;  author J_Toebes;  state Exp;
branches ;
next     1.1;

1.1
date     90.10.07.23.46.51;  author J_Toebes;  state Exp;
branches ;
next     ;


desc
@Configuration file for all known servers
@


1.9
log
@SASCOPTS is outta here.  Precompiled includes are in.  Yeah!
@
text
@NETLIBS = /lib/net.lib /lib/memwatch.lib lib:lcr.lib lib:amiga.lib lib:debug.lib

SRCS	=   main.c dir.c io.c lock.c device.c volume.c dispatch.c file.c
OBJS	=   main.o dir.o io.o lock.o device.o volume.o dispatch.o file.o
DEBUG   = 0
TESTING = 0
MWDEBUG = 0
DBFLAGS   = -d$(DEBUG) -dTESTING=$(TESTING) -dMWDEBUG=$(MWDEBUG)

network-server:    $(OBJS)
    @@blink with <<
    FROM LIB:C.O
         $(OBJS)
    SMALLCODE
    SMALLDATA
    VERBOSE
    NODEBUG
    BATCH
    TO $@@
    LIB $(NETLIBS)
    MAP network-server.map HSFLX
<

server.pre: server.h server.c
	lc $(DBFLAGS) -rr -cfsuwq -ph -iv:include/ -inetinc: -i/h/ -oserver.pre server

.c.o:
   @@lc $(DBFLAGS) -ms -y -rr -v -cfsuwq -iv:include -i/h -inetinc: $*

main.o : main.c network-server_rev.h server.pre
dir.o : dir.c server.pre
io.o : io.c server.pre
lock.o : lock.c server.pre
device.o : device.c server.pre
volume.o : volume.c server.pre
dispatch.o : dispatch.c server.pre
file.o : file.c

bump:
	@@bumprev 37 network-server_rev

release:

@


1.8
log
@Updated to Network Revision Control Standards
@
text
@a2 3
#CFLAGS = -. -cwusfq -b -d -v -y -i/h/ -E
#AFLAGS = -iinclude:

d5 4
d24 3
d28 1
a28 5
   @@lc $*
   @@-protect $*.o -e

.a.o:
   @@asm $(AFLAGS) $*
d30 7
a36 7
main.o : main.c network-server_rev.h
dir.o : dir.c
io.o : io.c
lock.o : lock.c
device.o : device.c
volume.o : volume.c
dispatch.o : dispatch.c
@


1.7
log
@Updating to Network Revision Control standards.
@
text
@d1 1
a1 1
#NETLIBS = /lib/net.lib /lib/memwatch.lib lib:lcr.lib lib:amiga.lib lib:debug.lib
d16 1
a16 1
    ADDSYM
d41 3
@


1.6
log
@Added version information
@
text
@d1 1
a1 1
NETLIBS = /lib/net.lib /lib/memwatch.lib lib:lcr.lib lib:amiga.lib lib:debug.lib
d4 1
a4 1
AFLAGS = -iinclude:
d33 1
a33 1
lock.o : lock.c 
d39 1
a39 1
version:
@


1.5
log
@Added new libraries
@
text
@d30 1
a30 1
main.o : main.c
d38 3
@


1.4
log
@move checkouts to refresh.lmk
@
text
@d1 1
a1 1
NETLIBS = /lib/net.lib lib:lc.lib lib:amiga.lib
a8 1

d25 1
a37 1

@


1.3
log
@add dependencies on RCS files
@
text
@a8 1
SERVRCS = devel_rcs:net/server
a37 24

main.c: $(SERVRCS)/main.c,v
   co -f -q -u $@@
 
dir.c: $(SERVRCS)/dir.c,v
   co -f -q -u $@@
 
io.c: $(SERVRCS)/io.c,v
   co -f -q -u $@@
 
lock.c: $(SERVRCS)/lock.c,v
   co -f -q -u $@@
 
device.c: $(SERVRCS)/device.c,v
   co -f -q -u $@@
 
volume.c: $(SERVRCS)/volume.c,v
   co -f -q -u $@@
 
dispatch.c: $(SERVRCS)/dispatch.c,v
   co -f -q -u $@@
 
file.c: $(SERVRCS)/file.c,v
   co -f -q -u $@@
@


1.2
log
@Complete rewrite.
@
text
@d9 2
d39 25
@


1.1
log
@Initial revision
@
text
@d1 1
a1 2
INETLIBS = work:devel/tcpip/lib/net.lib /lib/net.lib lib:lc.lib lib:amiga.lib
LIBS = /lib/net.lib lib:lc.lib lib:amiga.lib define _SysBase=4
d3 1
a3 1
CFLAGS = -. -cwusfq -b -d -v -y -i/h/ -E
d6 2
d9 1
a9 32

NHSRCS	=   main.c dir.c io.c lock.c device.c volume.c dispatch.c file.c
NHOBJS	=   main.o dir.o io.o lock.o device.o volume.o dispatch.o file.o

#   must put objs in current dir in case of #ifdef's
#   depending on if server or handler.

DRCSRCS =   /driver/iopar.c /driver/netdnet.c /driver/iodnet.c /driver/dnetlib.c \
            /driver/iopnet.c nettss.c /driver/iotss.c
DRASRCS =   /driver/netpar.asm /driver/parwakeup.asm
DRCOBJS =   iopar.o netdnet.o iodnet.o dnetlib.o iopnet.o nettss.o iotss.o
DRAOBJS =   netpar.o parwakeup.o


INETSRCS  =  /driver/ioinet.c serinet.c
INETOBJS  =  /driver/ioinet.o serinet.o

IPCSRCS  =   /driver/ioipc.c seripc.c
IPCOBJS  =   /driver/ioipc.o seripc.o

TSSSRCS  =   /driver/iotss.c nettss.c
TSSOBJS  =   /driver/iotss.o nettss.o

DNETSRCS =   /driver/netdnet.c /driver/iodnet.c /driver/dnetlib.c
DNETOBJS =   /driver/netdnet.o /driver/iodnet.o /driver/dnetlib.o

PNETSRCS =   /driver/iopnet.c serpnet.c
PNETOBJS =   /driver/iopnet.o serpnet.o

default:     netinet-server

netinet-server:    $(NHOBJS) $(INETOBJS)
d11 2
a12 3
    FROM LIB:c.o
         $(NHOBJS)
         $(INETOBJS)
d16 1
d19 2
a20 21
    LIB $(INETLIBS)
<

netipc-server:    $(NHOBJS) $(IPCOBJS)
    @@blink with <<
    $(NHOBJS) $(IPCOBJS) SC SD ND VERBOSE BATCH TO $@@ lib $(LIBS)
<

nettss-server:    $(NHOBJS) $(TSSOBJS)
    @@blink with <<
    $(NHOBJS) $(TSSOBJS) SC SD ND VERBOSE BATCH TO $@@ lib $(LIBS)
<

netdnet-server:    $(NHOBJS) $(DNETOBJS)
    @@blink with <<
    $(NHOBJS) $(DNETOBJS) SC SD ND VERBOSE BATCH TO $@@ lib $(LIBS)
<

netpnet-server:   $(NHOBJS) $(PNETOBJS)
    @@blink with <<
    $(NHOBJS) $(PNETOBJS) SC SD ND VERBOSE BATCH TO $@@ lib $(LIBS)
a22 6
/driver/ioipc.o: /driver/ioipc.c
   @@lc -iwork:sana/include/ -iwork:sana/src/devs/ipc $*

seripc.o: seripc.c
   @@lc -iwork:sana/include/ -iwork:sana/src/devs/ipc $*

a36 2
/driver/ioinet.o : /driver/ioinet.c
serinet.o : serinet.c
@
