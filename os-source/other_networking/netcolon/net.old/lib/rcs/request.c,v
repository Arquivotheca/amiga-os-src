head     1.2;
branch   ;
access   ;
symbols  Distillery:1.1;
locks    ; strict;
comment  @ * @;


1.2
date     91.04.08.10.57.16;  author J_Toebes;  state Exp;
branches ;
next     1.1;

1.1
date     90.10.02.23.55.25;  author J_Toebes;  state Exp;
branches ;
next     ;


desc
@simple requester code
@


1.2
log
@Dlarson is checking this in, not knowing what Toebes did to it.
@
text
@
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* |_o_o|\\ Copyright (c) 1988 The Software Distillery.  All Rights Reserved */
/* |. o.| || This program may not be distributed without the permission of   */
/* | .	| || the authors:			      BBS: (919) 481-6436    */
/* | o	| ||   John Toebes     John Mainwaring	  Jim Cooper		     */
/* |  . |//    Bruce Drake     Gordon Keener	  Dave Baker		     */
/* ======								     */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

#include "netcomm.h"
#include "proto.h"
#include <proto/intuition.h>

void initreq(global)
NGLOBAL global;
{
    /* Initialize the intuitext structures for the requesters we might have   */
    /* to display                                                             */
    /* Because we have no scruples we can cheat and do this with a couple of  */
    /* long word assignments.  We leave the acual C code commented out here   */
    /* so that if this structure ever changed we will still be able to work   */
#if 0
    global->n.line1.FrontPen = global->n.line1.BackPen = -1;
    global->n.line1.DrawMode = JAM1;
    global->n.line1.LeftEdge = global->n.line1.TopEdge = 4;
    global->n.line2 = global->n.line1;
    global->n.line3 = global->n.line1;
    global->n.retrytxt = global->n.line1;
    global->n.canceltxt = global->n.line1;
#else
    *(long *)&global->n.line1.FrontPen     = 0x00010000L | (JAM1<<8);
    *(long *)&global->n.line1.LeftEdge     = 0x00040004L;  /* 4,4  */
    *(long *)&global->n.line2.FrontPen     = 0x00010000L | (JAM1<<8);
    *(long *)&global->n.line2.LeftEdge     = 0x0004000EL;  /* 4,14 */
    *(long *)&global->n.line3.FrontPen     = 0x00010000L | (JAM1<<8);
    *(long *)&global->n.line3.LeftEdge     = 0x00040018L;  /* 4,24 */
    *(long *)&global->n.retrytxt.FrontPen  = 0x00010000L | (JAM1<<8);
    *(long *)&global->n.retrytxt.LeftEdge  = 0x00040004L;
    *(long *)&global->n.canceltxt.FrontPen = 0x00010000L | (JAM1<<8);
    *(long *)&global->n.canceltxt.LeftEdge = 0x00040004L;
#endif
    global->n.retrytxt.IText = "Retry";
    global->n.canceltxt.IText = "Cancel";


}

int
request(global, reqnum, msg)
NGLOBAL global;
int reqnum;
char *msg;
{
    /* Possible requesters that we can see at this time
    1:
	You MUST replace volume
	xxxxx
	in Unit 0 !!!

    2: I/O Error on volume
	xxxxx
	in Unit 0

    ?: Unknown Error with volume
	xxxxx
	in Unit 0
    */

#if 0
    if (global->volume == NULL)
#endif
    {
	*(long *)&global->n.line3.LeftEdge  = 0x0004000EL;  /* 4,4  */
	global->n.line1.NextText = &global->n.line2;
    }
#if 0
    else {
	global->n.line1.NextText = &global->n.line2;
	global->n.line2.IText = (UBYTE *)BADDR(global->volume->dl_Name)+1;
	global->n.line2.NextText = &global->n.line3;
    }
#endif
    global->n.line3.IText = (UBYTE *)&global->n.buf3;
    *(long *)&global->n.buf3[0] = ('i'<<24)|('n'<<16)|(' '<<8)|'U';
    *(long *)&global->n.buf3[4] = ('n'<<24)|('i'<<16)|('t'<<8)|' ';
    *(long *)&global->n.buf3[8] = ('0'<<24)|(' '<<16)|('!'<<8)|'!';
    /*global->n.buf3[8] += global->unitnum;*/
    global->n.buf3[12] = 0;

    switch(reqnum) {
    case REQ_MUST:
	global->n.line1.IText = "You MUST replace volume";
	break;
    case REQ_ERROR:
	global->n.line1.IText = "I/O Error on volume";
	global->n.buf3[9] = 0;
	break;
    case REQ_GENERAL:
	global->n.line1.IText = msg;
	global->n.buf3[9] = 0;
	break;
    default:
	global->n.line1.IText = "Unknown error on volume";
	break;
    }

    /* Now we need to put up the requester */

    if (IntuitionBase == NULL)
	IntuitionBase = (struct IntuitionBase *)OpenLibrary("intuition.library",0);

    /* We probably should check and put up an alert.. but later on that */

    /* Now display the requester */

    return(AutoRequest(NULL,
		       &global->n.line1,
		       &global->n.retrytxt,
		       &global->n.canceltxt,
		       DISKINSERTED,
		       0,
		       320,
		       72
	    )
    );
}


@


1.1
log
@Initial revision
@
text
@d14 34
@
