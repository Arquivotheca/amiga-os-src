head     1.5;
branch   ;
access   ;
symbols  v37r4:1.5 Distillery:1.5;
locks    ; strict;
comment  @ * @;


1.5
date     91.01.06.21.02.59;  author Doug;  state Exp;
branches ;
next     1.4;

1.4
date     91.01.06.18.22.04;  author Doug;  state Exp;
branches ;
next     1.3;

1.3
date     90.12.31.15.34.04;  author Doug;  state Exp;
branches ;
next     1.2;

1.2
date     90.11.18.00.03.57;  author Doug;  state Exp;
branches ;
next     1.1;

1.1
date     90.10.09.01.33.04;  author Unknown;  state Exp;
branches ;
next     ;


desc
@Unimplemented 2.0 packets

@


1.5
log
@no requesters by default
@
text
@/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* |_o_o|\\ Copyright (c) 1990       The Software Distillery.  All Rights  */
/* |. o.| || Reserved.  This program may not be distributed without the    */
/* | .  | || permission of the authors:                            BBS:    */
/* | o  | ||                   Doug Walker                                 */
/* |  . |//                                                                */
/* ======                                                                  */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* Unimplemented new 2.0 packets */

#include "handler.h"


static int doit = 0; /* To suppress the requesters automatically, use 0 here */

#define unimp(x) if(doit) doit=request((GLOBAL)global, REQ_GENERAL, x)


#define UNIMP(name) ACTFN(name) { unimp("2.0 pkt " #name); HPQ(global, hpkt); }

UNIMP(ActFormat        )
UNIMP(ActFHFromLock    )
UNIMP(ActChangeMode    )
UNIMP(ActCopyDirFH     )
UNIMP(ActParentFH      )
UNIMP(ActExamineAll    )
UNIMP(ActExamineFH     )
UNIMP(ActSameLock      )

@


1.4
log
@HPQ returning packets
@
text
@d14 1
a14 1
static int doit = 1; /* To suppress the requesters automatically, use 0 here */
@


1.3
log
@remove makelink, readlink
@
text
@d19 1
a19 1
#define UNIMP(name) ACTFN(name) { unimp("2.0 pkt " #name); }
@


1.2
log
@Rewrite for asynchronous execution
@
text
@d19 1
a19 3
#define UNIMP(name) ACTFN(name) { unimp("2.0 pkt " #name); \
                                  hpkt->hp_Pkt->dp_Res1 = ERROR_ACTION_NOT_KNOWN;\
                                  HPQ(global, hpkt);}
a21 2
UNIMP(ActMakeLink      )
UNIMP(ActReadLink      )
a27 2
UNIMP(ActFindOneWriter )
UNIMP(ActFindReadOnly  )
@


1.1
log
@Initial revision
@
text
@d19 3
a21 1
#define UNIMP(name) ACTFN(name) { unimp("2.0 pkt " #name); }
@
