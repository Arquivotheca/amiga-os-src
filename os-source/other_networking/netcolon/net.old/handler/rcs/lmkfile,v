head     1.15;
branch   ;
access   ;
symbols  v37r4:1.15 Distillery:1.13;
locks    ; strict;
comment  @# @;


1.15
date     91.04.08.16.21.49;  author dlarson;  state Rel;
branches ;
next     1.14;

1.14
date     91.04.08.16.20.09;  author dlarson;  state Rel;
branches ;
next     1.13;

1.13
date     91.01.15.03.04.55;  author J_Toebes;  state Exp;
branches ;
next     1.12;

1.12
date     91.01.15.03.00.32;  author Doug;  state Exp;
branches ;
next     1.11;

1.11
date     91.01.10.21.23.15;  author Doug;  state Exp;
branches ;
next     1.10;

1.10
date     90.12.31.15.30.31;  author Doug;  state Exp;
branches ;
next     1.9;

1.9
date     90.11.29.02.59.06;  author Doug;  state Exp;
branches ;
next     1.8;

1.8
date     90.11.29.01.49.33;  author Doug;  state Exp;
branches ;
next     1.7;

1.7
date     90.11.25.15.51.48;  author J_Toebes;  state Exp;
branches ;
next     1.6;

1.6
date     90.11.19.00.13.16;  author Doug;  state Exp;
branches ;
next     1.5;

1.5
date     90.11.18.23.58.12;  author Doug;  state Exp;
branches ;
next     1.4;

1.4
date     90.11.18.23.47.45;  author Doug;  state Exp;
branches ;
next     1.3;

1.3
date     90.11.01.23.34.01;  author J_Toebes;  state Exp;
branches ;
next     1.2;

1.2
date     90.10.16.00.53.02;  author J_Toebes;  state Exp;
branches ;
next     1.1;

1.1
date     90.10.02.23.39.07;  author J_Toebes;  state Exp;
branches ;
next     ;


desc
@makefile
@


1.15
log
@Updated to Network Revision Control Standards
@
text
@LIBS = lib:lcr.lib lib:amiga.lib /lib/net.lib /lib/memwatch.lib lib:debug.lib

NHSRCS	=   main.c dir.c io.c lock.c process.c volume.c device.c \
	          mount.c devio.c file.c unimp.c timer.c
NHOBJS   =   lib:c.o main.o dir.o io.o lock.o process.o volume.o device.o \
	          mount.o devio.o file.o unimp.o timer.o

network-handler:    $(NHOBJS)
    @@blink with <<
    FROM $(NHOBJS)
    SMALLCODE
    SMALLDATA
    VERBOSE
    BATCH
    NODEBUG
    TO $@@
    LIB $(LIBS)
    MAP network-handler.map HSFLX
<

.c.o:
   @@lc $(CFLAGS) $*

.a.o:
   @@asm $(AFLAGS) $*

main.o : main.c
dir.o : dir.c
io.o : io.c
lock.o : lock.c
process.o : process.c
volume.o : volume.c
device.o : device.c network-handler_rev.rev
mount.o : mount.c
devio.o : devio.c
file.o : file.c
unimp.o: unimp.c
timer.o: timer.c

bump:
	@@bumprev 37 network-handler_rev

release:
@


1.14
log
@Updated to Network Revision Control Standards
@
text
@d40 1
a40 1
version:
d42 2
@


1.13
log
@Added bumprev
@
text
@a0 1

a1 3

CFLAGS = 
AFLAGS = -iinclude:
@


1.12
log
@add timer.c
@
text
@d19 1
d37 1
a37 1
device.o : device.c
d43 3
@


1.11
log
@*** empty log message ***
@
text
@d8 1
a8 1
	          mount.c devio.c file.c unimp.c
d10 1
a10 1
	          mount.o devio.o file.o unimp.o
d41 1
@


1.10
log
@add unimp.c
@
text
@d2 1
a2 1
LIBS = lib:lcr.lib lib:amiga.lib /lib/net.lib /lib/memwatch.lib
@


1.9
log
@*** empty log message ***
@
text
@d2 1
a2 5
INET   = /driver/INet/
PARNET = /driver/ParNet/
DNET   = /driver/DNet/
TSSNET = /driver/TSSnet/
SANA   = /driver/SANA/
a3 3
INETLIBS = devel:tcpip/lib/net.lib /lib/net.lib lib:lc.lib lib:amiga.lib
LIBS = lib:lcr.lib lib:amiga.lib 

a6 2
HANDRCS = devel_rcs:net/handler

d8 1
a8 1
	          mount.c devio.c file.c
d10 1
a10 24
	          mount.o devio.o file.o 

#   must have separate copies of drivers (conditional assembly in drivers)
#   for ISSERVER or ISHANDLER

IPCSRCS  =   $(SANA)ioipc.c $(SANA)hanipc.c
IPCOBJS  =   $(SANA)ioipc.o $(SANA)hanipc.o

INETSRCS  =  $(INET)SDNInetUtil.c $(INET)SDNInetPut.c \
             $(INET)SDNInetGet.c $(INET)readn.c
INETOBJS  =  $(INET)SDNInetUtil.o $(INET)SDNInetPut.o \
             $(INET)SDNInetGet.o $(INET)readn.o

TSSSRCS  =  $(TSSNET)iotss.c $(TSSNET)hantss.c
TSSOBJS  =  $(TSSNET)hantss.o $(TSSNET)nodepick.o \
            $(TSSNET)alert.o $(TSSNET)listhandle.o

DNETSRCS = $(DNET)iodnet.c $(DNET)netdnet.c $(DNET)dnetlib.c
DNETOBJS = $(DNET)iodnet.o $(DNET)netdnet.o $(DNET)dnetlib.o

PNETSRCS = $(PARNET)iopnet.c $(PARNET)hanpnet.c
PNETOBJS = $(PARNET)iopnet.o $(PARNET)hanpnet.o

default:    network-handler
a11 5
netipc-handler:    $(NHOBJS) $(IPCOBJS)
    @@blink with <<
    $(NHOBJS) $(IPCOBJS) SC SD ND VERBOSE BATCH TO $@@ lib $(LIBS)
<

a21 16
    NODEBUG
<

nettss-handler:    $(NHOBJS) $(TSSOBJS)
    @@blink with <<
    $(NHOBJS) $(TSSOBJS) SC SD ND VERBOSE BATCH TO $@@ lib $(LIBS)
<

netdnet-handler:    $(NHOBJS) $(DNETOBJS)
    @@blink with <<
    $(NHOBJS) $(DNETOBJS) SC SD ND VERBOSE BATCH TO $@@ lib $(LIBS)
<

netpnet-handler:     $(NHOBJS) $(PNETOBJS)
    @@blink with <<
    $(NHOBJS) $(PNETOBJS) SC SD ND VERBOSE BATCH TO $@@ lib $(LIBS)
a26 6
$(SANA)ioipc.o: $(SANA)ioipc.c
   @@lc -idevel:sana/include/ -idevel:sana/src/devs/ipc $*

$(SANA)hanipc.o: $(SANA)hanipc.c
   @@lc -idevel:sana/include/ -idevel:sana/src/devs/ipc $*

d40 1
a40 8
$(INET)SDNInetUtil.o : $(INET)SDNInetUtil.c
   @@lc -idevel:tcpip/include $*
$(INET)SDNInetPut.o : $(INET)SDNInetPut.c
   @@lc -idevel:tcpip/include $*
$(INET)SDNInetGet.o : $(INET)SDNInetGet.c
   @@lc -idevel:tcpip/include $*
$(INET)readn.o : $(INET)readn.c
   @@lc -idevel:tcpip/include $*
@


1.8
log
@Change name to network-handler;  don't define _SysBase
@
text
@d9 1
a9 1
LIBS = /lib/net.lib lib:lc.lib lib:amiga.lib 
a55 1
    DEFINE __main = __tinymain
d58 2
@


1.7
log
@New cut that (almost) works
@
text
@d9 1
a9 1
LIBS = /lib/net.lib lib:lc.lib lib:amiga.lib define _SysBase=4
d42 1
a42 1
default:    netinet-handler handler.h
d49 1
a49 1
netinet-handler:    $(NHOBJS)
d58 1
a58 1
    LIB $(INETLIBS)
@


1.6
log
@add dependency on handler.h
@
text
@d19 2
a20 1
	          mount.o devio.o file.o
d49 1
a49 1
netinet-handler:    $(NHOBJS) $(INETOBJS)
a51 1
         $(INETOBJS)
@


1.5
log
@Move checkout code to refresh.lmk
@
text
@d41 1
a41 1
default:    netinet-handler
@


1.4
log
@add dependencies on RCS files
@
text
@d14 2
a105 32

main.c: devel_rcs:net/handler/main.c,v
   co -f -q -u $@@
 
dir.c: devel_rcs:net/handler/dir.c,v
   co -f -q -u $@@
 
io.c: devel_rcs:net/handler/io.c,v
   co -f -q -u $@@
 
lock.c: devel_rcs:net/handler/lock.c,v
   co -f -q -u $@@
 
process.c: devel_rcs:net/handler/process.c,v
   co -f -q -u $@@
 
volume.c: devel_rcs:net/handler/volume.c,v
   co -f -q -u $@@
 
device.c: devel_rcs:net/handler/device.c,v
   co -f -q -u $@@
 
mount.c: devel_rcs:net/handler/mount.c,v
   co -f -q -u $@@
 
devio.c: devel_rcs:net/handler/devio.c,v
   co -f -q -u $@@
 
file.c: devel_rcs:net/handler/file.c,v
   co -f -q -u $@@
 

@


1.3
log
@move to SDN names
@
text
@d104 32
@


1.2
log
@Change netinet-handler to be a process
@
text
@d24 4
a27 2
INETSRCS  =  $(INET)haninet.c
INETOBJS  =  $(INET)haninet.o
d96 7
a102 1
$(INET)haninet.o : $(INET)haninet.c
@


1.1
log
@Initial revision
@
text
@d1 8
d16 1
a16 1
NHOBJS   =   main.o dir.o io.o lock.o process.o volume.o device.o \
d21 2
a22 2
IPCSRCS  =   /driver/ioipc.c hanipc.c
IPCOBJS  =   /driver/ioipc.o hanipc.o
d24 12
a35 8
TSSSRCS  =  /driver/iotss.c nettss.c
TSSOBJS  =  nettss.o nodepick.o alert.o listhandle.o

DNETSRCS = /driver/iodnet.c /driver/netdnet.c /driver/dnetlib.c
DNETOBJS = iodnet.o netdnet.o dnetlib.c

PNETSRCS = /driver/iopnet.c hanpnet.c
PNETOBJS = /driver/iopnet.o hanpnet.o
d37 1
a37 1
default:    netpnet-handler netipc-handler
d44 13
d75 2
a76 2
/driver/ioipc.o: /driver/ioipc.c
   @@lc $(CFLAGS) -iwork:sana/include/ -iwork:sana/src/devs/ipc $*
d78 2
a79 2
hanipc.o: hanipc.c
   @@lc $(CFLAGS) -iwork:sana/include/ -iwork:sana/src/devs/ipc $*
a80 3
.c.o:
   @@lc $(CFLAGS) $*

d83 13
@
