head     1.11;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.11
date     93.09.03.17.40.29;  author kcd;  state Exp;
branches ;
next     1.10;

1.10
date     93.03.02.16.23.45;  author gregm;  state Exp;
branches ;
next     1.9;

1.9
date     92.05.19.14.39.48;  author gregm;  state Exp;
branches ;
next     1.8;

1.8
date     92.05.05.17.33.09;  author kcd;  state Exp;
branches ;
next     1.7;

1.7
date     92.04.10.00.40.02;  author kcd;  state Exp;
branches ;
next     1.6;

1.6
date     92.03.24.17.59.57;  author gregm;  state Exp;
branches ;
next     1.5;

1.5
date     92.03.23.10.24.00;  author gregm;  state Exp;
branches ;
next     1.4;

1.4
date     92.03.05.17.51.09;  author gregm;  state Exp;
branches ;
next     1.3;

1.3
date     92.03.05.17.50.09;  author gregm;  state Exp;
branches ;
next     1.2;

1.2
date     92.02.27.20.59.44;  author kcd;  state Exp;
branches ;
next     1.1;

1.1
date     92.02.13.09.54.57;  author gregm;  state Exp;
branches ;
next     ;


desc
@Connection between the "nstat" statistics program and the nipc library.
@


1.11
log
@Added Memory Pool locking/unlocking calls.
@
text
@/**************************************************************************
**
** statistics.c - NIPC Statistics functions
**
** Copyright 1992, Commodore-Amiga, Inc.
**
** $Id: statistics.c,v 1.10 93/03/02 16:23:45 gregm Exp Locker: kcd $
**
***************************************************************************

/*------------------------------------------------------------------------*/

#include <exec/types.h>
#include "nipcinternal.h"
#include "externs.h"

#include <clib/exec_protos.h>
#include "nipcinternal_protos.h"

#include <pragmas/exec_pragmas.h>

/*------------------------------------------------------------------------*/

void __asm StartStats(register __a0 struct stats * statptr)
{
    register struct NBase *nb = gb;
    statptr->DevList = (struct MinList *) &gb->DeviceList;
    statptr->EntList = &gb->ANMPEntityList;
    statptr->ConnList = &gb->RDPConnectionList;
    statptr->ProList = &gb->ProtocolList;
    statptr->RouteTable = &gb->RouteInfo;

    ObtainSemaphore(&nb->RDPCLSemaphore);
    ObtainSemaphore(&nb->ANMPELSemaphore);
}

/*------------------------------------------------------------------------*/

void __asm EndStats()
{
    register struct NBase *nb = gb;
    ReleaseSemaphore(&nb->ANMPELSemaphore);
    ReleaseSemaphore(&nb->RDPCLSemaphore);
}
/*------------------------------------------------------------------------*/

struct PrivatePool
{
    struct MinList	PP_List;
    ULONG		PP_Flags;
    ULONG		PP_Size;
    ULONG		PP_Thresh;
    struct MinList	PP_Track;
};

struct PrivatePool * __stdargs LockPool(void)
{
    register struct NBase *nb = gb;
    ObtainSemaphore(&nb->PoolLock);
    return((struct PrivatePool *)nb->MemoryPool);
}

VOID __stdargs UnlockPool(void)
{
    register struct NBase *nb = gb;
    ReleaseSemaphore(&nb->PoolLock);
}

@


1.10
log
@Added routing pointer to the table of statistics.
@
text
@d7 1
a7 1
** $Id: statistics.c,v 1.9 92/05/19 14:39:48 gregm Exp Locker: gregm $
d46 23
@


1.9
log
@Fixed the HLSemaphore crap; the semaphore is no longer being used, or initialized - so
StartStats shouldn't have been trying to obtain/release it.
@
text
@d7 1
a7 1
** $Id: statistics.c,v 1.8 92/05/05 17:33:09 kcd Exp Locker: gregm $
d31 1
@


1.8
log
@Minor changes.
@
text
@d7 1
a7 1
** $Id: statistics.c,v 1.7 92/04/10 00:40:02 kcd Exp Locker: kcd $
a31 1
    ObtainSemaphore(&nb->HLSemaphore);
a42 1
    ReleaseSemaphore(&nb->HLSemaphore);
@


1.7
log
@Removed Dependencies on old exec_pragmas.h file.
@
text
@d7 1
a7 1
** $Id: statistics.c,v 1.6 92/03/24 17:59:57 gregm Exp Locker: kcd $
d13 1
d15 1
a20 1
#include "externs.h"
d26 1
a26 1
	register struct NBase *nb = gb;
d41 1
a41 1
	register struct NBase *nb = gb;
@


1.6
log
@Fixed that godawful SAS Warning that had been annoying me almost forever.
@
text
@d7 1
a7 1
** $Id: statistics.c,v 1.5 92/03/23 10:24:00 gregm Exp $
d25 1
d31 3
a33 3
    ObtainSemaphore(&gb->HLSemaphore);
    ObtainSemaphore(&gb->RDPCLSemaphore);
    ObtainSemaphore(&gb->ANMPELSemaphore);
d40 4
a43 3
    ReleaseSemaphore(&gb->ANMPELSemaphore);
    ReleaseSemaphore(&gb->RDPCLSemaphore);
    ReleaseSemaphore(&gb->HLSemaphore);
@


1.5
log
@The_voodoo_stuff_is_GONE!
@
text
@d7 1
a7 1
** $Id: statistics.c,v 1.4 92/03/05 17:51:09 gregm Exp $
d25 1
a25 1
    statptr->DevList = &gb->DeviceList;
@


1.4
log
@make
geeeeeze.  I checked it in w/o making sure "extern.h" was included.
Fixed.
@
text
@d7 1
a7 1
** $Id: statistics.c,v 1.3 92/03/05 17:50:09 gregm Exp Locker: gregm $
d23 1
a23 1
void __saveds __asm StartStats(register __a0 struct stats * statptr)
d25 4
a28 4
    statptr->DevList = &DeviceList;
    statptr->EntList = &ANMPEntityList;
    statptr->ConnList = &RDPConnectionList;
    statptr->ProList = &ProtocolList;
d30 3
a32 3
    ObtainSemaphore(&HLSemaphore);
    ObtainSemaphore(&RDPCLSemaphore);
    ObtainSemaphore(&ANMPELSemaphore);
d37 1
a37 1
void __saveds __asm EndStats()
d39 3
a41 3
    ReleaseSemaphore(&ANMPELSemaphore);
    ReleaseSemaphore(&RDPCLSemaphore);
    ReleaseSemaphore(&HLSemaphore);
@


1.3
log
@small changes
@
text
@d7 1
a7 1
** $Id: statistics.c,v 1.2 92/02/27 20:59:44 kcd Exp Locker: gregm $
d19 1
@


1.2
log
@New formatting. Now uses new internal include files.
@
text
@d7 1
a7 1
** $Id$
a18 13

/*------------------------------------------------------------------------*/

/* Externals */
extern struct MinList ProtocolList;
extern struct MinList DeviceList;
extern struct MinList RDPConnectionList;
extern struct MinList ANMPEntityList;
extern struct MinList HostList;

extern struct SignalSemaphore RDPCLSemaphore;
extern struct SignalSemaphore ANMPELSemaphore;
extern struct SignalSemaphore HLSemaphore;
@


1.1
log
@Initial revision
@
text
@d1 18
d20 1
d22 1
a22 9
/* $Header$
 */

#include <exec/types.h>
#include <exec/lists.h>
#include <exec/semaphores.h>
#include <proto/exec.h>
#include "statistics.h"

d33 1
d35 1
a35 1
void __saveds __asm StartStats(register __a0 struct stats *statptr)
d37 4
a40 4
 statptr->DevList = &DeviceList;
 statptr->EntList = &ANMPEntityList;
 statptr->ConnList =&RDPConnectionList;
 statptr->ProList = &ProtocolList;
d42 3
a44 3
 ObtainSemaphore(&HLSemaphore);
 ObtainSemaphore(&RDPCLSemaphore);
 ObtainSemaphore(&ANMPELSemaphore);
d47 2
d51 3
a53 3
 ReleaseSemaphore(&ANMPELSemaphore);
 ReleaseSemaphore(&RDPCLSemaphore);
 ReleaseSemaphore(&HLSemaphore);
d55 1
a55 2


@
