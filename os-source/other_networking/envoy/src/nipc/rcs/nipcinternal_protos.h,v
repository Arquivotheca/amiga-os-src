head     1.35;
branch   ;
access   ;
symbols  ;
locks    kcd:1.35; strict;
comment  @ * @;


1.35
date     93.09.03.17.45.43;  author kcd;  state Exp;
branches ;
next     1.34;

1.34
date     93.07.30.18.46.38;  author gregm;  state Exp;
branches ;
next     1.33;

1.33
date     93.04.05.11.18.09;  author gregm;  state Exp;
branches ;
next     1.32;

1.32
date     93.03.04.13.36.51;  author gregm;  state Exp;
branches ;
next     1.31;

1.31
date     93.03.02.16.22.27;  author gregm;  state Exp;
branches ;
next     1.30;

1.30
date     92.12.16.14.46.38;  author kcd;  state Exp;
branches ;
next     1.29;

1.29
date     92.11.02.14.10.49;  author kcd;  state Exp;
branches ;
next     1.28;

1.28
date     92.08.19.16.14.02;  author kcd;  state Exp;
branches ;
next     1.27;

1.27
date     92.08.11.11.18.32;  author kcd;  state Exp;
branches ;
next     1.26;

1.26
date     92.07.30.15.59.45;  author kcd;  state Exp;
branches ;
next     1.25;

1.25
date     92.06.25.16.44.52;  author kcd;  state Exp;
branches ;
next     1.24;

1.24
date     92.06.17.16.04.06;  author kcd;  state Exp;
branches ;
next     1.23;

1.23
date     92.06.11.13.00.38;  author gregm;  state Exp;
branches ;
next     1.22;

1.22
date     92.06.08.10.11.02;  author kcd;  state Exp;
branches ;
next     1.21;

1.21
date     92.05.22.15.39.35;  author gregm;  state Exp;
branches ;
next     1.20;

1.20
date     92.05.15.14.06.18;  author gregm;  state Exp;
branches ;
next     1.19;

1.19
date     92.05.05.17.36.49;  author kcd;  state Exp;
branches ;
next     1.18;

1.18
date     92.05.04.11.06.45;  author kcd;  state Exp;
branches ;
next     1.17;

1.17
date     92.04.22.11.41.41;  author gregm;  state Exp;
branches ;
next     1.16;

1.16
date     92.04.22.11.33.37;  author kcd;  state Exp;
branches ;
next     1.15;

1.15
date     92.04.14.17.08.40;  author gregm;  state Exp;
branches ;
next     1.14;

1.14
date     92.04.07.01.45.11;  author kcd;  state Exp;
branches ;
next     1.13;

1.13
date     92.04.05.15.52.07;  author kcd;  state Exp;
branches ;
next     1.12;

1.12
date     92.03.27.10.35.11;  author gregm;  state Exp;
branches ;
next     1.11;

1.11
date     92.03.23.10.26.52;  author gregm;  state Exp;
branches ;
next     1.10;

1.10
date     92.03.14.14.26.41;  author gregm;  state Exp;
branches ;
next     1.9;

1.9
date     92.03.10.11.07.59;  author gregm;  state Exp;
branches ;
next     1.8;

1.8
date     92.03.06.19.11.28;  author kcd;  state Exp;
branches ;
next     1.7;

1.7
date     92.03.03.19.54.11;  author kcd;  state Exp;
branches ;
next     1.6;

1.6
date     92.03.03.19.33.08;  author gregm;  state Exp;
branches ;
next     1.5;

1.5
date     92.03.03.14.53.42;  author kcd;  state Exp;
branches ;
next     1.4;

1.4
date     92.02.29.20.38.00;  author kcd;  state Exp;
branches ;
next     1.3;

1.3
date     92.02.27.21.08.23;  author kcd;  state Exp;
branches ;
next     1.2;

1.2
date     92.02.26.22.29.43;  author kcd;  state Exp;
branches ;
next     1.1;

1.1
date     92.02.26.21.37.27;  author kcd;  state Exp;
branches ;
next     ;


desc
@Prototypes for all internal nipc.library functions.
@


1.35
log
@Added NIPCBuff routines.
@
text
@#ifndef NIPC_INTPROTOS_H
#define NIPC_INTPROTOS_H
/*
**      $Id: nipcinternal_protos.h,v 1.34 93/07/30 18:46:38 gregm Exp Locker: kcd $
**
**      Prototypes for all nipc.library internal functions.
**
**      (C) Copyright 1992 Commodore-Amiga, Inc.
**          All Rights Reserved
*/

/*------------------------------------------------------------------------*/

#ifndef NIPC_NIPCINTERNAL_H
#include "nipcinternal.h"
#endif

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in amp.c */

extern BOOL InitANMP(VOID);
extern VOID DeinitANMP(VOID);
extern BOOL __asm BeginTransaction(register __a0 struct Entity * dest_entity, register __a1 struct Entity * src_entity, register __a2 struct Transaction * trans);
extern BOOL __asm DoTransaction(register __a0 struct Entity * dest_entity, register __a1 struct Entity * src_entity, register __a2 struct Transaction * trans);
extern VOID __asm AbortTransaction(register __a1 struct Transaction * trans);
extern APTR __asm CreateEntityA(register __a0 struct TagItem * taglist);
extern VOID __asm DeleteEntity(register __a0 APTR entin);
extern VOID __asm WaitEntity(register __a0 APTR entin);
extern APTR __asm FindEntity(register __a0 UBYTE * hostname, register __a1 UBYTE * portname, register __a2 APTR src_entity, register __a3 ULONG * detailerror);
extern BOOL ask_input(struct RDPConnection *c, struct Buffer *b);
extern BOOL ask_status(struct RDPConnection *c);
extern VOID __asm LoseEntity(register __a0 APTR entin);
extern struct Transaction * __asm AllocTransactionA(register __a0 struct TagItem * taglist);
extern VOID __asm FreeTransaction(register __a1 struct Transaction * oldtrans);
extern struct Transaction * __asm GetTransaction(register __a0 APTR from_entity);
extern VOID __asm ReplyTransaction(register __a1 struct Transaction * trans);
extern VOID __asm WaitTransaction(register __a1 struct Transaction * trans);
extern BOOL __asm CheckTransaction(register __a1 struct Transaction * trans);
extern ULONG __asm PingEntity(register __a0 struct Entity *re, register __d0 ULONG limit);
extern VOID __asm SetEntityAttrsA(register __a0 struct Entity *e, register __a1 struct TagItem *);
extern ULONG __asm GetEntityAttrsA(register __a0 struct Entity *e, register __a1 struct TagItem *);
extern BOOL ResolverIn(struct RDPConnection *c, struct Buffer *buff);
extern BOOL ResolverStatus(struct RDPConnection *c);
extern BOOL AddSigBit(struct RDPConnection *c);
extern VOID DelSigBit(struct RDPConnection *c);
extern VOID Sleep(struct RDPConnection *c);
extern VOID Wake(struct RDPConnection *c);
extern VOID WaitConnect(struct RDPConnection *c);
extern VOID EntityInput(struct RDPConnection *c, struct Buffer *buff);
extern VOID REntityInput(struct RDPConnection *c, struct Buffer *buff);
extern BOOL EntityStatus(struct RDPConnection *c);
extern BOOL REntityStatus(struct RDPConnection *c);
extern BOOL __asm GetEntityName(register __a0 APTR entity, register __a1 UBYTE * newstr, register __d0 ULONG spacefree);
extern VOID DelayedDelete(struct Entity *e);
extern BOOL __asm GetHostName(register __a0 struct Entity *ent, register __a1 UBYTE *str, register __d0 ULONG availsize);
extern VOID ANMPTimeout(VOID);
extern struct Node *FindNameI(struct List *searchlist, STRPTR target);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in udp.c */

extern BOOL UDP_Init(VOID);
extern VOID UDP_Deinit(VOID);
extern VOID UDP_Timeout(VOID);
extern VOID UDP_Input(struct Buffer *buff, ULONG length, struct sanadev *dev);
extern BOOL  __asm UDP_Output(register __a0 UBYTE *dataptr,register __d0 UWORD length, register __d1 ULONG srcip, register __d2 ULONG destip,register __d3 UWORD srcport, register __d4 UWORD destport);
extern struct UDPConnection *__asm OpenUDPPort(register __d0 UWORD localport,register __a0 UDP_DATA DataIn);
extern VOID  __asm CloseUDPPort(register __a0 struct UDPConnection *conn);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in route.c */

extern ULONG NetNum(ULONG ipa);
extern BOOL IsBroadcast(ULONG dest);
extern BOOL IsLocalDevice(ULONG dest);
extern struct sanadev *LocalNet(ULONG DestIP);
extern BOOL NetMatch(ULONG dst, ULONG net, ULONG mask, BOOL islocal);
extern ULONG NetMask(ULONG net);
extern ULONG RtHash(ULONG net);
extern struct NIPCRoute *Route(ULONG dest, BOOL local);
extern BOOL InitRoute(VOID);
extern VOID DeinitRoute(VOID);
extern BOOL  __asm AddRoute(register __d0 ULONG network, register __d1 ULONG gateway, register __d2 UWORD hops, register __d3 WORD ttl);
extern VOID  __asm DeleteRoute(register __d0 ULONG network);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in center_custom.c */

extern VOID __asm InitLock(register __a6 struct Library * libbase);
extern VOID __asm StartLibrary(register __a6 struct Library * libbase);
extern VOID __asm __stdargs LibraryProcess(VOID);
extern VOID ProtocolInput(struct Buffer *inpbuff, ULONG length, UWORD ptype, struct sanadev *dev);
extern VOID HeartBeat(VOID);
extern VOID KillOffNIPC(VOID);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in arp.c */

extern BOOL InitARP(VOID);
extern VOID DeinitARP(VOID);
extern VOID SendARPRequest(struct sanadev *dev, ULONG ip_addr);
extern VOID SendARPReply(struct sanadev *dev, ULONG ip_to, UBYTE *ether_to, ULONG ip_us, UBYTE *ether_us);
extern VOID ARPInput(struct Buffer *arpbuff, ULONG length, struct sanadev *dev);
extern VOID AddARPEntry(ULONG ip, UBYTE *ether);
extern BOOL FindArpEntry(struct sanadev *dev, ULONG IP, UBYTE *etherbuff);
extern VOID DoARPSends(ULONG ipnum);
extern VOID AddBuffList(struct Buffer *b, ULONG address, struct sanadev *dev, ULONG gateway, UWORD ptype);
extern VOID arp_timeout(VOID);

/*-------------------------------------------------- ----------------------*/

/* Prototypes for functions defined in ip_in.c */

extern VOID ip_in(struct Buffer *ibuff, struct sanadev *dev);
extern VOID FragTimeoutDev(struct sanadev *dev);
extern VOID FragmentTimeout(VOID);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in ip_out.c */

extern VOID ip_out(struct Buffer *obuff, ULONG srcip, ULONG destip, UBYTE protocol, struct sanadev *iface, ULONG gateway, ULONG frags, BOOL morefrags, UWORD inident, UBYTE ttl, BOOL dbc, BOOL fraglast);
extern VOID ip_sendsrc(struct Buffer *obuff, ULONG srcip, ULONG destip, UBYTE protocol);
extern VOID multiplex_in(struct Buffer *ibuff, struct sanadev *dev);
extern VOID multiplex(struct Buffer *obuff, ULONG headerlength, struct sanadev *dev, ULONG srcip, ULONG destip, UBYTE protocol, ULONG frags, BOOL morefrags, UWORD inident, UBYTE ttl, BOOL fraglast);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in s2io.c */

extern char nibvert(char ichar);
extern ULONG ip_to_num(UBYTE *instr);
extern BOOL InitSana2(VOID);
extern VOID DeinitSana2(VOID);
extern VOID CheckCmdPort(VOID);
extern VOID CheckDataPort(VOID);
/* extern BOOL SwitchPacket(struct IOSana2ReqSS *ioreq); */
extern VOID PacketWrite(struct sanadev *dev, ULONG gateway, struct Buffer *buffer, ULONG destination, UWORD packettype, BOOL brc, BOOL ether);
extern VOID PacketBroadcast(struct sanadev *dev, struct Buffer *buffer, UWORD packettype);
extern VOID PollPort(VOID);
extern VOID QueueRead(struct sanadev *dev, UWORD pt);
/* extern VOID ProcessReq(struct IOSana2ReqSS *ioreq); */
extern BOOL __stdargs CTB(UBYTE *from, ULONG n, struct Buffer *to);
extern BOOL __stdargs CFB(UBYTE *to, ULONG n, struct Buffer *from);
extern VOID CheckForInet(VOID);
extern VOID NotifyInet(VOID);
extern VOID DevReqTimeout(VOID);
extern struct IORequest *ECreateIORequest(struct MsgPort *rp,ULONG size);
extern VOID EDeleteIORequest(struct IORequest *i);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in rdp.c */

extern BOOL rdp_init(VOID);
extern VOID rdp_deinit(VOID);
extern VOID rdp_timeout(VOID);
extern VOID rdp_input(struct Buffer *buff, ULONG length, struct sanadev *dev);
extern BOOL StateMachine(struct RDPConnection *rc, UBYTE flags, struct rdphdr *packet, ULONG destip, ULONG srcip);
extern VOID SendFlags(struct RDPConnection *c, UBYTE flags);
extern VOID PacketInput(struct RDPConnection *c, struct Buffer *b);
extern UWORD FindSequential(struct RDPConnection *c);
extern struct RDPConnection *OpenActive(ULONG address, ULONG port, RDP_DATA DataIn, RDP_STATUS Status);
extern struct RDPConnection *OpenPassive(ULONG reqport, RDP_DATA DataIn, RDP_STATUS Status);
extern BOOL rdp_output(struct RDPConnection *conn, UBYTE *dataptr, ULONG length);
extern VOID CloseConnection(struct RDPConnection *c);
extern VOID rdp_ack_timeout(VOID);

/*-- For the 64/32 math routine in math.asm ------------------------------*/
extern ULONG __asm Div64by32(register __d0 ULONG msb, register __d1 ULONG lsb, register __d2 ULONG divisor);


/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in icmp.c */

extern BOOL init_icmp(VOID);
extern VOID icmp_timeout(VOID);
extern VOID icmp_deinit(VOID);
extern VOID icmp_input(struct Buffer *buff, ULONG length, struct sanadev *dev);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in memory.c */

extern BOOL InitMemory(void);
extern void DeinitMemory(void);
extern struct BuffEntry *AllocBuffEntry(UWORD size);
extern VOID FreeBuffEntry(struct BuffEntry *buffe);
extern struct Buffer *AllocBuffer(UWORD i_size);
extern VOID __asm FreeBuffer(register __a0 struct Buffer *buff);
extern UBYTE *BuffPointer(struct Buffer *buff, ULONG offset, struct BuffEntry **buffe);
extern BOOL CopyToBuffer(struct Buffer *targetbuff, UBYTE *source, ULONG length);
extern VOID __asm CopyFromBuffer(register __a1 UBYTE *target, register __a0 struct Buffer *sourcebuff,register __d0 ULONG length);
extern ULONG __asm DataLength(register __a0 struct Buffer *buffer);
extern UWORD CalcChecksumBuffer(struct Buffer *buffer);
extern BOOL CopyBuffer(struct Buffer *ibuff, ULONG offset, ULONG length, struct Buffer *obuff);
extern struct Buffer *MergeBuffer(struct Buffer *buff1, struct Buffer *buff2);
extern struct Buffer *CloneBuffer(struct Buffer *ibuff);
extern ULONG CountEntries(struct Buffer *buffer);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in resolver.c */

extern BOOL InitResolver(VOID);
extern VOID DeinitResolver(VOID);
extern VOID DoResolver(VOID);
extern ULONG ResolveName(UBYTE *hostname);
extern VOID ResolverInput(struct UDPConnection *conn, struct Buffer *buff,struct sanadev *dev);
extern VOID ResolverTimeout(VOID);
extern struct MsgPort * __asm DNSInit(register __d0 ULONG ServerIP);
extern void __asm DNSDeinit(void);
extern void __asm DNSTimer(void);
extern void __asm DoDNS(void);
void ClearNames(struct NameInfo *ni);
ULONG __asm RNHookFunc(register __a0 struct Hook *hook,
                      register __a2 struct Task *task,
                      register __a1 struct TagItem *tagList);
BOOL __asm NIPCInquiryA(register __a0 struct Hook *hook,
                     register __d0 ULONG maxTime,
                     register __d1 ULONG maxResponses,
                     register __a1 struct TagItem *tagList);
void QueueNameResponse(APTR buff, ULONG length, ULONG dest);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in timer.c */

extern BOOL InitTimer(VOID);
extern VOID TimeOut(VOID);
extern VOID DeinitTimer(VOID);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in libinit.c */

extern ULONG __saveds __asm __stdargs _LibInit(register __a0 APTR seglist, register __d0 struct MyLibrary * libbase);
extern LONG  __saveds __asm __stdargs _LibOpen(register __a6 struct MyLibrary * libbase);
extern ULONG __saveds __asm __stdargs _LibClose(register __a6 struct MyLibrary * libbase);
extern ULONG __saveds __asm __stdargs _LibExpunge(register __a6 struct MyLibrary * libbase);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in monitor.c */

extern struct NIPCMonitorInfo * __asm StartMonitor(VOID);
extern VOID __asm StopMonitor(VOID);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in iff.c */

extern BOOL OpenConfig(VOID);
extern BPTR PrefOpen(VOID);
extern void CloseConfig(VOID);

/*------------------------------------------------------------------------*/

/* Prototypes for functions defined in statistics.c */

extern VOID __asm StartStats(register __a0 struct stats * statptr);
extern VOID __asm EndStats(VOID);

/*------------------------------------------------------------------------*/

/* Assembly Prototypes */

extern UWORD __stdargs CalcChecksum(UBYTE *r,ULONG bytes, UWORD previous);
extern VOID NewList(struct List *list );
extern UWORD __asm makefastrand(register __d0 UWORD seed);

/*------------------------------------------------------------------------*/

/* Debug.lib Prototypes */

extern VOID __stdargs kprintf(UBYTE *fmt, ...);

/*------------------------------------------------------------------------*/

/* nipcproc.asm Prototypes */

extern ULONG __asm DivSASSucks(register __d0 ULONG a, register __d1 UWORD b);

/*------------------------------------------------------------------------*/

/* pools.asm Prototypes */

extern APTR __asm ECreatePool(register __d0 unsigned long requirements, register __d1 unsigned long puddleSize,
        register __d2 unsigned long threshSize );
extern void __asm EDeletePool( register __a0 APTR poolHeader );
extern APTR __asm EAllocPooled( register __a0 APTR poolHeader, register __d0 unsigned long memSize );
extern void __asm EFreePooled( register __a0 APTR poolHeader, register __a1 APTR memory, register __d0 unsigned long memSize );

/*------------------------------------------------------------------------*/

/* nipcbuff.c Prototypes */

extern VOID __asm FreeNIPCBuffEntry(register __a0 struct NIPCBuffEntry *entry);
extern VOID __asm FreeNIPCBuff(register __a0 struct NIPCBuff *buff);
extern __stdargs struct NIPCBuffEntry *AllocNIPCBuffEntry(VOID);
extern struct NIPCBuff * __asm AllocNIPCBuff(register __d0 ULONG entries);
extern ULONG __asm CopyNIPCBuff(register __a0 struct NIPCBuff *srcbuff,
			 register __a1 struct NIPCBuff *dstbuff,
			 register __d0 ULONG srcoffset,
			 register __d1 ULONG dstoffset,
			 register __d2 ULONG length);
extern ULONG __asm CopyToNIPCBuff(register __a0 UBYTE *src,
			   register __a1 struct NIPCBuff *dstbuff,
			   register __d0 ULONG dstoffset,
			   register __d1 ULONG length);
extern ULONG __asm CopyFromNIPCBuff(register __a0 struct NIPCBuff *srcbuff,
			     register __a1 UBYTE *dst,
			     register __d0 ULONG srcoffset,
			     register __d1 ULONG length);
extern ULONG __asm NIPCBuffLength(register __a0 struct NIPCBuff *buffer);
extern UBYTE * __asm NIPCBuffPointer(register __a0 struct NIPCBuff *buff,
			      register __d0 ULONG offset,
			      register __a1 struct NIPCBuffEntry **entry);
extern struct NIPCBuff * __asm AppendNIPCBuff(register __a0 struct NIPCBuff *first,
			               register __a1 struct NIPCBuff *second);


#endif  /* NIPC_INTPROTOS_H */
@


1.34
log
@Minor updates.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.33 93/04/05 11:18:09 gregm Exp Locker: gregm $
d301 26
@


1.33
log
@added protos for pool.asm funcs,
added protos for memory.c's new init/deinit memory funcs,
added protos for s2io.c's new 'create/delete' iorequest functions.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.32 93/03/04 13:36:51 gregm Exp Locker: gregm $
d143 1
a143 1
extern VOID PacketWrite(struct sanadev *dev, ULONG gateway, struct Buffer *buffer, ULONG destination, UWORD packettype, BOOL brc);
@


1.32
log
@Added some protos for PingEntity() (wow .. wasn't in there ..)
Get/SetEntityAttr()
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.31 93/03/02 16:22:27 gregm Exp Locker: gregm $
d153 2
d191 2
d289 12
@


1.31
log
@addded a proto for DivSASSucks()
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.30 92/12/16 14:46:38 kcd Exp Locker: gregm $
d40 3
@


1.30
log
@Removed prototype declarations for static functions in s2io.c
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.29 92/11/02 14:10:49 kcd Exp Locker: kcd $
d276 7
@


1.29
log
@Added two new functiosn, QueueNameResponse() and makefastrand().
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.28 92/08/19 16:14:02 kcd Exp Locker: kcd $
d139 1
a139 1
extern BOOL SwitchPacket(struct IOSana2ReqSS *ioreq);
d144 1
a144 1
extern VOID ProcessReq(struct IOSana2ReqSS *ioreq);
@


1.28
log
@Changed the prototype for NewList().
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.27 92/08/11 11:18:32 kcd Exp Locker: kcd $
d222 1
d269 1
@


1.27
log
@Changed the prototype for the resolver callback routine.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.26 92/07/30 15:59:45 kcd Exp Locker: kcd $
d267 1
a267 1
extern VOID __asm NewList(register __a0 struct List *list );
@


1.26
log
@Added the rdp_ack_timeout() routine.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.25 92/06/25 16:44:52 kcd Exp Locker: kcd $
d215 3
a217 3
void __asm RNHookFunc(register __a0 struct Hook *hook,
                      register __a2 struct TagItem *tagList,
                      register __a1 struct Task *task);
@


1.25
log
@Picked up the changes to the name resolution code.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.24 92/06/17 16:04:06 kcd Exp Locker: kcd $
d167 1
@


1.24
log
@Fixed AbortTransaction() prototype.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.23 92/06/11 13:00:38 gregm Exp Locker: kcd $
d215 5
a219 5
                      register __a2 struct NameHeader *nh,
                      register __a1 void *nada);
void __asm NetQueryA(register __a0 struct Hook *hook,
                     register __d0 ULONG queryClass,
                     register __d1 ULONG maxTime,
@


1.23
log
@Added a prototype for the math.asm 64bit/32bit divide routine.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.22 92/06/08 10:11:02 kcd Exp Locker: gregm $
d26 1
a26 1
extern VOID __asm AbortTransaction(register __a0 struct Transaction * trans);
@


1.22
log
@Changed PacketWrite() prototype
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.21 92/05/22 15:39:35 gregm Exp Locker: kcd $
d55 1
a56 2


d167 4
@


1.21
log
@Made the Status routines for RDP connections return BOOLS, indicating whether
they closed the connection or not.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.20 92/05/15 14:06:18 gregm Exp $
d141 1
a141 1
extern VOID PacketWrite(struct sanadev *dev, ULONG gateway, struct Buffer *buffer, ULONG destination, UWORD packettype);
@


1.20
log
@Added the source ip field to the StateMachine() prototype.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.19 92/05/05 17:36:49 kcd Exp Locker: gregm $
d49 2
a50 2
extern VOID EntityStatus(struct RDPConnection *c);
extern VOID REntityStatus(struct RDPConnection *c);
@


1.19
log
@Added DevReqTimeout() prototype.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.18 92/05/04 11:06:45 kcd Exp Locker: kcd $
d160 1
a160 1
extern BOOL StateMachine(struct RDPConnection *rc, UBYTE flags, struct rdphdr *packet, ULONG destip);
@


1.18
log
@Removed host nameing calls from amp section.  Added IFF section.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.17 92/04/22 11:41:41 gregm Exp Locker: kcd $
d62 1
a62 1
extern VOID UDP_Init(VOID);
d102 1
a102 1
extern VOID InitARP(VOID);
d150 1
d156 1
a156 1
extern VOID rdp_init(VOID);
d173 1
a173 1
extern VOID init_icmp(VOID);
d200 1
a200 1
extern VOID InitResolver(VOID);
d247 2
a248 1
extern void OpenConfig(VOID);
@


1.17
log
@make
Ha!  I need to stop typing 'make' ahead of time.
I just changed StateMachine() back to a BOOL.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.16 92/04/22 11:33:37 kcd Exp Locker: gregm $
a39 3
extern ULONG lookuphost(UBYTE *site);
extern VOID read_hosts(VOID);
extern VOID freehosts(VOID);
d84 1
a84 1
extern BOOL  __asm AddRoute(register __d0 ULONG network, register __d1 ULONG mask, register __d2 ULONG gateway, register __d3 UWORD hops, register __d4 UWORD ttl);
d241 7
@


1.16
log
@Updated for new low-level packet routing.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.15 92/04/14 17:08:40 gregm Exp Locker: kcd $
d162 1
a162 1
extern VOID StateMachine(struct RDPConnection *rc, UBYTE flags, struct rdphdr *packet, ULONG destip);
@


1.15
log
@Changed rdp's StateMachine() from a void to a BOOL return value.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.14 92/04/07 01:45:11 kcd Exp Locker: gregm $
d79 1
d120 1
a120 1
extern VOID ip_in(struct Buffer *ibuff, ULONG len, struct sanadev *dev);
a128 1
extern VOID ip_send(struct Buffer *obuff, ULONG destip, UBYTE protocol);
d130 2
a131 1
extern BOOL gate_out(struct Buffer *ibuff, struct sanadev *dev);
d162 1
a162 1
extern BOOL StateMachine(struct RDPConnection *rc, UBYTE flags, struct rdphdr *packet, ULONG destip);
@


1.14
log
@Fixed StateMachine() call in RDP.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.13 92/04/05 15:52:07 kcd Exp Locker: kcd $
d161 1
a161 1
extern VOID StateMachine(struct RDPConnection *rc, UBYTE flags, struct rdphdr *packet, ULONG destip);
@


1.13
log
@Removed obsolete GetRouteInfo() call. Added new resolver functions.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.12 92/03/27 10:35:11 gregm Exp Locker: kcd $
d161 1
a161 1
extern VOID StateMachine(struct RDPConnection *rc, UBYTE flags, struct rdphdr *packet);
@


1.12
log
@*** empty log message ***
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.11 92/03/23 10:26:52 gregm Exp Locker: gregm $
d69 1
a69 1
extern BOOL  __asm UDP_Output(register __a0 UBYTE *dataptr,register __d0 UWORD length,register __d1 ULONG destip,register __d2 UWORD srcport, register __d3 UWORD destport);
a87 1
extern struct NIPCRouteInfo * __asm GetRouteInfo(VOID);
d129 1
d205 1
a205 1
extern VOID ResolverInput(struct UDPConnection *conn, struct Buffer *buff);
d207 12
d256 1
a256 1
extern VOID __stdargs NewList( struct List *list );
@


1.11
log
@The_voodoo_stuff_is_GONE!
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.10 92/03/14 14:26:41 gregm Exp $
d57 1
@


1.10
log
@Added freehosts() and GetHostName() prototypes.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.9 92/03/10 11:07:59 gregm Exp Locker: gregm $
d24 7
a30 7
extern BOOL __saveds __asm BeginTransaction(register __a0 struct Entity * dest_entity, register __a1 struct Entity * src_entity, register __a2 struct Transaction * trans);
extern BOOL __saveds __asm DoTransaction(register __a0 struct Entity * dest_entity, register __a1 struct Entity * src_entity, register __a2 struct Transaction * trans);
extern VOID __saveds __asm AbortTransaction(register __a0 struct Transaction * trans);
extern APTR __saveds __asm CreateEntityA(register __a0 struct TagItem * taglist);
extern VOID __saveds __asm DeleteEntity(register __a0 APTR entin);
extern VOID __saveds __asm WaitEntity(register __a0 APTR entin);
extern APTR __saveds __asm FindEntity(register __a0 UBYTE * hostname, register __a1 UBYTE * portname, register __a2 APTR src_entity, register __a3 ULONG * detailerror);
d33 7
a39 7
extern VOID __saveds __asm LoseEntity(register __a0 APTR entin);
extern struct Transaction * __saveds __asm AllocTransactionA(register __a0 struct TagItem * taglist);
extern VOID __saveds __asm FreeTransaction(register __a1 struct Transaction * oldtrans);
extern struct Transaction * __saveds __asm GetTransaction(register __a0 APTR from_entity);
extern VOID __saveds __asm ReplyTransaction(register __a1 struct Transaction * trans);
extern VOID __saveds __asm WaitTransaction(register __a1 struct Transaction * trans);
extern BOOL __saveds __asm CheckTransaction(register __a1 struct Transaction * trans);
d54 1
a54 1
extern BOOL __saveds __asm GetEntityName(register __a0 APTR entity, register __a1 UBYTE * newstr, register __d0 ULONG spacefree);
d56 1
a56 1
extern BOOL __saveds __asm GetHostName(register __a0 struct Entity *ent, register __a1 UBYTE *str, register __d0 ULONG availsize);
d68 3
a70 3
extern BOOL __saveds __asm UDP_Output(register __a0 UBYTE *dataptr,register __d0 UWORD length,register __d1 ULONG destip,register __d2 UWORD srcport, register __d3 UWORD destport);
extern struct UDPConnection * __saveds __asm OpenUDPPort(register __d0 UWORD localport,register __a0 UDP_DATA DataIn);
extern VOID __saveds __asm CloseUDPPort(register __a0 struct UDPConnection *conn);
d85 3
a87 3
extern BOOL __saveds __asm AddRoute(register __d0 ULONG network, register __d1 ULONG mask, register __d2 ULONG gateway, register __d3 UWORD hops, register __d4 UWORD ttl);
extern VOID __saveds __asm DeleteRoute(register __d0 ULONG network);
extern struct NIPCRouteInfo * __saveds __asm GetRouteInfo(VOID);
d93 3
a95 3
extern VOID __saveds __asm InitLock(register __a6 struct Library * libbase);
extern VOID __saveds __asm StartLibrary(register __a6 struct Library * libbase);
extern VOID __saveds __asm __stdargs LibraryProcess(VOID);
d98 1
a98 1
extern VOID __saveds KillOffNIPC(VOID);
d147 2
a148 2
extern BOOL __saveds __stdargs CTB(UBYTE *from, ULONG n, struct Buffer *to);
extern BOOL __saveds __stdargs CFB(UBYTE *to, ULONG n, struct Buffer *from);
d228 2
a229 2
extern struct NIPCMonitorInfo * __saveds __asm StartMonitor(VOID);
extern VOID __saveds __asm StopMonitor(VOID);
d235 2
a236 2
extern VOID __saveds __asm StartStats(register __a0 struct stats * statptr);
extern VOID __saveds __asm EndStats(VOID);
@


1.9
log
@Changed AddSigBit() from a void to a bool.  It -could- fail!  :')
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.8 92/03/06 19:11:28 kcd Exp Locker: gregm $
d42 1
d56 1
d58 2
d98 1
@


1.8
log
@Added DNS support. Added specific register usages for memory management
functions used by dns.asm.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.7 92/03/03 19:54:11 kcd Exp Locker: kcd $
d44 1
a44 1
extern VOID AddSigBit(struct RDPConnection *c);
@


1.7
log
@Added DoResolver()
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.6 92/03/03 19:33:08 gregm Exp Locker: kcd $
d64 3
a66 3
extern BOOL UDP_Output(UBYTE *dataptr, UWORD length, ULONG destip, UWORD srcport, UWORD destport);
extern struct UDPConnection *OpenUDPPort(UWORD localport, UDP_DATA DataIn);
extern VOID CloseUDPPort(struct UDPConnection *conn);
d180 1
a180 1
extern VOID FreeBuffer(struct Buffer *buff);
d183 2
a184 2
extern VOID CopyFromBuffer(UBYTE *target, struct Buffer *sourcebuff, ULONG length);
extern ULONG DataLength(struct Buffer *buffer);
a189 1
extern ULONG CalcVMTPChecksumBuffer(struct Buffer *buffer);
@


1.6
log
@Added DelayedDelete().
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.4 92/02/29 20:38:00 kcd Exp $
d198 1
@


1.5
log
@Added DoResolver() call.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.4 92/02/29 20:38:00 kcd Exp Locker: kcd $
d54 1
a197 1
extern VOID DoResolver(VOID);
@


1.4
log
@Added Resolver calls.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.3 92/02/27 21:08:23 kcd Exp Locker: kcd $
d197 1
@


1.3
log
@A few UDP and Routing function call names were changed.
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.2 92/02/26 22:29:43 kcd Exp Locker: kcd $
d22 2
a23 2
extern BOOL InitANMP(void);
extern void DeinitANMP(void);
d26 5
a30 5
extern void __saveds __asm AbortTransaction(register __a0 struct Transaction * trans);
extern void * __saveds __asm CreateEntityA(register __a0 struct TagItem * taglist);
extern void __saveds __asm DeleteEntity(register __a0 void * entin);
extern void __saveds __asm WaitEntity(register __a0 void * entin);
extern void * __saveds __asm FindEntity(register __a0 UBYTE * hostname, register __a1 UBYTE * portname, register __a2 void * src_entity, register __a3 ULONG * detailerror);
d33 1
a33 1
extern void __saveds __asm LoseEntity(register __a0 void * entin);
d35 4
a38 4
extern void __saveds __asm FreeTransaction(register __a1 struct Transaction * oldtrans);
extern struct Transaction * __saveds __asm GetTransaction(register __a0 void * from_entity);
extern void __saveds __asm ReplyTransaction(register __a1 struct Transaction * trans);
extern void __saveds __asm WaitTransaction(register __a1 struct Transaction * trans);
d41 1
a41 1
extern void read_hosts(void);
d44 10
a53 10
extern void AddSigBit(struct RDPConnection *c);
extern void DelSigBit(struct RDPConnection *c);
extern void Sleep(struct RDPConnection *c);
extern void Wake(struct RDPConnection *c);
extern void WaitConnect(struct RDPConnection *c);
extern void EntityInput(struct RDPConnection *c, struct Buffer *buff);
extern void REntityInput(struct RDPConnection *c, struct Buffer *buff);
extern void EntityStatus(struct RDPConnection *c);
extern void REntityStatus(struct RDPConnection *c);
extern BOOL __saveds __asm GetEntityName(register __a0 void * entity, register __a1 UBYTE * newstr, register __d0 ULONG spacefree);
d59 5
a63 5
extern void UDP_Init(void);
extern void UDP_Deinit(void);
extern void UDP_Timeout(void);
extern void UDP_Input(struct Buffer *buff, ULONG length, struct sanadev *dev);
extern BOOL UDP_Output(struct UDPConnection *conn, UBYTE *dataptr, UWORD length, ULONG destip, UWORD destport);
d65 1
a65 1
extern void CloseUDPPort(struct UDPConnection *conn);
d78 2
a79 2
extern BOOL InitRoute(void);
extern VOID DeinitRoute(void);
d82 1
a82 1
extern struct NIPCRouteInfo * __saveds __asm GetRouteInfo(void);
d88 5
a92 5
extern void __saveds __asm InitLock(register __a6 struct Library * libbase);
extern void __saveds __asm StartLibrary(register __a6 struct Library * libbase);
extern void __saveds __asm __stdargs LibraryProcess(void);
extern void ProtocolInput(struct Buffer *inpbuff, ULONG length, UWORD ptype, struct sanadev *dev);
extern void HeartBeat(void);
d98 6
a103 6
extern void InitARP(void);
extern void DeinitARP(void);
extern void SendARPRequest(struct sanadev *dev, ULONG ip_addr);
extern void SendARPReply(struct sanadev *dev, ULONG ip_to, UBYTE *ether_to, ULONG ip_us, UBYTE *ether_us);
extern void ARPInput(struct Buffer *arpbuff, ULONG length, struct sanadev *dev);
extern void AddARPEntry(ULONG ip, UBYTE *ether);
d105 3
a107 3
extern void DoARPSends(ULONG ipnum);
extern void AddBuffList(struct Buffer *b, ULONG address, struct sanadev *dev, ULONG gateway, UWORD ptype);
extern void arp_timeout(void);
d113 3
a115 3
extern void ip_in(struct Buffer *ibuff, ULONG len, struct sanadev *dev);
extern void FragTimeoutDev(struct sanadev *dev);
extern void FragmentTimeout(void);
d121 2
a122 2
extern void ip_out(struct Buffer *obuff, ULONG srcip, ULONG destip, UBYTE protocol, struct sanadev *iface, ULONG gateway, ULONG frags, BOOL morefrags, UWORD inident, UBYTE ttl, BOOL dbc, BOOL fraglast);
extern void ip_send(struct Buffer *obuff, ULONG destip, UBYTE protocol);
d131 4
a134 4
extern BOOL InitSana2(void);
extern void DeinitSana2(void);
extern void CheckCmdPort(void);
extern void CheckDataPort(void);
d136 5
a140 5
extern void PacketWrite(struct sanadev *dev, ULONG gateway, struct Buffer *buffer, ULONG destination, UWORD packettype);
extern void PacketBroadcast(struct sanadev *dev, struct Buffer *buffer, UWORD packettype);
extern void PollPort(void);
extern void QueueRead(struct sanadev *dev, UWORD pt);
extern void ProcessReq(struct IOSana2ReqSS *ioreq);
d143 2
a144 2
extern void CheckForInet(void);
extern void NotifyInet(void);
d150 7
a156 7
extern void rdp_init(void);
extern void rdp_deinit(void);
extern void rdp_timeout(void);
extern void rdp_input(struct Buffer *buff, ULONG length, struct sanadev *dev);
extern void StateMachine(struct RDPConnection *rc, UBYTE flags, struct rdphdr *packet);
extern void SendFlags(struct RDPConnection *c, UBYTE flags);
extern void PacketInput(struct RDPConnection *c, struct Buffer *b);
d161 1
a161 1
extern void CloseConnection(struct RDPConnection *c);
d167 4
a170 4
extern void init_icmp(void);
extern void icmp_timeout(void);
extern void icmp_deinit(void);
extern void icmp_input(struct Buffer *buff, ULONG length, struct sanadev *dev);
d177 1
a177 1
extern void FreeBuffEntry(struct BuffEntry *buffe);
d179 1
a179 1
extern void FreeBuffer(struct Buffer *buff);
d182 1
a182 1
extern void CopyFromBuffer(UBYTE *target, struct Buffer *sourcebuff, ULONG length);
d193 10
d205 3
a207 3
extern BOOL InitTimer(void);
extern void TimeOut(void);
extern void DeinitTimer(void);
d222 2
a223 2
extern struct NIPCMonitorInfo * __saveds __asm StartMonitor(void);
extern void __saveds __asm StopMonitor(void);
d229 2
a230 2
extern void __saveds __asm StartStats(register __a0 struct stats * statptr);
extern void __saveds __asm EndStats(void);
d237 1
a237 1
extern void __stdargs NewList( struct List *list );
d243 1
a243 1
extern void __stdargs kprintf(UBYTE *fmt, ...);
@


1.2
log
@Moved typedef's to nipcinternal.h
@
text
@d4 1
a4 1
**      $Id: nipcinternal_protos.h,v 1.1 92/02/26 21:37:27 kcd Exp Locker: kcd $
d15 1
a15 1
#include <nipcinternal.h>
d59 6
a64 6
extern void udp_init(void);
extern void udp_deinit(void);
extern void udp_timeout(void);
extern void udp_input(struct Buffer *buff, ULONG length, struct sanadev *dev);
extern BOOL udp_output(struct UDPConnection *conn, UBYTE *dataptr, UWORD length, ULONG destip, UWORD destport);
extern struct UDPConnection *OpenUDPPort(UWORD localport, UDP_Data DataIn)
d71 2
a72 2
extern ULONG netnum(ULONG ipa);
extern BOOL isbrc(ULONG dest);
d74 3
a76 3
extern BOOL netmatch(ULONG dst, ULONG net, ULONG mask, BOOL islocal);
extern ULONG netmask(ULONG net);
extern ULONG rthash(ULONG net);
d79 1
a79 1
extern void DeinitRoute(void);
d81 1
a81 1
extern void __saveds __asm DeleteRoute(register __d0 ULONG network);
d228 6
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
**      $Id$
d12 1
a12 1
/* typedef's for indirect function pointers */
d14 3
a16 3
typedef void (*RDP_DATA)(struct RDPConnection *c, struct Buffer *b);
typedef void (*RDP_STATUS)(struct RDPConnection *c);
typedef void (*UDP_DATA)(struct UDPConnection *c, struct Buffer *b);
d18 2
d55 2
d67 2
d84 2
d94 2
d109 2
d117 2
d125 2
d146 2
d163 2
d172 2
d191 2
d199 2
d208 2
d215 2
d222 2
d227 1
@
