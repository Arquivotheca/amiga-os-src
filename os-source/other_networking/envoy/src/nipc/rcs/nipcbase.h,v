head     1.16;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.16
date     93.04.08.11.34.11;  author gregm;  state Exp;
branches ;
next     1.15;

1.15
date     93.04.05.11.19.15;  author gregm;  state Exp;
branches ;
next     1.14;

1.14
date     93.04.01.15.21.53;  author gregm;  state Exp;
branches ;
next     1.13;

1.13
date     92.12.17.16.40.12;  author kcd;  state Exp;
branches ;
next     1.12;

1.12
date     92.12.16.14.48.13;  author kcd;  state Exp;
branches ;
next     1.11;

1.11
date     92.11.02.14.11.25;  author kcd;  state Exp;
branches ;
next     1.10;

1.10
date     92.08.13.17.41.42;  author gregm;  state Exp;
branches ;
next     1.9;

1.9
date     92.06.25.16.45.58;  author kcd;  state Exp;
branches ;
next     1.8;

1.8
date     92.06.21.14.09.56;  author gregm;  state Exp;
branches ;
next     1.7;

1.7
date     92.06.09.15.12.14;  author gregm;  state Exp;
branches ;
next     1.6;

1.6
date     92.06.08.10.11.54;  author kcd;  state Exp;
branches ;
next     1.5;

1.5
date     92.05.04.11.14.07;  author kcd;  state Exp;
branches ;
next     1.4;

1.4
date     92.04.30.13.18.49;  author gregm;  state Exp;
branches ;
next     1.3;

1.3
date     92.04.16.14.39.52;  author kcd;  state Exp;
branches ;
next     1.2;

1.2
date     92.04.12.00.55.45;  author kcd;  state Exp;
branches ;
next     1.1;

1.1
date     92.04.05.15.48.25;  author kcd;  state Exp;
branches ;
next     ;


desc
@NIPC Library base definitions. Moved from externs.h
@


1.16
log
@added semaphore for locking pools
@
text
@
#include <exec/types.h>
#include <exec/libraries.h>
#include <dos/dos.h>
#include <devices/sana2.h>
#include <envoy/errors.h>
#include <devices/timer.h>
#include <exec/io.h>
#include <utility/tagitem.h>
#include <dos.h>

struct StartMessage
{
    struct Message sm_Msg;
    struct Library *sm_LibBase;
};
struct NBase
{
    struct Library       LibNode;
    WORD                 nb_Pad0;
    struct Library      *nb_DOSBase;
    struct Library      *nb_UtilityBase;
    LONG                 nb_Kludge0;            /* Keep old versions of services.library from */
    LONG                 nb_Kludge1;            /* killing the machine */
    struct Library      *nb_SysBase;
    struct Library      *nb_ServicesBase;
    ULONG                nb_SegList;
    struct Library      *nb_IFFParseBase;
 /* amp.c */
  struct MinList ANMPEntityList;
  struct SignalSemaphore ANMPELSemaphore;
  WORD   Pad1;
  struct MinList HostList;
  struct SignalSemaphore HLSemaphore;
  WORD   Pad2;
  ULONG TRANSSEQUENCE;
  struct RDPConnection *EntityResolver;
  struct MinList    PingList;
  struct SignalSemaphore  PingListSemaphore;
  WORD   Pad3;

 /* rdp.c */
  struct ipproto RDPProto;        /* Struct that IP knows us by */
  UWORD Pad4;
  UWORD RDPSequence;          /* Sequence # */
  UWORD RDPPorts;          /* Global port numberer */
  struct MinList RDPConnectionList;       /* Keeps track of connections */
  struct SignalSemaphore RDPCLSemaphore;  /* Keeps us from walking on others
                                          * toes */
  WORD   Pad5;
 /* s2io.c */
  ULONG inbuffs, outbuffs;
  struct MsgPort *replyport;
  struct MsgPort *localport;
  ULONG s2sigmask;
  struct List DeviceList;
  BOOL   Switching;
  long notags[2];
  long copytags[6];
  struct MsgPort *CMDPort;        /* Both of these ports are for sharing
                                  * information with */
  struct MsgPort *DataPort;       /* inet.library */
  struct MinList ExchangeList;
  ULONG RandomSeed;

 /* center_custom.c */
  struct SignalSemaphore openlock;
  BOOL jumpstart;
  struct Process *nipcprocess;
  ULONG shutdownbit;
  struct StartMessage smsg;
  UWORD  TimeCount;             /* A counter to count out 10 .1sec heartbeats */

 /* ip_out.c */
  UWORD IPIdentNumber;

 /* arp.c */
  struct MinList ARPBuffer;
  struct SignalSemaphore ARPBufferSemaphore;
  WORD   Pad51;
  struct MinList ARPList;

 /* icmp.c */
  struct ipproto icmpproto;
  UWORD Pad6;

 /* monitor.c */
  struct NIPCMonitorInfo MonitorInfo;

 /* resolver.c */
  struct SignalSemaphore ResponseCacheLock;
  UWORD ResID;
  struct SignalSemaphore RequestLock;
  UWORD RIPTimer;
  struct SignalSemaphore DNSResolverLock;
  WORD  Pad7;
  struct SignalSemaphore RealmListLock;
  WORD  Pad8;
  struct MinList ResponseCache;
  struct MinList RequestList;
  struct MinList DNSNames;
  struct MinList RealmList;
  struct UDPConnection  *NameRequestPort;
  struct MsgPort                *ResolverPort;
  struct Hook           *DNSHook;
  struct MsgPort *NameResponsePort;
  ULONG resolversigmask;
  ULONG RealmServer;
  UBYTE RealmServerName[64];
  UBYTE RealmName[64];
  UBYTE LocalHostName[64];
  UBYTE OwnerName[32];
  ULONG IsRealmServer;

 /* route.c */
  struct NIPCRouteInfo RouteInfo;

 /* udp.c */
  struct ipproto UDPProto;
  UWORD UDPPorts;
  struct MinList UDPConnectionList;
  struct SignalSemaphore UDPCLSemaphore;
  WORD   Pad9;

 /* timer.c */
  struct MsgPort *timerport;
  struct timerequest *treq;
  ULONG timersigmask;
  struct Library *TimerDevice;
  struct Unit *TimerUnit;

 /* ip_in.c */
  struct MinList ProtocolList;

 /* iff.c */
 struct IFFHandle *iff;
 BPTR IFFStream;

 /* memory.c */

 struct MinList BufferCache;
 struct MinList BuffEntryCache;

 UWORD TimerSeed;

 /* More for amp.c */
 struct MinList WakeFind;
 struct SignalSemaphore WakeLock;

 /* Our memory pool */
 APTR   MemoryPool;
 struct SignalSemaphore PoolLock;

};
@


1.15
log
@added memorypool entry
@
text
@d152 1
@


1.14
log
@Added wakelist/wakesemaphore stuff
@
text
@d145 1
d149 3
@


1.13
log
@Added two new fields for the name resolution code.
@
text
@d20 1
a20 1
    WORD		 nb_Pad0;
d23 2
a24 2
    LONG		 nb_Kludge0;		/* Keep old versions of services.library from */
    LONG		 nb_Kludge1;		/* killing the machine */
d32 1
a32 1
  WORD	 Pad1;
d35 1
a35 1
  WORD	 Pad2;
d40 1
a40 1
  WORD	 Pad3;
d50 1
a50 1
  WORD	 Pad5;
d57 1
a57 1
  BOOL	 Switching;
d85 1
a85 1
  UWORD	Pad6;
d96 1
a96 1
  WORD	Pad7;
d98 1
a98 1
  WORD	Pad8;
d123 1
a123 1
  WORD	 Pad9;
d145 4
@


1.12
log
@Long-word aligned everything.
@
text
@d112 2
a113 1

@


1.11
log
@Added fields for Timer Unit pointer and a messageport * for the
new resolver stuff.
@
text
@d5 1
a5 1
#include <sana2.h>
d20 1
d23 2
d32 1
d35 1
d40 1
d44 1
d50 1
a50 1

d57 1
a63 1
  BOOL Switching;
d67 1
a68 1
  struct SignalSemaphore openlock;
d80 1
d85 1
d92 1
d94 1
d96 1
d98 1
a111 2
  UWORD ResID;
  UWORD RIPTimer;
d119 1
d122 1
a122 1
  UWORD UDPPorts;
@


1.10
log
@Added a field for my random-number seed.  (Temp. debugging check)
@
text
@d93 1
d116 2
a117 1
  struct Library *TimerBase;
d131 1
@


1.9
log
@Fixed a couple of pointer declarations.
@
text
@d57 1
@


1.8
log
@Added ping list and semaphore
@
text
@d20 2
a21 2
    struct DOSBase      *nb_DOSBase;
    struct UtilityBase  *nb_UtilityBase;
@


1.7
log
@references to 'appn' now 'envoy'
@
text
@d33 2
@


1.6
log
@Added lists for memory caching
@
text
@d6 1
a6 1
#include <appn/errors.h>
@


1.5
log
@Added IFF Config file stuff.
@
text
@d121 4
@


1.4
log
@Added timer base.
@
text
@d25 1
a25 1

d116 5
@


1.3
log
@Added services.library base and message port for local ip transfers.
@
text
@d23 1
a23 1
    struct Library	*nb_ServicesBase;
d87 2
a88 2
  struct UDPConnection	*NameRequestPort;
  struct MsgPort		*ResolverPort;
d91 1
a91 1
  ULONG	RealmServer;
d112 1
@


1.2
log
@Changes for DNS resolver.
@
text
@d23 1
d45 1
@


1.1
log
@Initial revision
@
text
@d79 1
a79 1
  struct SignalSemaphore DNSNamesLock;
d87 1
a87 1
  struct MsgPort		*DNSPort;
@
