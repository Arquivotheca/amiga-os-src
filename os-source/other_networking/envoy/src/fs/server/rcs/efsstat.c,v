head     1.1;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.1
date     93.07.21.13.58.05;  author jesup;  state Exp;
branches ;
next     ;


desc
@Checkin of Greg's unreleased work
@



1.1
log
@Initial revision
@
text
@

#include        <stdio.h>
#include        <exec/types.h>
#include        "fsdbase.h"
#include        "/fs.h"


struct FSDSvc *EFSBase;
main()
{

    EFSBase = (struct FSDSvc *) OpenLibrary ("filesystem.service",0L);
    if (EFSBase)
    {
        struct MountedFSInfo *m;
        ObtainSemaphore(&EFSBase->FSD_CurrentLock);
        m = (struct MountedFSInfo *) EFSBase->FSD_Current.mlh_Head;
        while (m->mfsi_Link.mln_Succ)
        {
            printf("Mount from machine %s\n",&m->mfsi_HostName);
            printf("        User: %s\n",&m->mfsi_UserName[0]);
            printf("        Password: %s\n",&m->mfsi_Password[0]);
            printf("        Client Mountname: %s\n",&m->mfsi_ClientMount[0]);
            printf("\n");

            m = (struct MountedFSInfo *) m->mfsi_Link.mln_Succ;
        }
        ReleaseSemaphore(&EFSBase->FSD_CurrentLock);
    }
    else
        printf("Couldn't find filesystem.service.\nEFS must not be running.\n");

}
@
