head     1.6;
branch   ;
access   ;
symbols  ;
locks    dlarson:1.6; strict;
comment  @ * @;


1.6
date     92.06.24.13.20.26;  author dlarson;  state Exp;
branches ;
next     1.5;

1.5
date     92.06.02.11.30.34;  author dlarson;  state Exp;
branches ;
next     1.4;

1.4
date     92.04.09.12.01.24;  author dlarson;  state Exp;
branches ;
next     1.3;

1.3
date     92.04.06.11.48.42;  author dlarson;  state Exp;
branches ;
next     1.2;

1.2
date     92.04.03.10.47.18;  author dlarson;  state Exp;
branches ;
next     1.1;

1.1
date     92.04.03.10.45.12;  author dlarson;  state Exp;
branches ;
next     ;


desc
@@


1.6
log
@y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y


@
text
@/*
**  $Id: testdb1.c,v 1.5 92/06/02 11:30:34 dlarson Exp Locker: dlarson $
**
**  Authentication server database test program 1.
**
**  Creates a new Authentication Server Database with user admin.  This
**  database should be shipped with Envoy disks unless I go to the bother
**  of making a nicer way to get the database going.
**
**  DO NOT RUN THIS PROGRAM ON A SYSTEM RUNNING THE AUTHENTICATION SERVER
**  UNLESS YOU WISH TO LOSE YOUR DATABASE!
**
**  (C) Copyright 1992 Commodore-Amiga, Inc.
**      All Rights Reserved.
*/
#include "AuthenticationServer.h"

struct Library *UtilityBase;
extern struct MinList *UserDBList;
extern USHORT HighUID;

main()
{
struct UserProfile admin;

/*
**  In lieu of InitUserDB():
*/
	if( !(UtilityBase=OpenLibrary("utility.library", 37L)) )
		exit(-1);
	if( !(UserDBList = AllocMem(sizeof(struct MinList), MEMF_ANY)) )
	{
		printf("Can't allocate memory.\n");
		return 0;
	}
	NewList((struct List *)UserDBList);
	HighUID = 0;
	strcpy(admin.up_UserName, "admin");
	strcpy(admin.up_FullName, "System Administrator");
	strcpy(admin.up_PassWord, "changeme");
	admin.up_GID = GROUP_ADMIN;
	if(!WriteUser(&admin))
	{
		printf("WriteUser() failed!!!\n");
		FreeUserDB();
		CloseLibrary(UtilityBase);
		return 0;
	}
	printf("UID     = %d.\n", admin.up_UID);
	printf("HighUID = %d.\n", HighUID);
	FreeUserDB();
	CloseLibrary(UtilityBase);
}
@


1.5
log
@
@
text
@d2 1
a2 1
**  $Id: testdb1.c,v 1.4 92/04/09 12:01:24 dlarson Exp Locker: dlarson $
@


1.4
log
@*** empty log message ***
@
text
@d2 1
a2 1
**  $Id: testdb1.c,v 1.3 92/04/06 11:48:42 dlarson Exp Locker: dlarson $
@


1.3
log
@*** empty log message ***
@
text
@d2 1
a2 1
**  $Id: testdb1.c,v 1.2 92/04/03 10:47:18 dlarson Exp Locker: dlarson $
@


1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
**  $Id: testdb1.c,v 1.1 92/04/03 10:45:12 dlarson Exp Locker: dlarson $
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
**  $Id:$
@
