head     1.6;
branch   ;
access   ;
symbols  ;
locks    dlarson:1.6; strict;
comment  @ * @;


1.6
date     92.06.24.13.19.55;  author dlarson;  state Exp;
branches ;
next     1.5;

1.5
date     92.06.02.11.29.28;  author dlarson;  state Exp;
branches ;
next     1.4;

1.4
date     92.04.09.12.00.41;  author dlarson;  state Exp;
branches ;
next     1.3;

1.3
date     92.04.06.11.48.19;  author dlarson;  state Exp;
branches ;
next     1.2;

1.2
date     92.04.03.10.47.04;  author dlarson;  state Exp;
branches ;
next     1.1;

1.1
date     92.04.03.10.45.01;  author dlarson;  state Exp;
branches ;
next     ;


desc
@@


1.6
log
@y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y


@
text
@/*
**  $Id: server.c,v 1.5 92/06/02 11:29:28 dlarson Exp Locker: dlarson $
**
**  Authentication server main loop.
**
**  (C) Copyright 1992 Commodore-Amiga, Inc.
**      All Rights Reserved.
*/
#include "AuthenticationServer.h"
#include "AuthenticationServer_rev.h"

VOID main(VOID);

int CXBRK(void) { return(0); }  /* Disable Lattice CTRL/C handling */

extern struct Library *IntuitionBase;
struct Library *NIPCBase;
struct Library *UtilityBase;

UBYTE *vers = VERSTAG;

LONG (*Commands[])(struct Transaction *) =
{
	AuthenticateUser,
	AddUser,
	DeleteUser,
	ChangePassWord,
	AddGroup,
	DeleteGroup,
	AddToGroup,
	RemoveFromGroup,
	FindUserName,
	FindGroupName,
	FindGroupID,
	ListGroups,
	ListUsers,
	ListMembers,
	MemberOf,
};


VOID main(VOID)
{
APTR entity;
struct Transaction *trans;
ULONG sigf_entity, signals;

	IntuitionBase = OpenLibrary("intuition.library", 37L);
	if(!IntuitionBase)
	{
		exit(RETURN_FAIL);
	}
	UtilityBase = OpenLibrary("utility.library", 37L);
	if(!UtilityBase)
	{
		myerr("Can't open utility.library.\n");
		exit(RETURN_FAIL);
	}
	if(!InitUserDB())
	{
		myerr("Can't initialize user database.\n"
		       "Make sure that the seed file\n"
		       "'asuserdb' is in the same drawer\n"
		       "as the AuthenticationServer.\n");
		CloseLibrary(UtilityBase);
		exit(RETURN_FAIL);
	}
	if(!InitGroupDB())
	{
		myerr("Can't initialize group database.\n"
		       "Make sure that the seed file\n"
		       "'asgroupdb' is in the same drawer\n"
		       "as the AuthenticationServer.\n");
		FreeUserDB();
		CloseLibrary(UtilityBase);
		exit(RETURN_FAIL);
	}
	NIPCBase = OpenLibrary("nipc.library", 0L);
	if(!NIPCBase)
	{
		myerr("Can't open nipc.library.\n");
		FreeUserDB();
		FreeGroupDB();
		CloseLibrary(UtilityBase);
		exit(RETURN_FAIL);
	}
	entity = CreateEntity(	ENT_Name, "AuthenticationServer",
				ENT_Public, 0L,
				ENT_AllocSignal, (LONG)&sigf_entity,
				TAG_DONE);
	if(!entity)
	{
		myerr("Can't Create Entity.\n"
		      "Are you already running\n"
		      "AuthenticationServer?\n");
		FreeUserDB();
		FreeGroupDB();
		CloseLibrary(NIPCBase);
		exit(RETURN_FAIL);
	}
	sigf_entity = 1 << sigf_entity;
	for(EVER)
	{
		signals = Wait(sigf_entity | SIGBREAKF_CTRL_C);
		if(signals & SIGBREAKF_CTRL_C)
		{
			myerr("Shutting down.\n");
			FreeUserDB();
			FreeGroupDB();
			DeleteEntity(entity);
			CloseLibrary(NIPCBase);
			exit(RETURN_OK);
		}
		while(trans = GetTransaction(entity))
		{
			if(trans->trans_Command > CMD_LIMIT)
			{
				myerr("Unknown command received and ignored.");
				trans->trans_Error = ENVOYERR_CMDUNKNOWN;
			}else
			{
				trans->trans_Error = (UBYTE)(*Commands[trans->trans_Command])(trans);
			}
			ReplyTransaction(trans);
		}
	}
}
@


1.5
log
@
@
text
@d2 1
a2 1
**  $Id: server.c,v 1.4 92/04/09 12:00:41 dlarson Exp Locker: dlarson $
d51 1
a51 1
		exit(20);
d57 1
a57 1
		exit(20);
d66 1
a66 1
		exit(20);
d76 1
a76 1
		exit(20);
d85 1
a85 1
		exit(20);
d99 1
a99 1
		exit(20);
d112 1
a112 1
			exit(0);
d114 1
a114 2
		trans = GetTransaction(entity);
		if(!trans)  /* JUST TO BE SURE  */
d116 9
a124 2
			myerr("BUG: No transaction!\n");
			continue;
a125 9
		if(trans->trans_Command > CMD_LIMIT)
		{
			myerr("Unknown command received and ignored.");
			trans->trans_Error = ENVOYERR_CMDUNKNOWN;
		}else
		{
			trans->trans_Error = (UBYTE)(*Commands[trans->trans_Command])(trans);
		}
		ReplyTransaction(trans);
@


1.4
log
@*** empty log message ***
@
text
@d2 1
a2 1
**  $Id: server.c,v 1.3 92/04/06 11:48:19 dlarson Exp Locker: dlarson $
a10 1
#include <dos.h>
d14 1
d16 1
d41 1
d48 5
d56 2
a57 2
		printf("Can't open utility.library!!!\n");
		exit(-1);
d61 4
a64 1
		printf("Can't init userdb.\n");
d66 1
a66 1
		exit(-1);
d70 4
a73 1
		printf("Can't init groupdb.\n");
d76 1
a76 1
		exit(-1);
d81 1
a81 1
		printf("Can't open nipc.library!!!\n");
d85 1
a85 1
		exit(-1);
d93 3
a95 1
		printf("Failed to CreateEntity().\n");
d99 1
a99 1
		exit(-1);
d107 1
a107 1
			printf("exiting normally.\n");
a113 5
		if( !(signals & sigf_entity) )  /*  JUST TO BE SURE  */
		{
			printf("woke up by wierd signal!!!\n");
			continue;
		}
d117 1
a117 1
			printf("no transaction!!!\n");
d122 1
a122 1
			printf("unknown command...  ");
@


1.3
log
@*** empty log message ***
@
text
@d2 1
a2 1
**  $Id: server.c,v 1.2 92/04/03 10:47:04 dlarson Exp Locker: dlarson $
@


1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
**  $Id: server.c,v 1.1 92/04/03 10:45:01 dlarson Exp Locker: dlarson $
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
**  $Id:$
@
