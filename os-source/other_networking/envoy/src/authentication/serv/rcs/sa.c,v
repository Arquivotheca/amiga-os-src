head     1.6;
branch   ;
access   ;
symbols  ;
locks    dlarson:1.6; strict;
comment  @ * @;


1.6
date     92.06.24.13.20.49;  author dlarson;  state Exp;
branches ;
next     1.5;

1.5
date     92.06.02.11.27.54;  author dlarson;  state Exp;
branches ;
next     1.4;

1.4
date     92.04.09.12.02.15;  author dlarson;  state Exp;
branches ;
next     1.3;

1.3
date     92.04.06.11.49.31;  author dlarson;  state Exp;
branches ;
next     1.2;

1.2
date     92.04.03.10.47.54;  author dlarson;  state Exp;
branches ;
next     1.1;

1.1
date     92.04.03.10.45.43;  author dlarson;  state Exp;
branches ;
next     ;


desc
@@


1.6
log
@y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y
y


@
text
@/*
**  $Id: sa.c,v 1.5 92/06/02 11:27:54 dlarson Exp Locker: dlarson $
**
**  Authentication server authority check.
**
**  (C) Copyright 1992 Commodore-Amiga, Inc.
**      All Rights Reserved.
*/
#include "AuthenticationServer.h"

BOOL sa(struct UserProfile *authority, LONG action)
{
struct UserProfile scratch;

	CopyMem(authority, &scratch, sizeof(struct UserProfile);
	scratch.up_UID = 0;
	ReadUser(&scratch);
	if(authority->up_PassWord == scratch.up_PassWord &&
	   authority->up_UserName == scratch.up_UserName)
	{
		authority->up_UID = scratch.up_UID;
		authority->up_GID = scratch.up_GID;
		return TRUE;
	}
	return FALSE;
}

@


1.5
log
@*** empty log message ***
@
text
@d2 1
a2 1
**  $Id: sa.c,v 1.4 92/04/09 12:02:15 dlarson Exp Locker: dlarson $
@


1.4
log
@*** empty log message ***
@
text
@d2 1
a2 1
**  $Id: sa.c,v 1.3 92/04/06 11:49:31 dlarson Exp Locker: dlarson $
@


1.3
log
@*** empty log message ***
@
text
@d2 1
a2 1
**  $Id: sa.c,v 1.2 92/04/03 10:47:54 dlarson Exp Locker: dlarson $
@


1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
**  $Id: sa.c,v 1.1 92/04/03 10:45:43 dlarson Exp Locker: dlarson $
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
**  $Id:$
@
