head     1.2;
branch   ;
access   ;
symbols  ;
locks    kcd:1.2; strict;
comment  @@;


1.2
date     92.10.13.11.20.43;  author kcd;  state Exp;
branches ;
next     1.1;

1.1
date     92.09.01.14.20.01;  author kcd;  state Exp;
branches ;
next     ;


desc
@SFD file for accounts.library
@



1.2
log
@""
@
text
@==id $Id: accounts_lib.sfd,v 1.1 92/09/01 14:20:01 kcd Exp Locker: kcd $
* "accounts.library"
==base _AccountsBase
==bias 30
==public
==include <exec/types.h>
==include <utility/tagitem.h>
==include <envoy/accounts.h>
==version 37
* User and Group structure Allocation/Deallocation
struct UserInfo *AllocUserInfo()()
struct GroupInfo *AllocGroupInfo()()
VOID FreeUserInfo(struct UserInfo *)(A0)
VOID FreeGroupInfo(struct GroupInfo *)(A0)
* User Verification functions *
ULONG VerifyUser(STRPTR userName, STRPTR password, struct UserInfo *user)(A0,A1,A2)
ULONG MemberOf(struct GroupInfo *group, struct UserInfo *user)(A0,A1)
* Functions to find users/groups or build lists of users/groups/members *
ULONG NameToUser(STRPTR userName, struct UserInfo *user)(A0,A1)
ULONG NameToGroup(STRPTR groupName, struct GroupInfo *group)(A0,A1)
ULONG IDToUser(UWORD userID, struct UserInfo *user)(D0,A0)
ULONG IDToGroup(UWORD groupID, struct GroupInfo *group)(D0,A0)
ULONG NextUser(struct UserInfo *user)(A0)
ULONG NextGroup(struct GroupInfo *group)(A0)
ULONG NextMember(struct GroupInfo *group,struct UserInfo *user)(A0,A1)
==end
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
==id $Id:$
d11 2
a12 2
struct UserInfo *AllocUserInfo(void)()
struct UserInfo *AllocGroupInfo(void)()
d14 1
a14 1
VOID FreeGroupInfo(struct UserInfo *)(A0)
d16 2
a17 2
BOOL VerifyUser(STRPTR userName, STRPTR password, struct UserInfo *user)(A0,A1,A2)
BOOL MemberOf(struct GroupInfo *group, struct UserInfo *user)(A0,A1)
d19 7
a25 7
BOOL NameToUser(STRPTR userName, struct UserInfo *user)(A0,A1)
BOOL NameToGroup(STRPTR groupName, struct GroupInfo *user)(A0,A1)
BOOL IDToUser(STRPTR userName, struct UserInfo *user)(A0,A1)
BOOL IDToGroup(STRPTR groupName, struct GroupInfo *group)(A0,A1)
BOOL NextUser(struct UserInfo *user)(A0)
BOOL NextGroup(struct GroupInfo *group)(A0)
BOOL NextMember(struct GroupInfo *group,struct UserInfo *user)(A0,A1)
@
