head     37.7;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


37.7
date     92.06.09.15.17.43;  author kcd;  state Exp;
branches ;
next     37.6;

37.6
date     92.06.09.15.01.52;  author kcd;  state Exp;
branches ;
next     37.5;

37.5
date     92.06.04.18.52.10;  author kcd;  state Exp;
branches ;
next     37.4;

37.4
date     92.06.04.18.39.56;  author kcd;  state Exp;
branches ;
next     37.3;

37.3
date     92.04.14.15.19.58;  author kcd;  state Exp;
branches ;
next     37.2;

37.2
date     92.03.25.18.16.35;  author kcd;  state Exp;
branches ;
next     37.1;

37.1
date     92.03.22.18.15.37;  author kcd;  state Exp;
branches ;
next     ;


desc
@Module to free up resources used by the library.
@


37.7
log
@Changed occurences of appn to Envoy
@
text
@/*
** $Id: flushlib.c,v 37.6 92/06/09 15:01:52 kcd Exp Locker: kcd $
**
** Module to free our Library base stuff
**
*/

/*--------------------------------------------------------------------------*/

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif

#ifndef EXEC_LISTS_H
#include <exec/lists.h>
#endif

#ifndef EXEC_SEMAPHORES_H
#include <exec/semaphores.h>
#endif

#ifndef EXEC_MEMORY_H
#include <exec/memory.h>
#endif

#ifndef ENVOY_NIPC_H
#include <envoy/nipc.h>
#endif

#include "services.h"
#include "servicesbase.h"
#include "servicesinternal.h"
#include <envoy/nipc.h>

#include <dos.h>
#include <string.h>

#include <clib/exec_protos.h>
#include <clib/nipc_protos.h>
#include <clib/utility_protos.h>

#include <pragmas/exec_pragmas.h>
#include <pragmas/nipc_pragmas.h>
#include <pragmas/utility_pragmas.h>

/*--------------------------------------------------------------------------*/

VOID ASM FlushLib()
{
    struct Service *svc;
    struct ServicesLib *S_Lib = ServicesBase;

    while(svc = (struct Service *) RemHead((struct List *)&S_Lib->SVCS_Services))
    {
        DBMSG(("FlushLib(): Freeing Service: %lx\n",svc));
        FreeMem(svc,sizeof(struct Service));
    }
}
@


37.6
log
@Bug fixes. No longer crashes.
@
text
@d2 1
a2 1
** $Id: flushlib.c,v 37.5 92/06/04 18:52:10 kcd Exp Locker: kcd $
d26 2
a27 2
#ifndef APPN_NIPC_H
#include <appn/nipc.h>
d33 1
a33 1
#include <appn/nipc.h>
@


37.5
log
@Memory leak fixed. I was freeing the wrong list.
@
text
@d2 1
a2 1
** $Id: flushlib.c,v 37.4 92/06/04 18:39:56 kcd Exp Locker: kcd $
d51 1
a51 1
    struct ServicesLib *S_Lib = (struct ServicesLib *)getreg(REG_A6);
@


37.4
log
@Reworked for new internal service structures.
@
text
@d2 1
a2 1
** $Id: flushlib.c,v 37.3 92/04/14 15:19:58 kcd Exp $
d53 1
a53 1
    while(svc = (struct Service *) RemHead((struct List *)&S_Lib->SVCS_Started))
@


37.3
log
@Removed dependencies on old exec pragmas file.
@
text
@d2 1
a2 1
** $Id: flushlib.c,v 37.2 92/03/25 18:16:35 kcd Exp Locker: kcd $
d10 1
a10 1
#ifndef	EXEC_TYPES_H
d14 1
a14 1
#ifndef	EXEC_LISTS_H
d18 1
a18 1
#ifndef	EXEC_SEMAPHORES_H
d22 1
a22 1
#ifndef	EXEC_MEMORY_H
d26 1
a26 1
#ifndef	APPN_NIPC_H
d51 1
a51 7
    struct Server *server;
	struct ServicesLib *S_Lib = (struct ServicesLib *)getreg(REG_A6);
    while(server = (struct Server *) RemHead((struct List *)&S_Lib->SVCS_Started))
    {
        DBMSG(("FlushLib(): Freeing StartedServer: %lx\n",server));
    	FreeMem(server,sizeof(struct Server));
    }
d55 2
a56 7
	while(server = (struct Server *) RemHead((struct List *)&svc->svc_List))
	{
            DBMSG(("FlushLib(): Freeing Server : %lx\n",server));
    	    FreeMem(server,sizeof(struct Server));
	}
    DBMSG(("FlushLib(): Freeing Service: %lx\n",svc));
	FreeMem(svc,sizeof(struct Service));
@


37.2
log
@Changed kprintf's to DBMSG's
@
text
@d2 1
a2 1
** $Id: flushlib.c,v 37.1 92/03/22 18:15:37 kcd Exp Locker: kcd $
d52 2
a53 2

    while(server = (struct Server *) RemHead((struct List *)&ServicesBase->SVCS_Started))
d59 1
a59 1
    while(svc = (struct Service *) RemHead((struct List *)&ServicesBase->SVCS_Started))
@


37.1
log
@Initial Revision
@
text
@d2 1
a2 1
** $Id: flushlib.c,v 1.1 92/03/19 10:24:24 kcd Exp Locker: kcd $
d55 1
a55 1
        kprintf("FlushLib(): Freeing StartedServer: %lx\n",server);
d63 1
a63 1
            kprintf("FlushLib(): Freeing Server : %lx\n",server);
d66 1
a66 1
        kprintf("FlushLib(): Freeing Service: %lx\n",svc);
@
