head     37.5;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


37.5
date     92.06.04.18.24.28;  author kcd;  state Exp;
branches ;
next     37.4;

37.4
date     92.04.14.15.19.36;  author kcd;  state Exp;
branches ;
next     37.3;

37.3
date     92.03.27.02.24.49;  author kcd;  state Exp;
branches ;
next     37.2;

37.2
date     92.03.25.18.07.13;  author kcd;  state Exp;
branches ;
next     37.1;

37.1
date     92.03.22.18.16.01;  author kcd;  state Exp;
branches ;
next     ;


desc
@Module to inform Services Manager that a server is starting.
@


37.5
log
@Retired
@
text
@/*
** $Id: startservice.c,v 37.4 92/04/14 15:19:36 kcd Exp Locker: kcd $
**
** Module to tell Services Manager we're starting up
**
*/

/* File retired 6/4/92 by kcd */

@


37.4
log
@Removed dependencies on old exec pragmas file.
@
text
@d2 1
a2 1
** $Id: startservice.c,v 37.3 92/03/27 02:24:49 kcd Exp Locker: kcd $
d8 1
a8 1
/*--------------------------------------------------------------------------*/
a9 95
#ifndef	EXEC_TYPES_H
#include <exec/types.h>
#endif

#ifndef	EXEC_LISTS_H
#include <exec/lists.h>
#endif

#ifndef	EXEC_SEMAPHORES_H
#include <exec/semaphores.h>
#endif

#ifndef	EXEC_MEMORY_H
#include <exec/memory.h>
#endif

#ifndef	APPN_NIPC_H
#include <appn/nipc.h>
#endif

#include "services.h"
#include "servicesbase.h"
#include "servicesinternal.h"
#include <appn/nipc.h>

#include <dos.h>
#include <string.h>

#include <clib/exec_protos.h>
#include <clib/nipc_protos.h>
#include <clib/utility_protos.h>

#include <pragmas/exec_pragmas.h>
#include <pragmas/nipc_pragmas.h>
#include <pragmas/utility_pragmas.h>

/*--------------------------------------------------------------------------*/

APTR ASM StartServiceA(REG(a0) struct TagItem *	tagList)
{
    APTR service_entity	= NULL;
    struct Process *server_proc;
    struct Server *server;
    struct ServicesLib *S_Lib = (struct ServicesLib *)getreg(REG_A6);
    ULONG filtertags[]={SSVC_MultiClient,TAG_END};
    ULONG entitytags[]={ENT_Name,0,ENT_Public,0,TAG_MORE,0};

	DBMSG(("StartService(): Entry: %s\n",SysBase->ThisTask->tc_Node.ln_Name));

    ObtainSemaphore(&S_Lib->SVCS_StartedLock);

    DBMSG(("StartService(): Obtained StartedLock\n"));

    server = (struct Server *) ServicesBase->SVCS_Started.mlh_Head;
    server_proc	= (struct Process *) FindTask(0L);

    while(server->serv_Msg.mn_Node.ln_Succ)
    {
		if(server->serv_Process	== server_proc)
		{
			DBMSG(("StartService: Found my Server Struct!\n"));
			Remove(server);
			break;
		}
		server = (struct Server	*) server->serv_Msg.mn_Node.ln_Succ;
	}

	ReleaseSemaphore(&S_Lib->SVCS_StartedLock);

	if(server->serv_Msg.mn_Node.ln_Succ)
	{
		if(FindTagItem(SSVC_MultiClient,tagList))
		{
			server->serv_Type |= SVCF_MULTI;
			server->serv_Service->svc_Flags |= SVCF_MULTI;
			FilterTagItems(tagList,filtertags,TAGFILTER_NOT);
		}
		entitytags[1] =	(ULONG)	server->serv_EntityName;
		entitytags[5] =	(ULONG)	tagList;

		if(service_entity =	CreateEntityA((struct Tag *)entitytags))
		{
			DBMSG(("StartService(): Got my Entity!\n"));
			server->serv_Entity = service_entity;
			ReplyMsg(server);
		}
		else
		{
			server->serv_Process = NULL;
			ReplyMsg(server);
		}
    }

    return(service_entity);
}
@


37.3
log
@Bug Fix: I wasn't setting the entity pointer in the Server struct.
@
text
@d2 1
a2 1
** $Id: startservice.c,v 37.2 92/03/25 18:07:13 kcd Exp Locker: kcd $
d53 1
a53 1

d59 1
a59 1
    ObtainSemaphore(&ServicesBase->SVCS_StartedLock);
d77 1
a77 1
	ReleaseSemaphore(&ServicesBase->SVCS_StartedLock);
@


37.2
log
@Bug Fix: The SVCF_MULTI flag wasn't getting set in the services flags field.
@
text
@d2 1
a2 1
** $Id: startservice.c,v 37.1 92/03/22 18:16:01 kcd Exp Locker: kcd $
d93 1
@


37.1
log
@Initial revision
@
text
@d2 1
a2 1
** $Id: startservice.c,v 1.1 92/03/18 18:40:36 kcd Exp Locker: kcd $
d57 1
a57 1
	DBMSG(("StartService(): Entry\n"));
d84 1
@
