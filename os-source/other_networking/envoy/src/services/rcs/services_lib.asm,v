head     37.9;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @* @;


37.9
date     92.12.16.14.32.20;  author kcd;  state Exp;
branches ;
next     37.8;

37.8
date     92.11.12.10.33.23;  author kcd;  state Exp;
branches ;
next     37.7;

37.7
date     92.06.09.15.05.14;  author kcd;  state Exp;
branches ;
next     37.6;

37.6
date     92.06.04.19.06.13;  author kcd;  state Exp;
branches ;
next     37.5;

37.5
date     92.06.04.18.58.43;  author kcd;  state Exp;
branches ;
next     37.4;

37.4
date     92.06.04.18.37.33;  author kcd;  state Exp;
branches ;
next     37.3;

37.3
date     92.05.04.12.07.28;  author kcd;  state Exp;
branches ;
next     37.2;

37.2
date     92.03.25.18.09.45;  author kcd;  state Exp;
branches ;
next     37.1;

37.1
date     92.03.22.18.16.56;  author kcd;  state Exp;
branches ;
next     ;


desc
@Module to free up resources used during FindService()
@


37.9
log
@No longer depends on the nipcbase definition, and instead relies on a
new private LVO in nipc.library for setting the services.library base
pointer in nipcbase.
@
text
@        OPTIMON

;---------------------------------------------------------------------------

        NOLIST

        INCLUDE "exec/types.i"
        INCLUDE "exec/libraries.i"
        INCLUDE "exec/lists.i"
        INCLUDE "exec/alerts.i"
        INCLUDE "exec/initializers.i"
        INCLUDE "exec/resident.i"
        INCLUDE "libraries/dos.i"

        INCLUDE "services_rev.i"
        INCLUDE "servicesbase.i"
        INCLUDE "services.i"
SVC_LIB EQU 1

        LIST

;---------------------------------------------------------------------------

        XREF    _FindServiceA
        XREF    _LoseService
        XREF    _FlushLib
	XREF	_LVOSetSvcsBase
        XREF    ENDCODE

;---------------------------------------------------------------------------

        XDEF    LibInit
        XDEF    LibOpen
        XDEF    LibClose
        XDEF    LibExpunge
        XDEF    LibReserved

;---------------------------------------------------------------------------

; First executable location, must return an error to the caller
Start:
        moveq   #-1,d0
        rts

;-----------------------------------------------------------------------

ROMTAG:
        DC.W    RTC_MATCHWORD           ; UWORD RT_MATCHWORD
        DC.L    ROMTAG                  ; APTR  RT_MATCHTAG
        DC.L    ENDCODE                 ; APTR  RT_ENDSKIP
        DC.B    RTF_AUTOINIT            ; UBYTE RT_FLAGS
        DC.B    VERSION                 ; UBYTE RT_VERSION
        DC.B    NT_LIBRARY              ; UBYTE RT_TYPE
        DC.B    0                       ; BYTE  RT_PRI
        DC.L    LibName                 ; APTR  RT_NAME
        DC.L    LibId                   ; APTR  RT_IDSTRING
        DC.L    LibInitTable            ; APTR  RT_INIT

LibName DC.B 'services.library',0
LibId   VSTRING

        CNOP    0,4

LibInitTable:
        DC.L    ServicesLib_SIZEOF
        DC.L    LibFuncTable
        DC.L    LibDataTable
        DC.L    LibInit

V_DEF   MACRO
        DC.W    \1+(*-LibFuncTable)
        ENDM

LibFuncTable:
        DC.W    -1
        V_DEF   LibOpen
        V_DEF   LibClose
        V_DEF   LibExpunge
        V_DEF   LibReserved

        V_DEF   _FindServiceA
        V_DEF   _LoseService

        DC.W   -1

LibDataTable:
        INITWORD   LIB_REVISION,REVISION
        DC.W       0

        CNOP    0,4

;-----------------------------------------------------------------------

; Library Init entry point called when library is first loaded in memory
; On entry, D0 points to library base, A0 has lib seglist, A6 has SysBase
; Returns 0 for failure or the library base for success.
LibInit:
        movem.l a0/a5/a6/d7,-(sp)
        move.l  d0,a5
        move.l  a6,SVCS_SysBase(a5)
        move.l  a0,SVCS_SegList(a5)

        move.l  #AO_UtilityLib,d7
        lea     UtilityName(pc),a1
        bsr.s   OpenLib
        move.l  d0,SVCS_UtilityBase(a5)

        lea     SVCS_ServicesLock(a5),a0
        CALL    InitSemaphore
        lea     SVCS_Services(a5),a0
        NEWLIST a0

        lea     SVCS_OpenLock(a5),a0
        CALL    InitSemaphore

        clr.l   SVCS_NIPCBase(a5)

        move.l  a5,d0
        movem.l (sp)+,a0/a5/a6/d7
        rts

OpenLib:
        moveq   #LIBVERSION,d0
        CALL    OpenLibrary
        move.l  (sp)+,a0        ; pop return address
        tst.l   d0              ; did lib open?
        beq.s   FailInit        ; nope, so exit
        jmp     (a0)            ; yes, so return

FailInit:
        bsr     CloseLibs
        or.l    #AG_OpenLib,d7
        CALL    Alert
        movem.l (sp)+,a0/a5/a6/d7
        moveq   #0,d0
        rts

LIBVERSION    EQU  37
UtilityName   DC.B "utility.library",0
NIPCName      DC.B "nipc.library",0

        CNOP    0,4

;-----------------------------------------------------------------------

; Library open entry point called every OpenLibrary()
; On entry, A6 has ServicesBase, task switching is disabled
; Returns 0 for failure, or ServicesBase for success.
LibOpen:
        tst.l   SVCS_NIPCBase(a6)
        bne.s   2$

        lea.l   SVCS_OpenLock(a6),a0
        move.l  a6,-(sp)
        move.l  SVCS_SysBase(a6),a6
        CALL    ObtainSemaphore

        lea.l   NIPCName,a1
        clr.l   d0
        CALL    OpenLibrary
        move.l  (sp),a6
        move.l  d0,SVCS_NIPCBase(a6)
        beq.s   1$
        movea.l d0,a0
        exg.l	a6,a0
        jsr	_LVOSetSvcsBase(a6)
        exg.l	a6,a0
1$      lea.l   SVCS_OpenLock(a6),a0
        move.l  SVCS_SysBase(a6),a6
        CALL    ReleaseSemaphore
        move.l  (sp)+,a6

2$      addq.w  #1,LIB_OPENCNT(a6)
        bclr    #LIBB_DELEXP,LIB_FLAGS(a6)
        move.l  SVCS_NIPCBase(a6),d0
        beq.s   3$
        move.l  a6,d0
3$      rts

;-----------------------------------------------------------------------

; Library close entry point called every CloseLibrary()
; On entry, A6 has ServicesBase, task switching is disabled
; Returns 0 normally, or the library seglist when lib should be expunged
; due to delayed expunge bit being set
LibClose:
        subq.w  #1,LIB_OPENCNT(a6)

        ; if delayed expunge bit set, then try to get rid of the library
        btst    #LIBB_DELEXP,LIB_FLAGS(a6)
        bne.s   CloseExpunge

        ; delayed expunge not set, so stick around
        moveq   #0,d0
        rts

CloseExpunge:
        ; if no library users, then just remove the library
        tst.w   LIB_OPENCNT(a6)
        beq.s   DoExpunge

        ; still some library users, so just flush unused resources
        bclr    #LIBB_DELEXP,LIB_FLAGS(a6)
        moveq   #0,d0
        rts

;-----------------------------------------------------------------------

; Library expunge entry point called whenever system memory is lacking
; On entry, A6 has ServicesBase, task switching is disabled
; Returns the library seglist if the library open count is 0, returns 0
; otherwise and sets the delayed expunge bit.
LibExpunge:
        tst.w   LIB_OPENCNT(a6)
        beq.s   DoExpunge

        bset    #LIBB_DELEXP,LIB_FLAGS(a6)
        moveq   #0,d0
        rts

DoExpunge:
	move.l	a6,-(sp)
        movea.l SVCS_NIPCBase(a6),a6
        suba.l	a0,a0
        jsr	_LVOSetSvcsBase(a6)
        movea.l	(sp)+,a6

        movem.l d2/a5/a6,-(sp)
        move.l  a6,a5
        move.l  SVCS_SegList(a5),d2

        move.l  a5,a1
        REMOVE

        move.l  SVCS_SysBase(a5),a6
        bsr.s   CloseLibs

        move.l  a6,-(sp)
        movea.l a5,a6
        jsr     _FlushLib
        movea.l (sp)+,a6

        move.l  a5,a1
        moveq   #0,d0
        move.w  LIB_NEGSIZE(a5),d0
        sub.l   d0,a1
        add.w   LIB_POSSIZE(a5),d0
        CALL    FreeMem

        move.l  d2,d0
        movem.l (sp)+,d2/a5/a6
        rts

;-----------------------------------------------------------------------

LibReserved:
        moveq   #0,d0
        rts

;-----------------------------------------------------------------------

CloseLibs:
        move.l  SVCS_NIPCBase(a5),a1
        CALL    CloseLibrary

        move.l  SVCS_UtilityBase(a5),a1
        GO      CloseLibrary


;-----------------------------------------------------------------------

        END
@


37.8
log
@Fixed the version string problem, and made the init table smaller.
@
text
@a18 1
    INCLUDE "nipcbase.i"
d27 1
a27 1

d165 3
a167 1
        move.l  a6,nb_ServicesBase(a0)
d222 5
a226 2
        movea.l SVCS_NIPCBase(a6),a0
        move.l  #0,nb_ServicesBase(a0)
@


37.7
log
@Fixed Semaphore bug in Open().  Also fixed possible bug in FailInit().
@
text
@d61 1
a61 1
LibId   VERSTAG
a87 4
        INITBYTE   LN_TYPE,NT_LIBRARY
        INITLONG   LN_NAME,LibName
        INITBYTE   LIB_FLAGS,(LIBF_SUMUSED!LIBF_CHANGED)
        INITWORD   LIB_VERSION,VERSION
a88 1
        INITLONG   LIB_IDSTRING,LibId
@


37.6
log
@Fixed missing version string.
@
text
@d140 1
a140 1
        movem.l (sp)+,a0/a5/d7
d169 2
a170 5
        bne.s   1$
        move.l  (sp)+,a6
        rts

1$      movea.l d0,a0
d172 1
a172 1
        lea.l   SVCS_OpenLock(a6),a0
d179 2
d182 1
a182 1
        rts
@


37.5
log
@Removed code for opening dos.library.
@
text
@d61 1
a61 1
LibId   VSTRING
@


37.4
log
@Changed to work with new services.
@
text
@a107 1
    clr.l   SVCS_Unique(a5)
a108 5
        move.l  #AO_DOSLib,d7
        lea     DOSName(pc),a1
        bsr.s   OpenLib
        move.l  d0,SVCS_DosBase(a5)

d119 1
a119 6
        lea     SVCS_StartedLock(a5),a0
        CALL    InitSemaphore
        lea     SVCS_Started(a5),a0
        NEWLIST a0

        lea SVCS_OpenLock(a5),a0
a144 1
DOSName       DC.B "dos.library",0
d242 1
a242 1
        jsr _FlushLib
a264 3
        move.l  SVCS_DosBase(a5),a1
        CALL    CloseLibrary

@


37.3
log
@Added code to notify nipc.library the we're around.
@
text
@d19 1
a19 1
	INCLUDE "nipcbase.i"
d26 1
a26 3
        XREF    _StartServiceA
        XREF    _StopService
        XREF	_LoseService
d83 1
a83 3
        V_DEF   _StartServiceA
        V_DEF   _StopService
        V_DEF	_LoseService
d108 1
a108 1
	clr.l   SVCS_Unique(a5)
d130 2
a131 2
        lea	SVCS_OpenLock(a5),a0
        CALL	InitSemaphore
d133 1
a133 1
        clr.l	SVCS_NIPCBase(a5)
d168 7
a174 2
	tst.l	SVCS_NIPCBase(a6)
	bne.s	2$
d176 8
a183 13
	lea.l	SVCS_OpenLock(a6),a0
	move.l	a6,-(sp)
	move.l	SVCS_SysBase(a6),a6
	CALL	ObtainSemaphore

	lea.l	NIPCName,a1
	clr.l	d0
	CALL	OpenLibrary
	move.l	(sp),a6
	move.l	d0,SVCS_NIPCBase(a6)
	bne.s	1$
	move.l	(sp)+,a6
	rts
d185 3
a187 3
1$	movea.l	d0,a0
	move.l	a6,nb_ServicesBase(a0)
	lea.l	SVCS_OpenLock(a6),a0
d189 2
a190 2
	CALL	ReleaseSemaphore
	move.l	(sp)+,a6
d239 2
a240 2
        movea.l	SVCS_NIPCBase(a6),a0
        move.l	#0,nb_ServicesBase(a0)
d252 4
a255 4
	move.l	a6,-(sp)
	movea.l	a5,a6
	jsr	_FlushLib
	movea.l	(sp)+,a6
d257 1
a257 1
	move.l  a5,a1
d280 2
a281 2
	move.l	SVCS_NIPCBase(a5),a1
	CALL	CloseLibrary
@


37.2
log
@Added _LoseService library calls. Dunno how I missed this.
@
text
@d18 2
d112 1
a112 1
		clr.l   SVCS_Unique(a5)
d172 2
a173 2
		tst.l	SVCS_NIPCBase(a6)
		bne.s	2$
d175 13
a187 13
		lea.l	SVCS_OpenLock(a6),a0
		move.l	a6,-(sp)
		move.l	SVCS_SysBase(a6),a6
		CALL	ObtainSemaphore

		lea.l	NIPCName,a1
		clr.l	d0
		CALL	OpenLibrary
		move.l	(sp),a6
		move.l	d0,SVCS_NIPCBase(a6)
		bne.s	1$
		move.l	(sp)+,a6
		rts
d189 3
a191 1
1$		lea.l	SVCS_OpenLock(a6),a0
d193 2
a194 2
		CALL	ReleaseSemaphore
		move.l	(sp)+,a6
d206 1
a206 1
;   due to delayed expunge bit being set
d243 3
d256 4
a259 4
		move.l	a6,-(sp)
		movea.l	a5,a6
		jsr		_FlushLib
		movea.l	(sp)+,a6
d261 1
a261 1
		move.l  a5,a1
d284 2
a285 2
		move.l	SVCS_NIPCBase(a5),a1
		CALL	CloseLibrary
@


37.1
log
@Initial revision
@
text
@d26 1
d85 1
@
