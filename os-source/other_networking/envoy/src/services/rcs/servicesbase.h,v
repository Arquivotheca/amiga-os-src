head     37.3;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


37.3
date     92.06.04.19.00.39;  author kcd;  state Exp;
branches ;
next     37.2;

37.2
date     92.03.25.18.58.50;  author kcd;  state Exp;
branches ;
next     37.1;

37.1
date     92.03.22.18.20.25;  author kcd;  state Exp;
branches ;
next     ;


desc
@C include file for services.library library base
@


37.3
log
@Removed DOS library base and an obsolete semaphore/list pair.
@
text
@#ifndef SERVICESBASE_H
#define SERVICESBASE_H

/*****************************************************************************/

#include <exec/types.h>
#include <exec/libraries.h>
#include <exec/lists.h>
#include <exec/semaphores.h>
#include <exec/execbase.h>
#include <utility/tagitem.h>
#include <dos/dos.h>
#include <dos/dosextens.h>
#include <dos/dostags.h>
#include "services.h"
#include <dos.h>

/*****************************************************************************/

struct ServicesLib
{
    struct Library           SVCS_Lib;
    APTR                     SVCS_NIPCBase;
    APTR                     SVCS_UtilityBase;
    struct ExecBase         *SVCS_SysBase;
    BPTR                     SVCS_SegList;

    /* Services Library and Services Manager Common */
    struct SignalSemaphore   SVCS_ServicesLock;
    struct MinList           SVCS_Services;
    struct SignalSemaphore   SVCS_OpenLock;
};

#ifndef SERVICES_MANAGER
#define ASM           __asm
#define REG(x)        register __ ## x

#define ServicesBase  ((struct ServicesLib *)getreg(REG_A6))
#define SysBase       ServicesBase->SVCS_SysBase
#define UtilityBase   ServicesBase->SVCS_UtilityBase
#define NIPCBase      ServicesBase->SVCS_NIPCBase

#define D_S(type,name) char a_##name[sizeof(type)+3]; \
                       type *name = (type *)((LONG)(a_##name+3) & ~3);

/*****************************************************************************/

APTR ASM FindServiceA(REG(a0) STRPTR remoteHost,
                     REG(a1) STRPTR serviceName,
                     REG(a2) APTR srcEntity,
                     REG(a3) struct TagItem *tagList);

VOID ASM LoseService(REG(a0) APTR svcEntity);

VOID ASM FlushLib(VOID);

/*****************************************************************************/

#endif /* SERVICES_MANAGER */

kprintf(STRPTR,...);
sprintf(STRPTR,...);

#endif /* SERVICESBASE_H */
@


37.2
log
@Fixed SVCS_SysBase declaration.
@
text
@a22 1
    ULONG		     SVCS_Unique;
a23 1
    APTR                     SVCS_DosBase;
a30 2
    struct SignalSemaphore   SVCS_StartedLock;
    struct MinList           SVCS_Started;
a39 1
#define DOSBase       ServicesBase->SVCS_DosBase
d49 1
a49 1
					 REG(a1) STRPTR serviceName,
a51 4

APTR ASM StartServiceA(REG(a0) struct TagItem *tagList);

VOID ASM StopService(REG(a0) APTR srcEntity);
@


37.1
log
@Initial revision
@
text
@d10 1
d27 1
a27 1
    APTR                     SVCS_SysBase;
@
