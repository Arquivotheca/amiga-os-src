%!PS-Adobe-2.0
%%Copyright:     1991-SoftWood, Inc.
%%Creator:       Final Copy
%%CreationDate:  Friday, August 21, 1992 - 1:58 PM
%%Title:         ENVOY:txt/envoy_overview/NewServices
%%Pages:         (atend)
%%DocumentFonts:  Helvetica
%%+ Palatino-Bold
%%+ Palatino-Roman
%%EndComments
/#copies 1 def
/u_doc (ENVOY:txt/envoy_overview/NewServices) def
/u_time (1:58\240PM) def
/u_date (Friday,\240August\24021,\2401992) def
/u_pageht 792.00 def
/u_pagewd 612.00 def
% initialize a few blank procedures ( to be replaced in user-def.ps )
/UserDoc {} bind def
/UserEOD {} bind def
/UserBOP {} bind def
/UserEOP {} bind def
% FILE INSERTED: user-def.ps
% ==========================

% ==========================
% END OF FILE: user-def.ps

%%BeginProlog
% Prolog for "Final Copy" PostScript® output
% Author:	Pat Brouillette
% Version:	V2.0!!
% Date:		June 9, 1992
% Copyright (c) 1991,1992 SoftWood, Inc.
% This file may not be modified or used for purposes other than
% creating output with "Final Copy", so there.
%
% If you wish to make changes, make them in the file "user-def.ps"
% located in the "FCFiles" directory and create a few PostScript
% procedures, "UserDoc", "UserBOP", and "UserEOP". "Final Copy" will
% automagically call these procedures at the beginning of the document
% and the beginning and end of each page, respectively.
%
/SWDict 130 dict def
SWDict begin
/bd {bind def}bind def
/ld {load def}bd
/ed {exch def}bd
/eq {exch def}bd
/FF {gsave showpage grestore}bd
/n /newpath ld
/cp /currentpoint ld
/clp /closepath ld
/st /stroke ld
/sh /show ld
/tr /translate ld
/m /moveto ld
/rm /rmoveto ld
/l /lineto ld
/rl /rlineto ld
/c /curveto ld
/rc /rcurveto ld
/gs /gsave ld
/gr /grestore ld
/clw /currentlinewidth ld
/slw /setlinewidth ld
/clj /currentlinejoin ld
/slj /setlinejoin ld
/clc /currentlinecap ld
/slc /setlinecap ld
/cml /currentmiterlimit ld
/sml /setmiterlimit ld
/cdash /currentdash ld
/sdash /setdash ld
/cg /currentgray ld
/sg /setgray ld
/cm /currentmatrix ld
/sm /setmatrix ld
/chsb /currenthsbcolor ld
/shsb /sethsbcolor ld
/crgb /currentrgbcolor ld
/srgb /setrgbcolor ld

/reencsmalldict 12 dict def
/ReEncodeSmall
{ reencsmalldict begin
/newcodesandnames exch def
/newfontname exch def
/basefontname exch def
/basefontdict basefontname findfont def
/newfont basefontdict maxlength dict def
basefontdict
	{ exch dup /FID ne
		{ dup /Encoding ne
			{ exch newfont 3 1 roll put }
			{ exch dup length array copy newfont 3 1 roll put }
			ifelse }
		{ pop pop }
		ifelse
	} forall
newfont /FontName newfontname put
newcodesandnames aload pop
newcodesandnames length 2 idiv
{ newfont /Encoding get 3 1 roll put} repeat
newfontname newfont definefont pop
end
} def

/AmiVec [
8#220 /dotlessi		8#221 /grave		8#222 /acute		8#223 /circumflex
8#224 /tilde		8#225 /macron		8#226 /breve		8#227 /dotaccent
8#230 /dieresis		8#232 /ring		8#233 /cedilla		8#235 /hungarumlaut
8#236 /ogonek		8#237 /caron		8#240 /nbspace		8#241 /exclamdown
8#242 /cent		8#243 /sterling		8#244 /currency		8#245 /yen
8#246 /brokenbar	8#247 /section		8#250 /dieresis		8#251 /copyright
8#252 /ordfeminine	8#253 /guillemotleft	8#254 /logicalnot	8#255 /hyphen
8#256 /registered	8#257 /macron		8#260 /degree		8#261 /plusminus
8#262 /twosuperior	8#263 /threesuperior	8#264 /acute		8#265 /mu
8#266 /paragraph	8#267 /bullet		8#270 /cedilla		8#271 /onesuperior
8#272 /ordmasculine	8#273 /guillemotright	8#274 /onequarter	8#275 /onehalf
8#276 /threequarters	8#277 /questiondown	8#300 /Agrave		8#301 /Aacute
8#302 /Acircumflex	8#303 /Atilde		8#304 /Adieresis	8#305 /Aring
8#306 /AE		8#307 /Ccedilla		8#310 /Egrave		8#311 /Eacute
8#312 /Ecircumflex	8#313 /Edieresis	8#314 /Igrave		8#315 /Iacute
8#316 /Icircumflex	8#317 /Idieresis	8#320 /Eth		8#321 /Ntilde
8#322 /Ograve		8#323 /Oacute		8#324 /Ocircumflex	8#325 /Otilde
8#326 /Odieresis	8#327 /multiply		8#330 /Oslash		8#331 /Ugrave
8#332 /Uacute		8#333 /Ucircumflex	8#334 /Udieresis	8#335 /Yacute
8#336 /Thorn		8#337 /germandbls	8#340 /agrave		8#341 /aacute
8#342 /acircumflex	8#343 /atilde		8#344 /adieresis	8#345 /aring
8#346 /ae		8#347 /ccedilla		8#350 /egrave		8#351 /eacute
8#352 /ecircumflex	8#353 /edieresis	8#354 /igrave		8#355 /iacute
8#356 /icircumflex	8#357 /idieresis	8#360 /eth		8#361 /ntilde
8#362 /ograve		8#363 /oacute		8#364 /ocircumflex	8#365 /otilde
8#366 /odieresis	8#367 /divide		8#370 /oslash		8#371 /ugrave
8#372 /uacute		8#373 /ucircumflex	8#374 /udieresis	8#375 /yacute
8#376 /thorn		8#377 /ydieresis
] def

/fult 1 def
/fuld -2 def
/fstd 5 def
% Gold's re-make font scheme
/font {
	/newfontname ed /basefontname ed
	dup /sY ed mul 100 div /sX ed sY 0.3 mul /fstd ed
	100 div sX mul sX mul sY div /Ob ed
	FontDirectory newfontname known not
	{ basefontname newfontname AmiVec ReEncodeSmall } if
	newfontname findfont [ sX 0 Ob sY 0 0 ] makefont setfont
	currentfont dup/FontInfo get/UnderlinePosition known not
		{pop /Courier findfont}if
		/FontInfo get/UnderlinePosition get 1000 div sY mul /fuld ed
	currentfont dup/FontInfo get/UnderlineThickness known not
		{pop /Courier findfont}if
		/FontInfo get/UnderlineThickness get 1000 div sY mul /fult ed
}def

/js { 4 2 roll moveto dup stringwidth pop 3 -1 roll exch sub exch dup length 1 sub 3 -1 roll exch div 0 3 -1 roll ashow }bd
/ujs { 4 copy pop 3 1 roll n m 0 /fuld load rm /fult load slw 0 rl st js } bd
/djs { 4 copy pop 3 1 roll n m 0 /fuld load 2 mul rm /fult load slw 0 rl st ujs } bd
/sjs { 4 copy pop 3 1 roll n m 0 /fstd load rm /fult load slw 0 rl st js } bd
/ms {m sh}bd
/lms { cp /y0 ed /x0 ed sh cp /y1 ed /x1 ed x0 y0 n m rm x1 x0 sub y1 y0 sub rl /fult load slw st x1 y1 m }bd
/ums { m 0 /fuld load 3 -1 roll lms }bd
/dms { 3 copy n m stringwidth pop 0 /fuld load 2 mul rm /fult load slw 0 rl st ums }bd
/sms { m 0 /fstd load 3 -1 roll lms }bd
/F {findfont exch scalefont setfont}bd
/box{m /ht ed/wd ed wd 0 rl 0 ht rl wd neg 0 rl clp}bd
end
% end of SoftWood dictionary
%%EndProlog
%%BeginSetup
userdict /SWDict known not {
/Times-Roman findfont 12 scalefont setfont newpath 72 500 moveto
(Error:  the Final Copy PostScript preamble is not available )show
newpath 72 486 moveto
(on your printer.  Make sure that Final Copy has been properly)show
newpath 72 472 moveto(  installed on your computer system.)show
newpath 72 458 moveto(This print job has been aborted.)show
showpage stop}if
SWDict begin
/DefaultFontName /Times def
% Call the user's document setup routine
UserDoc
% set pen to black
0 sg
%%EndSetup

%%Page: 1
%%BeginPageSetup
/u_copy 1 def
/u_page 1 def
% Call the user's page setup routine
UserBOP
%%EndPageSetup
0 100 24.00 /Palatino-Bold /font2 font
223.00 700.90 166.00  (Envoy Services) js
0 100 14.00 /Palatino-Bold /font2 font
72.00 651.30 81.10  (Introduction) js
0 100 12.00 /Palatino-Roman /font3 font
72.00 619.30 405.90  (  One of the problems when writing client-server applications is determining) js
72.00 604.90 379.90  (exactly how the client is supposed to initiate a connection with a server.) js
72.00 590.50 381.60  (Another problem is deciding how and when the server's process is to be) js
72.00 576.10 348.30  (started.  It would seem desirable to have a system that provided a) js
72.00 561.70 388.90  (standard way to handle both problems.  This is where the Envoy Services) js
72.00 547.30 126.80  (system comes into play.) js
72.00 518.50 412.20  (  The Envoy Services system is designed to standardize the way in which nipc) js
72.00 504.10 370.10  (client applications initiate connections with nipc servers.  This is done) js
72.00 489.70 403.90  (by providing a services.library that deals with locating the requested service) js
72.00 475.30 340.60  (on the remote machine and making the connection to the server.) js
72.00 446.50 386.80  (  The other problem, that of how and when to start servers, is handled on) js
72.00 432.10 382.00  (the "server side" of the connection via the Envoy Services Manager.  The) js
72.00 417.70 415.30  (Envoy Services Manager receives requests for services from the client machine) js
72.00 403.30 390.30  (and then passes this information on to an Envoy Service which then takes) js
72.00 388.90 267.70  (any actions that are required to activate the server.) js
72.00 360.10 406.10  (  The Envoy Services themselves are implemented as Amiga shared libraries.) js
72.00 345.70 412.00  (By using this model, Services may be dynamically loaded from disk, and may) js
72.00 331.30 362.40  (also be flushed if they are inactive.  Services also make use of special) js
72.00 316.90 348.50  (library LVO's that are used to start services, query the service, etc.) js
0 100 14.00 /Palatino-Bold /font2 font
72.00 286.50 150.80  (Connection to a Service) js
0 100 12.00 /Palatino-Roman /font3 font
72.00 254.50 374.20  (  The first step in connecting to a service is to open nipc.library and the) js
72.00 240.10 353.40  (services.library.  You must use nipc.library to create the Entity that) js
72.00 225.70 395.30  (you will be using for your side of the communications path. Then, you call) js
72.00 211.30 386.20  (the services.library function FindService\(\) which will make an attempt to) js
72.00 196.90 253.30  (connect to the service you are requesting to use.) js
72.00 168.10 49.50  (Example:) js
72.00 139.30 24.00  (     ...) js
72.00 110.50 369.00  (     if\(svc_entity = FindService\("Cruncher","Printer Service",my_entity,) js
72.00 96.10 15.00  (     ) js
216.00 96.10 127.60  ( FSVC_UserName,"Joe",) js
72.00 81.70 15.00  (     ) js
216.00 81.70 185.10  ( FSVC_Password,"Joe's Password",) js
%%PageTrailer
UserEOP
gs showpage gr
%%Page: 2
%%BeginPageSetup
/u_copy 1 def
/u_page 2 def
% Call the user's page setup routine
UserBOP
%%EndPageSetup
72.00 710.50 15.00  (     ) js
216.00 710.50 142.80  ( FSVC_Error, &error_code,) js
72.00 696.10 15.00  (     ) js
216.00 696.10 74.90  ( TAG_DONE\)) js
72.00 681.70 19.00  (     {) js
72.00 667.30 33.00  (        ...) js
72.00 638.50 364.70  (  FindService\(\) requires that you specify the name of the host that the) js
72.00 624.10 366.20  (service you want to use is located on \(in the above case, "Cruncher"\) ,) js
72.00 609.70 348.10  (the name of the service \("Printer Service"\), and the Entity that you) js
72.00 595.30 345.50  (will use for your side of the connection.  You may also optionally) js
72.00 580.90 371.80  (specify a user's name, a user's password or a pointer to a ULONG that) js
72.00 566.50 348.70  (will be filled in with an error code \(if any\) if the connection failed.) js
72.00 552.10 351.20  (For more information, please see the services.library/FindServce\(\)) js
72.00 537.70 45.90  (autodoc.) js
0 100 14.00 /Palatino-Bold /font2 font
72.00 492.90 188.00  (Disconnection from a Service) js
0 100 12.00 /Palatino-Roman /font3 font
72.00 460.90 346.20  (  To disconnect from a Service you simply call the services.library) js
72.00 446.50 330.10  (function LoseService\(\) with a pointer to the Entity returned by) js
72.00 432.10 73.50  (FindService\(\).) js
72.00 403.30 49.50  (Example:) js
108.00 374.50 9.00  (...) js
108.00 360.10 127.60  (LoseService\(svc_entity\);) js
108.00 345.70 9.00  (...) js
0 100 14.00 /Palatino-Bold /font2 font
72.00 300.90 141.40  (Writing a new Service) js
0 100 12.00 /Palatino-Roman /font3 font
72.00 271.30 368.60  (  Before you write a service, you should have a good grasp on writing) js
72.00 256.90 376.70  (Amiga shared libraries.  An example shared library can be found in the) js
72.00 242.50 120.30  (Amiga Libraries RKM.) js
72.00 213.70 370.10  (  Each Service must implement at least two LVO's that are used by the) js
72.00 199.30 370.30  (Envoy Services Manager and it's configuration tool.  These two LVO's) js
72.00 184.90 350.20  (are StartService\(\) and GetServiceAttrs\(\).  StartService\(\) is called by) js
72.00 170.50 384.50  (Services Manager when there is a new request for a service from a client.) js
72.00 156.10 351.50  (The second call, GetServiceAttrs\(\) is used by the Services Manager) js
72.00 141.70 353.00  (configuration tool to determine the name of your service \(not to be) js
72.00 127.30 208.40  (confused with your Service's filename\).) js
72.00 98.50 386.10  (  When the Services Manager calls your StartService\(\) function, you must) js
72.00 84.10 370.50  (take whatever steps are required to start providing your service to the) js
%%PageTrailer
UserEOP
gs showpage gr
%%Page: 3
%%BeginPageSetup
/u_copy 1 def
/u_page 3 def
% Call the user's page setup routine
UserBOP
%%EndPageSetup
72.00 710.50 370.70  (requesting client.  You will be passed information such as the name of) js
72.00 696.10 370.40  (the user and his password.  You will also be passed a pointer to string) js
72.00 681.70 371.00  (that you are to fill in with the name of the Entity that the client should) js
72.00 667.30 57.30  (connect to.) js
72.00 638.50 417.60  (  Depending on how you are designing your service, you may or may not need) js
72.00 624.10 366.40  (to start a new task for each client that connects to you.  You will need) js
72.00 609.70 377.80  (at least one task, however. There currently is no way to have a task-less) js
72.00 595.30 39.80  (service.) js
72.00 566.50 371.20  (  When your StartService\(\) function returns, the Services Manager will) js
72.00 552.10 348.30  (reply to the client's request for service with the name of the Entity) js
72.00 537.70 365.70  (it should connect to or will return an error code if you could not start) js
72.00 523.30 146.80  (the service for some reason.) js
72.00 494.50 381.80  (  The best way to see how all of this works is to examine the source code) js
72.00 480.10 360.00  (for the print spooler service and it's client.  These two pieces of code) js
72.00 465.70 370.50  (detail some of the finer points with writing a service that haven't been) js
72.00 451.30 121.20  (covered in this section.) js
0 100 14.00 /Palatino-Bold /font2 font
72.00 420.90 123.10  (Installing a Service) js
0 100 12.00 /Palatino-Roman /font3 font
72.00 388.90 346.60  (  All you have to do to make the Services Manager start accepting) js
72.00 374.50 363.90  (requests for your service is to run the Services Manage configuration) js
72.00 360.10 138.50  (tool and add your service.) js
%%PageTrailer
UserEOP
gs showpage gr
% Call user end of document proc
UserEOD
%%EndDocument
%%EOF
