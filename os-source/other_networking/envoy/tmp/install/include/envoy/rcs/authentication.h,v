head     1.5;
branch   ;
access   ;
symbols  ;
locks    dlarson:1.5; strict;
comment  @ * @;


1.5
date     92.04.13.15.33.54;  author dlarson;  state Exp;
branches ;
next     1.4;

1.4
date     92.04.02.08.32.22;  author dlarson;  state Exp;
branches ;
next     1.3;

1.3
date     92.04.02.08.30.07;  author dlarson;  state Exp;
branches ;
next     1.2;

1.2
date     92.03.30.09.21.18;  author dlarson;  state Exp;
branches ;
next     1.1;

1.1
date     92.03.12.07.43.34;  author dlarson;  state Exp;
branches ;
next     ;


desc
@@


1.5
log
@*** empty log message ***
@
text
@#ifndef ENVOY_AUTHENTICATION_H
#define ENVOY_AUTHENTICATION_H
/*
**  $ID:$
**
**	Authentication.library public structures.
**
**	(C) Copyright 1992 Commodore-Amiga, Inc.
**		All rights reserved.
*/
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif EXEC_EXEC_H
#ifndef ENVOY_ERRORS_H
#include <envoy/errors.h>
#endif ENVOY_ERRORS_H
/*
**  Public part of User information structure
**
**  DO NOT examine, modify or otherwise rely on non-public fields of this
**  structure!!!
*/
#define PROFILE_DSIZE (sizeof(struct UserProfile) - sizeof(struct MinNode))
#define GROUP_DSIZE   (sizeof(struct Group) - sizeof(struct MinNode))
#define UP_UNLENGTH	16
#define UP_FNLENGTH	64
#define UP_PWLENGTH	16
#define G_GNLENGTH	16
struct UserProfile
{
	struct MinNode up_Node;
	UBYTE up_UserName[UP_UNLENGTH];
	UBYTE up_FullName[UP_FNLENGTH];
	UBYTE up_PassWord[UP_PWLENGTH];  /* never written to by the library */
	UWORD up_UID;
};
/*
**  Group information structure.
**
**  DO NOT examine, modify or otherwise rely on non-public fields of this
**  structure!!!
*/
struct Group
{
	struct MinNode g_Node;
	UBYTE g_GroupName[G_GNLENGTH];
	UWORD  g_GID;
};
/*
**  Defined groups
*/
#define GROUP_NONE	0
#define GROUP_ADMIN	1

#endif ENVOY_AUTHENTICATION_H@


1.4
log
@*** empty log message ***
@
text
@d15 1
a15 1
#include <ENVOY/errors.h>
d34 1
a34 1
	UBYTE up_PassWord[UP_PWLENGTH];  /* this is never written to by the library */
a35 1
	UWORD  up_GID;
d39 3
@


1.3
log
@*** empty log message ***
@
text
@a28 2
#define G_MAXUMEMBERS	50
#define G_MAXGMEMBERS	5
d36 1
a36 1
	WORD  up_GID;  /* Sign bit of GID is used for modify group permission */
d45 1
a45 1
	WORD  g_GID;
@


1.2
log
@*** empty log message ***
@
text
@d52 2
a53 4
#define GROUP_ANY	0
#define GROUP_NONE	1
#define GROUP_ADMIN	2
#define GROUP_ADDGROUP	3
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
#ifndef APPN_AUTHENTICATION_H
#define APPN_AUTHENTICATION_H
d14 3
a16 3
#ifndef APPN_ERRORS_H
#include <appn/errors.h>
#endif APPN_ERRORS_H
d23 9
a31 2
#define PROFILE_DSIZE (sizeof(struct Profile) - sizeof(struct MinNode))
struct Profile
d33 6
a38 6
	struct MinNode MinNode;
	UBYTE UserName[16];
	UBYTE FullName[64];
	UBYTE PassWord[16];  /* this is never written to by the library */
	UWORD UID;
	WORD  GID;  /* Sign bit of GID is used for modify group permission */
d45 3
a47 2
	UBYTE GroupName[80];
	WORD  GID;
d57 1
a57 30

#if 0
/*
**  Public part of User information structure
**
**  DO NOT examine, modify or otherwise rely on non-public fields of this
**  structure!!!
*/
struct Profile
{
	struct MinNode MinNode;
	UBYTE *UserName;
	UBYTE *FullName;
	UBYTE *PassWord;  /* this is never written to by the library */
	WORD *GIDs;  /* array of up to 64k GIDs, NOGROUP terminated */
		     /* The sign bit of GID is used for modify group
		        permission */
	UWORD UID;
};
/*
**  Group information structure.
*/
struct Group
{
	UBYTE *GroupName;
	WORD  GID;
};
#endif

#endif APPN_AUTHENTICATION_H
@
