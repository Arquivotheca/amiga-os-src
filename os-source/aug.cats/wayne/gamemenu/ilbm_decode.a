
;
;       decode_ilbm_data(bm, planes, data)
;
        include    "exec/types.i"
        include    "intuition/intuition.i"
        include    "libraries/dosextens.i"
        include    "libraries/dos.i"

		csect		text

		xdef		_decode_ilbm_data

bm     set   64
planes set   4+bm
data   set   4+planes

_decode_ilbm_data
        movem.l   d0-d7/a0-a6,-(sp)  ; save registers for Aztec C

        ; Get all of the parameters
        move.l    bm(sp),a2
        move.l    data(sp),a0

		moveq.l   #0,d6
        move.w    bm_BytesPerRow(a2),d6
        lea.l     bm_Planes(a2),a6      ; Save a pointer to the plane table
        move.l    planes(sp),d7

        move.w    bm_Rows(a2),d4
        subq.w    #1,d4
        moveq.l   #0,d3                  ;d3 = offset within plane

next_line:
        moveq    #0,d5
        move.l   d7,d5                  ;d5 = # of planes in image
        move.l   a6,a2                  ;reset plane array pointer
next_plane:
        dbra     d5,decode_line         ;loop through each plane
        add.l    d6,d3                  ;move offset down one line
        dbra     d4,next_line           ;loop through all lines
        bra      done

decode_line:
        move.l   (a2)+,a1               ; Start with a1 pointing the the line
        add.l    d3,a1
        move.w   d6,d2                  ; d2 = bytes per row

next_token:
        tst.w    d2                     ; is this line done?
        beq      next_plane             ; yes, setup for next
        moveq    #0,d1

	;
	;    Get next token
	;
        move.b   (a0)+,d1               ; get token from source
        bmi      53$                    ; handle repeat-run

        sub.w    d1,d2                  ; sub from bytes per row
        subq.w   #1,d2                  ; and one more
52$
        move.b   (a0)+,(a1)+
        dbra     d1,52$
        bra      next_token

53$
        cmp.b    #128,d1                ; NULL? Is anyone that stupid?
        beq      next_token             ; yes, someone is...

        neg.b    d1
        sub.w    d1,d2                  ; sub from bytes per row
        subq.w   #1,d2                  ; and one more
        move.b   (a0)+,d0

54$
        move.b   d0,(a1)+
        dbra     d1,54$
        bra      next_token

done:
        movem.l   (sp)+,d0-d7/a0-a6  ; restore registers
        rts

		end

