;
;       decode_riff(in, out, linebytes, mult_tab)
;

	csect		text

	xdef		_decode_xriff

firstp        set    36
in            set    4+firstp
out           set    8+firstp
linebytes     set    12+firstp
mult_tab      set    16+firstp

_decode_xriff
    movem.l   a0-a3/d1-d5,-(sp)  ; save registers for Aztec C
    move.l    in(sp),a0
    move.l    out(sp),a2
    move.l    linebytes(sp),d4
    move.l    mult_tab(sp),a3
	move.l    4(a3),d2
    bra       zdcp      ; And go to the "columns" loop

dcp
    move.l    a2,a1     ; get copy of dest pointer
    clr.w     d0        ; clear hi byte of op_count
    move.b    (a0)+,d0  ; fetch number of ops in this column
    bra       zdcvclp   ; and branch to the "op" loop.

dcvclp
    clr.w     d1        ; clear hi byte of op
    move.b    (a0)+,d1  ; fetch next op
    bmi       uniq      ; if hi-bit set branch to "uniq" decoder
    beq       same      ; if it's zero branch to "same" decoder

skip                    ; otherwise it's just a skip
    add.w     d1,d1     ; use amount to skip as index into word-table
    add.w     d1,d1     ; use amount to skip as index into word-table
    adda.l    0(a3,d1.w),a1
    dbra      d0,dcvclp ; go back to top of op loop
    bra       z1dcp     ; go back to column loop

same                    ; here we decode a "vertical same run"
    move.b    (a0)+,d1  ; fetch the count
    move.b    (a0)+,d3  ; fetch the value to repeat
    move.w    d1,d5     ; and do what it takes to fall into a "tower"
    asr.w     #3,d5     ; d5 holds # of times to loop through tower
    and.w     #7,d1     ; d1 is the remainder
    add.w     d1,d1
    add.w     d1,d1
    neg.w     d1

    jmp       same_tower_bottom(pc,d1.w)

same_tower
    eor.b    d3,(a1)
    adda.w    d2,a1
    eor.b    d3,(a1)
    adda.w    d2,a1
    eor.b    d3,(a1)
    adda.w    d2,a1
    eor.b    d3,(a1)
    adda.w    d2,a1
    eor.b    d3,(a1)
    adda.w    d2,a1
    eor.b    d3,(a1)
    adda.w    d2,a1
    eor.b    d3,(a1)
    adda.w    d2,a1
    eor.b    d3,(a1)
    adda.w    d2,a1
same_tower_bottom
    dbra      d5,same_tower
    dbra      d0,dcvclp
    bra       z1dcp

uniq                     ; here we decode a "unique" run
    and.b     #$7f,d1   ; setting up a tower as above....
    move.w    d1,d5
    asr.w     #3,d5
    and.w     #7,d1
    add.w     d1,d1
	move.w	  d1,d3
    add.w     d1,d1
	add.w	  d3,d1
    neg.l     d1
    jmp       uniq_tower_bottom(pc,d1.w)

uniq_tower
    move.b    (a0)+,d3
	eor.b	  d3,(a1)
    adda.w    d2,a1

    move.b    (a0)+,d3
	eor.b	  d3,(a1)
    adda.w    d2,a1

    move.b    (a0)+,d3
	eor.b	  d3,(a1)
    adda.w    d2,a1

    move.b    (a0)+,d3
	eor.b	  d3,(a1)
    adda.w    d2,a1

    move.b    (a0)+,d3
	eor.b	  d3,(a1)
    adda.w    d2,a1

    move.b    (a0)+,d3
	eor.b	  d3,(a1)
    adda.w    d2,a1

    move.b    (a0)+,d3
	eor.b	  d3,(a1)
    adda.w    d2,a1

    move.b    (a0)+,d3
	eor.b	  d3,(a1)
    adda.w    d2,a1

uniq_tower_bottom
    dbra      d5,uniq_tower  ; branch back up to "op" loop
zdcvclp
    dbra      d0,dcvclp      ; branch back up to "column loop"

    ; now we've finished decoding a single column
z1dcp
    addq.l    #1,a2  ; so move the dest pointer to next column
zdcp
    dbra      d4,dcp ; and go do it again what say?
    movem.l   (sp)+,a0-a3/d1-d5
    rts

	end

