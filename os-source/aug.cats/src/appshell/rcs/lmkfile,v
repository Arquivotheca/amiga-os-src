head	1.6;
access;
symbols;
locks
	johnw:1.6; strict;
comment	@# @;


1.6
date	92.09.07.18.05.32;	author johnw;	state Exp;
branches;
next	1.5;

1.5
date	92.05.18.17.15.54;	author johnw;	state Exp;
branches;
next	1.4;

1.4
date	92.01.27.00.19.22;	author johnw;	state Exp;
branches;
next	1.3;

1.3
date	92.01.23.11.06.44;	author johnw;	state Exp;
branches;
next	1.2;

1.2
date	91.12.12.15.59.36;	author davidj;	state Exp;
branches;
next	1.1;

1.1
date	91.12.12.15.00.08;	author davidj;	state Exp;
branches;
next	;


desc
@initial rcs
@


1.6
log
@Modified for dbug macros and prelim SAS/C 6 changes.
@
text
@MODNAME=			appshell
VERSION=			37

REMOTE=				APSH:

LD_FILE=			$(MODNAME).library.ld
LD_STRIP=			$(MODNAME).library

C_COMPILER=			LC
C_COMPILER_OPTS=	-b0 -O -cfis -ms -me -v -d4
C_DEBUG=			-DDBUG

ASSEMBLER=			hx68 -a
ASSEMBLER_OPTS=		-csy -i include: -o

LINKER=				Blink
LINKER_OPTS=		ADDSYM SC SD MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16 BUFSIZE 4096
LINKER_OPTS_STRIP=	ND BUFSIZE 4096

C_SOURCES=		apsh_main.c apsh_lib.c apsh_msghandle.c apsh_dispatch.c \
			apsh_object.c apsh_projmng.c apsh_functable.c \
			apsh_clonesipc.c apsh_misc.c apsh_hyper.c apsh_version.c \
			apsh_stdfuncs.c wbarg.c snapshot.c \
			animtools.c apsh_arexx.c apsh_wb.c \
			apsh_stdidcmp.c apsh_pref.c apsh_dos.c apsh_idcmp.c \
			apsh_sipc.c apsh_tool.c apsh_winnode.c appshellc.c \
			apsh_locale.c

ASM_SOURCES=		appshella.asm sprintf.asm string.asm findnamei.asm \
			hookface.asm rexxvars.asm dispatchregs.asm

OBJECTS=		apsh_main.o apsh_lib.o apsh_msghandle.o apsh_dispatch.o \
			apsh_object.o apsh_projmng.o apsh_functable.o \
			apsh_clonesipc.o apsh_misc.o apsh_hyper.o appshellc.o \
			apsh_version.o sprintf.o \
			string.o findnamei.o apsh_stdfuncs.o wbarg.o snapshot.o \
			animtools.o dispatchregs.o hookface.o apsh_arexx.o \
			apsh_wb.o apsh_stdidcmp.o apsh_pref.o apsh_dos.o \
			apsh_idcmp.o apsh_sipc.o apsh_tool.o apsh_winnode.o \
			rexxvars.o appshella.o apsh_locale.o

#
#STARTUP=		appshella.o
#

LIBS=			LIB:debug.lib LIB:amiga.lib LIB:lc.lib

##############################################################################
# Build the stripped load file...
#
$(LD_STRIP):	$(LD_FILE)
		$(LINKER) FROM $(LD_FILE) TO $(LD_STRIP) $(LINKER_OPTS_STRIP)

##############################################################################
# Build the load file...
#
$(LD_FILE):	$(OBJECTS) $(LIBS)

		$(LINKER) <with <
FROM $(OBJECTS) TO $(LD_FILE) LIB $(LIBS) $(LINKER_OPTS)
<

##############################################################################
# Default rules...
#
.c.o:
	$(C_COMPILER) $(C_DEBUG) $(C_COMPILER_OPTS) $*.c

.asm.o:
	$(ASSEMBLER) $*.asm $(ASSEMBLER_OPTS) $*.o


##############################################################################
# All dependencies...
#


##############################################################################
# Bump the version...
#
version:
	@@BumpRev $(VERSION) $(MODNAME)_rev
	@@Touch appshella.asm


##############################################################################
# Delete all object files
#
clean:
	@@Delete $(OBJECTS)
	@@Delete $(LD_FILE) $(LD_STRIP) $(MODNAME).map


##############################################################################
# Build autodoc
#
$(MODNAME).doc:	autodocs.asm
		@@Autodoc >$(MODNAME).doc autodocs.asm



##############################################################################
# Release the current build to the server...
#
internal:
	@@Delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc|library))|lmkfile)
	@@protect ((\#?.(c|h|asm|i|ld|rev|doc))|lmkfile|$(LD_STRIP)) +r quiet
	@@copy \#?.(strip|ld|doc|library) \#?_rev.\#? $(REMOTE)


##############################################################################
# Cross-load the new version into the system
#
xload:
	@@copy $(LD_STRIP) SCRATCH:LIBS/
	@@flush
	@@setclock load
	@@version $(LD_STRIP)
	@@bumprev $(VERSION) $(MODNAME)_rev
	@@Touch appshella.asm

##############################################################################
# Generate all internal prototypes
#
mkproto:
	$(C_COMPILER) -pi $*.c
@


1.5
log
@Locale additions made
@
text
@d6 2
a7 1
LD_FILE=			$(MODNAME).library
d10 2
a11 1
C_COMPILER_OPTS=	-b0 -cfis -ms -me -v -d2
d17 2
a18 1
LINKER_OPTS=		ADDSYM SC SD MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16 ND
d23 1
a23 1
			apsh_deftext.c apsh_stdfuncs.c wbarg.c snapshot.c \
d35 1
a35 1
			apsh_version.o apsh_deftext.o sprintf.o \
d49 6
d67 1
a67 1
	$(C_COMPILER) $(C_COMPILER_OPTS) $*.c
d91 1
a91 1
	@@Delete $(LD_FILE) $(MODNAME).map
d115 1
a115 1
	@@copy $(LD_FILE) SCRATCH:LIBS/
d118 1
a118 1
	@@version $(LD_FILE)
d122 5
@


1.4
log
@Serious revision in structure.  This new version is a lot more coherent
in terms of figuring out what does what.  It does have the unfortunate
side-effect of being able to crash BLINK if the stack isnt set to around
40K before triggering LMK.
@
text
@d1 2
a2 2
MODNAME=		appshell
VERSION=		37
d4 1
a4 1
REMOTE=			AES:
d6 1
a6 2
LD_FILE=		$(MODNAME).library
LD_STRIP=		$(MODNAME).ld.strip
d8 1
a8 1
C_COMPILER=		LC
d11 1
a11 1
ASSEMBLER=		hx68 -a
d14 1
a14 1
LINKER=			Blink
a15 1
LINKER_OPTS_STRIP=	ND
d23 2
a24 1
			apsh_sipc.c apsh_tool.c apsh_winnode.c appshellc.c
d37 1
a37 1
			rexxvars.o
d39 4
a42 1
STARTUP=		appshella.o
a45 6
# Build the stripped load file...
#
#$(LD_STRIP):	$(LD_FILE)
#		$(LINKER) FROM $(LD_FILE) TO $(LD_STRIP) $(LINKER_OPTS_STRIP)

##############################################################################
d51 1
a51 1
FROM $(STARTUP) $(OBJECTS) TO $(LD_FILE) LIB $(LIBS) $(LINKER_OPTS)
d74 1
d82 1
a82 1
	@@Delete $(LD_FILE) $(LD_STRIP) $(MODNAME).map
d100 12
@


1.3
log
@This version is cleaned up for use from V37.4 Includes
@
text
@d1 2
a2 3
# lmk file for appshell.library & appshell.lib
# Copyright (C) 1989, 1990 Commodore-Amiga, Inc.
# written by David N. Junod
d4 1
a4 12
MAINOB1 = apsh_main.o apsh_lib.o apsh_msghandle.o apsh_dispatch.o apsh_object.o
MAINOB2 = apsh_projmng.o apsh_functable.o apsh_clonesipc.o apsh_misc.o apsh_hyper.o
MAINOB3 = appshellc.o appshella.o apsh_version.o
SUPP1	= apsh_deftext.o sprintf.o string.o findnamei.o
# rexxvars.o
SUPP2	= apsh_stdfuncs.o wbarg.o snapshot.o animtools.o dispatchregs.o hookface.o
HNDLRS1 = apsh_arexx.o apsh_wb.o apsh_stdidcmp.o apsh_pref.o
HNDLRS2 = apsh_dos.o apsh_idcmp.o apsh_sipc.o apsh_tool.o apsh_winnode.o
OBJECTS = $(MAINOB1) $(MAINOB2) $(SUPP1) $(SUPP2) $(HNDLRS1) $(HNDLRS2)
CFLAGS	= -cfis -ms -me -v -d2 -b0 -O
MODNAME	= appshell
VERSION	= 37
d6 33
a38 2
.c.o:   $(MODNAME).h
	lc $(CFLAGS) $*
d40 24
d65 2
a66 1
	hx68 -a $*.asm -i include: -o $*.o
d68 3
a70 1
all:	$(MODNAME).lib $(MODNAME).h LIBS:$(MODNAME).library lmkfile
a71 16
LIBS:$(MODNAME).library: $(MODNAME).library $(OBJECTS)
	COPY $(MODNAME).library LIBS:
	FLUSHLIBS
	SETCLOCK LOAD

$(MODNAME).library:  $(MODNAME)a.o $(MODNAME)c.o $(MODNAME)_pragmas.h $(OBJECTS) $(MODNAME).with
	BLINK WITH $(MODNAME).with

$(MODNAME)_pragmas.h:  $(MODNAME).fd
	FD2PRAGMA $(MODNAME).fd $(MODNAME)_pragmas.h
	COPY $(MODNAME)_pragmas.h INCLUDE:pragmas
	COPY $(MODNAME)_pragmas.h INCLUDE:internal

$(MODNAME).lib: $(OBJECTS)
	bumprev $(VERSION) $(MODNAME)_rev
	lc $(CFLAGS) apsh_version
d84 3
a86 1
	@@Delete $(OBJECTS) $(MODNAME).map
d88 6
d95 1
d103 1
@


1.2
log
@updated for rcs
@
text
@d11 1
a11 1
HNDLRS1 = apsh_arexx.o lib:rexxglue.o apsh_wb.o apsh_stdidcmp.o apsh_pref.o
d22 1
a22 1
	casm -a $*.asm -i include: -o $*.o
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
COFILES = $(MAINOB1) $(MAINOB2) $(SUPP1) $(SUPP2) $(HNDLRS1) $(HNDLRS2)
d15 2
d18 1
a18 1
.c.o:   appshell.h
d24 1
a24 1
all:	appshell.lib appshell.h LIBS:appshell.library lmkfile
d26 2
a27 2
LIBS:appshell.library: appshell.library $(COFILES)
	COPY appshell.library LIBS:
d31 2
a32 2
appshell.library:  appshella.o appshellc.o appshell_pragmas.h $(COFILES) appshell.with
	BLINK WITH appshell.with
d34 4
a37 4
appshell_pragmas.h:  appshell.fd
	FD2PRAGMA appshell.fd appshell_pragmas.h
	COPY appshell_pragmas.h INCLUDE:proto
	COPY appshell_pragmas.h INCLUDE:internal
d39 2
a40 2
appshell.lib: $(COFILES)
	bumprev 37 appshell_rev
d42 22
@
