OptCD/CDFS FSE
--------------

PURPOSE
-------

	Monitor certain file system events in CDFS in order to determine
optimim layout of files on the ISO volume.  OptCD has controlled monitoring
that provides data concerning when files or directories are accessed.  This
is then used to rearrange the file and dir ordering using some type of
statistical analysis.

DESCRIPTION:

	OptCD monitors the following events:

Code/Bit	Event				Info
--------	-----				----
0		All DOS Packets			Type/Arg1/Arg2/Arg3

1		File Read			Name/Block/Length

2		Dir Read (Not Cache)		Block (name not needed!)
3		Dir Read (Cache)		Block (name not needed!)

4		Block Read (Not Cache)		Block
5		Block Read (Cache)		Block

6		Lowest level read		Block/Length

7-31		<Unused>


GUI
---

- Separate screen, invoked by special key?
- Separate process handling FSE message port/saving to file/etc.
- Layout:

	"Actions"
		- Optimize
		- Record/Stop

	"Files"
		- Statistics File
		- Layout File
			- Load:
				1) Ignore Options and PathTable
				2) Load Order List (use pools)
			- Save:
				1) If the "save" name is the same as the
				   "load" name:
					a) Rename <file> to <file>.bak
					b) Transfer Options and PathTable from
					   <file>.bak to <file>
					c) Write out new order
					d) Remove <file>.bak
				2) Otherwise:
					a) Transfer Options and PathTable from
					   old to new.
					b) Write out new order

	"Options"
		- Stat Options
			- Ignore Dir hits
			- Optimize most hit/Optimize access order
			- ...?
		- Record Level
		- Record Buffer Size

	"Status"


CDFS FSE FUNCTIONS
------------------

Available to outside (to OptCD):

InitFSE:
	- check if in use (Semaphore)
	- pass pool memory and size
	- set up port to communicate FSE messages

StartFSE:
	- allow collection to start (when events are passed to FSE, they
	  will be put in pool and sent)

StopFSE:
	- turn off collection

SetFSELevel:
	- change monitoring level

ReplyFSE:
	- return message to pool

QuitFSE:
	- check for ownership
	- StopFSE
	- remove port

Internal to CDFS:

FSE:
	- generate FSE message
	- if pool is full, will re-use and inform OptCD somehow.

SetupFSE:
	- Internal initialization


CDFS CHANGES
------------

Added:
	FSE.c/h		Monitor
	Extra.asm	Additional exec calls (could go into lib.asm)

Changed:
	global.h	FSE Data
	start.asm	FSE Library Calls
	init.c		Init FSE
	main.c		Packet Trap
	cdio.c		Various Read Traps
	file.c		ReadFile Trap


CDFS READ OPERATIONS
--------------------

LockToDir/FindFile/FindKey/NextFile/ExamineNext/SetVolFileInfo
  |
 \|/
GetDirBlock (M2/3)			  ReadFile (M1)
  |					    |	|
  |					   \|/	|
  |------------------------------------------	|
  |						|
 \|/						|
ReadBlock (M4/5)	FindPVD/BootOptions	|
  |			    |			|
  |			   \|/			|
  |--------------------------			|
  |						|
 \|/						|
ReadCD			MakePathTable		|ReadFile (DirectRead & >Cache & !ODD)
  |			    |			|
  |			   \|/		       \|/
  |----------------------------------------------
  |
 \|/
ReadBytes (M6)


Monitor Elements:

M0: All DOS Packets		Type/Arg1/Arg2/Arg3
M1: File Read			Block/Length/Name
M2: Dir Read (Not Cache)	Block (name not needed!)
M3: Dir Read (Cache)		Block (name not needed!)
M4: Block Read (Not Cache)	Block
M5: Block Read (Cache)		Block
M6: Lowest level read		Block/Length


NEW OPTCD DEFINITION (2729)
---------------------------

Separate program for monitoring:
	OptCD <stat file>
		-b<n>	  buffer size in K (default 8)
		-m<#...>  events to monitor (default 123)
			  0:	All DOS Packets
			  1:	File Read
			  2:	Dir Read (Not Cache)
			  3:	Dir Read (Cache)
			  4:	Block Read (Not Cache)
			  5:	Block Read (Cache)
			  6:	Lowest level read

Optimization is now an option to ISOCD.  Changes to ISOCD:
	- Find File/Add/Remove Space moved to menus
	- build moves to right and Optimize button is below (four spaced)
	- Optimize button:
		- Need layout file loaded (positions will be available)
		- Ask for statistics file
		- Optimize options window
			- Ignore Dir stats
			- Float all dirs to head of list
			- OK/CANCEL
		- Optimize/change list
		- ghost Opt button
