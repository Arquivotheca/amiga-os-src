==========
amiga.com/bugs1.4 #1, from afinkel, 123 chars, Fri Jun 30 18:35:47 1989
Comment(s). 
----------
TITLE: So that's what alpha means...
Yes, we have bugs.  Here's where we'd like to hear about
them, so they can be fixed.


==========
amiga.com/bugs1.4 #2, from papa, 627 chars, Sat Jul  1 02:31:11 1989
Comment(s). 
----------
TITLE: repost of bug report
This was posted on the MANX group:
manx.aztec/amiga #1584, from peabody, 464 chars, Sat Jul  1 02:00:55 1989
--------------------------
TITLE: 1.4
Aztec C startup code breaks under 1.4 Alpha 15.

The WBench part of the startup code assumes that pr_COS and pr_CIS are
NULL.  With 1.4 Alpha 15, they aren't and the exit will try to close
these file handles and cause general nastiness.  The fix is to make the
default state of file handles 0, 1, & 2 to be O_STDIO like are currently
done for 0 and 1 for CLI startup.  These bits need to be cleared in _wb_parse()
if a file is actually opened, though.

==========
amiga.com/bugs1.4 #3, from jdow, 525 chars, Sat Jul  1 04:03:09 1989
Comment to 1. Comment(s). 
----------
Well, Andy, I would LOVE to tell you about bugs. But with autoboot broken and
something that will not keep running for me for more than 2 minutes that is
REAL hard. I have not learned how to "baby" it into working long enough to 
even alter the screen dimensions. It freezes on me too fast. I cannot put in a
ROM tower because that breaks under the HF autobooting. If there is a way
to get a temporary interim fix that has even that small thing fixed I could
begin some serious testing. And so could a bunch of others.
{o.o}

==========
amiga.com/bugs1.4 #4, from jmackraz, 290 chars, Sat Jul  1 14:49:47 1989
Comment to 2. Comment(s). More refs to 2.
----------
Now, it sounds like if you start an Aztec program it will
work the first time, but later it might not?

Could this be the "my program doesn't load" problem?

Clearly, we can't patch every Aztec application, so this has
severe compatibility implications.

OK DOS guys: bend over. ;^)

	jimm

==========
amiga.com/bugs1.4 #5, from jmackraz, 243 chars, Sat Jul  1 14:51:59 1989
Comment to 3. More refs to 3.
----------
Take this thought back to amiga.com/1.4.  Use this topic for
discussion of problems, not ragging about how it's impossible
to test.  That topic has been addressed ad nauseum in the other
topic.

The problem with autoboot has been noted.
	jimm

==========
amiga.com/bugs1.4 #6, from cheath, 300 chars, Sat Jul  1 16:27:21 1989
Comment to 4. More refs to 4.
----------
There's also a thread in amiga/arp.beta on the WB filehandle stuff.  It's
not work-first-time, but crash-on-exit, I think.  I suggested leaving
the file handles NULL in WB processes, having dos.library detech NULL
handles for file operations, and getting the toolwindow stuff working
in WB and Info.

==========
amiga.com/bugs1.4 #7, from rjesup, 342 chars, Sun Jul  2 01:07:57 1989
Comment to 4. Comment(s). 
----------
Don't say it!  Manx startup ASSUMES CIS and COS are NULL?  ARGH!

I'm not too suprised, really.  THe question is, how well would it deal with
_real_ filehandles for CIS/COS?  I take it from the commment that it closes
CIS/COS if they're non-null and it was started from WB?  Does it at least
null them out after closing them?

argh

	Randell

==========
amiga.com/bugs1.4 #8, from cheath, 207 chars, Sun Jul  2 03:08:06 1989
Comment to 7. Comment(s). More refs to 7.
----------
I think MANX ignores the handles, and installs its own, which are
closed before exit.

What is the purpose of passing in filehandles to WB processes?  Why
not just properly implement the "toolwindow" stuff?

==========
amiga.com/bugs1.4 #9, from jmackraz, 38 chars, Sun Jul  2 13:14:58 1989
Comment to 7. 
----------
..... bend ...... over ........
	jimm

==========
amiga.com/bugs1.4 #10, from jtoebes, 169 chars, Sun Jul  2 19:09:34 1989
Comment to 8. Comment(s). More refs to 8.
----------
If I read the standard Commodore supplied startup in the RKM, it will break
when the toolwindow is passed correctly.  There was a thread discussing this
some time back.

==========
amiga.com/bugs1.4 #11, from cheath, 133 chars, Mon Jul  3 02:18:16 1989
Comment to 10. 
----------
Yup, it appears to not close the window on exit.  It doesn't actually
set the pr_ IO handles, just sets up C variables "_stdin" etc.

==========
amiga.com/bugs1.4 #12, from bnesbitt, 118 chars, Fri Jul  7 16:33:08 1989
Comment to 3. 
----------
There now exists a version of Kickstart that should boot a HardFrame.
How it will be distributed is another matter...

==========
amiga.com/bugs1.4 #13, from rjesup, 310 chars, Sat Jul  8 16:37:40 1989
Comment to 8. Comment(s). 
----------
Another reason is that we may wish to pass something other than what you can
do with a working ToolWindow.  We're trying to increase the merging of
WB and CLI/Shell environments (in particular the "can only be run from WB"
or "can only be run from CLI" or "you can't do that from WB", etc problems).

	Randell

==========
amiga.com/bugs1.4 #14, from cheath, 635 chars, Sat Jul  8 18:26:04 1989
Comment to 13. Comment(s). 
----------
I think at this point it can't be done without creating a lot of ripples.
No need to penalize the people who have managed to get things to work for
retrofittable fixes to those that don't, IMHO.  Probably the long term
solution is to beef up WB messages a bit, and have all programs use
them (even CLI programs; pass in a "Command Line" as one of the WB toolwindow
args).  I'd add a callout to DOS which would be called prior to any
startup handling, which would handle startup messages and command lines
and whatever and spit out a unified startup whatzit; and also would install
whatever Exit() handling code the program would need.

==========
amiga.com/bugs1.4 #15, from jtoebes, 555 chars, Sat Jul  8 19:29:35 1989
Comment to 14. Comment(s). 
----------
I would not like to see everything go the way of the workbench message.  If
anything, we should consider both approaches at the same time.  By passing
a command line constructed from the workbench arguments and the workbench
message, you achieve compatibility also.  I think that it is pretty much
too late to get rid of either method.  We should consider a solution to pass  
in the PR_CIS/PR_COS without breaking existing code.  However, implementing
the toolwindow will break the C= supplied startup (a topic already discussed
many times in the past).

==========
amiga.com/bugs1.4 #16, from cheath, 768 chars, Sat Jul  8 20:01:54 1989
Comment to 15. Comment(s). 
----------
It would be possible to define a "new" toolwindow field in the WB
message, in an extended structure.  FIt would not be easy for applications,
but would at least be possible.

WB could also be real tricky with the file handles; save copies of the
handles that are passed, and on exit scan the files list to see if
they haven't already been closed.  Probably too tricky, since it would
be possible for another filehandle to be
located in the same memory.

For things just to be able to run without breaking, treating null filehandles
like NIL: would do most of the job, at the dos.library level.  Though it
would not solve things for packet senders, packet senders should be
smart enough to be checking for null handles and at any rate are a small
minority of programs.

==========
amiga.com/bugs1.4 #17, from jtoebes, 475 chars, Sat Jul  8 21:58:31 1989
Comment to 16. Comment(s). 
----------
I really don't like the idea of allowing NULL to fail silently in the DOS.LIBRARY.
I want the Amiga to scream, hiccup, crash, burn, and whatever else for the 
developer who 'forgets' to open the file and then starts doing I/O to the
Null handle.  Remember that the new scheme also allows programs to actually
get input when run from workbench.  I do like the idea of extending the
structure to have a different ToolWindow.  However, this doesn't address the
problem at hand.

==========
amiga.com/bugs1.4 #18, from vertex, 169 chars, Sat Jul  8 22:21:50 1989
Comment to 17. Comment(s). 
----------
I wouldn't mind being able to do a CLose() on a NULL file. Just like Exec
will allow CloseLibrary() of NULL. Very convenient, and makes user code
look somewhat cleaner.

==========
amiga.com/bugs1.4 #19, from jtoebes, 349 chars, Sat Jul  8 22:27:18 1989
Comment to 18. Comment(s). 
----------
I think Close() already handles this case.  What it doesn't handle is a close
twice of the same handle.  I really like the FFS response to this situation -
In my case - crashola the hard disk.  Perhaps we are attacking this problem
for a bad angle.  Is there anything we can do to catch the 'close twice'
situations and make the system more robust?

==========
amiga.com/bugs1.4 #20, from cheath, 467 chars, Sun Jul  9 00:55:13 1989
Comment to 19. Comment(s). More refs to 19.
----------
One of the ideas I almost suggested was to have Close() validate that
a filehandle is actually open.  But even if that information were
easy to obtain (I don't think it is, isn't it filesystem private?), it
wouldn't be a complete safety net since the same memory would be likely
to be re-allocated as a different filehandle.

Close twice sounds like the filesystem should be able to handle it
by setting the contents of the filehandle memory to some innocuous
state.

==========
amiga.com/bugs1.4 #21, from jtoebes, 280 chars, Sun Jul  9 09:17:42 1989
Comment to 20. Comment(s). 
----------
It is possible for a file system to track the file handles.  However, one problem
with it is that the FFS uses pseudo-tasking and the place where it would
validate the file handle it is too late.  In our file system we do validate
the file handle before allowing it to be closed.

==========
amiga.com/bugs1.4 #22, from djwalker, 375 chars, Mon Jul 10 01:36:42 1989
Comment to 21. Comment(s). 
----------
With regard to dos.library and NULL filehandles, I think both of you
are right.  Doing IO to NULL filehandles shouldn't crash the system;
but it should do something drastic and ugly so developers don't rely
on that.  A nasty error message in the WB titlebar, or even a requester,
would do the trick.  As long as the requester doesn't say "Software error -
task held".
--Doug

==========
amiga.com/bugs1.4 #23, from bnesbitt, 335 chars, Thu Jul 13 19:22:08 1989
Comment to 19. Comment(s). 
----------
I advocate that FFS should trash the memory taken up by filehandles
on close.  Before doing a close operation, FFS would check certain
critical structure members for -1, and pull a recoverable alert if
the handle was trashed.

V1.4 Exec is also much better about destroying IORequests and pointers
after an item is closed.

				-Bryce

==========
amiga.com/bugs1.4 #24, from rjesup, 300 chars, Sun Jul 16 20:15:13 1989
Comment to 23. 
----------
Well, maybe that should be in dos.library (or a combination).  Dos owns the
filehandle, the FS owns the value pointed to be Arg1 (usually a Lock).

Certainly this can (and will) be done in the "sysmung" (aka torture test)
Dos, and probably is small enough to be reasonable for release Dos.

	Randell

==========
amiga.com/bugs1.4 #25, from dberezowski, 89 chars, Mon Jul 24 14:15:15 1989
Comment to 2. 
----------
	This has been fixed for Alpha 16 (atually actually, I just leave the fields
NULL).  

==========
amiga.com/bugs1.4 #26, from peabody, 73 chars, Tue Jul 25 23:01:36 1989
Comment to 22. 
----------
Something like "The author of FooPaint II screwed up severely!" perhaps?

==========
amiga.com/bugs1.4 #27, from peabody, 1327 chars, Mon Jul 31 00:12:10 1989
Comment(s). 
----------
TITLE: 1.4 bugs

Alpha 15A

1.  Some files fail to get matched on a directory scan (List #? or
    Workbench icon scan).  On the DPaintIII program disk, the DPaintIII
    icon doesn't show up and DPaintIII.info doesn't show up when the
    directory is List'ed from the CLI.  This file only gets matched in List
    when it's entire name is specified (i.e. List dpaintiii.info).

2.  On a 3 bit plane 640 x 400 screen I get a lot of phantom images of the
    mouse pointer (either mouse jumps or sprite is drawn in the wrong
    place) during window open/close and menu operations.  I'll have to play
    with this more to give a more specific report.

3.  String gadgets don't behave like 1.3 string gadgets when:

	font = topaz/8
	width = maxchars * 8	(not maxchars-1 to avoid scrolling on last
				character)

    Under 1.3 a string gadget like this backfills a rectangle whose width
    is ((maxchars-1) * 8).  Under 1.4 this string gadget fills a width of
    (maxchars * 8) (i.e. width).  For a monospace font, the behavior should
    be identical to 1.3, but it currently isn't.  I posted a program called
    sgtest.c to amiga.dev/main to demonstrate this.

4.  Version of CreateExtIO that permits ReplyPort to be NULL.  This is
    handy for certain devices that permit some immediate calls like
    gameport.device.


==========
amiga.com/bugs1.4 #28, from jmackraz, 97 chars, Mon Jul 31 18:59:13 1989
Comment to 27. More refs to 27.
----------
Your very precise analysis allowed me to nail item 3 just now.
Thanks.  I missed the (-1).
	jimm

==========
amiga.com/bugs1.4 #29, from peabody, 186 chars, Tue Aug  1 00:32:26 1989
Comment to 27. 
----------
Oops, #4 was meant to go into my 1.4 suggestions list (both lists
were compiled from a bunch of notes I made while perusing 1.4).  See
the other list in amiga.com/1.4 for more of these.

==========
amiga.com/bugs1.4 #30, from peabody, 1203 chars, Wed Aug  2 00:13:14 1989
Comment(s). 
----------
TITLE: DELTAMOVE MOUSEMOVE incompatibility

version: Alpha 15A

DELTAMOVE MOUSEMOVE IDCMP events behave differently under 1.4 Alpha 15A
than they do under 1.3.  Under 1.3 you always get MOUSEMOVE events
regardless of whether the mouse has bumped into a screen edge or not.
The delta values in the IntuiMessage are those from the InputEvent and
are real handy if you don't want your processing of mouse moves to be
constrained by the actual mouse position.

Under 1.4 you stop getting MOUSEMOVE events as soon as the mouse hits a
screen edge or corner.	While this may or may not be the correct thing
for DELTAMOVE MOUSEMOVES to do, it is inconisistent with the behavior of
1.3 and should not be changed.	Use a new bit if you really want this
kind of behavior for DELTAMOVES.

The application that this affects is one in which we want to generate
mouse coordinates beyond those of the screen.  Under 1.3 we can use
DELTAMOVE MOUSEMOVES to generate unconstrained mouse moves. Under 1.4,
the only way to do that is to use an Input Device handler.  It would be
nice to continue using the higher level approach, IDCMP, since it makes
everything much simpler to deal with from the programming point of view.



==========
amiga.com/bugs1.4 #31, from jmackraz, 475 chars, Wed Aug  2 14:39:50 1989
Comment to 30. Comment(s). 
----------
Yes, known mistake.  You SHOULD be getting the deltamoves: it's
one of the (few) things they are good for.

I have rewritten the entire area for releases greater than alpha 16.

There may be some more issues.  Please keep an eye on this area,
since I have not got an abundance of test programs for it.

Part of the trick is to make pointerpos events convert to deltas
correctly, and deltas not to be scaled by preferences pointer speed
options or my (new) accelerator.

	jmm

==========
amiga.com/bugs1.4 #32, from vertex, 124 chars, Wed Aug  2 15:00:45 1989
Comment to 31. Comment(s). 
----------
How much of Intuition have you now rewritten? It's just to know what % of blame
to put on you or RJ when a bug crops up :-)

==========
amiga.com/bugs1.4 #33, from jmackraz, 122 chars, Thu Aug  3 17:49:53 1989
Comment to 32. Comment(s). 
----------
My code is the stuff that lookslike this:

	if ( foo )
	{
		bar;
	}

RJ's looks like this:
	if (foo)
		{
		bar;
		}

jimm

==========
amiga.com/bugs1.4 #34, from djwalker, 281 chars, Fri Aug  4 00:26:24 1989
Comment to 33. Comment(s). More refs to 33.
----------
I'm with you, jimm - my illustrious predecessors on the Lattice compiler
used RJ's style, I can't stand it.  I've been slowly converting it as I
rewrite sections.  I like to let my eye travel from brace to brace, and I
lose the braces in the busy-ness if they are indented.
--Doug

==========
amiga.com/bugs1.4 #35, from jdow, 83 chars, Fri Aug  4 03:32:38 1989
Comment to 34. Comment(s). More refs to 34.
----------
Ind if Kodiak got his hands in there anywhere it is

	if ( foo ) {
		bar;
	}
{@_@}

==========
amiga.com/bugs1.4 #36, from afinkel, 225 chars, Fri Aug  4 13:58:20 1989
Comment to 35. Comment(s). 
----------
which is the proper style, IMHO.  (or close to it, anyway...I would say

    if (foo) {
        bar;
    }

Of course I was taught by brace style by Electric-C mode of Gosling's
emacs, so I may be a little biased :-)

		andy

==========
amiga.com/bugs1.4 #37, from jmackraz, 50 chars, Fri Aug  4 15:00:20 1989
Comment to 36. More refs to 36.
----------
Yes, this last is acceptable.
Back to bugs.
	jimm

==========
amiga.com/bugs1.4 #38, from jdow, 53 chars, Fri Aug  4 15:18:14 1989
Comment to 36. More refs to 36.
----------
Er view that example with tabs set every four. <^_->

==========
amiga.com/bugs1.4 #39, from vertex, 42 chars, Fri Aug  4 15:26:08 1989
Comment to 36. Comment(s). More refs to 36.
----------
Simpler to do:

  IF foo THEN
  END;

:-)

==========
amiga.com/bugs1.4 #40, from jdow, 231 chars, Fri Aug  4 15:42:13 1989
Comment to 39. Comment(s). More refs to 39.
----------
Um  - ah - er - oops. Looks like you have forgotten to put "bar;" in there
Martin. Or am I misreading the program in all that M2 baroque clutter.
<^_->	<- NOTE the wink! <^_-> I just HADTA get the dig in. The devil made
	me do it.

==========
amiga.com/bugs1.4 #41, from vertex, 126 chars, Fri Aug  4 15:44:32 1989
Comment to 40. 
----------
That does it! Send me back that copy of M2Sprint I sent you :-)
Yeah, I noticed I forgot bar in there right after I did a<CR>

==========
amiga.com/bugs1.4 #42, from gary_samad, 149 chars, Fri Aug  4 17:24:24 1989
Comment to 33. 
----------
Good, Jim!  That is the way that I indent as well!
I find the latter method very difficult to read, especially when the
levels become nested.

	Gary

==========
amiga.com/bugs1.4 #43, from jkaisler, 38 chars, Fri Aug  4 19:57:58 1989
Comment to 36. Comment(s). More refs to 36.
----------
How about:
   if ( foo ) {
    bar;}


==========
amiga.com/bugs1.4 #44, from jmackraz, 60 chars, Fri Aug  4 20:59:59 1989
Comment to 43. More refs to 43.
----------
Ick.  I'm sorry I brought it up.
Back To Bug Reports.
	jimm

==========
amiga.com/bugs1.4 #45, from jdow, 64 chars, Sat Aug  5 02:48:28 1989
Comment to 43. Comment(s). More refs to 43.
----------
How about:
	if(foo){bar;}
{O,o}
	I think we've milked this one.

==========
amiga.com/bugs1.4 #46, from radical.eye, 105 chars, Sat Aug  5 05:07:48 1989
Comment to 45. 
----------
Nope.  How about when finding bugs in a compiler:
if

(

fo

o

)

{

bar

;

}

(You wanted bugs, Jim.)

==========
amiga.com/bugs1.4 #47, from grr, 139 chars, Sat Aug  5 10:55:37 1989
Comment to 39. Comment(s). 
----------
as long as: #define IF if(  #define THEN ){  #define ELSE }else{  #define END }
is what's backing it up and not some wirthless language...

==========
amiga.com/bugs1.4 #48, from vertex, 28 chars, Sat Aug  5 10:59:06 1989
Comment to 47. 
----------
A little respect here!! :-)

==========
amiga.com/bugs1.4 #49, from checkpoint, 86 chars, Sat Aug  5 11:52:12 1989
Comment to 43. 
----------
Heck, if all you're worried about is how well the C compiler can read it:
if(foo)bar;

==========
amiga.com/bugs1.4 #50, from bnesbitt, 179 chars, Sun Aug  6 22:54:42 1989
Comment to 34. Comment(s). 
----------
Thank your lucky stars that those predecessors were not aflicted
by the disease that causes this brace style [ :-) ]:

		if (foostuff) {
			bar;
			}

(Insert 10,000  :-)'s here)

==========
amiga.com/bugs1.4 #51, from jmackraz, 77 chars, Mon Aug  7 13:37:23 1989
Comment to 50. 
----------
Jeez, that's worse.

	Jim "I love whitespace but not as much as Leo" Mackraz

==========
amiga.com/bugs1.4 #52, from hazy, 73 chars, Tue Aug  8 04:13:54 1989
Comment to 36. 
----------
Andy is certainly correct.  He also learned on the correct editor.
-Dave
