head     1.22;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.22
date     93.07.30.12.22.33;  author vertex;  state Exp;
branches ;
next     1.21;

1.21
date     93.07.29.12.25.01;  author vertex;  state Exp;
branches ;
next     1.20;

1.20
date     93.07.29.11.04.30;  author vertex;  state Exp;
branches ;
next     1.19;

1.19
date     93.07.28.13.23.05;  author vertex;  state Exp;
branches ;
next     1.18;

1.18
date     93.07.27.17.18.45;  author vertex;  state Exp;
branches ;
next     1.17;

1.17
date     93.07.27.17.04.11;  author vertex;  state Exp;
branches ;
next     1.16;

1.16
date     93.07.27.16.55.03;  author vertex;  state Exp;
branches ;
next     1.15;

1.15
date     93.07.27.15.56.12;  author vertex;  state Exp;
branches ;
next     1.14;

1.14
date     93.07.27.15.46.09;  author vertex;  state Exp;
branches ;
next     1.13;

1.13
date     93.07.27.15.38.02;  author vertex;  state Exp;
branches ;
next     1.12;

1.12
date     93.07.27.15.33.03;  author vertex;  state Exp;
branches ;
next     1.11;

1.11
date     93.07.27.14.21.04;  author vertex;  state Exp;
branches ;
next     1.10;

1.10
date     93.07.27.14.04.56;  author vertex;  state Exp;
branches ;
next     1.9;

1.9
date     93.05.12.10.32.54;  author chrisg;  state Exp;
branches ;
next     ;


desc
@master MakeMeta for use with BMAKE.
@


1.22
log
@*** empty log message ***
@
text
@##########################################################################
#
# $Id: makemeta,v 1.17 93/07/27 17:04:11 vertex Exp $
#
##########################################################################
pragma +m4096

ifndef $(ONEPROTOPERFILE)
    ONEPROTOPERFILE=
endif

ifndef $(SUBSYSNAME)
    SUBSYSNAME=
endif

ifndef $(SAS6OPTIONS)
    SAS6OPTIONS=
endif

ifndef $(COMPILER_OPTS)
    COMPILER_OPTS=$(SAS6OPTIONS)
endif

ifndef $(SAS5OPTIONS)
    SAS5OPTIONS=
endif

ifndef $(COMPILER_OPTS_5)
    COMPILER_OPTS_5=$(SAS5OPTIONS)
endif

ifndef $(ASSEMBLER_DEFINES)
    ASSEMBLER_DEFINES=
endif

ifndef $(COMPILER_DEFINES)
    COMPILER_DEFINES=
endif

ifndef $(NONRCS_FILES)
    NONRCS_FILES=
endif

ifndef $(OTHERFILES_NORCS)
    OTHERFILES_NORCS=$(NONRCS_FILES)
endif

ifndef $(CLEANFILES)
    CLEANFILES=
endif

ifndef $(PRE_COMPILE)
    PRE_COMPILE=
endif


ifndef $(PRE_INTERNAL)
    PRE_INTERNAL=
endif

ifndef $(POST_INTERNAL)
    POST_INTERNAL=
endif

ifndef $(SUBSYSTEMS)
    SUBSYSTEMS=
endif

ifndef $(PROTOINC)
    PROTOINC=
endif

ifndef $(PROTOINC2)
    PROTOINC2=
endif

ifndef $(AFILES)
    AFILES=
endif

ifndef $(AFILES2)
    AFILES2=
endif

ifndef $(AFILES3)
    AFILES3=
endif

ifndef $(ASMOPTS)
    ASMOPTS=
endif

ifndef $(ASSEMBLER_OPTS)
    ASSEMBLER_OPTS=$(ASMOPTS)
endif

ifndef $(CFILES)
    CFILES=
endif

ifndef $(CPPFILES)
    CPPFILES=
endif

ifndef $(HFILES)
    HFILES=
endif

ifndef $(PUBLIC_HFILES)
    PUBLIC_HFILES=$(HFILES)
endif

ifndef $(INFILES)
    INFILES=
endif

ifndef $(PUBLIC_IFILES)
    PUBLIC_IFILES=$(INFILES)
endif

ifndef $(STARTUP_OBJECT)
    STARTUP_OBJECT=
endif

ifndef $(INCLUDEDIR)
    INCLUDEDIR=
endif

ifndef $(LIBFILES)
    LIBFILES=
endif

ifndef $(LINKERLIBS)
    LINKERLIBS=LIB:amiga.lib
endif

ifndef $(LINKER_LIBS)
    LINKER_LIBS=$(LINKERLIBS)
endif

ifndef $(LINKEROPTS)
    LINKEROPTS=
endif

ifndef $(LINKER_OPTS)
    LINKER_OPTS=$(LINKEROPTS)
endif

ifndef $(LINKER_OPTS_STRIP)
    LINKER_OPTS_STRIP=NODEBUG
endif

ifndef $(TEMPDIR)
    TEMPDIR=
endif

ifndef $(ASM_PREPROCESSOR)
    ASM_PREPROCESSOR=
endif

ifndef $(CVERSION)
    CVERSION=6
endif

if eq($(CVERSION),6)
    DEFAULTLINKER= Slink
else
    DEFAULTLINKER= Blink
endif

ifndef $(LINKER)
    LINKER=$(DEFAULTLINKER)
endif

if eq($(CVERSION),6)
    DEFAULTCOMPILER= SC
else
    DEFAULTCOMPILER= LC
endif

ifndef $(COMPILER)
    COMPILER=$(DEFAULTCOMPILER)
endif

ifndef $(ASSEMBLER)
    ASSEMBLER=HX68
endif

ifndef $(MODULETYPE)
    MODULETYPE=kickstart
endif

ifndef $(HOMEDIR)
    HOMEDIR=V$(VERSION):src/$(MODULETYPE)/$(SYSTEM)
endif

ifndef $(HOMESFD)
    HOMESFD=V$(VERSION):lib/sfd
endif

ifndef $(HOMEDOC)
    HOMEDOC=V$(VERSION):doc
endif

ifndef $(HOMEINCL)
    HOMEINCL=V$(VERSION):include/$(SYSTEM)
endif

if neq($(SUBSYSNAME),)
    SERVERDIR=$(HOMEDIR)/$(SUBSYSNAME)
    MAINFILE=/$(SUBSYSNAME).lib
    SUBDOCS=
else
    SERVERDIR=$(HOMEDIR)
    MAINFILE=$(SYSTEM).ld
    LIBFILES=${addsuffix .lib,$(SUBSYSTEMS)}
    SUBDOCS=${addsuffix /autodoc.doc,$(SUBSYSTEMS)}
endif

RCSDIR=$(SERVERDIR)/RCS/
RCSFILES=$(CFILES) $(CPPFILES) $(AFILES) $(AFILES2) $(AFILES3) $(PUBLIC_HFILES) $(PUBLIC_IFILES) $(OTHERFILES)


all: $(MAINFILE)

.PHONY: all

.include dependencies

if eq($(TEMPDIR),)
    TEMPDIR=T:
endif

if eq($(INCLUDEDIR),)
    INCLUDEDIR=include:
endif

if eq($(ASSEMBLER_OPTS),)
    ASSEMBLER_OPTS=OPTIMON 0xfdc00000 ADDSYM DEBUG
endif

if eq($(LINKER),)
    LINKER=blink
endif


OFILES=${addsuffix .o,${basename $(AFILES)}} ${addsuffix .o,${basename $(CFILES)}} ${addsuffix .o,${basename $(CPPFILES)}} ${addsuffix .o,${basename $(AFILES2)}} ${addsuffix .o,${basename $(AFILES3)}}

rev: 	RCS_link
	bumprev $(VERSION) $(SYSTEM)_rev

version: RCS_link
	bumprev $(VERSION) $(SYSTEM)_rev

revlabel: RCS_link
	@@if eq($(SUBSYSNAME),)
		@@type $(SYSTEM)_rev.rev to $(TEMPDIR)rev
        @@endif
	@@if neq($(RCSFILES),)
		@@echo >T:r1 foreach i in $(RCSFILES)
		@@echo >>T:r1 rcs >NIL: -nV$(VERSION)_`type $(TEMPDIR)rev`: " " noline
		@@echo >>T:r1 $$i
		@@echo >>T:r1 end
		@@execute $(TEMPDIR)r1
		@@delete $(TEMPDIR)r1 quiet
 	@@endif
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:r2 foreach j in $(SUBSYSTEMS)
		@@echo >>T:r2 cd $$j
		@@echo >>T:r2 bmake revlabel
		@@echo >>T:r2 cd /
		@@echo >>T:r2 end
		@@execute $(TEMPDIR)r2
		@@delete $(TEMPDIR)r2 quiet
 	@@endif
	@@if eq($(SUBSYSNAME),)
		@@delete $(TEMPDIR)rev quiet
	@@endif

RCS_link:
	@@echo >RCS_link $(RCSDIR)

diff:
	@@if neq($(CFILES),)
		rcsdiff $(CFILES)
	@@endif
	@@if neq($(CPPFILES),)
		rcsdiff $(CPPFILES)
	@@endif
	@@if neq($(AFILES),)
		rcsdiff $(AFILES)
	@@endif
	@@if neq($(AFILES2),)
		rcsdiff $(AFILES2)
	@@endif
	@@if neq($(AFILES3),)
		rcsdiff $(AFILES3)
	@@endif
	@@if neq($(PUBLIC_HFILES),)
		rcsdiff $(PUBLIC_HFILES)
	@@endif
	@@if neq($(PUBLIC_IFILES),)
		rcsdiff $(PUBLIC_IFILES)
	@@endif
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:d1 foreach i in $(SUBSYSTEMS)
		@@echo >>T:d1 cd $$i
		@@echo >>T:d1 bmake diff
		@@echo >>T:d1 cd /
		@@echo >>T:d1 end
		@@execute $(TEMPDIR)d1
		@@delete $(TEMPDIR)d1 quiet
 	@@endif


checkout: RCS_link
	@@if neq($(CFILES),)
		co $(CFILES)
	@@endif
	@@if neq($(CPPFILES),)
		co $(CPPFILES)
	@@endif
	@@if neq($(OTHERFILES_NORCS),)
		@@echo >T:c1 foreach i in $(OTHERFILES_NORCS)
		@@echo >>T:c1 copy  $(SERVERDIR)/ noline
		@@echo >>T:c1 "$$i *"*""
		@@echo >>T:c1 end
		@@execute $(TEMPDIR)c1
		@@delete $(TEMPDIR)c1 QUIET
	@@endif
	@@if neq($(AFILES),)
		co $(AFILES)
	@@endif
	@@if neq($(AFILES2),)
		co $(AFILES2)
	@@endif
	@@if neq($(AFILES3),)
		co $(AFILES3)
	@@endif
	@@if neq($(PUBLIC_HFILES),)
		co $(PUBLIC_HFILES)
	@@endif
	@@if neq($(PUBLIC_IFILES),)
		co $(PUBLIC_IFILES)
	@@endif
	@@if neq($(OTHERFILES),)
		co $(OTHERFILES)
	@@endif
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:x1 foreach i in $(SUBSYSTEMS)
		@@echo >>T:x1  if not exists $$i
		@@echo >>T:x1   makedir $$i
		@@echo >>T:x1 endif
		@@echo >>T:x1 cd $$i
		@@echo >>T:x1 echo >RCS_link $(HOMEDIR)/ noline
		@@echo >>T:x1 $$i/RCS/
		@@echo >>T:x1  if not exists dependencies
		@@echo >>T:x1   echo >dependencies "**n"
		@@echo >>T:x1 endif
		@@echo >>T:x1 co makefile
		@@echo >>T:x1 bmake checkout
		@@echo >>T:x1 cd /
		@@echo >>T:x1 end
		@@execute $(TEMPDIR)x1
 	@@endif

checkoutlock: RCS_link
	@@if neq($(OTHERFILES_NORCS),)
		@@echo >T:c1 foreach j in $(OTHERFILES_NORCS)
		@@echo >>T:c1 copy $(SERVERDIR)/ noline
		@@echo >>T:c1 "$$j *"*""
		@@echo >>T:c1 end
		@@execute $(TEMPDIR)c1
		@@delete $(TEMPDIR)c1 QUIET
	@@endif
	@@if neq($(CFILES),)
		co -l $(CFILES)
	@@endif
	@@if neq($(CPPFILES),)
		co -l $(CPPFILES)
	@@endif
	@@if neq($(AFILES),)
		co -l $(AFILES)
	@@endif
	@@if neq($(AFILES2),)
		co -l $(AFILES2)
	@@endif
	@@if neq($(AFILES3),)
		co -l $(AFILES3)
	@@endif
	@@if neq($(PUBLIC_HFILES),)
		co -l $(PUBLIC_HFILES)
	@@endif
	@@if neq($(PUBLIC_IFILES),)
		co -l $(PUBLIC_IFILES)
	@@endif
	@@if neq($(OTHERFILES),)
		co -l $(OTHERFILES)
	@@endif
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:x1 foreach i in $(SUBSYSTEMS)
		@@echo >>T:x1  if not exists $$i
		@@echo >>T:x1   makedir $$i
		@@echo >>T:x1 endif
		@@echo >>T:x1 cd $$i
		@@echo >>T:x1 echo >RCS_link $(HOMEDIR)/ noline
		@@echo >>T:x1 $$i/RCS/
		@@echo >>T:x1  if not exists dependencies
		@@echo >>T:x1   echo >dependencies "*"*""
		@@echo >>T:x1 endif
		@@echo >>T:x1 co makefile
		@@echo >>T:x1 bmake checkoutlock
		@@echo >>T:x1 cd /
		@@echo >>T:x1 end
		@@execute $(TEMPDIR)x1
 	@@endif

checkinlocked:
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:x1 foreach i in $(SUBSYSTEMS)
		@@echo >>T:x1 cd $$i
		@@echo >>T:x1 echo >RCS_link $(HOMEDIR)/ noline
		@@echo >>T:x1 $$i/RCS/
		@@echo >>T:x1 bmake checkinlocked
		@@echo >>T:x1 cd /
		@@echo >>T:x1 end
		@@execute $(TEMPDIR)x1
 	@@endif
	@@if neq($(RCSFILES),)
		@@echo >T:x2 foreach j in $(RCSFILES)
		@@echo >>T:x2 echo -
		@@echo >>T:x2 echo Checkin $$j
		@@echo >>T:x2 ci -u -q $$j
		@@echo >>T:x2 rcs >NIL: -u $$j
		@@echo >>T:x2 end
		@@execute $(TEMPDIR)x2
	@@endif

%.asm: .INVISIBLE
	@@if nexists($@@)
		co -u $@@
	@@endif

%.c: .INVISIBLE
	@@if nexists($@@)
		co -u $@@
	@@endif

%.cpp: .INVISIBLE
	@@if nexists($@@)
		co -u $@@
	@@endif

%.o:%.asm
	@@if neq($(ASM_PREPROCESSOR),)
		@@$(ASM_PREPROCESSOR) $*.asm >T:tmp1.asm
		$(ASSEMBLER) from $(TEMPDIR)tmp1.asm TO $*.o INCDIR $(INCLUDEDIR) $(ASSEMBLER_OPTS) QUIET
	@@else
		$(ASSEMBLER) from $*.asm to $*.o INCDIR $(INCLUDEDIR) $(ASSEMBLER_OPTS) QUIET
	@@endif

%.o:%.c
	@@if neq($(ONEPROTOPERFILE),)
		$(COMPILER) NOGPDATA GENPROTO NOGENPROTOSTATIC DEFINE=MAKE_PROTOS INCLUDEDIRECTORY=$(INCLUDEDIR) $*.c
	@@endif
	@@if neq($(CVERSION),6)
		$(COMPILER) $(COMPILER_OPTS_5) ${addprefix -D,$(COMPILER_DEFINES)} -i$(INCLUDEDIR) -o$*.o $*.c
	@@else
		$(COMPILER) $(COMPILER_OPTS) ${addprefix DEFINE=,$(COMPILER_DEFINES)} INCLUDEDIR=$(INCLUDEDIR) OBJECTNAME=$*.o $*.c
	@@endif

%.o:%.cpp
	@@if neq($(ONEPROTOPERFILE),)
		$(COMPILER) NOGPDATA GENPROTO NOGENPROTOSTATIC DEFINE=MAKE_PROTOS INCLUDEDIRECTORY=$(INCLUDEDIR) $*.cpp
	@@endif
	@@if neq($(CVERSION),6)
		$(COMPILER) $(COMPILER_OPTS_5) ${addprefix -D,$(COMPILER_DEFINES)} -i$(INCLUDEDIR) -o$*.o $*.cpp
	@@else
		$(COMPILER) $(COMPILER_OPTS) ${addprefix DEFINE=,$(COMPILER_DEFINES)} INCLUDEDIR=$(INCLUDEDIR) OBJECTNAME=$*.o $*.cpp
	@@endif

%.lib:
	@@echo >T:l1 cd $*
	@@echo >>T:l1 bmake
	@@echo >>T:l1 cd /
	@@execute $(TEMPDIR)l1

$(MAINFILE): $(PRE_COMPILE) $(OFILES) $(LIBFILES) dependencies makefile
	@@if neq($(SUBSYSNAME),)
	   @@join #?.o as $(MAINFILE)
	@@else
	   $(LINKER) from $(STARTUP_OBJECT) $(OFILES) to $(MAINFILE) lib $(LIBFILES) $(LINKER_LIBS) $(LINKER_OPTS)
	   $(LINKER) from $(MAINFILE) to $(MAINFILE).strip $(LINKER_OPTS_STRIP)
	@@endif

clean:
	@@echo >bmake_d_temp.o "hello"
	@@delete $(MAINFILE) $(MAINFILE).strip #?.o #?.map #?.xref $(CLEANFILES) quiet
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:x1 foreach i in $(SUBSYSTEMS)
		@@echo >>T:x1 cd $$i
		@@echo >>T:x1 bmake clean
		@@echo >>T:x1 cd /
		@@echo >>T:x1 end
		@@execute $(TEMPDIR)x1
 	@@endif

doc:
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:x1 foreach i in $(SUBSYSTEMS)
		@@echo >>T:x1 cd $$i
		@@echo >>T:x1 bmake doc
		@@echo >>T:x1 cd /
		@@echo >>T:x1 end
		@@execute $(TEMPDIR)x1
 	@@endif
	@@if neq($(SUBSYSNAME),)
		@@join #?.asm #?.c #?.cpp as autodoc.doc
	@@else
		@@join #?.asm #?.c #?.cpp $(SUBDOCS) as $(TEMPDIR)$(SYSTEM).doc
		@@autodoc >$(SYSTEM).doc $(TEMPDIR)$(SYSTEM).doc
		@@copy $(SYSTEM).doc $(HOMEDOC) nopro
		@@delete $(TEMPDIR)$(SYSTEM).doc QUIET
	@@endif

headers:
	@@if neq($(PUBLIC_IFILES),)
		@@copy $(PUBLIC_IFILES) $(HOMEINCL) nopro
	@@endif
	@@if neq($(PUBLIC_HFILES),)
		@@copy $(PUBLIC_HFILES) $(HOMEINCL) nopro
	@@endif

protos:
	@@echo >$(SUBSYSNAME).protos "// automatically generated prototypes"
	@@echo >T:temp.perl "s/ /\n/g; print;"
	@@echo >T:x1 ""
	@@if neq($(CFILES),)
		@@echo >T:flist1 "${strip $(CFILES)}"
		@@perl -n $(TEMPDIR)temp.perl $(TEMPDIR)flist1 >T:flist2
		@@delete $(TEMPDIR)flist1 quiet
		@@echo >>T:x1 $(COMPILER) NOGPDATA GENPROTO NOGENPROTOSTATIC PARAMETERS=STACK DEFINE=MAKE_PROTOS INCLUDEDIRECTORY=$(INCLUDEDIR) with $(TEMPDIR)flist2
		@@echo >>T:x1 join #?_protos.h as $(SUBSYSNAME).protos
	@@endif
	@@if neq($(CPPFILES),)
		@@echo >T:flist1 "${strip $(CPPFILES)}"
		@@perl -n $(TEMPDIR)temp.perl $(TEMPDIR)flist1 >T:flist2
		@@delete $(TEMPDIR)flist1 quiet
		@@echo >>T:x1 $(COMPILER) NOGPDATA GENPROTO NOGENPROTOSTATIC PARAMETERS=STACK DEFINE=MAKE_PROTOS INCLUDEDIRECTORY=$(INCLUDEDIR) with $(TEMPDIR)flist2
		@@echo >>T:x1 join #?_protos.h as $(SUBSYSNAME).protos
	@@endif
	@@if neq($(AFILES),)
		@@echo >>T:x1 foreach i in ${strip $(AFILES)}
		@@echo >>T:x1  search $$i >>$(SUBSYSNAME).protos __asm nonum
		@@echo >>T:x1 end
	@@endif
	@@if neq($(AFILES2),)
		@@echo >>T:x1 foreach i in ${strip $(AFILES2)}
		@@echo >>T:x1  search $$i >>$(SUBSYSNAME).protos __asm nonum
		@@echo >>T:x1 end
	@@endif
	@@if neq($(AFILES3),)
		@@echo >>T:x1 foreach i in ${strip $(AFILES3)}
		@@echo >>T:x1  search $$i >>$(SUBSYSNAME).protos __asm nonum
		@@echo >>T:x1 end
	@@endif
	@@protect $(TEMPDIR)x1 +s
	@@$(TEMPDIR)x1
	@@splat -o "^; " "" $(SUBSYSNAME).protos
	@@splat -o "^;" "" $(SUBSYSNAME).protos
	@@splat -o "//__asm" "" $(SUBSYSNAME).protos
	@@if neq($(PROTOINC),)
		echo >>$(SUBSYSNAME).protos "$(PROTOINC)"
	@@endif
	@@if neq($(PROTOINC2),)
		echo >>$(SUBSYSNAME).protos "$(PROTOINC2)"
	@@endif
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:x2 foreach j in $(SUBSYSTEMS)
		@@echo >>T:x2  if not exists $$j/$$j.protos
		@@echo >>T:x2   echo >$$j/$$j.protos "// this is a comment"
		@@echo >>T:x2 endif
		@@echo >>T:x2 end
		@@echo >>T:x2 foreach j in $(SUBSYSTEMS)
		@@echo >>T:x2 cd $$j
		@@echo >>T:x2 "bmake protos"
		@@echo >>T:x2 cd /
		@@echo >>T:x2 end
		@@execute $(TEMPDIR)x2
 	@@endif

$(SUBSYSNAME).protos :

.phony: $(SUBSYSNAME).protos


depend:
 	@@echo $(AFILES)
	 @@echo >maked0 ""
	 @@if neq($(AFILES),)
	  @@echo >>maked0 $(AFILES)
	 @@endif
	 @@if neq($(AFILES2),)
	  @@echo >>maked0 $(AFILES2)
	 @@endif
	 @@if neq($(AFILES3),)
	  @@echo >>maked0 $(AFILES3)
	 @@endif
	 @@if neq($(CFILES),)
	  @@echo >>maked0 $(CFILES)
	 @@endif
	 @@if neq($(CPPFILES),)
	  @@echo >>maked0 $(CPPFILES)
	 @@endif
	 @@splat -o "[\t ]+" "\n" maked0
	 @@splat -o "^..+" "dep1 &" maked0
	 @@echo >T:maked1 "alias dep1 depend [] makedx"
	 @@join $(TEMPDIR)maked1 maked0 as maked1
	 @@splat -o "\x0d" "" maked1
	 @@execute maked1
	 @@splat -o "\.o" ".o" makedx
	 @@copy makedx dependencies
	 @@echo >>dependencies ""
	 @@delete maked1 maked0 makedx QUIET
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:x2 foreach j in $(SUBSYSTEMS)
		@@echo >>T:x2 cd $$j
		@@echo >>T:x2 bmake depend
		@@echo >>T:x2 cd /
		@@echo >>T:x2 end
		@@execute $(TEMPDIR)x2
 	@@endif

toremote:
	@@if neq($(CFILES),)
		@@copy $(CFILES) $(SERVERDIR) nopro quiet
	@@endif
	@@if neq($(CPPFILES),)
		@@copy $(CPPFILES) $(SERVERDIR) nopro quiet
	@@endif
	@@if neq($(OTHERFILES_NORCS),)
		@@copy $(OTHERFILES_NORCS) $(SERVERDIR) nopro quiet
	@@endif
	@@if neq($(AFILES),)
		@@copy $(AFILES) $(SERVERDIR) nopro quiet
	@@endif
	@@if neq($(AFILES2),)
		@@copy $(AFILES2) $(SERVERDIR) nopro quiet
	@@endif
	@@if neq($(AFILES3),)
		@@copy $(AFILES3) $(SERVERDIR) nopro quiet
	@@endif
	@@if neq($(PUBLIC_HFILES),)
		@@copy $(PUBLIC_HFILES) $(SERVERDIR) nopro quiet
	@@endif
	@@if neq($(PUBLIC_IFILES),)
		@@copy $(PUBLIC_IFILES) $(SERVERDIR) nopro quiet
	@@endif
	@@if neq($(OTHERFILES),)
		@@copy $(OTHERFILES) $(SERVERDIR) nopro quiet
	@@endif
	@@copy $(MAINFILE) $(MAINFILE).strip $(SERVERDIR) nopro quiet

internal: $(PRE_INTERNAL) $(MAINFILE) toremote $(POST_INTERNAL)
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:x2 foreach j in $(SUBSYSTEMS)
		@@echo >>T:x2 cd $$j
		@@echo >>T:x2 bmake toremote
		@@echo >>T:x2 cd /
		@@echo >>T:x2 end
		@@execute $(TEMPDIR)x2
	@@endif
	@@if exists($(SYSTEM)_lib.sfd)
		@@copy $(SYSTEM)_lib.sfd $(HOMESFD) nopro quiet
	@@endif

release: doc internal revlabel headers

releaseunlock: checkinlocked doc internal revlabel headers

killlocal:
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:x2 foreach j in $(SUBSYSTEMS)
		@@echo >>T:x2 cd $$j
		@@echo >>T:x2 bmake killlocal
		@@echo >>T:x2 cd /
		@@echo >>T:x2 end
		@@execute $(TEMPDIR)x2
	@@endif
	@@delete $(OFILES) $(PUBLIC_HFILES) $(PUBLIC_IFILES) quiet
	@@delete $(CPPFILES) $(AFILES) $(AFILES2) $(AFILES3) quiet
	@@delete $(CFILES) $(OTHERFILES) $(OTHERFILES_NORCS) $(CLEANFILES) quiet

Who :
	@@echo >T:x1 ""
	@@if neq($(CFILES),)
		@@echo >>T:x1 foreach i in ${strip $(CFILES)}
		@@echo >>T:x1 "rlog -h -L $$i | *"" noline
		@@echo >>T:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>T:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>T:x1 "IF LENGTH(USER)>0 THEN DO; fl='$(TEMPDIR)Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>T:x1 "; 'echo >>'fl '" noline
		@@echo >>T:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>T:x1 "; END"
		@@echo >>T:x1 end
	@@endif
	@@if neq($(CPPFILES),)
		@@echo >>T:x1 foreach i in ${strip $(CPPFILES)}
		@@echo >>T:x1 "rlog -h -L $$i | *"" noline
		@@echo >>T:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>T:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>T:x1 "IF LENGTH(USER)>0 THEN DO; fl='$(TEMPDIR)Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>T:x1 "; 'echo >>'fl '" noline
		@@echo >>T:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>T:x1 "; END"
		@@echo >>T:x1 end
	@@endif
	@@if neq($(AFILES),)
		@@echo >>T:x1 foreach i in ${strip $(AFILES)}
		@@echo >>T:x1 "rlog -h -L $$i | *"" noline
		@@echo >>T:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>T:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>T:x1 "IF LENGTH(USER)>0 THEN DO; fl='$(TEMPDIR)Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>T:x1 "; 'echo >>'fl '" noline
		@@echo >>T:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>T:x1 "; END"
		@@echo >>T:x1 end
	@@endif
	@@if neq($(AFILES2),)
		@@echo >>T:x1 foreach i in ${strip $(AFILES2)}
		@@echo >>T:x1 "rlog -h -L $$i | *"" noline
		@@echo >>T:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>T:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>T:x1 "IF LENGTH(USER)>0 THEN DO; fl='$(TEMPDIR)Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>T:x1 "; 'echo >>'fl '" noline
		@@echo >>T:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>T:x1 "; END"
		@@echo >>T:x1 end
	@@endif
	@@if neq($(AFILES3),)
		@@echo >>T:x1 foreach i in ${strip $(AFILES3)}
		@@echo >>T:x1 "rlog -h -L $$i | *"" noline
		@@echo >>T:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>T:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>T:x1 "IF LENGTH(USER)>0 THEN DO; fl='$(TEMPDIR)Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>T:x1 "; 'echo >>'fl '" noline
		@@echo >>T:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>T:x1 "; END"
		@@echo >>T:x1 end
	@@endif
	@@if neq($(PUBLIC_HFILES),)
		@@echo >>T:x1 foreach i in ${strip $(PUBLIC_HFILES)}
		@@echo >>T:x1 "rlog -h -L $$i | *"" noline
		@@echo >>T:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>T:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>T:x1 "IF LENGTH(USER)>0 THEN DO; fl='$(TEMPDIR)Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>T:x1 "; 'echo >>'fl '" noline
		@@echo >>T:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>T:x1 "; END"
		@@echo >>T:x1 end
	@@endif
	@@if neq($(PUBLIC_IFILES),)
		@@echo >>T:x1 foreach i in ${strip $(PUBLIC_IFILES)}
		@@echo >>T:x1 "rlog -h -L $$i | *"" noline
		@@echo >>T:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>T:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>T:x1 "IF LENGTH(USER)>0 THEN DO; fl='$(TEMPDIR)Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>T:x1 "; 'echo >>'fl '" noline
		@@echo >>T:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>T:x1 "; END"
		@@echo >>T:x1 end
	@@endif
	@@if neq($(OTHERFILES),)
		@@echo >>T:x1 foreach i in ${strip $(OTHERFILES)}
		@@echo >>T:x1 "rlog -h -L $$i | *"" noline
		@@echo >>T:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>T:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>T:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>T:x1 "IF LENGTH(USER)>0 THEN DO; fl='$(TEMPDIR)Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>T:x1 "; 'echo >>'fl '" noline
		@@echo >>T:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>T:x1 "; END"
		@@echo >>T:x1 end
	@@endif
	@@execute $(TEMPDIR)x1
	@@if neq($(SUBSYSTEMS),)
		@@echo >T:x2 foreach j in $(SUBSYSTEMS)
		@@echo >>T:x2 cd $$j
		@@echo >>T:x2 "bmake Who"
		@@echo >>T:x2 cd /
		@@echo >>T:x2 end
		@@execute $(TEMPDIR)x2
		@@echo >>T:locks. That's all
		@@list lformat "type $(TEMPDIR)%s" $(TEMPDIR)locks.#? > $(TEMPDIR)x1
		@@execute $(TEMPDIR)x1
		@@delete $(TEMPDIR)locks.#? QUIET
 	@@endif

.DEFAULT:
	@@echo
@


1.21
log
@*** empty log message ***
@
text
@d149 4
d221 1
d252 3
d256 19
a274 5
	@@list `type RCS_link` lformat "rcs >NIL: -nV$(VERSION)_`type $(SYSTEM)_rev.rev`: %n" TO $(TEMPDIR)revlabel
	@@execute $(TEMPDIR)revlabel
	@@if neq($(SUBSYSTEMS),)
          @@list `type RCS_link` lformat "rcs -nV$(VERSION)_`type $(SYSTEM)_rev.rev`: %n" TO $(TEMPDIR)revlabel
	  @@execute $(TEMPDIR)revlabel
d276 3
a278 1
 	@@delete $(TEMPDIR)revlabel QUIET
d306 7
a312 7
		@@echo >t:d1 foreach i in $(SUBSYSTEMS)
		@@echo >>t:d1 cd $$i
		@@echo >>t:d1 bmake diff
		@@echo >>t:d1 cd /
		@@echo >>t:d1 end
		@@execute t:d1
		@@delete t:d1 quiet
d324 6
a329 6
		@@echo >t:c1 foreach i in $(OTHERFILES_NORCS)
		@@echo >>t:c1 copy  $(SERVERDIR)/ noline
		@@echo >>t:c1 "$$i *"*""
		@@echo >>t:c1 end
		@@execute t:c1
		@@delete t:c1 QUIET
d350 15
a364 15
		@@echo >t:x1 foreach i in $(SUBSYSTEMS)
		@@echo >>t:x1  if not exists $$i
		@@echo >>t:x1   makedir $$i
		@@echo >>t:x1 endif
		@@echo >>t:x1 cd $$i
		@@echo >>t:x1 echo >RCS_link $(HOMEDIR)/ noline
		@@echo >>t:x1 $$i/RCS/
		@@echo >>t:x1  if not exists dependencies
		@@echo >>t:x1   echo >dependencies "**n"
		@@echo >>t:x1 endif
		@@echo >>t:x1 co makefile
		@@echo >>t:x1 bmake checkout
		@@echo >>t:x1 cd /
		@@echo >>t:x1 end
		@@execute t:x1
d369 6
a374 6
		@@echo >t:c1 foreach j in $(OTHERFILES_NORCS)
		@@echo >>t:c1 copy $(SERVERDIR)/ noline
		@@echo >>t:c1 "$$j *"*""
		@@echo >>t:c1 end
		@@execute t:c1
		@@delete t:c1 QUIET
d401 36
a436 102
		@@echo >t:x1 foreach i in $(SUBSYSTEMS)
		@@echo >>t:x1  if not exists $$i
		@@echo >>t:x1   makedir $$i
		@@echo >>t:x1 endif
		@@echo >>t:x1 cd $$i
		@@echo >>t:x1 echo >RCS_link $(HOMEDIR)/ noline
		@@echo >>t:x1 $$i/RCS/
		@@echo >>t:x1  if not exists dependencies
		@@echo >>t:x1   echo >dependencies "**n"
		@@echo >>t:x1 endif
		@@echo >>t:x1 co makefile
		@@echo >>t:x1 bmake checkoutlock
		@@echo >>t:x1 cd /
		@@echo >>t:x1 end
		@@execute t:x1
 	@@endif

checkinlock:
	@@if neq($(SUBSYSTEMS),)
		@@echo >t:x1 foreach i in $(SUBSYSTEMS)
		@@echo >>t:x1 cd $$i
		@@echo >>t:x1 echo >RCS_link $(HOMEDIR)/ noline
		@@echo >>t:x1 $$i/RCS/
		@@echo >>t:x1 bmake checkinlock
		@@echo >>t:x1 cd /
		@@echo >>t:x1 end
		@@execute t:x1
 	@@endif
	@@if neq($(CFILES),)
		@@echo >t:x2 foreach j in $(CFILES)
		@@echo >>t:x2 echo -
		@@echo >>t:x2 echo Checkin $$j
		@@echo >>t:x2 ci -q $$j
		@@echo >>t:x2 rcs >NIL: -u $$j
		@@echo >>t:x2 end
		@@execute t:x2
	@@endif
	@@if neq($(CPPFILES),)
		@@echo >t:x2 foreach j in $(CPPFILES)
		@@echo >>t:x2 echo -
		@@echo >>t:x2 echo Checkin $$j
		@@echo >>t:x2 ci -q $$i
		@@echo >>t:x2 rcs >NIL: -u $$j
		@@echo >>t:x2 end
		@@execute t:x2
	@@endif
	@@if neq($(OTHERFILES_NORCS),)
                @@echo >bmake_silly.tmp "hello"
		@@delete bmake_silly.tmp $(OTHERFILES_NORCS) QUIET
	@@endif
	@@if neq($(CLEANFILES),)
                @@echo >bmake_silly.tmp "hello"
		@@delete bmake_silly.tmp $(CLEANFILES) QUIET
	@@endif
	@@if neq($(OFILES),)
                @@echo >bmake_silly.tmp "hello"
		@@delete bmake_silly.tmp $(OFILES) QUIET
	@@endif
	@@if neq($(AFILES),)
		@@echo >t:x2 foreach j in $(AFILES)
		@@echo >>t:x2 echo -
		@@echo >>t:x2 echo Checkin $$j
		@@echo >>t:x2 ci -q $$j
		@@echo >>t:x2 rcs >NIL: -u $$j
		@@echo >>t:x2 end
		@@execute t:x2
	@@endif
	@@if neq($(AFILES2),)
		@@echo >t:x2 foreach j in $(AFILES2)
		@@echo >>t:x2 echo -
		@@echo >>t:x2 echo Checkin $$j
		@@echo >>t:x2 ci -q $$j
		@@echo >>t:x2 rcs >NIL: -u $$j
		@@echo >>t:x2 end
		@@execute t:x2
	@@endif
	@@if neq($(AFILES3),)
		@@echo >t:x2 foreach j in $(AFILES3)
		@@echo >>t:x2 echo -
		@@echo >>t:x2 echo Checkin $$j
		@@echo >>t:x2 ci -q $$j
		@@echo >>t:x2 rcs >NIL: -u $$j
		@@echo >>t:x2 end
		@@execute t:x2
	@@endif
	@@if neq($(PUBLIC_HFILES),)
		@@echo >t:x2 foreach j in $(PUBLIC_HFILES)
		@@echo >>t:x2 echo -
		@@echo >>t:x2 echo Checkin $$j
		@@echo >>t:x2 ci -q $$j
		@@echo >>t:x2 rcs >NIL: -u $$j
		@@echo >>t:x2 end
		@@execute t:x2
	@@endif
	@@if neq($(PUBLIC_IFILES),)
		@@echo >t:x2 foreach j in $(PUBLIC_IFILES)
		@@echo >>t:x2 echo -
		@@echo >>t:x2 echo Checkin $$j
		@@echo >>t:x2 ci -q $$j
		@@echo >>t:x2 rcs >NIL: -u $$j
		@@echo >>t:x2 end
		@@execute t:x2
a437 9
	@@if neq($(OTHERFILES),)
		@@echo >t:x2 foreach j in $(OTHERFILES)
		@@echo >>t:x2 echo -
		@@echo >>t:x2 echo Checkin $$j
		@@echo >>t:x2 ci -q $$j
		@@echo >>t:x2 rcs >NIL: -u $$j
		@@echo >>t:x2 end
		@@execute t:x2
	@@endif
d456 2
a457 2
		@@$(ASM_PREPROCESSOR) $*.asm >t:tmp1.asm
		$(ASSEMBLER) from t:tmp1.asm TO $*.o INCDIR $(INCLUDEDIR) $(ASSEMBLER_OPTS) QUIET
d483 4
a486 4
	@@echo >t:l1 cd $*
	@@echo >>t:l1 "bmake"
	@@echo >>t:l1 cd /
	@@execute t:l1
d490 1
a490 1
	   join #?.o as $(MAINFILE)
d493 2
a494 2
        @@endif

a496 3
	@@if exists($(MAINFILE))
		delete $(MAINFILE) quiet
	@@endif
d498 1
a498 1
	@@delete #?.o #?.map #?.xref $(CLEANFILES) quiet
d500 6
a505 6
		@@echo >t:x1 foreach i in $(SUBSYSTEMS)
		@@echo >>t:x1 cd $$i
		@@echo >>t:x1 bmake clean
		@@echo >>t:x1 cd /
		@@echo >>t:x1 end
		@@execute t:x1
d510 6
a515 6
		@@echo >t:x1 foreach i in $(SUBSYSTEMS)
		@@echo >>t:x1 cd $$i
		@@echo >>t:x1 bmake doc
		@@echo >>t:x1 cd /
		@@echo >>t:x1 end
		@@execute t:x1
d536 2
a537 2
	@@echo >t:temp.perl "s/ /\n/g; print;"
	@@echo >t:x1 ""
d539 27
a565 27
		@@echo >t:flist1 "${strip $(CFILES)}"
		@@perl -n t:temp.perl t:flist1 >t:flist2
		@@delete t:flist1 quiet
		@@echo >>t:x1 $(COMPILER) NOGPDATA GENPROTO NOGENPROTOSTATIC PARAMETERS=STACK DEFINE=MAKE_PROTOS INCLUDEDIRECTORY=$(INCLUDEDIR) with t:flist2
		@@echo >>t:x1 join #?_protos.h as $(SUBSYSNAME).protos
	@@endif
	@@if neq($(CPPFILES),)
		@@echo >t:flist1 "${strip $(CPPFILES)}"
		@@perl -n t:temp.perl t:flist1 >t:flist2
		@@delete t:flist1 quiet
		@@echo >>t:x1 $(COMPILER) NOGPDATA GENPROTO NOGENPROTOSTATIC PARAMETERS=STACK DEFINE=MAKE_PROTOS INCLUDEDIRECTORY=$(INCLUDEDIR) with t:flist2
		@@echo >>t:x1 join #?_protos.h as $(SUBSYSNAME).protos
	@@endif
	@@if neq($(AFILES),)
		@@echo >>t:x1 foreach i in ${strip $(AFILES)}
		@@echo >>t:x1  search $$i >>$(SUBSYSNAME).protos __asm nonum
		@@echo >>t:x1 end
	@@endif
	@@if neq($(AFILES2),)
		@@echo >>t:x1 foreach i in ${strip $(AFILES2)}
		@@echo >>t:x1  search $$i >>$(SUBSYSNAME).protos __asm nonum
		@@echo >>t:x1 end
	@@endif
	@@if neq($(AFILES3),)
		@@echo >>t:x1 foreach i in ${strip $(AFILES3)}
		@@echo >>t:x1  search $$i >>$(SUBSYSNAME).protos __asm nonum
		@@echo >>t:x1 end
d567 2
a568 2
	@@protect t:x1 +s
	@@t:x1
d579 11
a589 11
		@@echo >t:x2 foreach j in $(SUBSYSTEMS)
		@@echo >>t:x2  if not exists $$j/$$j.protos
		@@echo >>t:x2   echo >$$j/$$j.protos "// this is a comment"
		@@echo >>t:x2 endif
		@@echo >>t:x2 end
		@@echo >>t:x2 foreach j in $(SUBSYSTEMS)
		@@echo >>t:x2 cd $$j
		@@echo >>t:x2 "bmake protos"
		@@echo >>t:x2 cd /
		@@echo >>t:x2 end
		@@execute t:x2
d617 2
a618 2
	 @@echo >t:maked1 "alias dep1 depend [] makedx"
	 @@join t:maked1 maked0 as maked1
d626 6
a631 6
		@@echo >t:x2 foreach j in $(SUBSYSTEMS)
		@@echo >>t:x2 cd $$j
		@@echo >>t:x2 bmake depend
		@@echo >>t:x2 cd /
		@@echo >>t:x2 end
		@@execute t:x2
d636 1
a636 1
		copy $(CFILES) $(SERVERDIR) nopro
d639 1
a639 1
		copy $(CPPFILES) $(SERVERDIR) nopro
d642 1
a642 1
		copy $(OTHERFILES_NORCS) $(SERVERDIR) nopro
d645 1
a645 1
		copy $(AFILES) $(SERVERDIR) nopro
d648 1
a648 1
		copy $(AFILES2) $(SERVERDIR) nopro
d651 1
a651 1
		copy $(AFILES3) $(SERVERDIR) nopro
d654 1
a654 1
		copy $(PUBLIC_HFILES) $(SERVERDIR) nopro
d657 1
a657 1
		copy $(PUBLIC_IFILES) $(SERVERDIR) nopro
d660 1
a660 1
		copy $(OTHERFILES) $(SERVERDIR) nopro
d662 1
a662 1
	copy $(MAINFILE) $(SERVERDIR) nopro
d666 6
a671 6
		@@echo >t:x2 foreach j in $(SUBSYSTEMS)
		@@echo >>t:x2 cd $$j
		@@echo >>t:x2 bmake toremote
		@@echo >>t:x2 cd /
		@@echo >>t:x2 end
		@@execute t:x2
d674 1
a674 1
		copy $(SYSTEM)_lib.sfd $(HOMESFD)  nopro
d677 16
a692 1
release: doc internal headers
d695 1
a695 1
	@@echo >t:x1 ""
d697 89
a785 89
		@@echo >>t:x1 foreach i in ${strip $(CFILES)}
		@@echo >>t:x1 "rlog -h -L $$i | *"" noline
		@@echo >>t:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>t:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>t:x1 "IF LENGTH(USER)>0 THEN DO; fl='t:Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>t:x1 "; 'echo >>'fl '" noline
		@@echo >>t:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>t:x1 "; END"
		@@echo >>t:x1 end
	@@endif
	@@if neq($(CPPFILES),)
		@@echo >>t:x1 foreach i in ${strip $(CPPFILES)}
		@@echo >>t:x1 "rlog -h -L $$i | *"" noline
		@@echo >>t:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>t:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>t:x1 "IF LENGTH(USER)>0 THEN DO; fl='t:Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>t:x1 "; 'echo >>'fl '" noline
		@@echo >>t:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>t:x1 "; END"
		@@echo >>t:x1 end
	@@endif
	@@if neq($(AFILES),)
		@@echo >>t:x1 foreach i in ${strip $(AFILES)}
		@@echo >>t:x1 "rlog -h -L $$i | *"" noline
		@@echo >>t:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>t:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>t:x1 "IF LENGTH(USER)>0 THEN DO; fl='t:Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>t:x1 "; 'echo >>'fl '" noline
		@@echo >>t:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>t:x1 "; END"
		@@echo >>t:x1 end
	@@endif
	@@if neq($(AFILES2),)
		@@echo >>t:x1 foreach i in ${strip $(AFILES2)}
		@@echo >>t:x1 "rlog -h -L $$i | *"" noline
		@@echo >>t:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>t:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>t:x1 "IF LENGTH(USER)>0 THEN DO; fl='t:Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>t:x1 "; 'echo >>'fl '" noline
		@@echo >>t:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>t:x1 "; END"
		@@echo >>t:x1 end
	@@endif
	@@if neq($(AFILES3),)
		@@echo >>t:x1 foreach i in ${strip $(AFILES3)}
		@@echo >>t:x1 "rlog -h -L $$i | *"" noline
		@@echo >>t:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>t:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>t:x1 "IF LENGTH(USER)>0 THEN DO; fl='t:Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>t:x1 "; 'echo >>'fl '" noline
		@@echo >>t:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>t:x1 "; END"
		@@echo >>t:x1 end
	@@endif
	@@if neq($(PUBLIC_HFILES),)
		@@echo >>t:x1 foreach i in ${strip $(PUBLIC_HFILES)}
		@@echo >>t:x1 "rlog -h -L $$i | *"" noline
		@@echo >>t:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>t:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>t:x1 "IF LENGTH(USER)>0 THEN DO; fl='t:Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>t:x1 "; 'echo >>'fl '" noline
		@@echo >>t:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>t:x1 "; END"
		@@echo >>t:x1 end
	@@endif
	@@if neq($(PUBLIC_IFILES),)
		@@echo >>t:x1 foreach i in ${strip $(PUBLIC_IFILES)}
		@@echo >>t:x1 "rlog -h -L $$i | *"" noline
		@@echo >>t:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>t:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>t:x1 "IF LENGTH(USER)>0 THEN DO; fl='t:Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>t:x1 "; 'echo >>'fl '" noline
		@@echo >>t:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>t:x1 "; END"
		@@echo >>t:x1 end
d788 24
a811 24
		@@echo >>t:x1 foreach i in ${strip $(OTHERFILES)}
		@@echo >>t:x1 "rlog -h -L $$i | *"" noline
		@@echo >>t:x1 "'ExecIO STEM FileLines.'; USER='';" noline
		@@echo >>t:x1 "DO Line=1 to FileLines.0;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'Working file:')>0 THEN DO; PARSE VAR FileLines.Line 'Working file:'FileName; FileName=STRIP(FileName); END;" noline
		@@echo >>t:x1 "IF INDEX(FileLines.Line,'locks:')>0 THEN DO; PARSE VAR FileLines.Line 'locks:' User ':'; User=STRIP(User); END; END ; "noline
		@@echo >>t:x1 "IF LENGTH(USER)>0 THEN DO; fl='t:Locks.'||User; IF ~exists(fl) THEN 'echo > 'fl' *"*"**NFiles owned by 'User'*"*"'" noline
		@@echo >>t:x1 "; 'echo >>'fl '" noline
		@@echo >>t:x1 "*"*"    'FileName'*"*"'" noline
		@@echo >>t:x1 "; END"
		@@echo >>t:x1 end
	@@endif
	@@execute t:x1
	@@if neq($(SUBSYSTEMS),)
		@@echo >t:x2 foreach j in $(SUBSYSTEMS)
		@@echo >>t:x2 cd $$j
		@@echo >>t:x2 "bmake Who"
		@@echo >>t:x2 cd /
		@@echo >>t:x2 end
		@@execute t:x2
		@@echo >>t:locks. That's all
		@@list lformat "type t:%s" t:locks.#? > t:x1
		@@execute t:x1
		@@delete t:locks.#? QUIET
a815 1

@


1.20
log
@*** empty log message ***
@
text
@d206 1
a206 1
    LOCDIR=$(HOMEDIR)/$(SUBSYSNAME)
d210 1
a210 1
    LOCDIR=$(HOMEDIR)
d216 1
a216 1
RCSDIR=$(LOCDIR)/RCS/
d248 1
a248 1
	@@list `type rcs_link` lformat "rcs >NIL: -nV$(VERSION)_`type $(SYSTEM)_rev.rev`: %n" TO $(TEMPDIR)revlabel
d251 1
a251 1
          @@list `type rcs_link` lformat "rcs -nV$(VERSION)_`type $(SYSTEM)_rev.rev`: %n" TO $(TEMPDIR)revlabel
d257 1
a257 1
	@@echo >RCS_LINK $(RCSDIR)
d292 1
a292 1
checkout: RCS_Link
d301 1
a301 1
		@@echo >>t:c1 copy  $(LOCDIR)/ noline
d331 1
a331 1
		@@echo >>t:x1 echo >RCS_Link $(HOMEDIR)/ noline
d343 9
a351 1
checkoutlock: RCS_Link
a357 8
	@@if neq($(OTHERFILES_NORCS),)
		@@echo >t:c1 foreach i in $(OTHERFILES_NORCS)
		@@echo >>t:c1 copy  $(LOCDIR)/ noline
		@@echo >>t:c1 "$$i *"*""
		@@echo >>t:c1 end
		@@execute t:c1
		@@delete t:c1 QUIET
	@@endif
d382 1
a382 1
		@@echo >>t:x1 echo >RCS_Link $(HOMEDIR)/ noline
d398 1
a398 1
		@@echo >>t:x1 echo >RCS_Link $(HOMEDIR)/ noline
d407 1
a407 1
		@@echo >>t:x2 echo
d416 1
a416 1
		@@echo >>t:x2 echo
d437 1
a437 1
		@@echo >>t:x2 echo
d446 1
a446 1
		@@echo >>t:x2 echo
d455 1
a455 1
		@@echo >>t:x2 echo
d464 1
a464 1
		@@echo >>t:x2 echo
d473 1
a473 1
		@@echo >>t:x2 echo
d482 1
a482 1
		@@echo >>t:x2 echo
d690 1
a690 1
		copy $(CFILES) $(LOCDIR) nopro
d693 1
a693 1
		copy $(CPPFILES) $(LOCDIR) nopro
d696 1
a696 1
		copy $(OTHERFILES_NORCS) $(LOCDIR) nopro
d699 1
a699 1
		copy $(AFILES) $(LOCDIR) nopro
d702 1
a702 1
		copy $(AFILES2) $(LOCDIR) nopro
d705 1
a705 1
		copy $(AFILES3) $(LOCDIR) nopro
d708 1
a708 1
		copy $(PUBLIC_HFILES) $(LOCDIR) nopro
d711 1
a711 1
		copy $(PUBLIC_IFILES) $(LOCDIR) nopro
d714 1
a714 1
		copy $(OTHERFILES) $(LOCDIR) nopro
d716 1
a716 1
	copy $(MAINFILE) $(LOCDIR) nopro
@


1.19
log
@*** empty log message ***
@
text
@d48 4
d72 1
d76 1
d80 1
d84 1
d110 1
a110 13
    PUBLIC_HFILES=HFILES
endif

ifndef $(HOMEDIR)
    HOMEDIR=
endif

ifndef $(HOMEINCL)
    HOMEINCL=
endif

ifndef $(HOMESFD)
    HOMESFD=
a112 4
ifndef $(HOMEDOC)
    HOMEDOC=
endif

d116 1
d120 1
d124 1
d128 2
a129 1
ifndef$(LIBFILES)
d152 1
d162 1
a162 1
	DEFAULTLINKER= Slink
d164 1
a164 1
	DEFAULTLINKER= Blink
d172 1
a172 1
	DEFAULTCOMPILER= SC
d174 1
a174 1
	DEFAULTCOMPILER= LC
d189 2
a190 2
if eq($(HOMEDIR),)
	HOMEDIR=V$(VERSION):src/$(MODULETYPE)/$(SYSTEM)
d194 1
a194 1
	HOMESFD=V$(VERSION):lib/sfd
d197 6
a202 2
ifndef$(HOMEDOC)
	HOMEDOC=V$(VERSION):doc
d206 3
a208 3
 LOCDIR=$(HOMEDIR)/$(SUBSYSNAME)
 MAINFILE=/$(SUBSYSNAME).lib
 SUBDOCS=
d210 4
a213 4
 LOCDIR=$(HOMEDIR)
 MAINFILE=$(SYSTEM).ld
 LIBFILES=${addsuffix .lib,$(SUBSYSTEMS)}
 SUBDOCS=${addsuffix /autodoc.doc,$(SUBSYSTEMS)}
d215 2
a216 2

 RCSDIR=$(LOCDIR)/RCS/
d219 1
a219 1
all: depend $(MAINFILE)
d223 1
a223 1
#.include dependencies
a240 4
if eq($(HOMEINCL),)
	HOMEINCL=V$(VERSION):include/$(SYSTEM)
endif

d244 1
a244 1
rev:
d247 2
a248 2
revlabel:
	@@list `type rcs_link` lformat "rcs -n$(VERSION)_`type $(SYSTEM)_rev.rev`: %n" TO $(TEMPDIR)revlabel
d251 1
a251 1
          @@list `type rcs_link` lformat "rcs -n$(VERSION)_`type $(SYSTEM)_rev.rev`: %n" TO $(TEMPDIR)revlabel
d254 1
a254 1
 	@@delete $(TEMPDIR)revlabel
d257 1
a257 1
	echo >RCS_LINK $(RCSDIR)
d305 1
a305 1
		@@delete t:c1
d333 3
d356 1
a356 1
		@@delete t:c1
d384 3
d394 96
d541 1
a541 1
	 join #?.o as $(MAINFILE)
d543 2
a544 2
	 $(LINKER) from $(STARTUP_OBJECT) $(OFILES) to $(MAINFILE) lib $(LIBFILES) $(LINKER_LIBS) $(LINKER_OPTS)
    @@endif
d552 1
a552 1
	delete #?.o quiet
d572 1
a572 1
		join #?.asm #?.c #?.cpp as autodoc.doc
d574 4
a577 4
		join #?.asm #?.c #?.cpp $(SUBDOCS) as $(TEMPDIR)$(SYSTEM).doc
		autodoc >$(SYSTEM).doc $(TEMPDIR)$(SYSTEM).doc
		copy $(SYSTEM).doc $(HOMEDOC) nopro
		delete $(TEMPDIR)$(SYSTEM).doc
d582 1
a582 1
		copy $(PUBLIC_IFILES) $(HOMEINCL) nopro
d585 1
a585 1
		copy $(PUBLIC_HFILES) $(HOMEINCL) nopro
d634 2
a635 2
		@@echo >>t:x2 if not exists $$j/$$j.protos
		@@echo >>t:x2 echo >$$j/$$j.protos "// this is a comment"
d678 1
a678 3
	 @@delete maked1
	 @@delete maked0
	 @@delete makedx
d731 1
a731 1
release: internal headers doc
d850 1
a850 1
		@@delete t:locks.#?
@


1.18
log
@*** empty log message ***
@
text
@d97 1
a97 1
ifndef (HFILES)
d101 4
d124 2
a125 2
ifndef $(I_FILES)
    I_FILES=$(INFILES)
d218 1
a218 1
all: $(MAINFILE)
d222 1
a222 1
.include dependencies
a239 3



d278 2
a279 2
	@@if neq($(HFILES),)
		rcsdiff $(HFILES)
d281 2
a282 2
	@@if neq($(I_FILES),)
		rcsdiff $(I_FILES)
d319 2
a320 2
	@@if neq($(HFILES),)
		co $(HFILES)
d322 2
a323 2
	@@if neq($(I_FILES),)
		co $(I_FILES)
d367 2
a368 2
	@@if neq($(HFILES),)
		co -l $(HFILES)
d370 2
a371 2
	@@if neq($(I_FILES),)
		co -l $(I_FILES)
d482 2
a483 2
	@@if neq($(I_FILES),)
		copy $(I_FILES) $(HOMEINCL) nopro
d485 2
a486 2
	@@if neq($(HFILES),)
		copy $(HFILES) $(HOMEINCL) nopro
d610 2
a611 2
	@@if neq($(HFILES),)
		copy $(HFILES) $(LOCDIR) nopro
d613 2
a614 2
	@@if neq($(I_FILES),)
		copy $(I_FILES) $(LOCDIR) nopro
d703 2
a704 2
	@@if neq($(HFILES),)
		@@echo >>t:x1 foreach i in ${strip $(HFILES)}
d716 2
a717 2
	@@if neq($(I_FILES),)
		@@echo >>t:x1 foreach i in ${strip $(I_FILES)}
@


1.17
log
@*** empty log message ***
@
text
@d3 1
a3 1
# $Id: makemeta,v 1.16 93/07/27 16:55:03 vertex Exp Locker: vertex $
d177 1
a177 1
    LINKER=$(DEFAULTCOMPILER)
@


1.16
log
@*** empty log message ***
@
text
@d3 1
a3 1
# $Id: makemeta,v 1.15 93/07/27 15:56:12 vertex Exp Locker: vertex $
d120 2
a121 2
ifndef $(IFILES)
    IFILES=$(INFILES)
d280 2
a281 2
	@@if neq($(IFILES),)
		rcsdiff $(IFILES)
d321 2
a322 2
	@@if neq($(IFILES),)
		co $(IFILES)
d369 2
a370 2
	@@if neq($(IFILES),)
		co -l $(IFILES)
d481 2
a482 2
	@@if neq($(IFILES),)
		copy $(IFILES) $(HOMEINCL) nopro
d612 2
a613 2
	@@if neq($(IFILES),)
		copy $(IFILES) $(LOCDIR) nopro
d715 2
a716 2
	@@if neq($(IFILES),)
		@@echo >>t:x1 foreach i in ${strip $(IFILES)}
@


1.15
log
@*** empty log message ***
@
text
@d3 1
a3 1
# $Id: makemeta,v 1.14 93/07/27 15:46:09 vertex Exp Locker: vertex $
d121 1
a121 1
    IFILES=INFILES
@


1.14
log
@*** empty log message ***
@
text
@d3 1
a3 1
# $Id: makemeta,v 1.13 93/07/27 15:38:02 vertex Exp Locker: vertex $
d249 8
d258 1
a258 1
RCS_Link:
@


1.13
log
@*** empty log message ***
@
text
@d3 1
a3 1
# $Id: makemeta,v 1.12 93/07/27 15:33:03 vertex Exp Locker: vertex $
d93 4
d244 1
a244 1
OFILES=${addsuffix .o,${basename $(AFILES)}} ${addsuffix .o,${basename $(CFILES)}} ${addsuffix .o,${basename $(AFILES2)}} ${addsuffix .o,${basename $(AFILES3)}}
d247 1
a247 1
	v:aug/bin/bumprev $(VERSION) $(SYSTEM)_rev
d257 3
d290 3
d338 3
d392 5
d415 9
d464 1
a464 1
		join #?.asm #?.c as autodoc.doc
d466 1
a466 1
		join #?.asm #?.c $(SUBDOCS) as $(TEMPDIR)$(SYSTEM).doc
d491 7
d558 3
d586 3
d631 13
@


1.12
log
@*** empty log message ***
@
text
@d3 1
a3 1
# $Id: makemeta,v 1.11 93/07/27 14:21:04 vertex Exp Locker: vertex $
d44 4
d283 2
a284 2
	@@if neq($(NONRCS_FILES),)
		@@echo >t:c1 foreach i in $(NONRCS_FILES)
d328 2
a329 2
	@@if neq($(NONRCS_FILES),)
		@@echo >t:c1 foreach i in $(NONRCS_FILES)
d549 2
a550 2
	@@if neq($(NONRCS_FILES),)
		copy $(NONRCS_FILES) $(LOCDIR) nopro
@


1.11
log
@Now uses IFILES instead of INFILES, although INFILES is still supported
@
text
@d3 1
a3 1
# $Id: makemeta,v 1.10 93/07/27 14:04:56 vertex Exp Locker: vertex $
a7 4
ifndef $(SAS6OPTIONS)
    SAS6OPTIONS=
endif

d16 8
d28 8
d76 1
d80 5
d88 1
d92 1
d96 1
d100 9
d126 5
a130 1
    LINKERLIBS=lib:amiga.lib
d132 1
d136 5
d149 1
a149 1
    CVERSION=
d153 1
a153 1
	DEFAULTLINKER= slink
d155 1
a155 1
	DEFAULTLINKER= blink
d158 1
a158 1
ifndef$(LINKER)
d162 13
d176 3
d181 1
a181 1
	HOMEDIR=v$(VERSION):src/$(MODULETYPE)/$(SYSTEM)
d184 2
a185 2
ifndef$(HOMESFD)
	HOMESFD=v$(VERSION):lib/sfd
d189 1
a189 1
	HOMEDOC=v$(VERSION):doc
d213 1
a213 1
    TEMPDIR=t:
d220 2
a221 2
if eq($(ASMOPTS),)
    ASMOPTS=OPTIMON 0xfdc00000 ADDSYM DEBUG
d232 1
a232 1
	HOMEINCL=v$(VERSION):include/$(SYSTEM)
d378 1
a378 1
		hx68 from t:tmp1.asm TO $*.o INCDIR $(INCLUDEDIR) $(ASMOPTS) QUIET
d380 1
a380 1
		hx68 from $*.asm to $*.o INCDIR $(INCLUDEDIR) $(ASMOPTS) QUIET
d385 1
a385 1
		sc NOGPDATA GENPROTO NOGENPROTOSTATIC DEFINE=MAKE_PROTOS INCLUDEDIRECTORY=$(INCLUDEDIR) $*.c
d388 1
a388 1
		lc $(SAS5OPTIONS) ${addprefix -D,$(COMPILER_DEFINES)} -i$(INCLUDEDIR) -o$*.o $*.c
d390 1
a390 1
		sc $(SAS6OPTIONS) ${addprefix DEFINE=,$(COMPILER_DEFINES)} INCLUDEDIR=$(INCLUDEDIR) OBJECTNAME=$*.o $*.c
d404 1
a404 1
	 $(LINKER) from $(STARTUP_OBJECT) $(OFILES) to $(MAINFILE) lib $(LIBFILES) $(LINKERLIBS) $(LINKEROPTS)
d457 1
a457 1
		@@echo >>t:x1  sc NOGPDATA GENPROTO NOGENPROTOSTATIC PARAMETERS=STACK DEFINE=MAKE_PROTOS INCLUDEDIRECTORY=$(INCLUDEDIR) with t:flist2
@


1.10
log
@Changed all .obj to .o
@
text
@d3 1
a3 1
# $Id: makemeta,v 1.9 93/05/12 10:32:54 chrisg Exp Locker: vertex $
d82 3
d205 2
a206 2
	@@if neq($(INFILES),)
		rcsdiff $(INFILES)
d243 2
a244 2
	@@if neq($(INFILES),)
		co $(INFILES)
d288 2
a289 2
	@@if neq($(INFILES),)
		co -l $(INFILES)
d386 2
a387 2
	@@if neq($(INFILES),)
		copy $(INFILES) $(HOMEINCL) nopro
d504 2
a505 2
	@@if neq($(INFILES),)
		copy $(INFILES) $(LOCDIR) nopro
d594 2
a595 2
	@@if neq($(INFILES),)
		@@echo >>t:x1 foreach i in ${strip $(INFILES)}
@


1.9
log
@added ONEPROTOPERFILE/.
RCS dates were screwed up so i had to kill the old rcs file.
make protos now handles lots of CFILES.
@
text
@d3 1
a3 1
# $Id: makemeta,v 1.9 13/.1/.0 .1:.1:.1 brummer Exp Locker: chrisg $
d177 1
a177 1
OFILES=${addsuffix .obj,${basename $(AFILES)}} ${addsuffix .obj,${basename $(CFILES)}} ${addsuffix .obj,${basename $(AFILES2)}} ${addsuffix .obj,${basename $(AFILES3)}}
d316 1
a316 1
%.obj:%.asm
d319 1
a319 1
		hx68 from t:tmp1.asm TO $*.obj INCDIR $(INCLUDEDIR) $(ASMOPTS) QUIET
d321 1
a321 1
		hx68 from $*.asm to $*.obj INCDIR $(INCLUDEDIR) $(ASMOPTS) QUIET
d324 1
a324 1
%.obj:%.c
d329 1
a329 1
		lc $(SAS5OPTIONS) ${addprefix -D,$(COMPILER_DEFINES)} -i$(INCLUDEDIR) -o$*.obj $*.c
d331 1
a331 1
		sc $(SAS6OPTIONS) ${addprefix DEFINE=,$(COMPILER_DEFINES)} INCLUDEDIR=$(INCLUDEDIR) OBJECTNAME=$*.obj $*.c
d343 1
a343 1
	 join #?.obj as $(MAINFILE)
d353 2
a354 2
	@@echo >bmake_d_temp.obj "hello"
	delete #?.obj quiet
d467 1
a467 1
	 @@splat -o "\.o" ".obj" makedx
@
