head     40.5;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @@;


40.5
date     93.10.12.11.06.15;  author darren;  state Exp;
branches ;
next     40.4;

40.4
date     93.05.25.14.44.25;  author mks;  state Exp;
branches ;
next     40.3;

40.3
date     93.03.30.11.36.34;  author mks;  state Exp;
branches ;
next     40.2;

40.2
date     93.03.10.10.52.23;  author mks;  state Exp;
branches ;
next     40.1;

40.1
date     93.03.04.12.00.08;  author mks;  state Exp;
branches ;
next     0.19;

0.19
date     93.03.02.10.59.15;  author mks;  state Exp;
branches ;
next     0.18;

0.18
date     93.02.18.11.55.20;  author mks;  state Exp;
branches ;
next     0.17;

0.17
date     92.11.02.11.54.16;  author mks;  state Exp;
branches ;
next     0.16;

0.16
date     92.09.15.15.20.23;  author mks;  state Exp;
branches ;
next     0.15;

0.15
date     92.09.15.15.19.06;  author mks;  state Exp;
branches ;
next     0.14;

0.14
date     92.06.06.19.15.28;  author mks;  state Exp;
branches ;
next     0.13;

0.13
date     92.02.28.15.23.50;  author mks;  state Exp;
branches ;
next     0.12;

0.12
date     92.02.28.11.35.35;  author mks;  state Exp;
branches ;
next     0.11;

0.11
date     91.12.06.08.57.48;  author mks;  state Exp;
branches ;
next     0.10;

0.10
date     91.11.15.10.47.59;  author mks;  state Exp;
branches ;
next     0.9;

0.9
date     91.11.07.16.04.17;  author mks;  state Exp;
branches ;
next     0.8;

0.8
date     91.10.28.12.14.42;  author mks;  state Exp;
branches ;
next     0.7;

0.7
date     91.10.25.19.02.43;  author mks;  state Exp;
branches ;
next     0.6;

0.6
date     91.10.21.10.39.43;  author mks;  state Exp;
branches ;
next     0.5;

0.5
date     91.10.18.19.24.20;  author mks;  state Exp;
branches ;
next     0.4;

0.4
date     91.10.18.17.16.27;  author mks;  state Exp;
branches ;
next     0.3;

0.3
date     91.10.18.15.40.41;  author mks;  state Exp;
branches ;
next     0.2;

0.2
date     91.10.18.10.42.00;  author mks;  state Exp;
branches ;
next     0.1;

0.1
date     91.10.15.14.07.00;  author mks;  state Exp;
branches ;
next     ;


desc
@Documentation for the Amiga Native ROM Build process
@


40.5
log
@New NOCHECKSUM option documented for DoBuild
@
text
@                        Amiga Native ROM Build Tools
                               Release 40.4


--------
Overview
--------

The Amiga Native ROM Build Tools are a set of Amiga CLI programs that
can be used to build 512K kickstart images and A3000 superkickstart files.
These tools run on the Amiga and eliminate the need for the SUN ROM build
tools.  In addition, since they are now 100% C-based programs and are
easy to modify, the build process should be much more stable.  As a major
side benefit, the build process has also been shortened from taking an
hour to build a kickstart to under one minute.  (Under 15 seconds if you
build without symbol files)

The build tools can also build the new 1Meg Kickstart ROM images.
Note that there is no way to build 1Meg Kickstarts that are for
anything other than ROM at the moment.  This may be solved at
some future date.

Because this build process can run on any Amiga, individual engineers can
now build test kickstarts on demand and at a moment's notice.

Note that the build process and all of the tools *REQUIRE* AmigaOS V37.175
or better.  (The 2.04 release)  It also requires at least 1.7 meg of available
memory for the build to work completely.  (More if you are building to RAM:)

The build tools are available on the server at:
/usr/commodore/amiga/Other/build		; Build Lists & DOCs
/usr/commodore/amiga/Other/build/src		; Source to tools
/usr/commodore/amiga/Other/build/src/RCS	; Source to tools RCS
/usr/commodore/amiga/Other/build/bin		; Tools (Amiga executables)
/usr/commodore/amiga/Other/build/RCS		; Build Lists & DOCs RCS

Normally, the directory /usr/commodore/amiga is mounted as HOG:

The build tools are actually a collection of smaller tools which do
various specific steps in the build process.  These smaller tools are
all tied together with a program that can execute these tools in the
standard method used for building release code.  This tool can also produce
a CLI script file that when executed will build the kickstart ROM.

For these tools to operate, they must be within your path or resident
within the shell.  All of the executables in the build/bin directory
can be made resident and all of them are required for the build process.

In addition, there are two tools that can be used to lookup addresses and
symbols within the symbol files built by the build process.

CDTV ROMs can also be built with the CDTV option or via the correct
combination of options to the other tools.  This means that CDTV ROMs
can have full symbol table and lookup (and WACK) support.


-----------------------   -------------
Setting up your machine   (Quick Start)
-----------------------   -------------

To use the build process, you need to have certain things set up on
your machine.

1)  The build tools in /build/bin should be in your path or loaded
    resident to the shell.

2)  You need V37: or V39:  (or whatever the version is you are building)
    to be mounted.  These directories are /user/commodore/amiga/V<version>

3)  You need 2 megs of free RAM (more if you want to build in RAM:)

4)  You need at least 1 meg of free disk space (kickstart file plus
    symbol files)  The build process will build the files in the
    directory it was started it.

5)  You need a build-list.  You can use the build lists from
    /usr/commodore/amiga/Other/build

The recommended method to run this is to make the tools resident.  They are
all very small and having them resident will make things run a bit faster.

In a directory of your own (not in the build directory) you would
do a command such as:

DoBuild BUILDLIST=HOG:Other/build/A500 VERSION 39 REVISION 1

This command builds a kickstart file based on the A500 build list and
gives that file version 39.1.  It also will build the symbol files needed
by wack and a build log.

The files build will be:

kick.A500.39.1		- The kickstart file itself
log.A500.39.1		- The kickstart build log
sym.A500.39.1.ld	- Wack symbol .ld file
sym.A500.39.1.map	- Wack symbol .map file

To build an A3000 SuperKickstart file, you would use:

DoBuild HOG:Other/build/A3000 39 1 SUPERKICK HOG:Other/build/super/bonus14.rom

There is also a QUICK option to DoBuild which will not produce the
symbol files but just the kickstart file itself.  (Takes less than 15 seconds)

The CDTV option will build the same except that the binary file will
be named "cdtv.xxxxxx" rather than "kick.xxxxxx"


-----------
Build Lists
-----------

The basic build process takes a build list file.  This file contains a
listing of the modules to load into the kickstart.  This list includes
the relative path from the V39: (or V<version>:, so V37: for 37 builds)
The following is the build list for an A3000 kickstart:

;
; This is the build list for he A3000
;
; Note that some parts of the A3000 ROM are special...
;
src/kickstart/exec/exec.ld.a3000			; A3000 Special
src/kickstart/expansion/expansion.ld.a3000		; A3000 Special
src/kickstart/scsidisk/scsidisk.ld			; A3000 Special
src/kickstart/mathieeesingbas.3000/mathieeesingbas.ld	; A3000 Special
src/kickstart/bonus/bonus.ld.a3000			; A3000 Special
;
; The rest are the same in all machines
;
src/kickstart/audio/audio.ld
src/kickstart/battclock/battclock.ld
src/kickstart/battmem/battmem.ld
src/kickstart/bootmenu/bootmenu.ld
src/kickstart/cia/cia.ld
src/kickstart/con-handler/con-handler.ld
src/kickstart/console/console.ld
src/kickstart/disk/disk.ld
src/kickstart/dos/dos.ld
src/kickstart/filesysres/filesysres.ld
src/kickstart/fs/fs.ld
src/kickstart/gadtools/gadtools.ld
src/kickstart/graphics/graphics.ld
src/kickstart/icon/icon.ld
src/kickstart/intuition/intuition.ld
src/kickstart/keymap/keymap.ld
src/kickstart/layers/layers.ld
src/kickstart/mathffp/mathffp.ld
src/kickstart/misc/misc.ld
src/kickstart/potgo/potgo.ld
src/kickstart/ram/ram.ld
src/kickstart/ramdrive/ramdrive.ld
src/kickstart/ramlib/ramlib.ld
src/kickstart/rawinput/rawinput.ld
src/kickstart/shell/shell.ld
src/kickstart/strap/strap.ld
src/kickstart/timer/timer.ld
src/kickstart/trackdisk/trackdisk.ld
src/kickstart/utility/utility.ld
src/kickstart/wbtag/wbtag.ld
src/kickstart/wb/wb.ld


As you can see, spaces and comments are possible in the build list
as of DoBuild 39.10...



                                 ---------
                                 The Tools
                                 ---------

The Amiga Native ROM Build uses a number of small, simple to update
tools.  These tools are in the /usr/commodore/amiga/Other/build/bin
directory on the server.

These tools are:

	DoBuild		- The overall build process supervisor
			  This is the program that reads the build lists
			  and puts together the command lines needed
			  to execute the other tools to produce the build.

	MakeVF		- This program makes the VF structure in memory
			  into which the kickstart ROM is built.  It also
			  can remove this structure.

	LoadVF		- This program loads the .ld files into the VF
			  structure.  It also knows about relocation,
			  symbol file generation, and kickity-split.

	CheckSumVF	- This program installs the autovectors, kickstart
			  size, kickstart version/revision, and installs
			  the final ROM checksum.  It also can check the
			  kickstart to make sure it will fit as an A3000
			  SuperKickstart.

	SaveVF		- This program saves the kickstart image to disk
			  and completes the symbol .ld file.  It can also
			  append the A3000 SuperKickstart magic to the
			  kickstart file in order to produce an A3000
			  SYS:DEVS/kickstart file.

	LoadSym		- This tool can load a symbol set into a special
			  symbol buffer for later use by CheckSym.  The
			  symbol files are those created by the build process.

	CheckSym	- This tool can look up an address of symbol in the
			  symbol set loaded by LoadSym.

	SumKick		- Generate and display the dual-chip ROM checksums.

	Split		- This tool will take a build list and reorganize it
			  such that Kickity-Split ROM split fits.  It will
			  output a new build list with the right ordering.

	ToKick		- Tool to either convert a kickstart file into
			  a ZKick/KickIt file or to strip a SuperKickstart
			  file into a ROM image file.  (512K)

	KickWordMix	- Special tool to take a binary kickstart image
			  and WordMix it for the 16-bit ROM in 32-bit
			  CPU systems.

	LoadSymTracker	- This tool will load a kickstart symbol set into
			  the data structures of SegTracker (if running)
			  thus giving SegTracker the features of CheckSym
			  plus making Enforcer able to give you symbol
			  information on where a hit is coming from.


-------
DoBuild
-------

Template:
BUILDLIST/A,VERSION/N/A,REVISION/N/A,AUTOREV/K,BUMPREV/S,RELOC/K,
SPLIT/S,1MEG/S,SUPERKICK/K,REKICK/S,FKICK/S,INTERLEAVE/S,QUICK/S,DIRECT/S,
SCRIPT/K,CDTV/S,CDTV_E/S,DIR/K,TO/K,CHANGE/K/M:

DoBuild is the "BuildMaster" in that it executes the other tools to
produce a complete build.  DoBuild just reads the BUILDLIST and
then executes the build process as needed.

Command Line Options:

BUILDLIST/A	- This is a required parameter:  It is the build list file
		  as described above.

VERSION/N/A	- This is a required parameter:  It is the version of the
		  kickstart to build.  The version number is used to select
		  the directory tree from which the modules are loaded.
		  (For example, VERSION 37 would select V37:)  This number
		  is also used in the file names and in the kickstart version.

REVISION/N/A	- This is a required parameter:  It is the revision of the
		  kickstart.  The number is also used in the file names.

AUTOREV/K	- This option tells DoBuild to use the filename given
		  to get the revision number.  If the file name does not
		  exist, DoBuild will create it with the revision given
		  in the REVISION option.  If the file does exist it will
		  use the number stored in it (unless BUMPREV is used
		  at the same time)

BUMPREV/S	- When used with AUTOREV this will bump the revision read
		  from the file before it is used.

RELOC/K		- This option will specify the relocation address in HEX.
		  The default address is 00F80000 for kickstart and
		  00F00000 for CDTV.  (And 00E00000 for CDTV_E)

SPLIT/S		- This option, when selected, says that you want to build
		  a kickstart with kickity-split kludge installed.

1MEG/S		- This option tells DoBuild to build a 1Meg kickstart
		  image from the given buildlist.  DoBuild will
		  then issue the correct commands in order to produce
		  the result required.  The build list will be split
		  via Split into an upper and lower 512K buildlist
		  and then processed as needed.  Note that you must have
		  all of the build tools and they must be up-to-date
		  for this option to work correctly.  That means
		  all of the commands from the HOG:Other/Build/bin
		  directory.

SUPERKICK/K	- This option, when given, will specify that you wish to build
		  a DEVS:kickstart file for the A3000.  The file name you give
		  to this command should be the superkickstart magic file.
		  This file can be found in HOG:Other/build/super/bonus14.rom

REKICK/S	- Build a REKICK kickstart.  This sets the RELOC to 00200000
		  and adds the REKICK parameter to SaveVF

FKICK/S		- Build a $F00000 board compatible kickstart.  This sets
		  the RELOC to 00F00000 and adds the FKICK parameter
		  to SaveVF

INTERLEAVE/S	- This option will Word Interleave the ROM for the 16-bit
		  physical ROM in 32-bit bus systems.  Uses the KickWordMix
		  tool.

QUICK/S		- This option, when selected, will make the build process
		  *NOT* produce symbol and log files.  This makes the build
		  much faster and takes less memory and disk space.

DIRECT/S	- This option tells DoBuild to use the MakeVF DIRECT option.
		  This option will use the $00F00000 card as the VF space
		  rather than have allocated memory.  This can be used to
		  load modules into a board for testing.

SCRIPT/K	- This option, when given, will cause DoBuild to not do
		  the build but to produce a file containing a script
		  that would do the build specified.  All other options
		  are still valid as it changes what the script will contain.

CDTV/S		- This option switches in CDTV build methods insted of
		  the kickstart build method.  All other options still work.
		  This includes changing the V<rev>: to CDTV:

CDTV_E/S	- This option switches in CDTV_E build methods insted of
		  the kickstart build method.  All other options still work.
		  This includes changing the V<rev>: to CDTV:

DIR/K		- This option lets you select the source tree to use
		  This overrides the V<rev>: settings.

TO/K		- This option lets you select the directory in which the
		  build files will be placed.  (Default is current directory)

CHANGE/K/M	- This option lets you change modules in the build list.
		  Any number of modules may be added, removed, or replaced.
		  The syntax is:

		  CHANGE <replacemod> -<removemod> +<addmod>

		  That means that replacement modules are done with just
		  the full path name to that module.  Modules to be removed
		  are pre-pended with "-"  Modules to be added are
		  pre-pended with "+"  Modules that are to be removed
		  do not need a full path name.  Modules to be added or
		  replaced need a path name relative to the current
		  directory of the shell.  It is recommended that full
		  path names be used.

		  NOTE:  This option replaces the REMOVE/REPLACE/ADD
		  options of older DoBuild commands.

NOCHECKSUM	- Used to skip the checksumming procedures.  This allows
		  a resolved ROM image to be built without creating
		  the checksum, vectors, or other info which can interfere
		  with a non-kickstart type of ROM image.

------
MakeVF
------

Template:
REMOVE/S,CLEAR/S,DIRECT/S,APPEND/S,TAG/S

MakeVF allocates a 512K chunk of memory that will be used to build the
kickstart image.  This memory also contains a semaphore and a few other
housekeeping structures.

Command Line Options:

REMOVE/S	- This option tells MakeVF to remove the VF structure
		  from memory.

CLEAR/S		- This option tells MakeVF to initialize the VF structure
		  and to make it ready for the next build.

DIRECT/S	- This option tells MakeVF to make the VF structure
		  in true $00F00000 space.  Using this option
		  will let you LoadVF into a $00F00000 card.
		  Note:  When you MakeVF DIRECT CLEAR it will clear
		  the card.  MakeVF DIRECT will let you load multiple
		  objects into the card but it can not (as of yet)
		  handle adding objects after a reboot.  However,
		  since LoadVF can take multiple file names
		  and it rather fast, this should not be a problem.

		  To use this option to load a object into this space,
		  you should use "RELOC 00F00000" as an option to
		  LoadVF in order to have the relocation done to that
		  space.  Since LoadVF can make symbol files, just have
		  the SYMBOL and MAP files generated and use SaveVF
		  to put them into WACK format.  (The header is required
		  to be added but it can only be added *AFTER* all of
		  the objects are loaded.  arg!)

APPEND/S	- This option tells MakeVF that you wish to setup
		  an APPENDed VF structure.  This means that the
		  VF structure is cleared but the hunk count is not.

TAG/S		- This option tells MakeVF that you wish to setup
		  the SPLIT tag at the start of the VF structure.
		  A Special SPLIT data is added to the start of a
		  fresh VF structure.  This option can not be used
		  when building the main (ROOT) kickstart as
		  it installs 2 longwords of special tag at the
		  start, 1 longword of special pad, and 1 word
		  for the version/revision ID.  (Total 4 long words)
		  EXEC has these longwords built into it for
		  special testing reasons.


------
LoadVF
------

Template:
FILES/M/A,RELOC/K,SYMBOL/K,MAP/K,LOG/K,SPLIT/S,CDTV/S,CDTV_E/S

LoadVF does the relocation and loading of modules into the VF memory
structure.  This command also knows how to install the kickity-split
kludge and it can do this between hunks.  LoadVF also appends to the
SYMBOL and MAP files in order to produce WACK symbols.  It will also
output a warning if there are any BSS hunks and an error if there are
any hunks that are unsupported (such as overlays).  Now skips local
symbols.  ("." symbols)  Also tries its best to process CTRL-C.

Command Line Options:

FILES/M/A	- This is the list of files to load.  LoadVF can take
		  any number of files here.  These files must be valid
		  *ROM* load files.  If they contain any hunks that are
		  invalid, it will fail the load.  (OVERLAY hunks
		  is an example of invalid hunks)  Due to CDTV code having
		  BSS hunks, they are not errors but just warnings.

RELOC/K		- The optional parameter specifies the relocation address.
		  The default relocation address is 00F80000.  This
		  value is a *HEX* string.  (Same as DoBuild)

SYMBOL/K	- This optional parameter specifies the .ld symbol file
		  to which to append the symbol tables.  (For WACK)

MAP/K		- This optional parameter specifies the .map symbol file
		  to which to append the hunk map.  (For WACK)

LOG/K		- This optional parameter specifies the file to which
		  to append the load statistics.  (Used to make the build log)

SPLIT/S		- This option tells LoadVF that it should make sure that
		  the kickity-split kludge gets installed in the right
		  place.  This option makes LoadVF look for when a hunk
		  would have crossed the kickity-split boundry and it
		  will then move the hunk and install the kludge.
		  It also reports how much the hunk was moved by and
		  how many bytes were wasted by the kludge.

CDTV/S		- This option changes the default relocation address
		  to 00F00000 and the maximum size to 256K for CDTV builds.

CDTV_E/S	- This option changes the default relocation address
		  to 00E00000 and the maximum size to 256K for CDTV builds.


----------
CheckSumVF
----------

Template:
VERSION/N,REVISION/N,SUPERKICK/S,CDTV/S

CheckSumVF will take the kickstart image in the VF structure and install
the AutoVecs, ROM size, Version, Revision, and checksum value.  It will
also check to make sure that the ROM image was not too large and will
mark the VF structure as FULL.

Command Line Options:

VERSION/N	- This option sets the version of the kickstart

REVISION/N	- This option sets the revision of the kickstart

SUPERKICK/S	- This option, if selected, will make sure that the
		  kickstart image will fit as a SuperKickstart for
		  the A3000 DEVS:kickstart file.

CDTV/S		- This option turns on CDTV checksum and ROM-SIZE
		  settings.  CDTV is currently a 256K ROM.


------
SaveVF
------

Template:
FILE/A,ALL/S,SYMBOL/K,SUPERKICK/K,REKICK/S,FKICK/S,APPEND/S

SaveVF will save the kickstart image that is in the VF structure
to the file given.  It can also append the superkickstart magic to
the end of the file in order to generate an A3000 DEVS:kickstart file.
The symbol file will also have the hunk table added to the start of the file.

Command Line Options:

FILE/A		- This this the file name to which to save the kickstart image.
		  The image saved is the size of the VF structure.

ALL/S		- This option tells SaveVF to save the whole VF structure and
		  not just the area that was marked as in use.  Note that
		  CheckSumVF marks the whole structure as in-use and thus
		  the ALL switch is not used in normal builds.

SYMBOL/K	- This optional parameter specifies the symbol file that
		  is associated with this kickstart image.  That symbol
		  file will then have the correct hunk-table prepended to
		  it and will be ready for WACK.

SUPERKICK/K	- This optional parameter specifies the file that contains
		  the A3000 superkickstart magic that is needed in order
		  to produce an A3000 DEVS:kickstart file.

REKICK/S	- Make a REKICK file.  This file is encoded and contains
		  special header information for developer released
		  REKICK kickstarts.

FKICK/S		- Make a FKICK file.  This file contains two long words
		  at the start for use with $F00000 boards and tools.

APPEND/S	- Append the data saved from VF space to the file.
		  This is useful for building the multipart kickstarts.


-------
LoadSym
-------

Template:
SYMBOL,REMOVE/S,SKIPBOGUS/S

LoadSym will load in a symbol file set into a special shared memory area
that CheckSym and other symbol tools will be able to access.  The symbols
come from the file .map and .ld file pairs.  Since this is always the case,
LoadSym just needs the base name of the file and it will add .ld and .map.
If LoadSym is started with no options, it will display the status of the
symbols loaded.

Command Line Options:

SYMBOL		- This is the symbol file to load.  For example:
		  LoadSym V37:disk/kickstart/3000/sym.A3000.37.200
		  will load the sym.A3000.37.200.ld and .map files.
		  LoadSym will output the status when done.  You can
		  load fresh symbols without first removing the old ones.

REMOVE/S	- This will remove the symbols from memory and release
		  the memory used.

SKIPBOGUS/S	- This will tell LoadSYM to skip bogus symbols.  These
		  are symbols generated by intuition that are, for some
		  strange reason, made global even though they are
		  compiler local.  Any symbol with the characters "_."
		  in the name is removed from the symbol list.
		  (This is not needed as of V39.10 builds)


--------
CheckSym
--------

Template:
ARG/M,QUICK/S,ALL/S

CheckSym will take a number of hex addresses or symbol names and look them
up within the symbols loaded by LoadSym.  The output format gives you
the address, the symbol, and the offset from that symbol.  The symbol
reported for any address will be the symbol closest to the address without
being beyond the address.

Command Line Options:

ARG/M		- The address/symbol will be looked up and the result
		  displayed. The address is in HEX and may start with "$"
		  For example:  (So you can use $F89AE0 or F89AE0)

		  1>CheckSym $f89ae0 intuition__PutMsgSafely exec_ColdStart
		  Symbols loaded: v37:disk/kickstart/3000/sym.A3000.37.200

		  Address $00F89AE0 @@ battmem_EndCode + $5A8
		  Address $00FC85BA @@ intuition__PutMsgSafely + $0
		  Address $00F800D2 @@ exec_ColdStart + $0

QUICK/S		- This option will suppress the line that displays
		  what symbols are loaded.  Useful for using CheckSym
		  in scripts.

ALL/S		- This will dump all of the symbols in the file to
		  the output device.


-------
SumKick
-------

Template:
FILE/A,DOUBLE/S

SumKick will take a ROM image kickstart file and display the chucksums for
the two ROM chips.  These are 8-bit sum, 16-bit total checksums.

Command Line Options:

FILE/A		- The binary kickstart file.  Note that this file must
		  be the raw binary used to generate the ROMs.

DOUBLE/S	- This doubles the checksum to match the dual 27C400
		  system checksums.  (There is no 2Mbit EPROM with the
		  right pinout so we use 4Mbit EPROMS)


-----
Split
-----

Template:
BUILDLIST/A,DIR/K,EXTRA/K/N,SUPERKICK/S,TO/K,SPLIT/K/N,SIZE/K/N,
ANYFIT/S,FIRSTHALF/K,SECONDHALF/K,SIZESONLY/S

Split will take a build list and the current .ld files and build a new
build list with a module order that produces a split that works if not
a perfect split.  (A perfect split is a 12-byte split)  Split uses a
simplified simulated annealing method to solved the problem and usually
results in a solution in under 5 seconds.  (3 seconds of this time is
the time needed to read the .ld files over the network to find the sizes
of the modules.)  If split has problems finding a solution, it may
run for a long time.  If no solution is possible, you can exit Split
by pressing CTRL-C.

Command Line Options:

BUILDLIST/A	- The build list which is the input the Split.  Split
		  knows notto move the first module (usually EXEC)
		  since EXEC *MUST* be first.  The build list Split
		  outputs will be based on the input build list but
		  any comments on the input build list will be removed.

DIR/K		- By default, split will look in V: for the .LD files
		  from the build list.  However, if you wish to look
		  elsewhere, the DIR option will let you specify a
		  new directory to look at.  Note that the directory
		  name must end in either a ":" or a "/"

EXTRA/K/N	- By default, split will use the whole ROM space in
		  looking for a split.  However, if you wish to leave
		  some space at the end of the ROM, this option lets
		  you specify the number of bytes.  This can sometimes
		  be used to force a better split to be found as Split
		  will continue to run unit it finds a solution.

SUPERKICK/S	- This option is needed to modify the ROM size constant
		  for SuperKickstart ROMs.  The A3000 ROM requires
		  a special module at the end of the ROM and this
		  option leaves room for it.

TO/K		- If a file is specified here, Split will output the
		  new build list to that file rather than to STDOUT.

SPLIT/K/N	- By default, split will do the split needed for the
		  $FB0000 kickity-split.  This option will let you
		  pick a different split point.  The value is the number
		  of bytes from the start of the ROM to split.  Note
		  that the default is 262144.

SIZE/K/N	- By default, size will be the right size for a 512K
		  Kickstart wil AutoVectors (and SuperKickstart if
		  it is specified)  However, for special uses, this
		  keyword will let you pick a new size for the ROM.

ANYFIT/S	- This tells split to only try for any fit of the ROM
		  and not to worry about getting a good fit.  This
		  means the moment the list fits, Split will exit.

FIRSTHALF/K	- This option tells Split to write the first half of
		  the split into the file name given.  This option can
		  not be used with the TO/K option.

SECONDHALF/K	- This option tells Split to write the second half of
		  the split into the file name given.  This option can
		  not be used with the TO/K option.

SIZESONLY/S	- This option tells Split to only list the module
		  sizes.  This is used in the ROM Space Watchdog
		  in order to check ROM Space usage.


------
ToKick
------

Template:
FILE/A,TO/A,STRIPSUPER/S

This will take a kickstart file and make it a ZKick/KickIt file.
It can also (with the STRIPSUPER keyword) take a SuperKickstart file
and make it into a ROM image file for the A3000 machines.

Command Line Options:

FILE/A		- The input kickstart file.

TO/A		- The resulting KickIt/ZKick file or ROM image.
		  Or, if the destination is DF0:, DF1:, DF2:, or DF3:
		  and the input file is a SuperKickstart file
		  then an A3000 SuperKickstart disk will be written
		  in the specified device.  Note that the floppy
		  will be automatically formatted by this process.

STRIPSUPER/S	- Option to take a SuperKickstart file and strip
		  the extra information off the end and make a
		  Kickstart ROM image.


-----------
KickWordMix
-----------

Template:
FILE/A

This command will take the given file and Word Interleave it for the
16-bit in 32-bit system ROMs.  Basically all of the EVEN WORDs (16-bits)
are placed at the front and all of the ODD WORDs are placed at the end
of the file.  This will change the file "in place"

Command Line Options:

FILE/A		- The file to Word Interleave


--------------
LoadSymTracker
--------------

Template:
SYMBOL/A,CHIP/S

LoadSymTracker will load a kickstart symbol set into the SegTracker
data structures thus giving SegTracker the features of CheckSym.
You can not unload the symbols but you can also not change the kickstart
you are running without rebooting.  Current kickstart symbol set takes
about 330K of RAM.  (It is highly compacted)  Since Enforcer can make
use of SegTracker, this means that you can get symbol information
about the Enforcer hits that are in ROM if you have SegTracker installed
and LoadSymTracker was run with the correct symbols.

**Note** This is just a quick hack for internal use.  It is not
a great solution to the WhereAmI problem in kickstart.

Command Line Options:

SYMBOL/A	- This is the symbol file to load.  For example:
		  LoadSymTracker V37:disk/kickstart/3000/sym.A3000.37.200
		  will load the sym.A3000.37.200.ld and .map files.
		  LoadSymTracker will output the status when done.

CHIP/S		- Forces the symbols to be in CHIP memory.  This option
		  is for Martin since he wants to keep his FAST memory
		  available for compiling...
@


40.4
log
@Added docs on how ToKick works for making SuperKickstart disks
@
text
@d349 4
@


40.3
log
@Updated to talk about SIZESONLY in Split...
@
text
@d2 1
a2 1
                               Release 40.3
d702 5
@


40.2
log
@Added the docs for Interleave
@
text
@d2 1
a2 1
                               Release 40.2
d617 1
a617 1
ANYFIT/S,FIRSTHALF/K,SECONDHALF/K
d680 4
@


40.1
log
@New release of the build tools...  1Meg support
@
text
@d2 1
a2 1
                               Release 40.1
d221 4
d238 1
a238 1
SPLIT/S,1MEG/S,SUPERKICK/K,REKICK/S,FKICK/S,QUICK/S,DIRECT/S,
d299 4
d702 17
@


0.19
log
@Added a new tool : LoadSymTracker
@
text
@d2 1
a2 1
                               Release 39.19
d18 5
d217 4
d234 2
a235 2
SPLIT/S,SUPERKICK/K,REKICK/S,FKICK/S,QUICK/S,DIRECT/S,SCRIPT/K,
CDTV/S,CDTV_E/S,DIR/K,TO/K,CHANGE/K/M
d272 11
d347 1
a347 1
REMOVE/S,CLEAR/S,DIRECT/S
d380 3
d384 12
d479 1
a479 1
FILE/A,ALL/S,SYMBOL/K,SUPERKICK/K,REKICK/S,FKICK/S
d512 3
d608 2
a609 1
BUILDLIST/A,DIR/K,SPLIT/K/N,EXTRA/K/N,SUPERKICK/S,TO/K
a634 6
SPLIT/K/N	- By default, split will do the split needed for the
		  $FB0000 kickity-split.  This option will let you
		  pick a different split point.  The value is the number
		  of bytes from the start of the ROM to split.  Note
		  that the default is 262144.

d650 45
d701 1
a701 1
SYMBOL/A
d712 3
d721 4
@


0.18
log
@Updated docs for the new Split command
@
text
@d2 1
a2 1
                               Release 39.18
d212 5
d218 1
d616 24
@


0.17
log
@Changed the CheckSym command
@
text
@d2 1
a2 1
                               Release 39.17
a161 4
There are currently 3 different build lists in the /build directory:
A3000 - The Amiga 3000 kickstart build list
A500  - The Amiga 500 and Amiga 2000 kickstart build list
A300  - The Amiga 300 kickstart build list
a162 5
The build list files are under RCS and any changes to them should be made
via RCS.

You can also have your own local build lists.  The build list file name
will be used to identify your build.
a163 2


d208 3
d212 1
d557 53
@


0.16
log
@One more minor addition.
@
text
@d2 1
a2 1
                               Release 39.16
d517 1
a517 1
ARG/M,ALL/S
d537 4
@


0.15
log
@Added SumKick documentation
@
text
@d2 1
a2 1
                               Release 39.15
d216 2
@


0.14
log
@New release for REKICK kickstarts...
@
text
@d2 1
a2 1
                               Release 39.14
d538 20
@


0.13
log
@Added the docs for BUMPREV and the changes for AUTOREV
@
text
@d2 1
a2 1
                               Release 39.13
d224 1
a224 1
SPLIT/S,SUPERKICK/K,KICKIT/S,FKICK/S,QUICK/S,DIRECT/S,SCRIPT/K,
d267 2
a268 2
KICKIT/S	- Build a KICKIT kickstart.  This sets the RELOC to 00200000
		  and adds the KICKIT parameter to SaveVF
d271 1
a271 1
		  the RELOC to 00F00000 and addss the KICKIT parameter
d443 1
a443 1
FILE/A,ALL/S,SYMBOL/K,SUPERKICK/K,KICKIT/S
d469 6
a474 2
KICKIT/S	- Make a kickit file.  This has the two long words at the
		  start of the file.
@


0.12
log
@New docs for DoBuild...
@
text
@d2 1
a2 1
                               Release 39.12
d223 3
a225 3
BUILDLIST/A,VERSION/N/A,REVISION/N/A,AUTOREV/K,RELOC/K,SPLIT/S,
SUPERKICK/K,KICKIT/S,FKICK/S,QUICK/S,DIRECT/S,SCRIPT/K,CDTV/S,
CDTV_E/S,DIR/K,TO/K,CHANGE/K/M
d249 5
a253 2
		  just bump the number by one and save that new number into
		  the file.
@


0.11
log
@Added documentation for the CDTV_E (Hedley Hardware Bug) and
DIRECT features.
@
text
@d2 1
a2 1
                               Release 39.11
d122 1
a122 1
src/kickstart/bonus.3000/bonus.ld			; A3000 Special
d223 3
a225 2
BUILDLIST/A,VERSION/N/A,REVISION/N/A,RELOC/k,SPLIT/S,SUPERKICK/K,
KICKIT/S,QUICK/S,DIRECT/S,SCRIPT/K,CDTV/S,CDTV_E/S,DIR/K,TO/K,CHANGE/K/M
d245 7
d264 6
a269 2
KICKIT/S	- Build a KICKIT kickstart.  This set the RELOC to 00200000
		  and puts the KICKIT parameter into SaveVF
@


0.10
log
@Major DOC changes
@
text
@d2 1
a2 1
                               Release 39.10
d224 1
a224 1
KICKIT/S,QUICK/S,SCRIPT/K,CDTV/S,DIR/K,TO/K,CHANGE/K/M
d246 1
a246 1
		  00F00000 for CDTV.
d263 5
d277 4
d311 1
a311 1
REMOVE/S,CLEAR/S
d325 19
d350 1
a350 1
FILES/M/A,RELOC/K,SYMBOL/K,MAP/K,LOG/K,SPLIT/S,CDTV/S
d392 3
@


0.9
log
@DoBuild docs updated for LoadSYM
@
text
@d2 1
a2 1
                                Release 39.9
d224 1
a224 1
KICKIT/S,QUICK/S,SCRIPT/K,CDTV/S,DIR/K,TO/K,REMOVE/K,REPLACE/K,ADD/K/M
d270 1
a270 1
		  This includes changing the V<rev>: to CDTV<rev>:
d278 3
a280 3
REMOVE/K	- This option lets you remove a module.  The module name
		  must match (case sensitive) and it does not match it is
		  ignored.  (No error)  You can remove only one module.
d282 13
a294 9
REPLACE/K	- This option lets you replace a module.  The module name
		  must match (case sensitive) and it does not match it is
		  ignored.  (No error)  You can replace only one
		  module.  The module file name must be a valid path
		  from your current directory or a complete path.
		  For example:  DoBuild .... REPLACE RAM:exec.ld

ADD/K/M		- This option lets you add a number of modules to the build.
		  They are added after the build list modules.
d329 2
a330 1
any hunks that are unsupported (such as overlays).
d457 1
d465 1
a465 1
ARG/M/A
d475 3
a477 3
ARG/M/A		- At least one required address or symbol is needed.
		  The address/symbol will be looked up and the result
		  displayed.  For example:
d479 1
a479 1
		  1>CheckSym f89ae0 intuition__PutMsgSafely exec_ColdStart
d485 3
@


0.8
log
@Added/changed the docs for DoBuild and the new ADD and REMOVE
options and the changed REPLACE option.
@
text
@d2 1
a2 1
                                Release 39.8
d366 1
a366 1
VERSION/N,REVISION/N,SUPERKICK/S
d427 1
a427 1
SYMBOL,REMOVE/S
d447 5
@


0.7
log
@Added docs for the REPLACE keyword and the comment features of
DoBuild...
@
text
@d2 1
a2 1
                                Release 39.7
d224 1
a224 1
KICKIT/S,QUICK/S,SCRIPT/K,CDTV/S,DIR/K,TO/K
d278 8
a285 4
REPLACE/K/M	- This option lets you replace modules.  The module names
		  must match (case sensitive) and any that do not match are
		  ignored.  (No error)  You can replace any number of
		  modules.  The module file name must be a valid path
d287 4
a290 1
		  For example:  DoBuild .... REPLACE RAM:exec.ld RAM:audio.ld
@


0.6
log
@Added documentation about BSS hunks being supported.
@
text
@d2 1
a2 1
                                Release 39.6
d113 13
a125 5
src/kickstart/exec/exec.ld.a3000
src/kickstart/expansion/expansion.ld.a3000
src/kickstart/scsidisk/scsidisk.ld
src/kickstart/mathieeesingbas.3000/mathieeesingbas.ld
src/kickstart/bonus.3000/bonus.ld
a157 2
Note that there are no spaces at the start of the line.  A space will
make the build not work.
d159 3
d277 7
@


0.5
log
@Added documentation of the KickIT support
@
text
@d2 1
a2 1
                                Release 39.5
d300 3
a302 1
SYMBOL and MAP files in order to produce WACK symbols.
d309 3
a311 2
		  invalid, it will fail the load.  (BSS and OVERLAY hunks
		  are examples of invalid hunks)
@


0.4
log
@Added docs to match new DoBuild
@
text
@d2 1
a2 1
                                Release 39.4
d215 1
a215 1
QUICK/S,SCRIPT/K,CDTV/S,DIR/K,TO/K
d247 3
d366 1
a366 1
FILE/A,ALL/S,SYMBOL/K,SUPERKICK/K
d392 2
@


0.3
log
@Added docs for the CDTV build options
@
text
@d2 1
a2 1
                                Release 39.3
d215 1
a215 1
QUICK/S,SCRIPT/K,CDTV/S
d258 7
@


0.2
log
@Added documentation for the Symbol tools
@
text
@d2 1
a2 1
                                Release 39.2
d47 5
d100 2
d103 1
d214 2
a215 1
BUILDLIST/A,VERSION/N/A,REVISION/N/A,SPLIT/S,SUPERKICK/K,QUICK/S,SCRIPT/K
d235 4
d256 2
d259 1
d285 1
a285 1
FILES/M/A,RELOC/N,SYMBOL/K,MAP/K,LOG/K,SPLIT/S
d300 3
a302 2
RELOC/N		- The optional parameter specifies the relocation address.
		  The default relocation address is $00F80000.
d321 3
d347 3
d371 1
a371 1
		  the ALL switch is not needed in normal builds.
@


0.1
log
@First draft of the docs
@
text
@d2 1
a2 1
                                Release 39.1
d44 2
d193 3
d197 4
d358 55
@
