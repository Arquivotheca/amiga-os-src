head     1.7;
branch   ;
access   ;
symbols  ;
locks    jesup:1.7; strict;
comment  @* @;


1.7
date     92.03.13.14.35.58;  author jesup;  state Exp;
branches ;
next     1.6;

1.6
date     92.03.12.19.13.00;  author jesup;  state Exp;
branches ;
next     1.5;

1.5
date     92.01.02.23.41.46;  author jesup;  state Exp;
branches ;
next     1.4;

1.4
date     91.11.26.01.16.43;  author jesup;  state Exp;
branches ;
next     1.3;

1.3
date     91.10.14.00.01.24;  author jesup;  state KS_V37_300;
branches ;
next     1.2;

1.2
date     91.10.03.11.42.51;  author jesup;  state Exp;
branches ;
next     1.1;

1.1
date     91.06.04.19.37.42;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


1.7
log
@Fixed some stuff for A1000 with battmem
@
text
@; global data used EXCLUSIVELY by the main SCSI task and interrupt server
	STRUCTURE SCSIGlobals,0
		APTR	st_SysLib		exec library
		APTR	st_BoardAddress		where the board base is
		APTR	st_CmdPort		message port for commands
		APTR	st_ThisTask		self pointer to task
		APTR	st_IntServer		the interrupt server
		APTR	st_DeviceBase		ptr to Device structure

		IFD IS_IDE
		APTR	st_IntAddress		pointer to gayle int addr
		ENDC

		IFD SCSI_SUPPORTED
		UWORD	st_IntPointer		next slot for storing int info
		UWORD	st_TaskPointer		next slot for reading int info
		STRUCT	st_IntData,32		enough for 8 interrupts
		ENDC

		UBYTE	st_IntPendSig		interrupt pending signal
		UBYTE	st_CmdPendSig		command pending signal
		ULONG	st_IntPendMask		interrupt pending mask
		ULONG	st_WaitMask		all signals to Wait() on

		IFD SCSI_SUPPORTED
		STRUCT	st_SyncValues,8		sync xfer vals for each address
		ENDC

		APTR	st_RunningUnit		currently selected/active unit
		STRUCT	st_WorkingUnits,LH_SIZE	units waiting for reselection
		STRUCT	st_WaitingUnits,LH_SIZE	units waiting for selection

		; for all scsi and A1000
		IFND IS_A300
		IFND IS_CDTVCR
		UBYTE	st_SelTimeout		0 = 128msec   1 = 2sec
		ENDC
		ENDC

		IFD SCSI_SUPPORTED
		UBYTE	st_SelectPending	so we don't select twice
		UBYTE	st_DMAGoing		flag, DMA was running
		UBYTE	st_LastPhase		for unexpected phase ints
		UBYTE	st_WDCRegister		WDC register being accessed
		UBYTE	st_ReselUnit		last unit to reselect

; these are flags used to modify the behaviour of various low level things
; they are modified by the jumper settings read at the second XT port (these
; used to be used for setting the SCSI ID of the controller card itself)
		UBYTE	st_MaxLUN		highest LUN to look at (0 or 7)
		UBYTE	st_ParityCheck		0 do it, 1 don't
		UBYTE	st_Disconnect		1 = support disconnection
; the Boyer DMA chip cannot DMA to odd word addresses.  Since WTCH can be
; written to and the next DMA chip won't have WTCH we can use this to detect
; which chip we have.  The following location is set to 1 if using Boyer DMA
		UBYTE	st_OwnID		ID to use for the WDC chip
		UBYTE	st_SendSync		should we initiate sync?
		UBYTE	st_Flags		see below (boyer, etc)

; variables that depend on which chip we have (...93 or ...93a)
		UBYTE	st_MaxOffset		5 or 12
		UBYTE	st_MinXferPeriod	3 or 2
		UBYTE	st_MinMsgPeriod		((3 or 2)*CLOCK_PERIOD)/4
	    IFD A590_A2091_ONLY
		UBYTE	st_TerminalCount	do we require terminal count?
	    ENDC
		ENDC SCSI_SUPPORTED

	LABEL st_SIZEOF

; values for st_Flags:
	BITDEF	ST,FixBoyer,0
	BITDEF	ST,33c93a,1
	BITDEF	ST,NoSignalG2,2
	BITDEF	ST,IgnoredG2,3

; these are the queue type values for showing which SCSI queue a unit is on
; and also double up as flags for what to do when a disconnect occurs
UNIT_TIMED_OUT	EQU	5	selection didn't work (fake disconnect code)
UNIT_GOT_ERROR	EQU	4	if disconnected w/o a msg, then error
UNIT_RUNNING	EQU	3	this is the active unit (it is selected now)
UNIT_WORKING	EQU	2	this unit is waiting for reselection
UNIT_WAITING	EQU	1	this unit needs selection to start a command
UNIT_QUIET	EQU	0	this unit isn't on any of the SCSI task queues

; these are the values used to indicate which phase we were in when an
; unexpected phase interrupt came in.  We only do multiple byte transfers
; in data or command phases, so these are the only ones that need fixing
PAD_LAST	EQU	2	wasting bytes was the last thing we did
COMMAND_LAST	EQU	1	command phase was the last thing we did
DATA_LAST	EQU	0	data phase was the last


; we need an extended SCSI structure to handle linked commands.
 STRUCTURE mySCSICmd,scsi_SIZEOF
    APTR    scsi_NextLinked     ; if this is a linked cmd, next should be valid
    LABEL   myscsi_SIZEOF
@


1.6
log
@added terminalcount variable
@
text
@d33 7
a50 1
		UBYTE	st_SelTimeout		0 = 128msec   1 = 2sec
@


1.5
log
@made a few things flags, added variables for chip-dependant values.
@
text
@d58 3
a60 1

@


1.4
log
@Changes to support the Sync bit and for the g2.0000 int handling
@
text
@a49 1
		UBYTE	st_FixBoyer		1=Boyer DMA else new DMA
d51 2
d54 4
a57 3
		UBYTE	st_NoSignalG2_0000	don't signal on g2.0000 ints
		UBYTE	st_IgnoredG2_0000	saw g2.0000, didn't signal
		UBYTE	st_SendSync		should we initiate sync?
a58 1
		UBYTE	st_WasteSpace
d62 6
@


1.3
log
@Added myscsiCmd because steve forgot to release to scsidisk.h file
with scsi_NextLinked in it.  Feh.
@
text
@d8 1
d23 1
a23 2
		ULONG	st_CmdPendMask		command pending mask
		ULONG	st_ReceivedMask		sigs we received after Wait()
d52 5
@


1.2
log
@IDE mods
@
text
@d72 6
@


1.1
log
@Initial revision
@
text
@d9 5
d17 1
d25 1
d27 1
d33 1
d53 2
@
