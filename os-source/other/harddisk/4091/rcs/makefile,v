head     1.18;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.18
date     94.01.21.15.34.50;  author jesup;  state Exp;
branches ;
next     1.17;

1.17
date     93.08.08.21.38.20;  author jesup;  state Exp;
branches ;
next     1.16;

1.16
date     93.05.06.22.29.18;  author jesup;  state Exp;
branches ;
next     1.15;

1.15
date     93.05.06.22.14.12;  author jesup;  state Exp;
branches ;
next     1.14;

1.14
date     93.03.04.17.01.36;  author jesup;  state Exp;
branches ;
next     1.13;

1.13
date     92.08.13.12.09.44;  author jesup;  state Exp;
branches ;
next     1.12;

1.12
date     92.03.12.19.36.46;  author jesup;  state Exp;
branches ;
next     1.11;

1.11
date     92.02.19.02.01.34;  author jesup;  state Exp;
branches ;
next     1.10;

1.10
date     92.02.19.01.58.39;  author jesup;  state Exp;
branches ;
next     1.9;

1.9
date     92.01.21.16.09.21;  author jesup;  state Exp;
branches ;
next     1.8;

1.8
date     91.12.30.20.43.25;  author jesup;  state Exp;
branches ;
next     1.7;

1.7
date     91.11.15.15.10.46;  author jesup;  state KS_V37_300;
branches ;
next     1.6;

1.6
date     91.11.15.14.58.48;  author jesup;  state Exp;
branches ;
next     1.5;

1.5
date     91.10.14.16.40.34;  author jesup;  state Exp;
branches ;
next     1.4;

1.4
date     91.10.14.16.04.34;  author jesup;  state Exp;
branches ;
next     1.3;

1.3
date     91.10.14.00.11.45;  author jesup;  state Exp;
branches ;
next     1.2;

1.2
date     91.10.03.11.41.06;  author jesup;  state Exp;
branches ;
next     1.1;

1.1
date     91.06.04.19.38.15;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


1.18
log
@changed to v40
@
text
@# Makefile for A2091/A590 SCSI/XT device driver

#MAKE = lmk
MAKE = smake

.SUFFIXES: .asm .o

SOURCES = init.asm lib.asm iotask.asm scsitask.asm xttask.asm attask.asm \
	  mountstuff.asm loadseg.asm endcode.asm
OBJECTS = $(OBJ)init.o $(OBJ)lib.o $(OBJ)mountstuff.o $(OBJ)iotask.o \
	  $(OBJ)scsitask.o $(OBJ)xttask.o $(OBJ)attask.o $(OBJ)loadseg.o \
          $(OBJ)endcode.o $(OBJ)ncr.o
INCLUDES= device.i board.i modifiers.i

.asm.o:
	hx68 -A $*.asm -o$@@ -icdtv:include  -iinclude: -c=QS -h$(PROGRAM).i

.c.o:
	sc $*.c OBJECTNAME=$@@ DEFINE HEADER="$(PROGRAM).h"

all:	scsidisk a300 cdtv_ide a590 a590disk a1000 a3090 a3090disk a4000t \
	a3090.rom

ld_strip.ld:
	sc LINK $* PROGRAMNAME=$@@ STRIPDEBUG NOMAP

scsidisk:
	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

a300:
	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

a1000:
	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

cdtv_ide:
	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

#a2091:
#	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

a590:
	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

#a2091disk:
#	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

a590disk:
	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

#a2090:
#	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

a3090:
	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

a3090disk:
	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

a4000t:
	$(MAKE) $@@.ld_strip OBJ=$@@_obj/ PROGRAM=$@@

a3090_load: a3090_load.o
	sc LINK $*.o PROGRAMNAME=$@@
	
a3090_load.o	   : a3090_load.asm loadseg.asm modifiers.i
	hx68 -A $*.asm -o$@@ -icdtv:include  -iinclude: -c=QS -ha3090_load.i

# offset for -F is in bytes (8k/4 = 2K = $800)
a3090.rom:  a3090 a3090_load
	tools/romload -x -T 000000 -o $@@ -F a3090.ld_strip 0x800 a3090_load
	
$(PROGRAM).ld:	$(OBJECTS)
	sc LINK $(OBJECTS) PROGRAMNAME=$@@ MAPFILE=$(PROGRAM).map NOICONS

$(PROGRAM).ld_strip: $(PROGRAM).ld
	slink FROM $*.ld TO $@@ NODEBUG NOICONS

script.c	   : script.ss
	echo "please rebuild ncr script.c from script.ss"

$(OBJ)ncr.o	   : ncr.c ncr710.h device.h modifiers.h scsi.h ncr_ints.h \
		     scsitask.h iotask.h script.c
$(OBJ)xpt.o	   : xpt.c modifiers.h
$(OBJ)init.o       : init.asm modifiers.i device.i scsidisk_rev.i \
		     ncr710.i scsitask.h iotask.h
$(OBJ)lib.o        : lib.asm modifiers.i board.i ncr710.i scsitask.i iotask.i \
		     device.i
$(OBJ)iotask.o     : iotask.asm modifiers.i iotask.i device.i board.i \
		     ncr710.i scsitask.i
$(OBJ)scsitask.o   : scsitask.asm modifiers.i scsitask.i device.i board.i \
		     ncr710.i iotask.i
$(OBJ)xttask.o     : xttask.asm modifiers.i scsitask.i device.i board.i
$(OBJ)attask.o     : attask.asm modifiers.i scsitask.i device.i board.i
$(OBJ)mountstuff.o : mountstuff.asm modifiers.i device.i
$(OBJ)loadseg.o    : loadseg.asm modifiers.i
$(OBJ)endcode.o    : endcode.asm modifiers.i

version:
	bumprev 40 scsidisk_rev
#	bumprev 40 $(PROGRAM)_rev

clean:
	delete \#?_obj/\#?.o
	delete \#?.ld \#?.ld_strip \#?.info
	delete \#?.map
	delete a3090.rom

backup:
	copy "" vax:scsidisk nopro
	copy notes vax:scsidisk/notes nopro
	copy test vax:scsidisk/test nopro

localbackup:
	copy "" tmp:scsidisk nopro
	copy notes tmp:scsidisk/notes nopro
	copy test tmp:scsidisk/test nopro

# very crude...  make all, copy over
# make sure all is checked in...
internal:
	echo "please make release_xxx, where xxx is v40, cdtv, all or other"

release_all:
	echo "Better be sure everything is checked in!"
	$(MAKE)
	copy \#?.ld\#? \#?_rev\#? `type RCS_Link`/
	copy \#?.ld\#? \#?_rev\#? v40:src/kickstart/scsidisk
	protect v40:src/kickstart/scsidisk/RCS/\#? +wd
	copy `type RCS_Link` v40:src/kickstart/scsidisk/RCS
	copy \#?.ld\#? \#?_rev\#? cdtv:src/ide
	protect cdtv:src/ide/RCS/\#? +wd
	copy `type RCS_Link` cdtv:src/ide/RCS
	echo "done!"
	say "done"
#	copy \#?.ld\#? \#?_rev\#? v37:src/kickstart/scsidisk
#	protect v37:src/kickstart/scsidisk/RCS/\#? +wd
#	copy `type RCS_Link` v37:src/kickstart/scsidisk/RCS

#release_v37:
#	$(MAKE)
#	copy \#?.ld\#? \#?_rev\#? `type RCS_Link`/
#	copy \#?.ld\#? \#?_rev\#? v37:src/kickstart/scsidisk
#	protect v37:src/kickstart/scsidisk/RCS/\#? +wd
#	copy `type RCS_Link` v37:src/kickstart/scsidisk/RCS
#	echo "Better be sure everything is checked in!"

release_v40:
	$(MAKE)
	copy \#?.ld\#? \#?_rev\#? `type RCS_Link`/
	copy \#?.ld\#? \#?_rev\#? v40:src/kickstart/scsidisk
	protect v40:src/kickstart/scsidisk/RCS/\#? +wd
	copy `type RCS_Link` v40:src/kickstart/scsidisk/RCS
	echo "Better be sure everything is checked in!"

release_cdtv:
	$(MAKE)
	copy \#?.ld\#? \#?_rev\#? `type RCS_Link`/
	copy \#?.ld\#? \#?_rev\#? cdtv:src/ide
	protect cdtv:src/ide/RCS/\#? +wd
	copy `type RCS_Link` cdtv:src/ide/RCS
	echo "Better be sure everything is checked in!"

release_other:
	$(MAKE)
	copy \#?.ld\#? \#?_rev\#? `type RCS_Link`/
	echo "Better be sure everything is checked in!"

@


1.17
log
@no icons
@
text
@d122 1
a122 1
	echo "please make release_xxx, where xxx is v39, cdtv, all or other"
d128 3
a130 3
	copy \#?.ld\#? \#?_rev\#? v39:src/kickstart/scsidisk
	protect v39:src/kickstart/scsidisk/RCS/\#? +wd
	copy `type RCS_Link` v39:src/kickstart/scsidisk/RCS
d148 1
a148 1
release_v39:
d151 3
a153 3
	copy \#?.ld\#? \#?_rev\#? v39:src/kickstart/scsidisk
	protect v39:src/kickstart/scsidisk/RCS/\#? +wd
	copy `type RCS_Link` v39:src/kickstart/scsidisk/RCS
@


1.16
log
@*** empty log message ***
@
text
@d74 1
a74 1
	sc LINK $(OBJECTS) PROGRAMNAME=$@@ MAPFILE=$(PROGRAM).map
d77 1
a77 1
	slink FROM $*.ld TO $@@ NODEBUG
@


1.15
log
@A4091 checkin
Many changes
@
text
@d105 2
a106 1
	delete \#?.ld \#?.ld_strip
@


1.14
log
@Bumped to version 40
@
text
@d3 3
d12 1
a12 1
          $(OBJ)endcode.o
d16 7
a22 1
	casm -A $*.asm -o$@@ -icdtv:include  -iinclude: -c=QS -h$(PROGRAM).i
d24 2
a25 1
all:	scsidisk a300 cdtv_ide a590 a2091 a590disk a2091disk a1000
d28 1
a28 1
	lmk $@@.ld.strip OBJ=$@@_obj/ PROGRAM=$@@
d31 1
a31 1
	lmk $@@.ld.strip OBJ=$@@_obj/ PROGRAM=$@@
d34 1
a34 1
	lmk $@@.ld.strip OBJ=$@@_obj/ PROGRAM=$@@
d37 1
a37 1
	lmk $@@.ld.strip OBJ=$@@_obj/ PROGRAM=$@@
d39 2
a40 2
a2091:
	lmk $@@.ld.strip OBJ=$@@_obj/ PROGRAM=$@@
d43 1
a43 1
	lmk $@@.ld.strip OBJ=$@@_obj/ PROGRAM=$@@
d45 2
a46 2
a2091disk:
	lmk $@@.ld.strip OBJ=$@@_obj/ PROGRAM=$@@
d49 1
a49 1
	lmk $@@.ld.strip OBJ=$@@_obj/ PROGRAM=$@@
d51 2
a52 2
a2090:
	lmk $@@.ld.strip OBJ=$@@_obj/ PROGRAM=$@@
d54 19
d74 4
a77 8
	blink <WITH <
FROM	$(OBJECTS)
TO	$(PROGRAM).ld
LIBRARY	lib:debug.lib debug.lib dbg/dbwin.lib lib:amiga.lib
<

$(PROGRAM).ld.strip: $(PROGRAM).ld
	blink $(PROGRAM).ld to $(PROGRAM).ld.strip ND
d79 14
a92 4
$(OBJ)init.o       : init.asm modifiers.i device.i scsidisk_rev.i
$(OBJ)lib.o        : lib.asm modifiers.i board.i 
$(OBJ)iotask.o     : iotask.asm modifiers.i iotask.i device.i board.i
$(OBJ)scsitask.o   : scsitask.asm modifiers.i scsitask.i device.i board.i
d104 3
a106 2
	-delete \#?_obj/\#?.o
	-delete \#?.ld \#?.ld.strip
d110 2
d115 2
d125 1
a125 1
	lmk
d140 1
a140 1
#	lmk
d148 1
a148 1
	lmk
d156 1
a156 1
	lmk
d164 1
a164 1
	lmk
@


1.13
log
@*** empty log message ***
@
text
@d65 2
a66 2
	bumprev 37 scsidisk_rev
#	bumprev 37 $(PROGRAM)_rev
@


1.12
log
@*** empty log message ***
@
text
@d13 1
a13 1
	casm -A $*.asm -o$@@ -iinclude: -c=QS -h$(PROGRAM).i
d81 1
a81 1
	echo "please make release_xxx, where xxx is v37, v39, cdtv, all or other"
a86 3
	copy \#?.ld\#? \#?_rev\#? v37:src/kickstart/scsidisk
	protect v37:src/kickstart/scsidisk/RCS/\#? +wd
	copy `type RCS_Link` v37:src/kickstart/scsidisk/RCS
d95 3
d99 7
a105 7
release_v37:
	lmk
	copy \#?.ld\#? \#?_rev\#? `type RCS_Link`/
	copy \#?.ld\#? \#?_rev\#? v37:src/kickstart/scsidisk
	protect v37:src/kickstart/scsidisk/RCS/\#? +wd
	copy `type RCS_Link` v37:src/kickstart/scsidisk/RCS
	echo "Better be sure everything is checked in!"
@


1.11
log
@cdtv_ide to ide
@
text
@d15 1
a15 1
all:	scsidisk a300 cdtv_ide a590 a2091 a590disk a2091disk
d48 1
a48 1
LIBRARY	lib:debug.lib debug.lib lib:amiga.lib
d68 3
a70 20
clean:	scsidisk_clean ide_clean a590_clean a2091_clean a2090_clean

scsidisk_clean:
	-delete scsidisk_obj/\#?.o
	-delete scsidisk.ld scsidisk.ld.strip
ide_clean:
	-delete ide_obj/\#?.o
	-delete ide.ld ide.ld.strip

a590_clean:
	-delete a590_obj/\#?.o
	-delete a590.ld a590.ld.strip

a2091_clean:
	-delete a2091_obj/\#?.o
	-delete a2091.ld a2091.ld.strip

a2090_clean:
	-delete a2091_obj/\#?.o
	-delete a2091.ld a2091.ld.strip
@


1.10
log
@changed cdtv a bit
@
text
@d110 3
a112 3
	copy \#?.ld\#? \#?_rev\#? cdtv:src/cdtv_ide
	protect cdtv:src/cdtv_ide/RCS/\#? +wd
	copy `type RCS_Link` cdtv:src/cdtv_ide/RCS
d135 3
a137 3
	copy \#?.ld\#? \#?_rev\#? cdtv:src/cdtv_ide
	protect cdtv:src/cdtv_ide/RCS/\#? +wd
	copy `type RCS_Link` cdtv:src/cdtv_ide/RCS
@


1.9
log
@Added cdtv and a1000, ide->a300
Cleaned up makefile to reduce redundant entries, easier to read
@
text
@d15 1
a15 1
all:	scsidisk a300 cdtv a590 a2091 a590disk a2091disk
d26 1
a26 1
cdtv:
d97 2
a98 2
release:
	echo "please type 'release_xxx', where xxx is v37, v39, or other"
d100 16
d130 8
@


1.8
log
@Added disk versions for 2091 and 590
@
text
@d15 1
a15 1
all:	scsidisk ide a590 a2091 a590disk a2091disk
d18 1
a18 1
	lmk scsidisk.ld.strip OBJ=scsidisk_obj/ PROGRAM=scsidisk
d20 2
a21 2
ide:
	lmk ide.ld.strip OBJ=ide_obj/ PROGRAM=ide
d23 6
d30 1
a30 1
	lmk a2091.ld.strip OBJ=a2091_obj/ PROGRAM=a2091
d33 1
a33 1
	lmk a590.ld.strip OBJ=a590_obj/ PROGRAM=a590
d36 1
a36 1
	lmk a2091disk.ld.strip OBJ=a2091disk_obj/ PROGRAM=a2091disk
d39 1
a39 1
	lmk a590disk.ld.strip OBJ=a590disk_obj/ PROGRAM=a590disk
d42 1
a42 62
	lmk a2090.ld.strip OBJ=a2090_obj/ PROGRAM=a2090

scsidisk.ld:	$(OBJECTS)
	blink <WITH <
FROM	$(OBJECTS)
TO	$(PROGRAM).ld
LIBRARY	lib:debug.lib debug.lib lib:amiga.lib
<

scsidisk.ld.strip: scsidisk.ld
	blink scsidisk.ld to scsidisk.ld.strip ND

ide.ld:		$(OBJECTS)
	blink <WITH <
FROM	$(OBJECTS)
TO	$(PROGRAM).ld
LIBRARY	lib:debug.lib debug.lib lib:amiga.lib
MAP $(PROGRAM).map HLSFX PLAIN
<

ide.ld.strip: ide.ld
	blink ide.ld to ide.ld.strip ND

a590.ld:	$(OBJECTS)
	blink <WITH <
FROM	$(OBJECTS)
TO	$(PROGRAM).ld
LIBRARY	lib:debug.lib debug.lib lib:amiga.lib
<

a590.ld.strip: a590.ld
	blink a590.ld to a590.ld.strip ND

a2091.ld:	$(OBJECTS)
	blink <WITH <
FROM	$(OBJECTS)
TO	$(PROGRAM).ld
LIBRARY	lib:debug.lib debug.lib lib:amiga.lib
<

a2091.ld.strip: a2091.ld
	blink a2091.ld to a2091.ld.strip ND

a590disk.ld:	$(OBJECTS)
	blink <WITH <
FROM	$(OBJECTS)
TO	$(PROGRAM).ld
LIBRARY	lib:debug.lib debug.lib lib:amiga.lib
<

a590disk.ld.strip: a590disk.ld
	blink a590disk.ld to a590disk.ld.strip ND

a2091disk.ld:	$(OBJECTS)
	blink <WITH <
FROM	$(OBJECTS)
TO	$(PROGRAM).ld
LIBRARY	lib:debug.lib debug.lib lib:amiga.lib
<

a2091disk.ld.strip: a2091disk.ld
	blink a2091disk.ld to a2091disk.ld.strip ND
d44 1
a44 1
a2090.ld:	$(OBJECTS)
d51 2
a52 2
a2090.ld.strip: a2090.ld
	blink a2090.ld to a2090.ld.strip ND
@


1.7
log
@better to use "scsidisk" than "ide" for the directory
@
text
@d15 1
a15 1
all:	scsidisk ide a590 a2091
d29 6
d78 20
@


1.6
log
@Added specific releases for v37, v39, and other
@
text
@d132 3
a134 3
	copy \#?.ld\#? \#?_rev\#? v37:src/kickstart/ide
	protect v37:src/kickstart/ide/RCS/\#? +wd
	copy `type RCS_Link` v37:src/kickstart/ide/RCS
d140 3
a142 3
	copy \#?.ld\#? \#?_rev\#? v39:src/kickstart/ide
	protect v39:src/kickstart/ide/RCS/\#? +wd
	copy `type RCS_Link` v39:src/kickstart/ide/RCS
@


1.5
log
@Added protect
@
text
@d127 3
d136 14
@


1.4
log
@Added V37 stuff at mike's insistence
@
text
@d130 1
@


1.3
log
@Added very stupid release entry
@
text
@d129 2
@


1.2
log
@Major mods to the makefile to build all disk drivers from one source.
@
text
@d10 1
a10 2
INCLUDES= device.i board.i hardblocks.i scsidirect.i filehandler.i \
	  filesysres.i
d83 7
a89 7
$(OBJ)init.o       : init.asm modifiers.i device.i scsidirect.i scsidisk_rev.i
$(OBJ)lib.o        : lib.asm modifiers.i board.i hardblocks.i scsidirect.i
$(OBJ)iotask.o     : iotask.asm modifiers.i iotask.i device.i board.i scsidirect.i
$(OBJ)scsitask.o   : scsitask.asm modifiers.i scsitask.i device.i board.i scsidirect.i
$(OBJ)xttask.o     : xttask.asm modifiers.i scsitask.i device.i board.i scsidirect.i
$(OBJ)attask.o     : attask.asm modifiers.i scsitask.i device.i board.i scsidirect.i
$(OBJ)mountstuff.o : mountstuff.asm modifiers.i device.i hardblocks.i filesysres.i filehandler.i
d124 6
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# Makefile for A300/A500++/A1000+ IDE device driver
d5 7
a11 1
PROGRAM = ide
d13 2
a14 5
SOURCES = init.asm lib.asm iotask.asm attask.asm mountstuff.asm\
          loadseg.asm endcode.asm
OBJECTS = init.o lib.o iotask.o attask.o mountstuff.o\
          loadseg.o endcode.o
INCLUDES= device.i board.i hardblocks.i scsidirect.i filehandler.i filesysres.i
d16 1
a16 2
.asm.o:
	casm -A $*.asm -o$@@ -iinclude: -c=QS
d18 75
a92 12
$(PROGRAM):  $(OBJECTS)
	blink with $(PROGRAM).wth
	blink $(PROGRAM).ld to $(PROGRAM).ld.strip ND

init.o       : init.asm modifiers.i device.i scsidirect.i scsidisk_rev.i
lib.o        : lib.asm modifiers.i board.i hardblocks.i scsidirect.i
iotask.o     : iotask.asm modifiers.i iotask.i device.i board.i scsidirect.i
#scsitask.o  : scsitask.asm modifiers.i scsitask.i device.i board.i scsidirect.i
attask.o     : attask.asm modifiers.i scsitask.i device.i board.i scsidirect.i
mountstuff.o : mountstuff.asm modifiers.i device.i hardblocks.i filesysres.i filehandler.i
loadseg.o    : loadseg.asm modifiers.i
endcode.o    : endcode.asm modifiers.i
d95 30
a124 1
	bumprev 37 $(PROGRAM)_rev
@
