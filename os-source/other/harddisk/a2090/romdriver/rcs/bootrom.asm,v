head     34.31;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


34.31
date     88.04.03.18.38.31;  author bart;  state Exp;
branches ;
next     34.30;

34.30
date     88.04.02.13.46.03;  author bart;  state Exp;
branches ;
next     34.29;

34.29
date     88.02.23.11.45.03;  author bart;  state Exp;
branches ;
next     34.28;

34.28
date     88.01.21.18.04.35;  author bart;  state Exp;
branches ;
next     34.27;

34.27
date     87.12.04.19.13.27;  author bart;  state Exp;
branches ;
next     34.26;

34.26
date     87.12.04.12.08.00;  author bart;  state Exp;
branches ;
next     34.25;

34.25
date     87.10.26.16.31.06;  author bart;  state Exp;
branches ;
next     34.24;

34.24
date     87.10.25.12.59.59;  author bart;  state Exp;
branches ;
next     34.23;

34.23
date     87.10.15.09.42.55;  author bart;  state Exp;
branches ;
next     34.22;

34.22
date     87.10.15.09.34.04;  author bart;  state Exp;
branches ;
next     34.21;

34.21
date     87.10.14.14.15.31;  author bart;  state Exp;
branches ;
next     34.20;

34.20
date     87.07.08.14.00.31;  author bart;  state Exp;
branches ;
next     34.19;

34.19
date     87.06.12.10.51.22;  author bart;  state Exp;
branches ;
next     34.18;

34.18
date     87.06.11.15.47.20;  author bart;  state Exp;
branches ;
next     34.17;

34.17
date     87.06.11.15.36.06;  author bart;  state Exp;
branches ;
next     34.16;

34.16
date     87.06.10.19.26.43;  author bart;  state Exp;
branches ;
next     34.15;

34.15
date     87.06.10.17.54.23;  author bart;  state Exp;
branches ;
next     34.14;

34.14
date     87.06.10.10.05.30;  author bart;  state Exp;
branches ;
next     34.13;

34.13
date     87.06.03.13.05.41;  author bart;  state Exp;
branches ;
next     34.12;

34.12
date     87.06.03.10.58.41;  author bart;  state Exp;
branches ;
next     34.11;

34.11
date     87.05.31.18.31.33;  author bart;  state Exp;
branches ;
next     34.10;

34.10
date     87.05.31.18.20.33;  author bart;  state Exp;
branches ;
next     34.9;

34.9
date     87.05.31.16.35.23;  author bart;  state Exp;
branches ;
next     34.8;

34.8
date     87.05.29.19.38.59;  author bart;  state Exp;
branches ;
next     34.7;

34.7
date     87.05.29.17.52.02;  author bart;  state Exp;
branches ;
next     34.6;

34.6
date     87.05.28.20.02.12;  author bart;  state Exp;
branches ;
next     34.5;

34.5
date     87.05.28.19.56.39;  author bart;  state Exp;
branches ;
next     34.4;

34.4
date     87.05.28.18.37.15;  author bart;  state Exp;
branches ;
next     34.3;

34.3
date     87.05.28.16.20.13;  author bart;  state Exp;
branches ;
next     34.2;

34.2
date     87.05.28.16.16.44;  author bart;  state Exp;
branches ;
next     34.1;

34.1
date     87.05.28.15.34.18;  author bart;  state Exp;
branches ;
next     34.0;

34.0
date     87.05.28.15.31.30;  author bart;  state Exp;
branches ;
next     ;


desc
@@


34.31
log
@return null in d0 if executed directly from disk
@
text
@*******************************************************************************
*
*	Source Control
*	--------------
*	$Header: bootrom.asm,v 34.30 88/04/02 13:46:03 bart Exp $
*
*	$Locker: bart $
*
*	$Log:	bootrom.asm,v $
*   Revision 34.30  88/04/02  13:46:03  bart
*   overscan support
*   
*   Revision 34.29  88/02/23  11:45:03  bart
*   *   ds.b    $8000   ; not necessary for disk based code
*   *                   ; or if we're burning 2764's
*   
*   Revision 34.28  88/01/21  18:04:35  bart
*   compatible with disk based / binddriver useage
*   
*   Revision 34.27  87/12/04  19:13:27  bart
*   checkpoint
*   
*   Revision 34.26  87/12/04  12:08:00  bart
*   checkpoint before adding check for existing dosname on eb_mountlist
*   
*   Revision 34.25  87/10/26  16:31:06  bart
*   checkpoint
*   
*   Revision 34.24  87/10/25  12:59:59  bart
*   yes, virginia... we need to dc.b 8000 bytes if we are burning 27256 roms
*   
*   Revision 34.23  87/10/15  09:42:55  bart
*   *   ds.b    $8000   ; not necessary -- bart
*   
*   Revision 34.22  87/10/15  09:34:04  bart
*   10-13 rev 1
*   
*   Revision 34.21  87/10/14  14:15:31  bart
*   beginning update to cbm-source.10.13.87
*   
*   Revision 34.20  87/07/08  14:00:31  bart
*   y
*   
*   Revision 34.19  87/06/12  10:51:22  bart
*   removed references to romboot_base... not necessary anymore!
*   
*   Revision 34.18  87/06/11  15:47:20  bart
*   working autoboot 06.11.87 bart
*   
*   Revision 34.17  87/06/11  15:36:06  bart
*   ok
*   
*   Revision 34.16  87/06/10  19:26:43  bart
*   JSR     (A0)            ;   rock 'n roll !!!
*   
*   Revision 34.15  87/06/10  17:54:23  bart
*   *** empty log message ***
*   
*   Revision 34.14  87/06/10  10:05:30  bart
*   pass address of ConfigDev to Init
*   
*   Revision 34.13  87/06/03  13:05:41  bart
*   AutoBoot
*   
*   Revision 34.12  87/06/03  10:58:41  bart
*   checkpoint
*   
*   Revision 34.11  87/05/31  18:31:33  bart
*   ;------ we'll need to find our copy of DiagArea at AutoBoot time
*   LEA     cd_Rom+er_Reserved0c(A3),A1
*   MOVE.L  A2,(A1)
*   
*   Revision 34.10  87/05/31  18:20:33  bart
*   stuff romtag pointer in cd_Driver
*   
*   Revision 34.9  87/05/31  16:35:23  bart
*   chickpoint
*   
*   Revision 34.8  87/05/29  19:38:59  bart
*   checkpoint
*   
*   Revision 34.7  87/05/29  17:52:02  bart
*   *** empty log message ***
*   
*   Revision 34.6  87/05/28  20:02:12  bart
*   *** empty log message ***
*   
*   Revision 34.5  87/05/28  19:56:39  bart
*   *** empty log message ***
*   
*   Revision 34.4  87/05/28  18:37:15  bart
*   checkpoint
*   
*   Revision 34.3  87/05/28  16:20:13  bart
*   *** empty log message ***
*   
*   Revision 34.2  87/05/28  16:16:44  bart
*   *** empty log message ***
*   
*   Revision 34.1  87/05/28  15:34:18  bart
*   *** empty log message ***
*   
*   Revision 34.0  87/05/28  15:31:30  bart
*   added to rcs for updating
*   
*
*******************************************************************************

	SECTION	section

	INCLUDE	"bootrom.i"
	INCLUDE	"bootrom_rev.i"
	INCLUDE	"hddisk.i"
	INCLUDE	"libraries/expansion.i"



	XDEF	_HDBootBlock
	XDEF	hdName
	XDEF	Rom_DiagArea
	XDEF	ExLibName
	XDEF	IntuitLibName
	XDEF	AutoBoot_Dosname
	XDEF	VERNUM
	XDEF	REVNUM

	XREF	Init
	XREF	_LVOFindResident

Boot_Rom:

	MOVEQ.L	#0,D0
	RTS

* 	ds.b	$7FFC	; not necessary for disk based code

Rom_DiagArea:	

	dc.b	(DAC_WORDWIDE+DAC_CONFIGTIME)
	dc.b	(NULL)
	dc.w	(EndCode-Rom_DiagArea)
	dc.w	(Rom_Diagnostics-Rom_DiagArea)
	dc.w	(AutoBoot_Vector-Rom_DiagArea)
	dc.w	(Boot_Name-Rom_DiagArea)
	dc.w	(NULL)
	dc.w	(NULL)

_HDBootBlock:	

	DC.L    ID_DOS_DISK ; 4 character identifier

						; for the purposes FindRomTag,
						; the checksum field will double as SegSize
						; and the DOS patch field as NextSeg
SegSize:

	DC.L	$00000000	; boot block checksum (balance)

NextSeg:

	DC.L	$00000000   ; reserved for DOS patch

AutoBoot_Vector:

	MOVE.L	D0,-(SP)		; save d0

	LEA	AutoBoot_Dosname(PC),A1

	JSR		_LVOFindResident(A6)	; initialize the device driver

	TST.L	D0
	BEQ.S	AutoBoot_NoDos

	;------ and let the strap call the dos

	MOVE.L	D0,A0
	MOVE.L	RT_INIT(A0),A0	; set bootstrap vector

	JSR		(A0)			;	rock 'n roll !!!

AutoBoot_Return:

	MOVE.L	(SP)+,D0		; restore d0
	RTS

AutoBoot_NoDos:
	MOVE.L	D0,A0			; clear bootstrap vector
	BRA.S	AutoBoot_Return

	CNOP    0,4 ; Make sure string is long word aligned

AutoBoot_Dosname:
	DOSNAME

	CNOP    0,4 ; Make sure string is long word aligned

Boot_Name:

	BOOT_NAME

	DS.W	0	; Make sure tag is word aligned

initDDescrip:					;STRUCTURE RT,0
	DC.W	RTC_MATCHWORD		; UWORD RT_MATCHWORD
rt_MatchTag:
	DC.L	initDDescrip		; APTR	RT_MATCHTAG
rt_EndCode:
	DC.L	EndCode				; APTR	RT_ENDSKIP
	DC.B	RTW_COLDSTART		; UBYTE RT_FLAGS
	DC.B	VERSION				; UBYTE RT_VERSION
	DC.B	NT_DEVICE			; UBYTE RT_TYPE
	DC.B	20					; BYTE	RT_PRI
rt_Name:
	DC.L	hdName				; APTR  RT_NAME
rt_IDString:
	DC.L	hdIDString			; APTR	RT_IDSTRING
rt_Init:
	DC.L	Init				; APTR	RT_INIT == long offset from ROM base
								; LABEL RT_SIZE

	CNOP    0,4 ; Make sure string is long word aligned
ExLibName	EXPANSIONNAME	; Expansion Library Name

	CNOP    0,4 ; Make sure string is long word aligned
IntuitLibName	
		DC.B	'intuition.library',0
		DS.W	0

	CNOP    0,4 ; Make sure string is long word aligned
hdName:
		HD_NAME

*		;------ our name identification string
	CNOP    0,4 ; Make sure string is long word aligned
hdIDString:	VSTRING

VERNUM:		EQU	VERSION

REVNUM		EQU	REVISION

Rom_Diagnostics: 			; 	config time entry point

;	upon entry
;	d0 == 0
;	a0 == pointer to boardbase
;	a2 == pointer to copy of diagarea 
;	a3 == pointer to configdev structure for this board

	MOVEM.L	A1,-(SP)

	; must resolve references in romtag if loaded as raw memory image

	LEA		rt_Init(PC),A1 		; in order to execute out of ROM
	MOVE.L	(A1),D0				; get long offset from ROM origin
	ADD.L	A0,D0				; add the boardbase to the offset
	MOVE.L	D0,(A1)				; and replace offset with absolute

	LEA		hdName(PC),A0
	LEA		rt_Name(PC),A1
	MOVE.L	A0,(A1)

	LEA		initDDescrip(PC),A0
	LEA		rt_MatchTag(PC),A1
	MOVE.L	A0,(A1)

	LEA		hdIDString(PC),A0
	LEA		rt_IDString(PC),A1
	MOVE.L	A0,(A1)

	LEA		EndCode(PC),A0
	LEA		rt_EndCode(PC),A1
	MOVE.L	A0,(A1)

	;------ now imitate a Segment List

	LEA.L	SegSize(PC),A1		; address of segment size variable
	SUBA.L	A1,A0				; calculate byte "segment" size
	MOVE.L	A0,D0
	LSR.L	#2,D0				; adjust to word size
	MOVE.L	D0,(A1)				; and store in "segment" size variable

	LEA.L	NextSeg(PC),A1		; address of "next segment" pointer 
	MOVEQ	#0,D0
	MOVE.L	D0,(A1)				; no "next segment"

	;------ we'll need to find our copy of DiagArea at AutoBoot time

	LEA		cd_Rom+er_Reserved0c(A3),A1
	MOVE.L	A2,(A1)

	;------ now let AutoBoot bring us up by the bootstraps

	MOVEM.L	(SP)+,A1

	MOVEQ.L	#1,D0				; indicate "success"
	RTS

EndCode:

	DC.L	0

	END
@


34.30
log
@overscan support
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.29 88/02/23 11:45:03 bart Exp $
d10 3
d132 4
a135 1
* 	ds.b	$8000	; not necessary for disk based code
@


34.29
log
@*   ds.b    $8000   ; not necessary for disk based code
*                   ; or if we're burning 2764's
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.28 88/01/21 18:04:35 bart Exp $
d10 4
a129 1
*					; or if we're burning 2764's
@


34.28
log
@compatible with disk based / binddriver useage
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.27 87/12/04 19:13:27 bart Exp $
d10 3
d125 2
a126 1
 	ds.b	$8000	; not necessary for disk based code, but wont hurt -- bart
@


34.27
log
@checkpoint
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.26 87/12/04 12:08:00 bart Exp $
d10 3
d99 1
a106 1
	SECTION	section
d113 1
d122 1
a122 1
	ds.b	$8000	; not necessary -- bart
d187 2
@


34.26
log
@checkpoint before adding check for existing dosname on eb_mountlist
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.25 87/10/26 16:31:06 bart Exp $
d10 3
@


34.25
log
@checkpoint
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.24 87/10/25 12:59:59 bart Exp $
d10 3
@


34.24
log
@yes, virginia... we need to dc.b 8000 bytes if we are burning 27256 roms
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.23 87/10/15 09:42:55 bart Exp $
d10 3
d101 1
@


34.23
log
@*   ds.b    $8000   ; not necessary -- bart
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.22 87/10/15 09:34:04 bart Exp $
d10 3
d108 1
a108 1
*	ds.b	$8000	; not necessary -- bart
@


34.22
log
@10-13 rev 1
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.21 87/10/14 14:15:31 bart Exp $
d10 3
d105 1
a105 1
	ds.b	$8000	
@


34.21
log
@beginning update to cbm-source.10.13.87
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.20 87/07/08 14:00:31 bart Exp $
d10 3
@


34.20
log
@y
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.19 87/06/12 10:51:22 bart Exp $
d10 3
@


34.19
log
@removed references to romboot_base... not necessary anymore!
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.18 87/06/11 15:47:20 bart Exp $
d10 3
d77 3
d81 1
d85 6
a90 1
	XREF	EndCode
a91 26
	XREF	rt_MatchTag
	XREF	rt_EndCode
	XREF	rt_Name
	XREF	rt_IDString
	XREF	rt_Init
	XREF	initDDescrip
	XREF	open_vect
	XREF	close_vect
	XREF	expunge_vect
	XREF	reserved_vect
	XREF	beginio_vect
	XREF	abortio_vect
	XREF	dev_Name1
	XREF	dev_Name2
	XREF	dev_Name3
	XREF	dev_Name4
	XREF	dev_ICode
	XREF	Open
	XREF	Close
	XREF	Expunge
	XREF	Null
	XREF	BeginIO
	XREF	hdName
	XREF	hdintr
	XREF	initDDesrip
	XREF	hdIDString
d102 1
a102 1
	dc.w	EndCode+(*-Rom_DiagArea)
d156 1
a156 1
Rom_Diagnostics: 			; 	config time entry point
d158 1
a158 5
;	upon entry
;	d0 == 0
;	a0 == pointer to boardbase
;	a2 == pointer to copy of diagarea
;	a3 == pointer to configdev structure for this board
d160 1
a160 1
	MOVEM.L	A1,-(SP)
d162 17
a178 2
	; must resolve references in library vectors if loaded as raw
	; memory image
d180 2
a181 3
	LEA		Open(PC),A0
	LEA		open_vect(PC),A1
	MOVE.L	A0,(A1)
d183 4
a186 3
	LEA		Close(PC),A0
	LEA		close_vect(PC),A1
	MOVE.L	A0,(A1)
d188 3
a190 3
	LEA		Expunge(PC),A0
	LEA		expunge_vect(PC),A1
	MOVE.L	A0,(A1)
d192 3
a194 3
	LEA		Null(PC),A0
	LEA		reserved_vect(PC),A1
	MOVE.L	A0,(A1)
d196 1
a196 3
	LEA		BeginIO(PC),A0
	LEA		beginio_vect(PC),A1
	MOVE.L	A0,(A1)
d198 1
a198 3
	LEA		Null(PC),A0
	LEA		abortio_vect(PC),A1
	MOVE.L	A0,(A1)
d200 1
a200 1
	; and must resolve references in devStruct if loaded as raw memory image
d202 5
a206 3
	LEA		hdName(PC),A0
	LEA		dev_Name1+4(PC),A1 
	MOVE.L	A0,(A1)
d208 1
a208 2
	LEA		dev_Name2+4(PC),A1
	MOVE.L	A0,(A1)
d210 1
a210 2
	LEA		dev_Name3+4(PC),A1
	MOVE.L	A0,(A1)
d212 4
a215 2
	LEA		dev_Name4+4(PC),A1
	MOVE.L	A0,(A1)
a216 6
	LEA		hdintr(PC),A0
	LEA		dev_ICode+4(PC),A1
	MOVE.L	A0,(A1)

	; also must resolve references in romtag if loaded as raw memory image

a228 4
	LEA		Init(PC),A0
	LEA		rt_Init(PC),A1
	MOVE.L	A0,(A1)

d257 1
a257 1
	CNOP    0,4 ; Make sure string is long word aligned
d259 1
a259 5
Boot_Name:

	BOOT_NAME

Boot_End:
@


34.18
log
@working autoboot 06.11.87 bart
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.17 87/06/11 15:36:06 bart Exp $
d10 3
a77 1
	XDEF	Rom_Init_Code
a122 1

a143 2
	MOVE.L	A6,-(SP)				; save romboot_base
*	MOVE.L	rbb_ExecBase(A6),A6		; link to execbase - not currently necessary
a144 1
	MOVE.L	(SP)+,A6				; restore romboot_base
a270 8

Rom_Init_Code:					; if entered with RomBootBase in A6

	MOVEM.L	A6,-(SP)			; save romboot_base 
	MOVE.L	rbb_ExecBase(A6),A6	; link to execbase
	BSR		Init				; initialize the device driver
	MOVEM.L	(SP)+,A6			; restore romboot_base
	rts
@


34.17
log
@ok
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.16 87/06/10 19:26:43 bart Exp $
d10 3
@


34.16
log
@JSR     (A0)            ;   rock 'n roll !!!
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.15 87/06/10 17:54:23 bart Exp $
d10 3
d72 1
a72 1
	XDEF	AutoBoot_Vector
d107 1
a107 1
Boot_DiagArea:	
d111 4
a114 4
	dc.w	EndCode+(*-Boot_DiagArea)
	dc.w	(Boot_Diagnostics-Boot_DiagArea)
	dc.w	(Boot_Code-Boot_DiagArea)
	dc.w	(Boot_Name-Boot_DiagArea)
d169 1
a169 1
Boot_Diagnostics: 			; 	config time entry point
d239 1
a239 1
	LEA		AutoBoot_Vector(PC),A0
d271 1
a271 1
Boot_Code:						; entered with RomBootBase in A6
d273 1
a273 2
	MOVEM.L	A0/A6,-(SP)			; save romboot_base 
	MOVE.L	12(SP),A0			; pass address of ConfigDev to Init 
d276 1
a276 1
	MOVEM.L	(SP)+,A0/A6			; restore romboot_base
@


34.15
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.14 87/06/10 10:05:30 bart Exp $
d10 3
d138 1
a138 1
	MOVE.L	rbb_ExecBase(A6),A6		; link to execbase
d150 2
d166 1
a166 1
Boot_Diagnostics: 				; 	config time entry point
@


34.14
log
@pass address of ConfigDev to Init
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.13 87/06/03 13:05:41 bart Exp $
d10 3
@


34.13
log
@AutoBoot
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.12 87/06/03 10:58:41 bart Exp $
d10 3
d262 2
a263 1
	MOVE.L	A6,-(SP)			; save romboot_base
d266 1
a266 1
	MOVE.L	(SP)+,A6			; restore romboot_base
@


34.12
log
@checkpoint
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.11 87/05/31 18:31:33 bart Exp $
d10 3
d60 1
d89 1
d122 33
d225 1
a225 1
	LEA		Init(PC),A0
d260 1
a260 1
	MOVE.L	rbb_ExecBase(A6),A6	; link to execbase for Init
d262 1
a262 1
	MOVE.L	(SP)+,A6			; restore romboot_base / cc not affected
@


34.11
log
@;------ we'll need to find our copy of DiagArea at AutoBoot time
LEA     cd_Rom+er_Reserved0c(A3),A1
MOVE.L  A2,(A1)
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.10 87/05/31 18:20:33 bart Exp $
d10 5
d95 1
a95 1
	dc.w	(Boot_Init-Boot_DiagArea)
d117 1
a117 1
Boot_Init: 				; 	config time entry point
d219 1
a219 1
Boot_Code:
d221 4
a224 1
	moveq.l	#0,d0
@


34.10
log
@stuff romtag pointer in cd_Driver
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.9 87/05/31 16:35:23 bart Exp $
d10 3
d202 1
a202 1
	;------ we'll need to find our RomTag at AutoBoot time
d204 2
a205 3
	LEA.L	initDDescrip(PC),A0
	LEA		cd_Driver(A3),A1
	MOVE.L	A0,(A1)
@


34.9
log
@chickpoint
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.8 87/05/29 19:38:59 bart Exp $
d10 3
d109 1
a109 1
Boot_Init:  			; config time entry point
d111 6
d199 6
d209 1
@


34.8
log
@checkpoint
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.7 87/05/29 17:52:02 bart Exp $
d10 3
d40 3
d45 1
a45 1
	INCLUDE	"bootrom.i"
d48 26
d84 1
a84 1
	dc.w	Init+(*-Boot_DiagArea)
d91 1
a91 1
Boot_Diagnostics:
d93 102
a194 2
	moveq.l	#0,d0
	rts
@


34.7
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.6 87/05/28 20:02:12 bart Exp $
d10 3
d37 2
d40 2
d51 2
a52 2
	dc.w	(EndCode-Boot_DiagArea)
	dc.w	(Init-Boot_DiagArea)
@


34.6
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.5 87/05/28 19:56:39 bart Exp $
d10 3
d44 2
a45 2
	dc.w	(Boot_End-Boot_DiagArea)
	dc.w	(Boot_Diagnostics-Boot_DiagArea)
a68 2

	ds.b	$7fd8	; pad roms to end
@


34.5
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.4 87/05/28 18:37:15 bart Exp $
d10 3
d66 2
@


34.4
log
@checkpoint
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.3 87/05/28 16:20:13 bart Exp $
d10 3
d30 1
a30 1
Boot_Rom:	
d32 4
d38 4
a41 4
	dc.w	(Boot_End-Boot_Rom)
	dc.w	(Boot_Diagnostics-Boot_Rom)
	dc.w	(Boot_Code-Boot_Rom)
	dc.w	(Boot_Name-Boot_Rom)
d55 2
@


34.3
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.2 87/05/28 16:16:44 bart Exp $
d10 3
@


34.2
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.1 87/05/28 15:34:18 bart Exp $
d10 3
d29 1
a29 1
	dc.w	(Boot_Diagnotics-Boot_Rom)
@


34.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: bootrom.asm,v 34.0 87/05/28 15:31:30 bart Exp $
d10 3
d19 29
@


34.0
log
@added to rcs for updating
@
text
@d5 1
a5 1
*	$Header: $
d7 1
a7 1
*	$Locker: $
d9 4
a12 1
*	$Log: $
d17 1
@
