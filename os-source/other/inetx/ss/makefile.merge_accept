# ------------------------------------------------------------------
# Makefile for: s.library   (shared socket library)
#
# $Locker$
#
# $Id$
#
# $Revision$
#
# $Header$
#
#-------------------------------------------------------------------
#	MANX 5.0E   MANX 5.0E   MANX 5.0E   MANX 5.0E -ONLY-
#-------------------------------------------------------------------
# makefile
#-------------------------------------------------------------------

# - NOTE! C functions for a shared library that are compiled
# -       with Manx C 5.0x need the .begin statement held off.
# -       Use the -m0b flag.

# The networking include file directory
NETINC = NETINC:

# the server's BIN directory for this stuff
NETBIN = NETBIN:lib

# AOBJS are the functions that will be used in the library.
# These functions need to be reentrant! They also get compiled
# with the ".begin" statement removed!

# these functions are the glue code. Link with this (ss.lib) if not 
# using pragmas
AOBJS = func0.m5 func1.m5 func2.m5 func3.m5

# the library source code itself
LOBJS = sslib.m5

# functions in C for the library. Must be reentrant!
# COBJS = _func2.m5 _register.m5
COBJS = func2.m5 _accept.m5

HEADERS = sslib_def.i

.68k.m5:
	as $*.asm -o $*.m5

.asm.m5: $(HEADERS)
	as $*.asm -o $*.m5

# the only C files that are being created here at this time
# are functions that go into the library. You need to be sure
# to omit the ".begin" symbol using the "-m0b" compiler flag

.c.m5: 
	cc -so -m0b -me -iNETINC: -DAMIGA $*.c -o $*.m5


all: ss.library ss.lib

# the actual shared library
ss.library: $(LOBJS) $(COBJS) makefile
	ln +q -o ss.library $(LOBJS) $(COBJS) -lc
	
# the glue code  "ss.lib"
ss.lib: $(AOBJS)
	lb $@ $(AOBJS)
	
func2.m5:
	cc -ofunc2.m5 -m0b func2.c

_accept.m5:
	cc -o_accept.m5 -m0b _accept.c

bump:
	bumprev 1 sslib_rev
