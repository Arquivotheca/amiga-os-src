head     1.1;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.1
date     91.02.07.10.41.12;  author Unknown;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@/*
 * RVI variable handling
 */

#include <rexxinet.h>

/*
 * Set rexx variable via RVI interface; return errors in a way that adheres
 * to our basic error philosophy.
 */
setvar(rm, name, value, len)
	struct RexxMsg *rm;
	char *name, *value;
	int len;
{
	int err;

	err = SetRexxVar(rm, name, value, len);

	/*
	 * It would help to have a full spec on SetRexxVar().  
	 */
	if(err != 0){
		switch(err){
		case 3:		errno = ENOMEM;	break;
		case 9:		errno = E2BIG; 	break;
		case 10:	errno = EINVAL;	break;
		case 40:	errno = EINVAL;	break;	/*happens when len=0*/
		default: 	errno = 0; 	break;
		}

		return -1;
	}

	return 0;
}

@
