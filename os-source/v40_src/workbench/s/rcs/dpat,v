head     40.3;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


40.3
date     93.02.23.14.04.06;  author vertex;  state Exp;
branches ;
next     40.2;

40.2
date     93.02.11.12.53.09;  author vertex;  state Exp;
branches ;
next     40.1;

40.1
date     93.02.09.09.26.39;  author vertex;  state Exp;
branches ;
next     39.1;

39.1
date     93.01.21.11.12.56;  author vertex;  state Exp;
branches ;
next     38.3;

38.3
date     92.12.29.11.29.55;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     92.03.03.14.49.26;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     91.10.11.13.23.04;  author vertex;  state Exp;
branches ;
next     ;


desc
@Provide wildcard support for double argument commands
@


40.3
log
@Uncommented lines...
@
text
@.key COM/A,PAT/A,DIR/A,OPT1,OPT2,OPT3,OPT4
.bra {
.ket }

; $Date: 93/02/11 12:53:09 $ $Revision: 40.2 $
; Do wildcards for double argument commands

FailAt 21
Echo >ENV:qw{$$} "{DIR}" FIRST 256

IF "$qw{$$}" EQ ""
  List >T:qw{$$} {PAT} LFORMAT "{COM} *"%s%s*" *"%s*" {OPT1} {OPT2} {OPT3} {OPT4}"
  Skip doit
EndIF

IF $qw{$$} EQ ":"
  List >T:q{$$} {PAT} LFORMAT "{COM} *"%s%s*" *"{DIR}%s*" {OPT1} {OPT2} {OPT3} {OPT4}"
  Skip doit
EndIF

IF $qw{$$} EQ "/"
  List >T:q{$$} {PAT} LFORMAT "{COM} *"%s%s*" *"{DIR}%s*" {OPT1} {OPT2} {OPT3} {OPT4}"
  Skip doit
EndIF

IF EXISTS {DIR}
  List >T:q{$$} {PAT} LFORMAT "{COM} *"%s%s*" *"{DIR}/%s*" {OPT1} {OPT2} {OPT3} {OPT4}"
Else
  List >T:q{$$} {PAT} LFORMAT "{COM} *"%s%s*" *"{DIR}*" {OPT1} {OPT2} {OPT3} {OPT4}"
EndIF

Lab doit

IF NOT FAIL
  Execute T:q{$$}
Else
  Echo "{PAT} not found"
EndIF

Delete >NIL: ENV:qw{$$} T:q{$$} QUIET

FailAt 10
@


40.2
log
@Now handles a directory parameter of ""
@
text
@d5 1
a5 1
; $Date: 93/02/09 09:26:39 $ $Revision: 40.1 $
d34 5
a38 5
;IF NOT FAIL
;  Execute T:q{$$}
;Else
;  Echo "{PAT} not found"
;EndIF
d40 1
a40 1
;Delete >NIL: ENV:qw{$$} T:q{$$} QUIET
@


40.1
log
@Bumped to V40
@
text
@d5 1
a5 1
; $Date: 93/01/21 11:12:56 $ $Revision: 39.1 $
d11 5
d34 5
a38 1
Delete >NIL: ENV:qw{$$} T:q{$$} QUIET
d40 1
a40 5
IF NOT FAIL
  Execute T:q{$$}
Else
  Echo "{PAT} not found"
EndIF
@


39.1
log
@Now cleans up after itself
@
text
@d5 1
a5 1
; $Date: 92/12/29 11:29:55 $ $Revision: 38.3 $
@


38.3
log
@*** empty log message ***
@
text
@d5 1
a5 1
; $Date: $ $Revision: $
d28 2
@


38.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
.key com/a,pat/a,dir/a,opt1,opt2,opt3,opt4
d5 2
a6 2
; $VER: dpat 38.1 (11.10.91)
; Do wildcards for double arg commands
d9 1
a9 1
Echo >ENV:qw{$$} "{dir}" FIRST 256
d12 1
a12 1
  List >T:q{$$} {pat} LFORMAT "{com} *"%s%s*" *"{dir}%s*" {opt1} {opt2} {opt3} {opt4}"
d17 1
a17 1
  List >T:q{$$} {pat} LFORMAT "{com} *"%s%s*" *"{dir}%s*" {opt1} {opt2} {opt3} {opt4}"
d21 2
a22 2
IF EXISTS {dir}
  List >T:q{$$} {pat} LFORMAT "{com} *"%s%s*" *"{dir}/%s*" {opt1} {opt2} {opt3} {OPT4}"
d24 1
a24 1
  List >T:q{$$} {pat} LFORMAT "{com} *"%s%s*" *"{dir}*" {opt1} {opt2} {opt3} {OPT4}"
d32 1
a32 1
  Echo "{pat} not found"
@


38.1
log
@Initial V38 RCS checkin
@
text
@d3 1
a3 1
.ket {
@
