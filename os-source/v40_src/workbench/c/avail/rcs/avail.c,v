head     39.1;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


39.1
date     93.01.08.12.53.48;  author vertex;  state Exp;
branches ;
next     1.7;

1.7
date     91.01.19.09.15.02;  author J_Toebes;  state Exp;
branches ;
next     1.6;

1.6
date     90.09.26.16.23.10;  author eric;  state Exp;
branches ;
next     1.5;

1.5
date     90.09.24.20.37.21;  author J_Toebes;  state Exp;
branches ;
next     1.4;

1.4
date     90.05.02.15.28.57;  author andy;  state Exp;
branches ;
next     1.3;

1.3
date     90.04.10.18.08.33;  author andy;  state Exp;
branches ;
next     1.2;

1.2
date     90.03.01.19.22.23;  author andy;  state Exp;
branches ;
next     1.1;

1.1
date     90.01.22.19.51.08;  author andy;  state Exp;
branches ;
next     1.0;

1.0
date     90.01.22.19.27.21;  author andy;  state Exp;
branches ;
next     ;


desc
@Avail command for cdos
@


39.1
log
@Fixed bug with FLUSH not requesting a large enough chunk

Made FLUSH go into a loop for 10 iterations to make sure things completely flush
@
text
@

#include "internal/commands.h"
#include "avail_rev.h"

/*                  ssss   dddddddd  dddddddd  dddddddd  dddddddd    */
#define MSG_STATS  "Type  Available    In-Use   Maximum   Largest\n" \
                   "chip%11ld %9ld %9ld %9ld\n"                      \
                   "fast%11ld %9ld %9ld %9ld\n"                      \
                   "total%10ld %9ld %9ld %9ld\n"
#define MSG_NOTBOTH "only one of CHIP, FAST, or TOTAL allowed\n"


#define TEMPLATE  "CHIP/S,FAST/S,TOTAL/S,FLUSH/S" CMDREV
#define OPT_CHIP  0
#define OPT_FAST  1
#define OPT_TOTAL 2
#define OPT_FLUSH 3
#define OPT_COUNT 4

int cmd_avail(void)
{
   struct Library *SysBase = (*((struct Library **) 4));
   struct DosLibrary *DOSBase;
   ULONG              max_chip, max_fast;
   ULONG              avail_chip, avail_fast;
   ULONG              large_chip, large_fast;
   long               parray[13];
   long               opts[OPT_COUNT];
   struct RDargs     *rdargs;
   char              *txt;
   int                rc;
   UWORD              i;

   rc = RETURN_FAIL;
   if (DOSBase = (struct DosLibrary *)OpenLibrary(DOSLIB,DOSVER))
   {
      memset((char *)opts, 0, sizeof(opts));
      rdargs = ReadArgs(TEMPLATE, opts, NULL);

      if (rdargs == NULL)
      {
         PrintFault(IoErr(), NULL);
      }
      else
      {

        rc = RETURN_OK;
	if(opts[OPT_FLUSH])	/* they want expunge first */
	{
	    i = 0;
	    while (i < 10)
	    {
                FreeVec(AllocVec(0x7ffffff0,MEMF_PUBLIC));
                i++;
            }
	}
         /*-------------------------------------------------------------*/
         /* Ask the system for the available numbers.  We do this under */
         /* forbid to ensure consistent numbers.                        */
         /*-------------------------------------------------------------*/
	 Forbid();
	 max_chip   = AvailMem (MEMF_CHIP | MEMF_TOTAL);
         avail_chip = AvailMem (MEMF_CHIP);
         large_chip = AvailMem (MEMF_CHIP | MEMF_LARGEST);

	 max_fast   = AvailMem (MEMF_FAST | MEMF_TOTAL);
         avail_fast = AvailMem (MEMF_FAST);
         large_fast = AvailMem (MEMF_FAST | MEMF_LARGEST);
         Permit ();


         /*-------------------------------------------------------------*/
         /* Assume that they are only going to ask for one thing        */
         /* default to giving them the amount of CHIP until we learn    */
         /* better from looking at the options.                         */
         /*-------------------------------------------------------------*/
         txt = "%ld\n";
         parray[0] = avail_chip;

         if (opts[OPT_TOTAL])
         {
	    if (opts[OPT_FAST] || opts[OPT_CHIP])
	    {
               txt = MSG_NOTBOTH;
	       rc = RETURN_WARN;
	    }
	    else
	    {
               /*----------------------------------------------------------*/
               /* They only want the total amount of memory.  Add up the   */
               /* amount of fast memory to the alredy totaled chip         */
	       /*----------------------------------------------------------*/
               parray[0] += avail_fast;
	    }
         }

         else if (opts[OPT_FAST])
         {
            if (opts[OPT_CHIP])
            {
               /* They asked for both chip and fast, give them an error */
               txt = MSG_NOTBOTH;
               rc = RETURN_WARN;
            }
            else
            {
               /*-------------------------------------------------------*/
               /* They want the amount of fast memory                   */
               /*-------------------------------------------------------*/
               parray[0] = avail_fast;
            }
         }

         /*-------------------------------------------------------------*/
         /* If they ask for the amount of chip ram, it is already set   */
         /* up, so we can just fall through to print it.                */
         /*-------------------------------------------------------------*/
         else if (!opts[OPT_CHIP])
         {
            /*----------------------------------------------------------*/
            /* They asked for everything, calculate the values to be    */
            /* substituted into the message stats                       */
            /*----------------------------------------------------------*/
            txt =  MSG_STATS;
            parray[ 1] = max_chip-avail_chip;   /* Chip memory in use   */
            parray[ 2] = max_chip;              /* total chip memory    */
            parray[ 3] = large_chip;            /* Largest chip piece   */

            parray[ 4] = avail_fast;            /* available fast memory*/
            parray[ 5] = max_fast-avail_fast;   /* fast memory in use   */
            parray[ 6] = max_fast;              /* total fast memory    */
            parray[ 7] = large_fast;            /* largest fast piece   */

            parray[ 8] = avail_chip+avail_fast; /* all memory in use    */
            parray[ 9] = parray[1]+parray[5];
            parray[10] = max_chip+max_fast;     /* total all memory     */
            parray[11] = large_chip;            /* largest piece        */
            if (large_fast > large_chip) parray[11] = large_fast;
         }

         /*-------------------------------------------------------------*/
         /* The messge and substitutions are in place so print them     */
         /*-------------------------------------------------------------*/
         VPrintf(txt, parray);

         /*-------------------------------------------------------------*/
         /* Clean up and exit                                           */
         /*-------------------------------------------------------------*/
         FreeArgs(rdargs);
      }

      CloseLibrary((struct Library *)DOSBase);
   }
   else
   {
      OPENFAIL;

   }
   return(rc);
}
@


1.7
log
@Correct B10761 - CHIP/FAST/TOTAL are exclusive.  Also correct B11475 -
Avail fails to output a CR at the end of an error message.
@
text
@a0 31
; /*
lc -d -j73 -O -o/obj/Avail.o -i/include -v -csf Avail
blink /obj/Avail.o to /bin/Avail sc sd nd
protect /bin/Avail +p
quit
*/

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* |_o_o|\\ Copyright (c) 1989 The Software Distillery.  All Rights Reserved */
/* |. o.| || This program may not be distributed without the permission of   */
/* | .  | || the authors:                             BBS: (919) 382-8265    */
/* | o  | ||   Dave Baker      Alan Beale         Jim Cooper                 */
/* |  . |//    Jay Denebeim    Bruce Drake        Gordon Keener              */
/* ======      John Mainwaring Andy Mercier       Jack Rouse                 */
/*             John Toebes     Mary Ellen Toebes  Doug Walker   Mike Witcher */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/*----------------------------------------------------------------------*/
/* Command: Avail                                                       */
/* Author:  John A. Toebes, VIII                                        */
/* Change History:                                                      */
/*  Date    Person        Action                                        */
/* -------  ------------- -----------------                             */
/* 19MAR89  John Toebes   Initial Creation                              */
/* 25OCT89  John Toebes   Revamp for DOS36.21                           */
/* 02DEC89  John Toebes   Final cleanup after code review               */
/* 06JAN89  John Toebes   Added CMDREV                                  */
/* 26AUG90  John Toebes   B9178 - CHIP and FAST are exclusive           */
/* 10DEC90  John Toebes   B10761 - TOTAL, CHIP and FAST are exclusive   */
/* Notes:                                                               */
/*----------------------------------------------------------------------*/
d2 1
d33 1
d49 8
a56 3
	if(opts[OPT_FLUSH]) {	/* they want expunge first */
	    avail_fast=(ULONG)AllocMem(0x7fffff,MEMF_PUBLIC);
	    if(avail_fast)FreeMem((char *)avail_fast,0x7fffff); /* how this happen ? */
d66 1
a66 1
   
d129 1
a129 1
      
d134 1
a134 1
            
d158 1
a158 1
   
@


1.6
log
@Corrected an open brace to a close brace.
An oversight by John T.?
@
text
@d29 1
d41 1
a41 1
#define MSG_NOTBOTH "only one CHIP or FAST allowed"
d107 13
a119 5
            /*----------------------------------------------------------*/
            /* They only want the total amount of memory.  Add up the   */
            /* amount of fast memory to the alredy totaled chip         */
            /*----------------------------------------------------------*/
            parray[0] += avail_fast;
@


1.5
log
@Fix B9178 - Make CHIP and FAST exclusive keywords
@
text
@d120 1
a120 1
            {
@


1.4
log
@added FLUSH keyword
@
text
@d28 1
d40 1
d76 1
d115 13
a127 4
            /*----------------------------------------------------------*/
            /* They want the amount of fast memory                      */
            /*----------------------------------------------------------*/
            parray[0] = avail_fast;
a165 1
         rc = RETURN_OK;
@


1.3
log
@removed single character keywords
@
text
@d41 1
a41 1
#define TEMPLATE  "CHIP/S,FAST/S,TOTAL/S" CMDREV
d45 2
a46 1
#define OPT_COUNT 3
d74 4
@


1.2
log
@version number update
@
text
@d41 1
a41 1
#define TEMPLATE  "C=CHIP/S,F=FAST/S,T=TOTAL/S" CMDREV
d49 2
a55 1
   struct DosLibrary *DOSBase;
@


1.1
log
@new version of command
@
text
@@


1.0
log
@added to rcs
@
text
@d27 1
d32 1
a32 2
#include <exec/exec.h>
#include <string.h>
d41 1
a41 1
#define TEMPLATE  "C=CHIP/S,F=FAST/S,T=TOTAL/S"
d133 1
a133 1
            parray[ 9] = (max_chip+max_fast)-(avail_chip+avail_fast);
@
