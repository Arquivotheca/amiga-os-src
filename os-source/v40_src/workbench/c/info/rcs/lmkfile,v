head     1.7;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


1.7
date     92.01.27.12.15.42;  author vertex;  state Exp;
branches ;
next     1.6;

1.6
date     91.01.10.14.33.36;  author eric;  state Exp;
branches ;
next     1.5;

1.5
date     90.12.18.17.02.21;  author eric;  state Exp;
branches ;
next     1.4;

1.4
date     90.12.18.16.52.56;  author eric;  state Exp;
branches ;
next     1.3;

1.3
date     90.10.17.16.00.51;  author eric;  state Exp;
branches ;
next     1.2;

1.2
date     90.04.22.02.30.03;  author andy;  state Exp;
branches ;
next     1.1;

1.1
date     90.04.06.15.24.45;  author andy;  state Exp;
branches ;
next     1.0;

1.0
date     90.03.01.19.29.35;  author andy;  state Exp;
branches ;
next     ;


desc
@native makefile
@


1.7
log
@*** empty log message ***
@
text
@
MODNAME	          = info
VERSION		  = 38

REMOTE		  = V:src/workbench/c/info

LD_FILE	          = $(MODNAME).ld
LD_STRIP          = $(MODNAME).ld.strip

C_COMPILER        = LC
C_COMPILER_OPTS   = -b0 -ms -v -rr -O -cfistqmcwu -d1

ASSEMBLER         = CAsm -a
ASSEMBLER_OPTS    = -csy -i include: -o

LINKER            = Blink
LINKER_OPTS	  = ADDSYM SMALLCODE SMALLDATA MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16
LINKER_OPTS_STRIP = ND

C_SOURCES   = info.c
ASM_SOURCES =
OBJECTS     = info.o
STARTUP     =
LIBS        = LIB:debug.lib LIB:amiga.lib LIB:lcr.lib


##############################################################################
# Build the stripped load file...
#
$(LD_STRIP):	$(LD_FILE)
		$(LINKER) FROM $(LD_FILE) TO $(LD_STRIP) $(LINKER_OPTS_STRIP)


##############################################################################
# Build the load file...
#
$(LD_FILE):	$(OBJECTS) $(LIBS)
		$(LINKER) FROM $(STARTUP) $(OBJECTS) TO $(LD_FILE) LIB $(LIBS) $(LINKER_OPTS)


##############################################################################
# Default rules...
#
.c.o:
	$(C_COMPILER) $(C_COMPILER_OPTS) $*.c

.asm.o:
	$(ASSEMBLER) $*.asm $(ASSEMBLER_OPTS) $*.o


##############################################################################
# All dependencies...
#
info.o: info.c $(MODNAME)_rev.rev


##############################################################################
# Bump the version...
#
version:
	@@BumpRev $(VERSION) $(MODNAME)_rev


##############################################################################
# Delete all object files
#
clean:
	@@delete \#?.o
	@@delete $(LD_FILE) $(LD_STRIP) $(MODNAME).map


##############################################################################
# Release the current build to the server...
#
internal:
	@@Delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc|library))|lmkfile)
	@@protect ((\#?.(c|h|asm|i|ld|rev|doc))|lmkfile|$(LD_STRIP)) +r quiet
	@@copy \#?.(strip|ld|doc|library) \#?_rev.\#? $(REMOTE)
@


1.6
log
@Added VERSION, changed V36 references to V
@
text
@a0 20
SUBSYSNAME = info
VERSION = 37
HDRS=
AHDRS=
REVH =	$(SUBSYSNAME)_rev.h
MYLIBS= V:lib/lattice/lcr.lib

LOCAL = SYS:devel/$(SUBSYSNAME)
REMOTE = V:src/workbench/c/$(SUBSYSNAME)

LC = lc
ASM = asm

RCSFILES = lmkfile $(SUBSYSNAME).c

LFLAGS= ND BATCH SMALLCODE SMALLDATA

AFLAGS = -iINCLUDE:

LCFLAGS = -cimsf -d -O -rr -v -j73 -iV:include -iV:inc.lattice
d2 2
a3 2
$(SUBSYSNAME).ld:	$(SUBSYSNAME).o
	blink FROM $(SUBSYSNAME).o TO $(SUBSYSNAME).ld $(LFLAGS) LIB $(MYLIBS)
d5 1
d7 37
d45 1
a45 1
	$(LC) $(LCFLAGS) $*.c
d48 2
a49 1
	$(ASM) $(AFLAGS) $*.asm
d51 4
d56 4
a59 2
$(SUBSYSNAME).o: $(SUBSYSNAME).c $(REVH) $(HDRS)
	
d61 2
a62 1
	@@bumprev $(VERSION) $(SUBSYSNAME)_rev
d64 7
a70 7
release:
	copy $(REMOTE)/$(SUBSYSNAME)_rev.rev $(SUBSYSNAME)_rev.rev
	bumprev $(VERSION) $(SUBSYSNAME)_rev
	lmk
	copy (\#?.ld|\#?_rev.\#?) $(REMOTE)
	delete $(SUBSYSNAME)_rev.rev
	rlog -L -R $(RCSFILES)
d72 3
d76 3
a78 4
	@@copy (\#?.c|\#?.asm|\#?.h|\#?.i|makefile|lmkfile|\#?.ld|\#?.rev) $(REMOTE)

clean:
	@@delete (\#?.o|\#?.ld)
@


1.5
log
@Fixed REVH to use the rev.h file rather than rev.rev
@
text
@d2 2
a3 1
HDRS= $(SUBSYSNAME)_rev.h
d6 1
a6 1
MYLIBS= V36:lib/lattice/lcr.lib
d9 1
a9 1
REMOTE = V36:src/workbench/c/$(SUBSYSNAME)
d20 1
a20 1
LCFLAGS = -cimsf -d -O -rr -v -j73 -iV36:include -iV36:inc.lattice
d36 1
a36 1
	@@bumprev 36 $(SUBSYSNAME)_rev
d40 1
a40 1
	bumprev 36 $(SUBSYSNAME)_rev
@


1.4
log
@Added SUBSYSNAME
@
text
@d4 1
a4 1
REVH =	$(SUBSYSNAME)_rev.rev
@


1.3
log
@Improved make release
@
text
@d1 2
a2 1
HDRS= info_rev.h
d4 1
a4 1
REVH =	info_rev.rev
d7 2
a8 2
LOCAL = SYS:devel/info
REMOTE = V36:src/workbench/c/info
d13 1
a13 1
RCSFILES = lmkfile info.c
d21 2
a22 2
info.ld:	info.o
	blink FROM info.O TO info.ld $(LFLAGS) LIB $(MYLIBS)
d32 1
a32 1
info.o: info.c $(REVH) $(HDRS)
d35 1
a35 1
	@@bumprev 36 info_rev
d38 2
a39 2
	copy $(REMOTE)/info_rev.rev info_rev.rev
	bumprev 36 info_rev
d42 1
a42 1
	delete info_rev.rev
@


1.2
log
@added release option
@
text
@d3 2
a4 1
MYLIBS= LIB:lcr.lib
d12 2
d31 1
a31 1
info.o: info.c $(HDRS)
d37 6
a42 2
	@@copy (\#?.ld|\#?_rev.\#?) $(REMOTE)
	@@bumprev 36 info_rev
d48 1
a48 1
	@@delete \#?.o|\#?.ld
@


1.1
log
@copies rev file
.,
@
text
@d20 1
d31 5
a35 1
	@@bumprev 36 version_rev
@


1.0
log
@added to rcs
@
text
@d1 1
a1 1
HDRS=
a31 3
local:
	@@copy $(REMOTE)/\#?.c|\#?.asm|\#?.h|\#?.i|makefile|lmkfile|\#?.ld $(LOCAL)

d33 1
a33 1
	@@copy \#?.c|\#?.asm|\#?.h|\#?.i|makefile|lmkfile|\#?.ld $(REMOTE)
@
