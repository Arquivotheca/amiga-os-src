head     39.11;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


39.11
date     93.06.02.13.26.57;  author vertex;  state Exp;
branches ;
next     39.10;

39.10
date     93.05.27.11.51.48;  author vertex;  state Exp;
branches ;
next     39.9;

39.9
date     93.05.04.16.35.02;  author vertex;  state Exp;
branches ;
next     39.8;

39.8
date     93.03.10.09.34.35;  author vertex;  state Exp;
branches ;
next     39.7;

39.7
date     93.03.09.10.43.11;  author vertex;  state Exp;
branches ;
next     39.6;

39.6
date     93.02.23.12.45.45;  author vertex;  state Exp;
branches ;
next     39.5;

39.5
date     93.02.09.13.21.58;  author vertex;  state Exp;
branches ;
next     39.4;

39.4
date     92.09.24.17.00.21;  author vertex;  state Exp;
branches ;
next     39.3;

39.3
date     92.08.10.16.38.34;  author vertex;  state Exp;
branches ;
next     39.2;

39.2
date     92.07.01.18.52.26;  author vertex;  state Exp;
branches ;
next     39.1;

39.1
date     92.06.23.15.00.05;  author vertex;  state Exp;
branches ;
next     ;


desc
@lmk file for IPrefs

@


39.11
log
@*** empty log message ***
@
text
@
MODNAME	          = iprefs
VERSION		  = 40
#VERSION_TYPE      = BETA_VERSION
VERSION_TYPE     = RELEASE_VERSION

REMOTE		  = V:src/workbench/c/iprefs

LD_FILE	          = $(MODNAME).ld
LD_STRIP          = $(MODNAME).ld.strip

C_COMPILER        = LC
C_COMPILER_OPTS   = -b1 -ms -v -rr -O -cfistqmc -d1

ASSEMBLER         = HX68 -a
ASSEMBLER_OPTS    = -csy -i include: -o

LINKER            = Blink
LINKER_OPTS	  = ADDSYM SC SD MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16
LINKER_OPTS_STRIP = ND

C_SOURCES   = iprefs.c eventloop.c pread.c resetwb.c texttable.c sound.c monitors.c backdrop.c

ASM_SOURCES = soundpatch.asm backdroppatch.asm stubs.asm betaalert.asm

OBJECTS     = iprefs.o eventloop.o texttable.o resetwb.o pread.o soundpatch.o \
	      sound.o monitors.o backdroppatch.o backdrop.o stubs.o betaalert.o

STARTUP	    =
LIBS	    = LIB:debug.lib LIB:lcr.lib LIB:amiga.lib


##############################################################################
# Build the stripped load file...
#
$(LD_STRIP):	$(LD_FILE)
		$(LINKER) FROM $(LD_FILE) TO $(LD_STRIP) $(LINKER_OPTS_STRIP)


##############################################################################
# Build the load file...
#
$(LD_FILE):	$(OBJECTS) $(LIBS)

		$(LINKER) <with <
FROM $(STARTUP) $(OBJECTS) TO $(LD_FILE) LIB $(LIBS) $(LINKER_OPTS)
<


##############################################################################
# Default rules...
#
.c.o:
	$(C_COMPILER) $(C_COMPILER_OPTS) -D$(VERSION_TYPE)=1 $*.c

.asm.o:
	$(ASSEMBLER) $*.asm -D $(VERSION_TYPE)=1 $(ASSEMBLER_OPTS) $*.o


##############################################################################
# All dependencies...
#
iprefs.o: iprefs.c iprefs_rev.h iprefs.h resetwb.h pread.h texttable.h sound.h
	$(C_COMPILER) $(C_COMPILER_OPTS) -D$(VERSION_TYPE)=1 -sc=_NOMERGE $*.c

eventloop.o: eventloop.c eventloop.h iprefs.h
resetwb.o: resetwb.c resetwb.h texttable.h iprefs.h
pread.o: pread.c iprefs.h texttable.h monitors.h
texttable.o: texttable.c texttable.h
soundpatch.o: soundpatch.asm
sound.o: sound.c sound.h
monitors.o: monitors.c monitors.h
backdroppatch.o: backdroppatch.asm
backdrop.o: backdrop.c backdrop.h
stubs.o: stubs.asm
betaalert.o: betaalert.asm


##############################################################################
# Bump the version...
#
version:
	@@BumpRev $(VERSION) $(MODNAME)_rev


##############################################################################
# Delete all object files
#
clean:
	@@Delete \#?.o
	@@Delete $(LD_FILE) $(LD_STRIP) $(MODNAME).map


##############################################################################
# Release the current build to the server...
#
internal:
	@@Delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc|library))|lmkfile)
	@@Protect ((\#?.(c|h|asm|i|ld|rev|doc))|lmkfile|$(LD_STRIP)) +rd quiet
	@@Copy \#?.(strip|ld|doc|library) \#?_rev.\#? $(REMOTE)
@


39.10
log
@*** empty log message ***
@
text
@d4 2
a5 2
VERSION_TYPE      = BETA_VERSION
#VERSION_TYPE     = RELEASE_VERSION
@


39.9
log
@*** empty log message ***
@
text
@d4 2
a5 2
#VERSION_TYPE      = BETA_VERSION
VERSION_TYPE     = RELEASE_VERSION
@


39.8
log
@*** empty log message ***
@
text
@d4 2
a5 2
VERSION_TYPE      = BETA_VERSION
#VERSION_TYPE     = RELEASE_VERSION
@


39.7
log
@*** empty log message ***
@
text
@d4 2
a5 2
#VERSION_TYPE      = BETA_VERSION
VERSION_TYPE     = RELEASE_VERSION
@


39.6
log
@Added beta alert support
@
text
@d4 2
a5 2
VERSION_TYPE      = BETA_VERSION
#VERSION_TYPE     = RELEASE_VERSION
@


39.5
log
@Bumped to V40
@
text
@d4 2
d24 1
a24 1
ASM_SOURCES = soundpatch.asm backdroppatch.asm stubs.asm
d27 1
a27 1
	      sound.o monitors.o backdroppatch.o backdrop.o stubs.o
d54 1
a54 1
	$(C_COMPILER) $(C_COMPILER_OPTS) $*.c
d57 1
a57 1
	$(ASSEMBLER) $*.asm $(ASSEMBLER_OPTS) $*.o
d64 1
a64 1
	$(C_COMPILER) $(C_COMPILER_OPTS) -sc=_NOMERGE $*.c
d76 1
@


39.4
log
@Removed references to CrossDOS include files
@
text
@d3 1
a3 1
VERSION		  = 39
@


39.3
log
@Changes to support the new "split the seglist in half" trick.
@
text
@a91 8
# Release stuff that should be...
#
headers:
	@@protect V:include/internal/crossdos.? wrd quiet
	@@copy crossdos.? V:include/internal quiet


##############################################################################
@


39.2
log
@Added new sources
@
text
@d20 1
a20 1
C_SOURCES   = iprefs.c pread.c resetwb.c texttable.c sound.c monitors.c backdrop.c
d24 1
a24 1
OBJECTS     = iprefs.o texttable.o resetwb.o pread.o soundpatch.o \
d62 3
@


39.1
log
@Initial V39 RCS checkin
@
text
@d13 1
a13 1
ASSEMBLER         = CAsm -a
d20 1
a20 1
C_SOURCES   = iprefs.c pread.c resetwb.c texttable.c sound.c monitors.c
d22 1
a22 1
ASM_SOURCES = soundpatch.asm
d25 1
a25 1
	      sound.o monitors.o
d61 1
a61 1
iprefs.o: iprefs.c iprefs_rev.h iprefs.h resetwb.h pread.h texttable.h sound.h soundpatch.h
d68 3
@
