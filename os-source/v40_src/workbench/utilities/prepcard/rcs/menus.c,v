head     1.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.2
date     91.11.27.14.09.09;  author darren;  state Exp;
branches ;
next     1.1;

1.1
date     91.11.25.19.22.27;  author darren;  state Exp;
branches ;
next     ;


desc
@Initial check-in (beta 1)
@


1.2
log
@Ask for NewLook menus, and store NewMenu structs local to function
since they are disposable.
@
text
@#include "prepcard.h"

#ifndef GTNN_NewLookMenus
#define GTMN_NewLookMenus    GT_TagBase+67
#endif

static struct NewMenu menus[MSG_PREP_QUIT_MENU - MSG_PREP_TITLE_MENU + 2] = {
	{ NM_TITLE,	(STRPTR)MSG_PREP_TITLE_MENU,	NULL,				0,	0L,	(APTR)CM_DEFAULT },
	{ NM_ITEM,	(STRPTR)MSG_PREP_ADV_MENU,	NULL,				0,	0L,	(APTR)CM_ADV },
	{ NM_ITEM,	(STRPTR)MSG_PREP_QUIT_MENU,	(STRPTR)MSG_PREP_QUIT_COM,	0,	0L,	(APTR)CM_QUIT },
	{ NM_END,	NULL,				NULL,				0,	0L,	NULL },
};

struct Menu *CreateAMenuStrip( struct cmdVars *cv, struct NewMenu *nm, struct TagList *tags )
{
	return(CreateMenusA(nm, tags));
}

BOOL DoLayoutMenus( struct cmdVars *cv, struct Menu *menu, ULONG tags, ... )
{
	return(LayoutMenusA(menu,cv->cv_VI,(struct TagList *)&tags));
}

BOOL MakeBegMenu( struct cmdVars *cmv )
{
register struct cmdVars *cv;
register struct NewMenu *md,*ms;
int loop;
struct	NewMenu	TempMenu[MSG_PREP_QUIT_MENU - MSG_PREP_TITLE_MENU + 2];


	cv = cmv;

	for(loop = MSG_PREP_TITLE_MENU-MSG_PREP_TITLE_MENU;
		loop < (MSG_PREP_QUIT_MENU-MSG_PREP_TITLE_MENU + 2);
		loop++)
	{
		ms = &menus[loop];
		md = &TempMenu[loop];

		md->nm_Type = ms->nm_Type;

		md->nm_Label = ms->nm_Label;

		if(ms->nm_Label)
		{
			md->nm_Label = GetString(cv,(ULONG)ms->nm_Label);
		}
	

		md->nm_CommKey = ms->nm_CommKey;

		if(ms->nm_CommKey)
		{
			md->nm_CommKey = GetString(cv,(ULONG)ms->nm_CommKey);
		}
	
		md->nm_Flags = ms->nm_Flags;
		md->nm_MutualExclude = ms->nm_MutualExclude;
		md->nm_UserData = ms->nm_UserData;

	}

	if(cv->cv_begmenu = CreateAMenuStrip(cv,&TempMenu[0],TAG_DONE))
	{
		if(DoLayoutMenus(cv,cv->cv_begmenu,GTMN_NewLookMenus,(BOOL)TRUE,TAG_DONE))
		{
			SetMenuStrip(cv->cv_win,cv->cv_begmenu);
			return(TRUE);
		}
		FreeMenus( cv->cv_begmenu );
	}
	return(FALSE);
}
@


1.1
log
@Initial revision
@
text
@d3 4
d19 1
a19 1
BOOL DoLayoutMenus( struct cmdVars *cv, struct Menu *menu, struct TagItem *tags )
d21 1
a21 1
	return(LayoutMenusA(menu,cv->cv_VI,tags));
d29 2
d39 1
a39 1
		md = &cv->cv_NewMenu[loop];
d64 1
a64 1
	if(cv->cv_begmenu = CreateAMenuStrip(cv,&cv->cv_NewMenu[0],TAG_DONE))
d66 1
a66 1
		if(DoLayoutMenus(cv,cv->cv_begmenu,TAG_DONE))
@
