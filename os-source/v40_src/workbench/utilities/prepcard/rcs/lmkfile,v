head     1.9;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.9
date     93.02.12.12.45.20;  author darren;  state Exp;
branches ;
next     1.8;

1.8
date     93.02.12.12.30.12;  author darren;  state Exp;
branches ;
next     1.7;

1.7
date     92.11.04.13.00.33;  author darren;  state Exp;
branches ;
next     1.6;

1.6
date     91.12.04.15.20.30;  author darren;  state Exp;
branches ;
next     1.5;

1.5
date     91.12.04.15.12.17;  author darren;  state Exp;
branches ;
next     1.4;

1.4
date     91.11.27.14.28.54;  author darren;  state Exp;
branches ;
next     1.3;

1.3
date     91.11.26.18.17.47;  author darren;  state Exp;
branches ;
next     1.2;

1.2
date     91.11.25.19.28.40;  author darren;  state Exp;
branches ;
next     1.1;

1.1
date     91.11.25.19.25.40;  author darren;  state Exp;
branches ;
next     ;


desc
@Initial check-in (beta 1)
@


1.9
log
@Remote is now in wb/utilities/prepcard
@
text
@
MODNAME	          = prepcard
VERSION		  = 39
RELVERSION	  = 40

REMOTE		  = V39:src/workbench/utilities/prepcard

LD_FILE	          = $(MODNAME).ld
LD_STRIP          = $(MODNAME)

C_COMPILER        = LC
C_COMPILER_OPTS   = -b1 -ms -v -cfistqmc -d1 -O

ASSEMBLER         = CAsm -a
ASSEMBLER_OPTS    = -csy -i include: -o

LINKER            = Blink
LINKER_OPTS	  = ADDSYM SMALLCODE SMALLDATA MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16
LINKER_OPTS_STRIP = ND

C_SOURCES   =	main.c \
		ui.c \
		preptext.c \
		check.c \
		commands.c \
		gadgets.c \
		windows.c \
		events.c \
		menus.c \
		childtask.c \
		prep.c

ASM_SOURCES =	tinysprintf.asm \
		startchild.asm

OBJECTS     =	main.o \
		ui.o \
		commands.o \
		check.o \
		tinysprintf.o \
		gadgets.o \
		windows.o \
		events.o \
		childtask.o \
		startchild.o \
		menus.o \
		prep.o \
		preptext.o

STARTUP	    = 
LIBS        = LIB:debug.lib  LIB:lcr.lib LIB:amiga.lib
HFILES	    = prepcard.h prepcard_text.h

##############################################################################
# Build the stripped load file...
#
$(LD_STRIP):	$(LD_FILE)
		$(LINKER) <with <
		FROM $(LD_FILE)
		TO $(LD_STRIP)
		$(LINKER_OPTS_STRIP)
		<

##############################################################################
# Build the load file...
#
$(LD_FILE):	$(OBJECTS) $(LIBS)
		$(LINKER) <with <
		FROM $(STARTUP) $(OBJECTS)
		TO $(LD_FILE)
		LIB $(LIBS)
		$(LINKER_OPTS)
		<

##############################################################################
# Default rules...
#
.c.o:
	$(C_COMPILER) $(C_COMPILER_OPTS) $*.c

.asm.o:
	$(ASSEMBLER) $*.asm $(ASSEMBLER_OPTS) $*.o


##############################################################################
# All dependencies...
#

$(MODNAME)_text.h: $(MODNAME).cd
	@@lmk maketext

main.o: main.c $(MODNAME)_rev.rev $(HFILES)
ui.o: ui.c $(HFILES)
check.o: check.c tuples.h $(HFILES)
commands.o: commands.c $(HFILES)
tinysprintf.o: tinysprintf.asm
gadgets.o: gadgets.c $(HFILES)
events.o: events.c $(HFILES)
windows.o: windows.c $(HFILES)
childtask.o: childtask.c $(HFILES)
startchild.o: startchild.asm
menus.o: menus.c $(HFILES)
prep.o: prep.c $(HFILES)
preptext.o: preptext.c $(HFILES)


##############################################################################
# Bump the version...
#
version:
	@@BumpRev $(RELVERSION) $(MODNAME)_rev


##############################################################################
# Delete all object files
#
clean:
	@@delete \#?.o
	@@delete $(LD_FILE) $(LD_STRIP) $(MODNAME).map


##############################################################################
# Release the current build to the server...
#
internal:
	@@Delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc|library|cd))|lmkfile)
	@@protect ((\#?.(c|h|asm|i|ld|rev|doc|dc))|lmkfile|$(LD_STRIP)) +r quiet
	@@copy ((\#?.(c|h|asm|i|ld|rev|doc|library|cd))|lmkfile|$(LD_STRIP)) $(REMOTE)

##############################################################################
# Make new text file
#
maketext:
	@@catcomp $(MODNAME).cd CFILE $(MODNAME)_text.h SYMBOLS PREPCARD

@


1.8
log
@Make version independent of build dir.  Mods for catcomp - grr,
everything about it changed.
@
text
@d6 1
a6 1
REMOTE		  = V39:src/other/prepcard
@


1.7
log
@Make in V39 directory
Make as V39 module
@
text
@d4 1
d111 1
a111 1
	@@BumpRev $(VERSION) $(MODNAME)_rev
d134 1
a134 1
	@@catcomp $(MODNAME).cd CFILE $(MODNAME)_text.h
@


1.6
log
@Ack - should be right this time.
@
text
@d3 1
a3 1
VERSION		  = 37
d5 1
a5 1
REMOTE		  = V:src/other/prepcard
@


1.5
log
@Changed dependency
@
text
@a89 1
	@@lmk
@


1.4
log
@Makes prepcard_text.h from .cd file - no longer makes .cd file.
Modified to copy .cd during Make internal
@
text
@d87 5
a134 4

$(MODNAME)_text.h: $(MODNAME).cd
	@@lmk maketext
	@@lmk
@


1.3
log
@Fix prep.p dependency line
@
text
@d5 1
a5 1
REMOTE		  = V:src/other/prepcard/
d51 1
a51 1
HFILE	    = prepcard.h
d87 4
a90 5
main.o: main.c $(MODNAME)_rev.rev $(HFILE)
preptext.o: preptext.c prepcard_text.h $(HFILE)
ui.o: ui.c $(HFILE)
check.o: check.c tuples.h $(HFILE)
commands.o: commands.c $(HFILE)
d92 4
a95 4
gadgets.o: gadgets.c $(HFILE)
events.o: events.c $(HFILE)
windows.o: windows.c $(HFILE)
childtask.o: childtask.c $(HFILE)
d97 3
a99 2
menus.o: menus.c $(HFILE)
prep.o: prep.c $(HFILE)
d101 1
d121 3
a123 3
	@@Delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc|library))|lmkfile)
	@@protect ((\#?.(c|h|asm|i|ld|rev|doc))|lmkfile|$(LD_STRIP)) +r quiet
	@@copy ((\#?.(c|h|asm|i|ld|rev|doc|library))|lmkfile|$(LD_STRIP)) $(REMOTE)
d126 4
a129 11
# Make new catalog
#
catalog:
	@@catcomp $(MODNAME).cd $(MODNAME).ct CATALOG $(MODNAME).catalog CFILE $(MODNAME)_text.h

##############################################################################
# backup quick
#
backup:


d131 3
@


1.2
log
@*** empty log message ***
@
text
@d99 1
a99 1
prep.c: prep.o $(HFILE)
@


1.1
log
@Initial revision
@
text
@d29 1
@
