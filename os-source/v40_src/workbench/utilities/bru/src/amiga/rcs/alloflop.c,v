head     37.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


37.2
date     91.02.15.13.47.16;  author eric;  state Exp;
branches ;
next     37.1;

37.1
date     91.01.23.16.11.53;  author eric;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.23.16.11.49;  author eric;  state Exp;
branches ;
next     ;


desc
@@


37.2
log
@New from Fred Fish 12 Feb 91
@
text
@/************************************************************************
 *									*
 *	Copyright (c) 1988 Enhanced Software Technologies, Inc.		*
 *			   All Rights Reserved				*
 *									*
 *	This software and/or documentation is protected by U.S.		*
 *	Copyright Law (Title 17 United States Code).  Unauthorized	*
 *	reproduction and/or sales may result in imprisonment of up	*
 *	to 1 year and fines of up to $10,000 (17 USC 506).		*
 *	Copyright infringers may also be subject to civil liability.	*
 *									*
 ************************************************************************
 */


/*
 *  FILE
 *
 *	alloflop.c    allocate floppy device for exclusive use of bru
 *
 *  SCCS
 *
 *	@@(#)alloflop.c	12.8	11 Feb 1991
 *
 *  DESCRIPTION
 *
 *	Disable DOS from playing with our archive device.  Based on
 *	program touch.c by Phil Lindsay and Andy Finkel, of
 *	Commodore-Amiga, Inc.  Original copyright info follows:
 * 
 *		touch.c by Phil Lindsay and Andy Finkel
 *		(c) 1986 Commodore-Amiga, Inc.
 *		Permission to use in any way granted, as long as
 *		the copyright notice stays intact
 *
 *  AUTHOR
 *
 *	Based on touch.c by Phil Lindsay and Andy Finkel
 *	Heavily modified by Fred Fish for use in bru
 *
 */

#include "globals.h"


/*
 *  FUNCTION
 *
 *	DisableDevice    disable dos from mucking with our archive device
 *
 *  SYNOPSIS
 *
 *	int DisableDevice (name)
 *	char *name;
 *
 *  DESCRIPTION
 *
 *	Tells dos to leave our archive device alone until further notice.
 *	Returns non-zero on success, zero on failure.
 *
 */

int DisableDevice (name)
char *name;
{
    LONG arg[1];
    int result = 0;
    struct MsgPort *task;

    DBUG_ENTER ("DisableDevice");
    DBUG_PRINT ("dev", ("disable device %s", name));
    if((task = (struct MsgPort *) DeviceProc (name)) != NULL) {
	DBUG_PRINT ("dev", ("found task"));
	arg[0] = 1;
	result = sendpkt (task, ACTION_INHIBIT, arg, 1);
	DBUG_PRINT ("dev", ("sendpkt returned %d", result));
    }
    DBUG_RETURN (result);
}


/*
 *  FUNCTION
 *
 *	EnableDevice    tell dos it can have our archive device back now
 *
 *  SYNOPSIS
 *
 *	int EnableDevice (name)
 *	char *name;
 *
 *  DESCRIPTION
 *
 *	Tells dos it can have our archive device back now.
 *	Returns non-zero on success, zero on failure.
 *
 */

int EnableDevice (name)
char *name;
{
    LONG arg[1];
    int result = 0;
    struct MsgPort *task;

    DBUG_ENTER ("EnableDevice");
    DBUG_PRINT ("dev", ("enable device %s", name));
    if((task = (struct MsgPort *) DeviceProc (name)) != NULL) {
	DBUG_PRINT ("dev", ("found task"));
	arg[0] = 0;
	result = sendpkt (task, ACTION_INHIBIT, arg, 1);
	DBUG_PRINT ("utime", ("sendpkt returned %d", result));
    }
    DBUG_RETURN (result);
}
@


37.1
log
@New version January 1991
@
text
@d23 1
a23 1
 *	@@(#)alloflop.c	12.6	01 Jan 1991
@


37.0
log
@added to rcs
@
text
@d23 1
a23 1
 *	@@(#)alloflop.c	11.20	10/10/89
d43 1
a43 10
#include <stdio.h>
#undef NULL		/* Declared incompatibly in exec/types.h (grrr!!) */
#include <exec/types.h>
#include <exec/ports.h>
#include <exec/io.h>
#include <exec/memory.h>
#include <libraries/dos.h>
#include <libraries/dosextens.h>
#include "sys.h"
#include "dbug.h"
a44 2
extern LONG sendpkt ();

d66 3
a68 4
    auto LONG arg[1];
    register int result = 0;
    register struct MsgPort *task;
    extern VOID *DeviceProc ();
d102 3
a104 4
    auto LONG arg[1];
    register int result = 0;
    register struct MsgPort *task;
    extern VOID *DeviceProc ();
@
