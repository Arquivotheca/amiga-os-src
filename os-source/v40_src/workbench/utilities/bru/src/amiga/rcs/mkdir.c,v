head     37.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


37.2
date     91.02.15.13.48.17;  author eric;  state Exp;
branches ;
next     37.1;

37.1
date     91.01.23.16.12.38;  author eric;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.23.16.12.35;  author eric;  state Exp;
branches ;
next     ;


desc
@@


37.2
log
@New from Fred Fish 12 Feb 91
@
text
@/************************************************************************
 *									*
 *	Copyright (c) 1988 Enhanced Software Technologies, Inc.		*
 *			    All Rights Reserved				*
 *									*
 *	This software and/or documentation is protected by U.S.		*
 *	Copyright Law (Title 17 United States Code).  Unauthorized	*
 *	reproduction and/or sales may result in imprisonment of up	*
 *	to 1 year and fines of up to $10,000 (17 USC 506).		*
 *	Copyright infringers may also be subject to civil liability.	*
 *									*
 ************************************************************************
 */


/*
 *  FILE
 *
 *	mkdir.c    emulation of unix mkdir library routine
 *
 *  SCCS
 *
 *	@@(#)mkdir.c	12.8	11 Feb 1991
 *
 *  DESCRIPTION
 *
 *	This is an emulation of the unix mkdir() library function for
 *	AmigaDOS.  Lattice has a mkdir() routine but it only has the
 *	"path" argument.
 *
 *  AUTHOR
 *
 *	Fred Fish
 *	Tempe, Arizona
 *
 */

#include "globals.h"

int s_mkdir  (path, mode)
char *path;
int mode;
{
    int rtnval = -1;

    DBUG_ENTER ("s_mkdir");
    if ((path != NULL) && (mkdir (path) == 0)) {
	if (s_chmod (path, mode) == 0) {
	    rtnval = 0;
	}
    }
    DBUG_RETURN (rtnval);
}
@


37.1
log
@New version January 1991
@
text
@d23 1
a23 1
 *	@@(#)mkdir.c	12.6	01 Jan 1991
@


37.0
log
@added to rcs
@
text
@d23 1
a23 1
 *	@@(#)mkdir.c	11.20	10/10/89
d28 2
a29 1
 *	AmigaDOS.
d38 1
a38 4
#include <libraries/dosextens.h>
#undef VOID
#undef TRUE
#undef FALSE
d40 1
a40 13
#ifdef LATTICE
#define NARGS	/* stdio.h defines mkdir() args incompatibly; arrgghh!! */
#endif

#include <stdio.h>

#include "sys.h"
#include "config.h"
#include "typedefs.h"		/* Locally defined types */
#include "dbug.h"
#include "manifest.h"		/* Manifest constants */

int mkdir  (path, mode)
d44 1
a44 4
    register struct FileLock *dirp = NULL;
    register int rtnval = -1;
    extern struct FileLock *CreateDir ();
    extern int s_chmod ();
d46 3
a48 6
    DBUG_ENTER ("mkdir");
    if (path != NULL) {
	dirp = CreateDir (path);
	if (dirp != NULL) {
	    (VOID) UnLock (dirp);
	    (VOID) s_chmod (path, mode);
@
