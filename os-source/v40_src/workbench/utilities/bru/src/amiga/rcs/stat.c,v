head     37.0;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


37.0
date     91.01.23.16.17.23;  author eric;  state Exp;
branches ;
next     ;


desc
@@


37.0
log
@added to rcs
@
text
@/************************************************************************
 *									*
 *	Copyright (c) 1988 Enhanced Software Technologies, Inc.		*
 *			     All Rights Reserved			*
 *									*
 *	This software and/or documentation is protected by U.S.		*
 *	Copyright Law (Title 17 United States Code).  Unauthorized	*
 *	reproduction and/or sales may result in imprisonment of up	*
 *	to 1 year and fines of up to $10,000 (17 USC 506).		*
 *	Copyright infringers may also be subject to civil liability.	*
 *									*
 ************************************************************************
 */


/*
 *  FILE
 *
 *	stat.c    emulation of Unix stat() library routine
 *
 *  SCCS
 *
 *	@@(#)stat.c	11.20	10/10/89
 *
 *  DESCRIPTION
 *
 *	Unix compatible emulation of stat() routine.
 *
 */

#include <stdio.h>

#if amiga && LATTICE
#  undef NULL		/* Incompatible defs in <stdio.h> and <exec/types.h> */
#endif

#include <exec/types.h>	  /* For Lattice 3.10, must be before exec.h! */
#include <exec/exec.h>
#include <libraries/dos.h>
#include <libraries/dosextens.h>
#undef TRUE
#undef FALSE

#include "sys.h"
#include "manifest.h"
#include "dbug.h"

#ifdef MANX
VOID abort ()
{
    s_exit (1);
}
#endif

stat (path, buf)
char *path;
struct stat *buf;
{
    long lck;
    struct FileInfoBlock *fp;
    register long prot;
    register long ftime;
    extern long Lock ();
    extern VOID *AllocMem ();
    extern long unixtime ();

    DBUG_ENTER ("stat");
    if ((lck = Lock (path, ACCESS_READ)) == 0) {
	DBUG_RETURN (SYS_ERROR);
    }
    fp = (struct FileInfoBlock *)
	AllocMem ((long) sizeof (struct FileInfoBlock), 
	(long) (MEMF_CLEAR | MEMF_CHIP));
    Examine (lck, fp);
    if (fp -> fib_DirEntryType > 0) {
	buf -> st_mode = S_IFDIR;
    } else {
	buf -> st_mode = S_IFREG;
    }
    DBUG_PRINT ("prot", ("raw protection bits = %#lx", fp -> fib_Protection));
    prot = ~(fp -> fib_Protection >> 1);
    prot &= 0x7;
    DBUG_PRINT ("prot", ("translated bits = %#lx", prot));
    buf -> st_mode |= (prot << 6 | prot << 3 | prot);
    DBUG_PRINT ("prot", ("final mode = %#lx", buf -> st_mode));
    buf -> st_nlink = 1;
    buf -> st_size = fp -> fib_Size;
    DBUG_PRINT ("size", ("file size = %ld", buf -> st_size));
    ftime = unixtime (&(fp -> fib_Date));
    buf -> st_atime = ftime;
    buf -> st_mtime = ftime;
    buf -> st_ctime = ftime;
    buf -> st_ino = 0;
    buf -> st_dev = 0;
    buf -> st_rdev = 0;
    buf -> st_uid = 0;
    buf -> st_gid = 0;
    (VOID) FreeMem (fp, (long) sizeof (struct FileInfoBlock));
    (VOID) UnLock (lck);
    DBUG_RETURN (0);
}
@
