	*******************************  NOTE  **********************************
	*									*
	*	Copyright (c) 1988 Enhanced Software Technologies, Inc.		*
	*	Amiga Bru Beta 3 Release					*
	*									*
	*	For registered beta testers only.				*
	*	Not to be redistributed without written permission.		*
	*									*
	*************************************************************************



Hello Beta Tester:

	This is the Beta 3 release of bru for the Amiga.  First, good
	news!  Bru is now back under active development so expect fairly
	rapid evolution over the next few months, including an intuition
	front end, support for archive devices other than floppies and
	normal AmigaDOS files (I.E. SCSI tapedrives), a filesystem
	management system, an archive management system, and more...

	This distribution contains the following files:

	Beta3.readme		This file.

	bru.man			Printable version of the bru manual
				page (for the Unix versions).  I am
				still working on the Amiga documentation.

	brutab			A new bru device description file.  Install
				in s:

	brutab.unix		The unix version of the brutab file, included
				mostly for your amusement (contains detailed
				descriptions of the brutab entry fields)

	bru.lattice		Compiled with released Lattice C version 4.0.
				Macro based debugger disabled.

	bru.lattice.dbug	Compiled with released Lattice C version 4.0.
				Macro based debugger enabled.

	bru.manx		Compiled with Manx 3.40A release,
				patch level 3, 32-bit ints.
				Macro based debugger disabled.

	bru.manx.dbug		Compiled with Manx 3.40A release,
				patch level 3, 32-bit ints.
				Macro based debugger enabled.

BUG FIXES SINCE BETA 2
----------------------

	The following are bug fixes since the Beta 2 version:

	1.	Added qfwrite to the default built-in brutab file to 
		prevent accidental overwriting of the default volume.

	2.	Fixed problem with reading archives from stdin or writing
		archives to stdout.  Note however, that stdin/stdout
		redirections must still be the first args after the
		program name, since the redirection is done by the
		standard startup code.   I.E.

			bru >myarchive.bru -cvf - file1 file2
			bru <myarchive.bru -ivf -

	3.	Fixed minor problems with raw IO module with respect
		to error conditions.  Also changed brutab to match.
		Now should give correct behavior for write-protected
		media while writing, and for unformatted media while
		reading.  Note you must install the new brutab to
		take advantage of this.

		Note:  the brutab entries for error codes are specified
		numerically, and the current values are for the Lattice
		executables, since the Lattice and Manx libraries return
		different error codes.  This is something I need to
		look at further.

	4.	Added code to set/use the "file-archived" bit in
		the protection word.  There is a new command line
		option, -A, that takes a string argument with the
		following characters to control use of the archive
		bit:

		c	Clear the archive bit on selected files after
			processing.
		i	Ignore the archive bit while selecting files.
		r	Reject files with archive bit set.
		s	Set the archive bit on selected files after
			processing.

		The -A options apply only in conjunction with -c (create
		archive) or -x (extract from archive).  Common combinations
		are:

		-c -Ais	Do a full backup, ignoring the current state of
			the archive bit, but setting the bit after the
			file has been archived.

		-c -Ars	Do an incremental backup, rejecting files that
			have been previously archived, and setting the
			archive bit on files which are selected for
			archiving.

		-x -As	Restore selected files and set the file archived
			bit so they will not be selected for backup
			during the next backup run that does not ignore
			the archive bit.

		-x -Ac	Restore selected files and clear the file archived
			bit so they will be included in the files selected
			during the next backup run that does not ignore
			the archive bit.

		The -A option has not yet been documented in the manual
		page, but is documented in the built in help that gets
		printed when bru is invoked with the -h option.

	5.	Added support for saving and restoring file comments.
		If an archive is created on an Amiga, and extracted on
		an Amiga, the file comment (if any) will be preserved.
		Archives created on a Unix system, will of course,
		contain no comments attached to the files.  Similarly,
		when an archive is created on an Amiga and extracted
		on a Unix system, the file comment will be discarded
		(for now).  Also note that if the table of contents
		mode (-t) is used with a verbosity level of two or
		greater (-vv), the file comment will be printed in
		parenthesis after the filename.

	6.	Added support for saving and restoring the "true"
		file protection mask.  Previous versions mapped the
		AmigaDOS mask to a Unix mask (which lost the 'd' bit)
		and then remapped back to AmigaDOS on extraction.
		The "real" protection mask is now stored in the file
		header block independently, and bru will use this mask
		when restoring files from archives created on an Amiga.
		Otherwise, it will do the Unix to AmigaDOS mapping as
		in previous versions.

ISSUES REMAINING
----------------

	The following issues are some of the ones that remain for subsequent
	beta releases.

	0.	The Lattice version still GURU's when asked to spawn
		a subshell.  I forgot to look at this for the Beta 3
		release and rediscovered it during testing.  Will
		definitely be fixed or done-away-with for the next
		release...

	1.	Modify the raw device support routines to automatically
		format floppies no matter what the I/O buffer size is.
		Currently only does autoformatting if the buffer size
		is a multiple of 11Kb.

	2.	Automatic compression/decompression of archived files.
		I don't expect this to be terribly useful for true
		backup situations, since it will likely be *very* slow.
		However, it should save quite a bit of space for 
		archives written to a normal file, for transmission
		via modem to another system.  Note however, you
		can already write the bru archive to a file and
		then run compress on it, which saves even more space
		than compressing the archive members individually.
		So, this option is not real high on my priority list.
		(machine independent, major work)

	3.	Fix command line processing to allow redirection anywhere
		on the line, not just as the first arguments.

	4.	Implementation of an Intuition frontend for workbench
		users.
		(AMIGA specific, major work)

	5.	Figure out how to deal properly with files which have
		been read protected, by setting the "noread" bit in
		the file protection mask.  Currently, bru will refuse
		to read these files, resulting in them being excluded
		from a backup.  Note that this is not currently a real
		problem because most AmigaDOS commands simply ignore
		everything except for the 'd' bit anyway, so most 
		people don't change the default permission.  There
		is probably a similar problem for overwriting files
		on extraction, that have the "nowrite" bit set.

	6.	Add a new -A option (-At possibly?), that gives
		a table of contents in an Amiga specific form
		(actual file protection, no UID/GID stuff, etc).

IN CASE OF TROUBLE
------------------

	If you have any sort of problem or questions, or wish to report
	possible bugs via phone, you can call (602) 921-1113 and leave
	a message.  There is an answering machine on this line 24 hours
	per day.  I will usually be able to return your call within 24
	hours, and usually the same day if you call before 6PM Arizona
	time and leave a number where you can be reached evenings.  I
	seldom answer this line in person, so please be sure to leave a
	message.

	I would recommend using the Lattice compiled version of the
	executable for now, since Lattice provides a more Unix-like
	runtime environment, which may result in a better behaved
	executable under stress (or unusual) conditions.  Bru is
	mostly I/O bound anyway, so the code execution speed is of
	secondary importance.

	If you run into a problem, please try the various versions to see
	if the bug is generic to all versions, or only the Manx or Lattice
	versions.

	If you include the command line argument "-#d:t:F:L:o,logfile" on
	the command line for the *.dbug versions, the macro based debugging 
	package will cause *LOTS* of useful debugging information to be
	written to the file "logfile".  It would be useful for me to get a
	copy of the file from you on disk or via email, when reporting
	problems.


SIMPLE EXAMPLES

	Do full backup of dh0: to floppies in df1:

		New way using archive bit:

			cd dh0:
			bru -cv -Ais -f df1:

		Alternate way ignoring archive bit totally:

			cd dh0:
			bru -cv -f df1:

	Do incremental backup of dh0: to floppies in df1:
	(assumes previous run to create "LastIncremental" file)

		New way:

			cd dh0:
			bru -cv -Ars -f df1:

		Alternate way ignoring archive bit totally:

			cd dh0:
			bru -cv -f df1: -n LastIncremental
			date >LastIncremental

		(Note that it is the date of the LastIncremental file
		that is important, not it's contents.  You could just
		as easily use "touch" to create it)

	Do full restore of dh0: from floppies in df1:

		cd dh0:
		bru -xv -As -f df1:

	Create compressed archive for phone transmission:

		bru -cv -f bru.out *.c
		compress bru.out
		(send compressed archive bru.out.Z to another system)

		Note you can also use the archive size specifier,
		-s60K for example, to write the archive into multiple
		files (bru.out1, bru.out2, bru.out3, etc) for easier
		handling and recovery from modem transmission problems.


REMINDERS
---------

	Don't forget to install the brutab file in your s: directory.

	Bru uses lots of stack space.  Be *SURE* yours is set high enough.
	I have mine set to 20K and have never had any of the released
	versions GURU.


Thanks for your interest in bru.

-Fred
