	*******************************  NOTE  **********************************
	*									*
	*	Copyright (c) 1988 Enhanced Software Technologies, Inc.		*
	*	Amiga Bru Beta 2 Release					*
	*									*
	*	For registered beta testers only.				*
	*	Not to be redistributed without written permission.		*
	*									*
	*************************************************************************



Hello Beta Tester:

	This is the Beta 2 release of bru for the Amiga.  This distribution
	contains the following executables:

	Beta2.readme		This file.

	bru.man			Printable version of the bru manual
				page (for the Unix versions).  I am
				still working on the Amiga documentation.

	brutab			A new bru device description file.  Install
				in s:

	bru.lattice		Compiled with released Lattice C
				version 3.10 with installed Lattice 
				patches available as of May 87.
				Macro based debugger disabled.

	bru.lattice.dbug	Compiled with released Lattice C
				version 3.10 with installed Lattice 
				patches available as of May 87.
				Macro based debugger enabled.

	bru.manx		Compiled with Manx 3.40A release,
				patch level 3, 32-bit ints, macro based
				debugger disabled.

	bru.manx.dbug		Compiled with Manx 3.40A release,
				patch level 3, 32-bit ints, macro based
				debugger enabled.


BUG FIXES SINCE BETA 1
----------------------

	The following are bug fixes since the Beta 1 version:

	1.	Fixed bug with Unix utime(2) emulation where trying
		to set the date of any file except those in the
		current directory would fail.  This bug is also found
		in the touch.c program on my library disk number 49,
		after which the utime code is modeled.  (The fix is
		to strip off all leading pathname components before
		inserting the filename in the packet structure).
		
	2.	Fixed bug with table of contents for manx version,
		where the dates were not printed correctly.  This
		is because of two botches in the Manx runtime environment
		for the Amiga:

		o	All members in the "tm" structure
			are declared (and required to be) shorts.
			This makes it impossible to write completely
			portable code that accesses the members
			(consider a "scanf" string to initialize
			structure members)

		o	The "long integral" form of the date
			as returned by time() and used by
			localtime() is based on seconds since
			the start of 1978 (as opposed to the
			documentation which states 1980).
			Either date is a botch, should have
			been 1970 to conform to common C 
			environment usage.

	3.	Added feature whereby bru will expand command line
		file arguments during archive creation.  Only arguments
		not beginning with '-', and not an argument of a '-' option,
		are expanded.  The expansion follows Unix shell conventions:

			*	Zero or more characters
			?	A single character
			[a-g]	Characters in class {a,b,...f,g}
			[^a-g]	Characters not in class {a,b,...f,g}

	4.	Finally licked the signal/control-C/interrupt problem
		(I believe) for both Manx and Lattice.  For the Manx
		version, I wrote a UNIX signal(2) emulation.  For
		Lattice, the library UNIX signal(2) emulation was
		adequate.  For both, the signal handling function
		for control-c (mapped to UNIX SIGINT) needed to be
		armed for all runs, not just archive creation.  The
		pure UNIX version only trapped SIGINT when creating 
		archives, to delay exit until the current file was
		finished and the trailer block was written, since
		Unix automatically does all other cleanup on exit.
		AmigaDOS is not so convenient, all resources must
		be explicitly returned.

	5.	Bru will now automatically format 3.5 inch floppies
		in df0-df3, provided the IO buffersize is a multiple
		of 22K (tracks are 11K and the buffer must be a
		multiple of 2K thus 2K*11K => 22K).  This default
		is automatically provided if you use the supplied
		brutab file, or the default internal table.
		
	6.	Fixed spurious warning message about buffer size changes
		for multiple volumes when using the -t mode.

	7.	Spawning of subshells (new CLI) now works under
		Manx.  However, unlike the Unix version, bru execution
		continues as soon as the subshell is activated, rather
		than waiting for it to return.  Plus, you can spawn
		multiple subshells.

		I have not yet been able to get spawning of subshells
		to work under Lattice.  It's really bizarre, because the
		same code, modeled after the example in the Lattice manual,
		works fine in a simple standalone type program.  For now,
		it guru's when you try to fork a subshell.

	8.	Dates are supposed to be stored in seconds since
		00:00:00 GMT, Jan 1, 1970.  The current Amiga software
		environment, as supplied by Commodore, does not have
		any provision for keeping track of the difference between
		GMT and localtime.  The Manx version of bru now uses
		the same convention as Unix systems, it checks the
		environment variable "TZ" to get the timezone difference.
		The Manx "set" command can be used to set TZ, I.E.:

			set TZ=EST5EDT

		and the getenv("TZ") call will return "EST5EDT", from
		which the timezone difference in seconds is computed
		as 5 * 60 * 60.  Note that the form of TZ *MUST* be
		XXXHHHYYY, where XXX is a three letter time zone name
		for "normal time", HHH is one or more digits representing
		the timezone difference in hours, and YYY is an optional
		three letter time zone name for a daylight savings time zone.
		(We ignore XXX and YYY for now).

		This leaves two problems:

		(1)  What to do about the Lattice version
		(2)  Users that don't have the Manx "set" command.

		If the timezone is not set up correctly files archived
		on the Amiga will have dates that are off by the the
		GMT-localtime difference, when extracted on a Unix system,
		and vice versa.  I have a PD implementation of localtime
		that appears to be portable (stores timezone info in files
		rather than environment), and may try to integrate this in
		a future release.

	9.	Bru will now inhibit DOS from playing with the archive 
		media while it is in use.  Note that disks written by bru
		*ARE NOT* DOS format, so only bru can make sense of them.  

ISSUES REMAINING
----------------

	The following issues are some of the ones that remain for subsequent
	beta releases, in approximately the order in which they will probably
	be implemented:

	1.	Fix problem with writing archives to stdout (discovered
		during testing for Beta 2 release).

	2.	Use of the Amiga-specific "file-archived" bit.
		(AMIGA specific, minor)

	3.	Preservation of file comments.
		(AMIGA specific, minor)

	4.	Automatic compression/decompression of archived files.
		I don't expect this to be terribly useful for true
		backup situations, since it will likely be *very* slow.
		However, it should save quite a bit of space for 
		archives written to a normal file, for transmission
		via modem to another system.  Note however, you
		can already write the bru archive to a file and
		then run compress on it, which saves even more space
		than compressing the archive members individually.
		So, this option is not real high on my priority list.
		(machine independent, major work)

	5.	Implementation of an Intuition frontend for workbench
		users.
		(AMIGA specific, major work)


IN CASE OF TROUBLE
------------------

	If you have any sort of problem or questions, or wish to report
	possible bugs via phone, you can call (602) 921-1113 and leave
	a message.  There is an answering machine on this line 24 hours
	per day.  I will usually be able to return your call within 24
	hours, and usually the same day if you call before 6PM Arizona
	time and leave a number where you can be reached evenings.  I
	seldom answer this line in person, so please be sure to leave a
	message.

	I believe the Manx versions are now stable enough for general
	usage, so you can now enjoy the benefits of a smaller, faster
	version (although bru is still I/O bound so it will probably
	not run significantly faster in terms of elapsed time).

	If you run into a problem, please try the various versions to see
	if the bug is generic to all versions, or only the Manx or Lattice
	versions.

	If you include the command line argument "-#d:t:F:L:o,logfile" on
	the command line for the *.dbug versions, the macro based debugging 
	package will cause *LOTS* of useful debugging information to be
	written to the file "logfile".  It would be useful for me to get a
	copy of the file from you when reporting problems.


SIMPLE EXAMPLES

	Do full backup of dh0: to floppies in df1:

		cd dh0:
		bru -cv -f df1:

	Do incremental backup of dh0: to floppies in df1:
	(assumes previous run to create "LastIncremental" file)

		cd dh0:
		bru -cv -f df1: -n LastIncremental
		date >LastIncremental

		(Note that it is the date of the LastIncremental file
		that is important, not it's contents.  You could just
		as easily use "touch" to create it)

	Do full restore of dh0: from floppies in df1:

		cd dh0:
		bru -xv -f df1:

	Create compressed archive for phone transmission:

		bru -cv -f bru.out *.c
		compress bru.out
		(send compressed archive bru.out.Z to another system)

		Note you can also use the archive size specifier,
		-s60K for example, to write the archive into multiple
		files (bru.out1, bru.out2, bru.out3, etc) for easier
		handling and recovery from modem transmission problems.


REMINDERS
---------

	Don't forget to install the brutab file in your s: directory.

	Bru uses lots of stack space.  Be *SURE* yours is set high enough.
	I have mine set to 20K and have never had any of the released
	versions GURU.


Thanks for your interest in bru.

-Fred
