##
HFILES=		standard.h ed.h 

CFILES=		ansi.c basic.c bindkey.c buffer.c cdio.c command.c display.c \
		extra.c fences.c file.c fileio.c init.c keydefs.c \
		keymap.c line.c main.c malloc.c macrodefs.c menu.c \
		random.c region.c safeclose.c search.c set.c \
		spawn.c strfuncs.c tcap.c termio.c vt52.c window.c word.c \
		tinymain.c
		
OFILES=		ansi.o basic.o bindkey.o buffer.o cdio.o \
		command.o display.o \
		extra.o fences.o file.o fileio.o init.o keydefs.o \
		keymap.o line.o main.o malloc.o macrodefs.o menu.o \
		random.o region.o safeclose.o search.o set.o \
		spawn.o strfuncs.o tcap.o termio.o vt52.o \
		window.o word.o	tinymain.o tcres.o

AFILES=		tcres.asm

#MYLIBS= LIB:debug.lib lib:amiga.lib

REMOTE = V36:src/workbench/utilities/memacs

LC = lc
ASM = asm

LFLAGS= ND BATCH SMALLCODE SMALLDATA

#AFLAGS = -iinclude: -cqr
AFLAGS = -u -dRESIDENT -dTINY -iINCLUDE: 

LCFLAGS = -cimsq -v -O -ms -d1

memacs.ld:	$(OFILES)
	blink with memacs.with LIB LIB:lc.lib $(MYLIBS) TO memacs.ld $(LFLAGS)

.c.o:
	$(LC) $(LCFLAGS) $*.c

.asm.o:
	$(ASM) $(AFLAGS) $*.asm

local:
	@copy (\#?.c|\#?.asm|\#?.h|\#?.i|lmkfile|Makefile|\#?.ld|\#?.rev) $(LOCAL)

version:
	@bumprev 36 memacs_rev

release:
	@copy (\#?.ld|\#?_rev.\#?) $(REMOTE)
	@bumprev 36 memacs_rev

internal:
	@copy (\#?.c|\#?.asm|\#?.h|\#?.i|lmkfile|Makefile|\#?.ld|\#?.rev) $(REMOTE)

clean:
	@delete (\#?.o|\#?.ld)

ansi.o:	ansi.c
basic.o:	basic.c
bindkey.o:	bindkey.c
buffer.o:	buffer.c
cdio.o:	cdio.c
command.o:	command.c
display.o:	display.c
extra.o:	extra.c
fences.o:	fences.c
file.o:	file.c
fileio.o:	fileio.c
init.o:	init.c memacs_rev.h
keydefs.o:	keydefs.c
keymap.o:	keymap.c
line.o:	line.c
main.o:	main.c
malloc.o:	malloc.c
macrodefs.o:	macrodefs.c
menu.o:	menu.c
random.o:	random.c
region.o:	region.c
safeclose.o:	safeclose.c
search.o:	search.c
set.o:	set.c
spawn.o:	spawn.c
strfuncs.o:	strfuncs.c
tcap.o:	tcap.c
termio.o:	termio.c
vt52.o:	vt52.c
window.o:	window.c
word.o:	word.c
tcres.o:	tcres.asm
tinymain.o:	tinymain.c

