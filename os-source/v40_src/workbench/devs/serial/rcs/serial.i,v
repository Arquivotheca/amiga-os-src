head     33.6;
branch   ;
access   ;
symbols  V37_4:33.6 V37_3:33.6 V37_2:33.6 V37_1:33.6 V37_0:33.6 L34_11:1.3 L34_13:33.6 L34_12:1.3 L34_101:1.2;
locks    bryce:33.6; strict;
comment  @* @;


33.6
date     90.11.06.12.39.28;  author bryce;  state Exp;
branches ;
next     1.4;

1.4
date     90.07.10.20.59.57;  author bryce;  state Exp;
branches ;
next     1.3;

1.3
date     89.03.08.22.07.34;  author bryce;  state Exp;
branches ;
next     1.2;

1.2
date     89.02.07.16.03.47;  author bryce;  state Exp;
branches ;
next     1.1;

1.1
date     89.01.24.21.02.25;  author bryce;  state Exp;
branches ;
next     ;


desc
@Source to first 1.3 release
@


33.6
log
@Update RCS revision number to 33.6
@
text
@	IFND DEVICES_SERIAL_I
DEVICES_SERIAL_I SET 1
**
**      $Id: serial.i,v 1.4 90/07/10 20:59:57 bryce Exp Locker: bryce $
**
**	external declarations for the serial device
**
**      (C) Copyright 1985,1988 Commodore-Amiga, Inc.
**          All Rights Reserved
**
    IFND     EXEC_IO_I
    include "exec/io.i"
    ENDC    !EXEC_IO_I

*--------------------------------------------------------------------
*
* Useful constants
*
*--------------------------------------------------------------------
*
SER_DEFAULT_CTLCHAR EQU $11130000  ; default chars for xON,xOFF
; You may change these via SETPARAMS.  At this time, parity is not
; calculated for xON/xOFF characters.  You must supply them with the
; desired parity.

*
*--------------------------------------------------------------------
*
* Driver Specific Commands

SDCMD_QUERY	EQU	CMD_NONSTD	;$09
SDCMD_BREAK	EQU	CMD_NONSTD+1	;$0A
SDCMD_SETPARAMS EQU	CMD_NONSTD+2	;$0B

SER_DEVFINISH	EQU	CMD_NONSTD+2 ; number of device comands 

*--------------------------------------------------------------------

SERIALNAME:	MACRO
		dc.b	'serial.device',0
		dc.w	0
		ENDM

	BITDEF	SER,XDISABLED,7	  ; SERFLAGS xOn-xOff feature disabled bit
	BITDEF	SER,EOFMODE,6	  ;    "     EOF mode enabled bit
	BITDEF	SER,SHARED,5	  ;    "     non-exclusive access
	BITDEF	SER,RAD_BOOGIE,4  ;    "     high-speed mode active
	BITDEF	SER,QUEUEDBRK,3	  ;    "     queue this Break ioRqst
	BITDEF	SER,7WIRE,2	  ;    "     RS232 7-wire protocol 
	BITDEF	SER,PARTY_ODD,1	  ;    "     use-odd-parity bit
	BITDEF	SER,PARTY_ON,0	  ;    "     parity-enabled bit 
;
;WARNING: The next series of BITDEFs refer to the HIGH order BYTE of
;IO_STATUS.  Example usage: "BTST.B #IOST_XOFFWRITE,IO_STATUS+1(AX)"
;
	BITDEF	IOST,XOFFREAD,4	  ; IOST_HOB receive currently xOFF'ed
	BITDEF	IOST,XOFFWRITE,3  ;	"    transmit currently xOFF'ed
	BITDEF	IOST,READBREAK,2  ;	"    break was latest input
	BITDEF	IOST,WROTEBREAK,1 ;	"    break was latest output
	BITDEF	IOST,OVERRUN,0	  ;	"    status word RBF overrun
;
;	BITDEF's in a longword field) 
;	Example usage: BSET.B #SEXTB_MSPON,IO_EXTFLAGS+3(AX)
				;IO_EXTFLAGS (extended flag longword)
	BITDEF	SEXT,MSPON,1	;     "	   use mark-space parity,not odd-even
	BITDEF	SEXT,MARK,0	;     "	   if mark-space, use mark
*
******************************************************************************
 STRUCTURE TERMARRAY,0
	ULONG	 TERMARRAY_0
	ULONG	 TERMARRAY_1
	LABEL	 TERMARRAY_SIZE

*****************************************************************
* CAUTION !!  IF YOU ACCESS the serial.device, you MUST (!!!!) use an
* IOEXTSER-sized structure or you may overlay innocent memory, okay ?!	
*****************************************************************
 
 STRUCTURE IOEXTSER,IOSTD_SIZE

*     STRUCT   MsgNode
*   0	APTR	 Succ
*   4	APTR	 Pred
*   8	UBYTE	 Type
*   9	UBYTE	 Pri
*   A	APTR	 Name
*   E	APTR	 ReplyPort
*  12	UWORD	 MNLength
*     STRUCT   IOExt
*  14	APTR	 IO_DEVICE
*  18	APTR	 IO_UNIT
*  1C	UWORD	 IO_COMMAND
*  1E	UBYTE	 IO_FLAGS
*  1F	UBYTE	 IO_ERROR
*     STRUCT   IOStdExt
*  20	ULONG	 IO_ACTUAL
*  24	ULONG	 IO_LENGTH
*  28	APTR	 IO_DATA
*  2C	ULONG	 IO_OFFSET
*
*  30
	ULONG	IO_CTLCHAR	; control char's (order = xON,xOFF,rsvd,rsvd)
	ULONG	IO_RBUFLEN	; length in bytes of serial port's read buffer
	ULONG	IO_EXTFLAGS	; additional serial flags (see bitdefs above)
	ULONG	IO_BAUD		; baud rate requested (true baud)
	ULONG	IO_BRKTIME	; duration of break signal in MICROseconds
	STRUCT	IO_TERMARRAY,TERMARRAY_SIZE ; termination character array
	UBYTE	IO_READLEN	; bits per read char (bit count)
	UBYTE	IO_WRITELEN	; bits per write char (bit count)
	UBYTE	IO_STOPBITS	; stopbits for read (count)
	UBYTE	IO_SERFLAGS	; see SERFLAGS bit definitions above 
	UWORD	IO_STATUS	; status of serial port, as follows:
*
*		   BIT	ACTIVE	FUNCTION
*		    0	 ---	reserved
*		    1	 ---	reserved 
*		    2	 high	Connected to parallel "select" on the A1000.
*				Connected to both the parallel "select" and
*				serial "ring indicator" pins on the A500
*				& A2000.  Take care when making cables.
*		    3	 low	Data Set Ready
*		    4	 low	Clear To Send
*		    5	 low	Carrier Detect
*		    6	 low	Ready To Send
*		    7	 low	Data Terminal Ready
*		    8	 high	read overrun
*		    9	 high	break sent
*		   10	 high	break received
*		   11	 high	transmit x-OFF'ed	
*		   12	 high	receive x-OFF'ed
*		13-15		reserved
*
	LABEL	IOEXTSER_SIZE

******************************************************************************

*--------------------------------------------------------------------
*
* Driver error definitions
*
*--------------------------------------------------------------------

SerErr_DevBusy		EQU	1
SerErr_BaudMismatch	EQU	2	;baud rate not supported by hardware
SerErr_BufErr		EQU	4	;Failed to allocate new read buffer
SerErr_InvParam		EQU	5
SerErr_LineErr		EQU	6
SerErr_ParityErr	EQU	9
SerErr_TimerErr		EQU    11	;(See the serial/OpenDevice autodoc)
SerErr_BufOverflow	EQU    12
SerErr_NoDSR		EQU    13
SerErr_DetectedBreak	EQU    15


 IFD	DEVICES_SERIAL_I_OBSOLETE
SER_DBAUD		EQU	9600	;unused
SerErr_InvBaud		EQU	3	;unused
SerErr_NotOpen		EQU	7	;unused	   
SerErr_PortReset	EQU	8	;unused
SerErr_InitErr		EQU    10	;unused
SerErr_NoCTS		EQU    14	;unused
	BITDEF	IOSER,QUEUED,6	  ; IO_FLAGS rqst-queued bit
	BITDEF	IOSER,ABORT,5	  ;	"    rqst-aborted bit
	BITDEF	IOSER,ACTIVE,4	  ;	"    rqst-qued-or-current bit
 ENDC


    ENDC    !DEVICES_SERIAL_I 
@


1.4
log
@New header for 2.0 includes release
@
text
@d4 1
a4 1
**      $Id: $
@


1.3
log
@*** empty log message ***
@
text
@a0 1

d4 1
a4 2
**	FILENAME: devices/serial.i
**	RELEASE:  1.3
d8 2
a9 2
**	(C) Copyright 1985,1988 Commodore-Amiga, Inc.
**	    All Rights Reserved
a10 2
** $Header: serial.i,v 1.2 89/02/07 16:03:47 bryce Exp $
**
d68 1
a68 1
**************************************************************************************
d119 2
a120 2
*				serial "ring indicator" pins on the A500 & A2000.
*				Take care when making cables.
d135 1
a135 1
*********************************************************************************
d144 1
a156 1
SerErr_BaudMismatch	EQU	2	;unused
@


1.2
log
@V1.3 maintainance release
@
text
@d13 1
a13 1
** $Header: serial.i,v 34.4 88/05/12 13:15:11 bryce Exp $
d35 3
a37 3
SDCMD_QUERY	EQU	CMD_NONSTD
SDCMD_BREAK	EQU	CMD_NONSTD+1
SDCMD_SETPARAMS EQU	CMD_NONSTD+2
@


1.1
log
@Initial revision
@
text
@d1 1
a28 1
SER_DBAUD     EQU     9600	;unused
d35 3
a37 3
SDCMD_QUERY     EQU     CMD_NONSTD
SDCMD_BREAK     EQU     CMD_NONSTD+1
SDCMD_SETPARAMS EQU     CMD_NONSTD+2
d39 1
a39 1
SER_DEVFINISH   EQU     CMD_NONSTD+2 ; number of device comands 
d48 23
a70 19
        BITDEF  SER,XDISABLED,7   ; SERFLAGS xOn-xOff feature disabled bit
        BITDEF	SER,EOFMODE,6     ;    "     EOF mode enabled bit
        BITDEF	SER,SHARED,5      ;    "     non-exclusive access
        BITDEF  SER,RAD_BOOGIE,4  ;    "     high-speed mode active
        BITDEF	SER,QUEUEDBRK,3   ;    "     queue this Break ioRqst
        BITDEF  SER,7WIRE,2       ;    "     RS232 7-wire protocol 
        BITDEF	SER,PARTY_ODD,1   ;    "     use-odd-parity bit
        BITDEF	SER,PARTY_ON,0    ;    "     parity-enabled bit 
        BITDEF	IOSER,QUEUED,6    ; IO_FLAGS rqst-queued bit
        BITDEF	IOSER,ABORT,5     ;     "    rqst-aborted bit
        BITDEF	IOSER,ACTIVE,4    ;     "    rqst-qued-or-current bit
        BITDEF	IOST,XOFFREAD,4   ; IOST_HOB receive currently xOFF'ed
        BITDEF	IOST,XOFFWRITE,3  ;     "    transmit currently xOFF'ed
        BITDEF	IOST,READBREAK,2  ;     "    break was latest input
        BITDEF	IOST,WROTEBREAK,1 ;     "    break was latest output
        BITDEF	IOST,OVERRUN,0    ;     "    status word RBF overrun
*       BITDEF's (longword field) ; IO_EXTFLAGS (extended flag longword)
        BITDEF  SEXT,MSPON,1      ;     "    use mark-space parity,not odd-even
        BITDEF  SEXT,MARK,0       ;     "    if mark-space, use mark
d74 3
a76 3
        ULONG    TERMARRAY_0
        ULONG    TERMARRAY_1
        LABEL    TERMARRAY_SIZE
d80 1
a80 1
* IOEXTSER-sized structure or you may overlay innocent memory, okay ?!  
d86 7
a92 7
*   0   APTR     Succ
*   4   APTR     Pred
*   8   UBYTE    Type
*   9   UBYTE    Pri
*   A   APTR     Name
*   E   APTR     ReplyPort
*  12   UWORD    MNLength
d94 5
a98 5
*  14   APTR     IO_DEVICE
*  18   APTR     IO_UNIT
*  1C   UWORD    IO_COMMAND
*  1E   UBYTE    IO_FLAGS
*  1F   UBYTE    IO_ERROR
d100 4
a103 4
*  20   ULONG    IO_ACTUAL
*  24   ULONG    IO_LENGTH
*  28   APTR     IO_DATA
*  2C   ULONG    IO_OFFSET
d106 11
a116 11
        ULONG   IO_CTLCHAR      ; control char's (order = xON,xOFF,rsvd,rsvd)
        ULONG   IO_RBUFLEN      ; length in bytes of serial port's read buffer
        ULONG   IO_EXTFLAGS     ; additional serial flags (see bitdefs above)
	ULONG   IO_BAUD         ; baud rate requested (true baud)
	ULONG   IO_BRKTIME      ; duration of break signal in MICROseconds
        STRUCT  IO_TERMARRAY,TERMARRAY_SIZE ; termination character array
	UBYTE   IO_READLEN      ; bits per read char (bit count)
	UBYTE   IO_WRITELEN     ; bits per write char (bit count)
	UBYTE   IO_STOPBITS     ; stopbits for read (count)
        UBYTE   IO_SERFLAGS     ; see SERFLAGS bit definitions above 
        UWORD   IO_STATUS       ; status of serial port, as follows:
d118 4
a121 4
*                  BIT  ACTIVE  FUNCTION
*                   0    ---    reserved
*                   1    ---    reserved 
*                   2    low	Connected to parallel "select" on the A1000.
d125 11
a135 11
*                   3    low    Data Set Ready
*                   4    low    Clear To Send
*                   5    low    Carrier Detect
*                   6    low    Ready To Send
*                   7    low    Data Terminal Ready
*                   8    high   read overrun
*                   9    high   break sent
*                  10    high   break received
*                  11    high   transmit x-OFF'ed       
*                  12    high   receive x-OFF'ed
*               13-15           reserved
d137 1
a137 1
        LABEL   IOEXTSER_SIZE
d147 14
a160 2
SerErr_DevBusy	        EQU	1
SerErr_BaudMismatch     EQU	2	;unused
d162 9
a170 12
SerErr_BufErr       	EQU	4	;Failed to allocate new read buffer
SerErr_InvParam        	EQU	5
SerErr_LineErr       	EQU	6
SerErr_NotOpen          EQU     7	;unused    
SerErr_PortReset        EQU     8   	;unused
SerErr_ParityErr        EQU     9
SerErr_InitErr          EQU    10	;unused
SerErr_TimerErr       	EQU    11	;(See the serial/OpenDevice autodoc)
SerErr_BufOverflow     	EQU    12
SerErr_NoDSR            EQU    13
SerErr_NoCTS            EQU    14	;unused
SerErr_DetectedBreak    EQU    15
@
