head     1.9;
branch   ;
access   ;
symbols  V38_4:1.7 V37_603:1.7 V36_603:1.7 V36_599:1.7 V36_596:1.7 V36_587:1.7 V36_579:1.7 V36_575:1.7 V36_573:1.7 V36_572:1.7 V36_570:1.5 L34_564:1.5 L34_563:1.5 L34_562:1.5 L35_560:1.5 L35_559:1.5 L35_558:1.5 L35_556:1.5 L35_548:1.5 L35_547:1.5 L35_544:1.5 L35_543:1.5 L35_541:1.5 L35_539:1.5 L35_534:1.5 L35_528:1.5 L35_522:1.5 L35_517:1.4;
locks    ; strict;
comment  @*   @;


1.9
date     92.04.24.10.33.39;  author darren;  state Exp;
branches ;
next     1.8;

1.8
date     92.01.28.14.27.41;  author davidj;  state Exp;
branches ;
next     1.7;

1.7
date     90.04.30.12.49.24;  author daveb;  state Exp;
branches ;
next     1.6;

1.6
date     90.04.06.19.23.48;  author daveb;  state Exp;
branches ;
next     1.5;

1.5
date     88.03.04.10.12.18;  author daveb;  state Exp;
branches ;
next     1.4;

1.4
date     88.02.02.16.00.32;  author daveb;  state Exp;
branches ;
next     1.3;

1.3
date     88.01.30.12.07.36;  author daveb;  state Exp;
branches ;
next     1.2;

1.2
date     87.11.10.13.56.32;  author daveb;  state Exp;
branches ;
next     1.1;

1.1
date     87.10.27.17.05.51;  author daveb;  state Exp;
branches ;
next     1.0;

1.0
date     87.10.27.15.53.20;  author daveb;  state Exp;
branches ;
next     ;


desc
@added to rcs
V1.3 gamma 1 check-in
@


1.9
log
@remove unused variable 'x'
@
text
@#include <exec/types.h>
#include <intuition/intuition.h>

#include "printer.h"
#include "prtbase.h"
#include "prtgfx.h"

#include "printer_iprotos.h"

#define DEBUGFPA	0
#define DEBUGFSI	0
#define DEBUGFTD	0

/*
	Floyd-Steinburg error correction
*/
FloydPixelArray(PInfo, flag)
struct PrtInfo *PInfo;
int flag;
{
	extern struct PrinterData *PD;

	union colorEntry *ColorInt, *Dest1Int, *Dest2Int;
	UWORD width, sx, *sxptr;
	BYTE dvalue, Yellow, Magenta, Cyan, ety2, ety3, etm2, etm3, etc2, etc3;

	if (flag) { /* yexe or yrxe */
		FixScalingVars(PInfo);
	}

	sxptr = PInfo->pi_ScaleX;
	width = PInfo->pi_width;
	ColorInt = PInfo->pi_ColorInt;
	Dest1Int = PInfo->pi_Dest1Int;
	Dest2Int = PInfo->pi_Dest2Int;
	dvalue = 7; /* 0-7 no dot, 8-15 dot */

	if (PD->pd_Preferences.PrintShade == SHADE_COLOR) { /* if a color print */
		do { /* for all source pixels */
			sx = *sxptr++;
			do { /* use this pixel 'sx' times */
				/*
					Compute value for each color component by
					rounding the error term and adding in the
					original color component
				*/
				Yellow = (Dest1Int->colorSByte[PCMYELLOW] + 4) / 8 +
					ColorInt->colorSByte[PCMYELLOW];
				Magenta = (Dest1Int->colorSByte[PCMMAGENTA] + 4) / 8 +
					ColorInt->colorSByte[PCMMAGENTA];
				Cyan = (Dest1Int->colorSByte[PCMCYAN] + 4) / 8 +
					ColorInt->colorSByte[PCMCYAN];

				/* calculate pixel color and error term */
				if (Yellow > dvalue) { /* if yellow dot */
					Dest1Int->colorSByte[PCMYELLOW] = 15; /* on */
					ety2 = (Yellow - 15) * 2;
					ety3 = ety2 + Yellow - 15;
				}
				else { /* no yellow dot */
					Dest1Int->colorSByte[PCMYELLOW] = 0; /* off */
					ety2 = Yellow * 2;
					ety3 = ety2 + Yellow;
				}
				if (Magenta > dvalue) { /* if magenta dot */
					Dest1Int->colorSByte[PCMMAGENTA] = 15; /* on */
					etm2 = (Magenta - 15) * 2;
					etm3 = etm2 + Magenta - 15;
				}
				else { /* no magenta dot */
					Dest1Int->colorSByte[PCMMAGENTA] = 0; /* off */
					etm2 = Magenta * 2;
					etm3 = etm2 + Magenta;
				}
				if (Cyan > dvalue) { /* if cyan dot */
					Dest1Int->colorSByte[PCMCYAN] = 15; /* on */
					etc2 = (Cyan - 15) * 2;
					etc3 = etc2 + Cyan - 15;
				}
				else { /* no cyan dot */
					Dest1Int->colorSByte[PCMCYAN] = 0; /* off */
					etc2 = Cyan * 2;
					etc3 = etc2 + Cyan;
				}
				GetBlack(Dest1Int, PInfo->pi_flags);

				/* distribute error 3/8 down */
				Dest2Int->colorSByte[PCMYELLOW] += ety3;
				Dest2Int->colorSByte[PCMMAGENTA] += etm3;
				Dest2Int->colorSByte[PCMCYAN] += etc3;
				/* distribute error 2/8 (1/4) down and right */
				Dest2Int++; /* advance to next pixel down (down right) */
				Dest2Int->colorSByte[PCMYELLOW] += ety2;
				Dest2Int->colorSByte[PCMMAGENTA] += etm2;
				Dest2Int->colorSByte[PCMCYAN] += etc2;
				/* distribute error 3/8 right */
				Dest1Int++; /* advance to next pixel (right) */
				Dest1Int->colorSByte[PCMYELLOW] += ety3;
				Dest1Int->colorSByte[PCMMAGENTA] += etm3;
				Dest1Int->colorSByte[PCMCYAN] += etc3;
			} while (--sx);
			ColorInt++;
		} while (--width);
	}
	else { /* SHADE_GREYSCALE */
		do { /* for all source pixels */
			sx = *sxptr++;
			do { /* use this pixel 'sx' times */
				Yellow = (Dest1Int->colorSByte[PCMBLACK] + 4) / 8;
				Yellow += ColorInt->colorSByte[PCMBLACK];

				/* calculate pixel color and error term */
				if (Yellow > dvalue) { /* if black dot */
					Dest1Int->colorSByte[PCMBLACK] = 15; /* on */
					ety2 = (Yellow - 15) * 2;
					ety3 = ety2 + Yellow - 15;
				}
				else { /* no black dot */
					Dest1Int->colorSByte[PCMBLACK] = 0; /* off */
					ety2 = Yellow * 2;
					ety3 = ety2 + Yellow;
				}

				/* distribute error 3/8 down */
				Dest2Int->colorSByte[PCMBLACK] += ety3;
				/* distribute error 2/8 (1/4) down and right */
				Dest2Int++;
				Dest2Int->colorSByte[PCMBLACK] = ety2;
				/* distribute error 3/8 right */
				Dest1Int++;
				Dest1Int->colorSByte[PCMBLACK] += ety3;
			}
			while (--sx);
			ColorInt++;
		} while (--width);
	}

	SwapInts(PInfo); /* swap ColorInt and Dest1Int ptrs */

	if (flag) {
		Force1to1Scaling(PInfo); /* force 1:1 scaling */
	}
}

FloydSwapDest(PInfo)
struct PrtInfo *PInfo;
{
	union colorEntry *Dest2Int;

	/*swap ptrs */
	Dest2Int = PInfo->pi_Dest2Int;
	PInfo->pi_Dest2Int = PInfo->pi_Dest1Int;
	PInfo->pi_Dest1Int = Dest2Int;
	/* clear first entry */
	PInfo->pi_Dest2Int->colorLong = 0;
}
@


1.8
log
@compiled native
@
text
@d24 1
a24 1
	UWORD width, x, sx, *sxptr;
@


1.7
log
@changed '"../intuition.h"' to '<intuition/intuition.h>'
@
text
@d7 2
@


1.6
log
@for rcs 4.x header change
@
text
@d2 1
a2 1
#include "../intuition.h"
@


1.5
log
@V1.3 Gamma 8 check-in
@
text
@@


1.4
log
@V1.3 Gamma 7 release
@
text
@d2 1
a2 1
#include <intuition/intuition.h>
@


1.3
log
@added ScaleX logic
V1.3 Gamma 7 release
@
text
@d2 1
a2 1
#include "../intuition.h"
@


1.2
log
@removed unnecessary clearing of Dest2Int
V1.3 Gamma 2 release
@
text
@d22 1
a22 2
	UWORD width, x, sx, xmult, xmod;
	WORD etx, etx2;
d29 1
a29 3
	xmult = PInfo->pi_xmult;
	xmod = PInfo->pi_xmod;
	etx = etx2 = PInfo->pi_etx;
d38 1
a38 9

			/* scale pixel (DONT CHANGE THIS CODE!) */
			sx = xmult;
			etx -= xmod;
			if (etx <= 0) {
				etx += etx2;
				sx++;
			}

d105 1
a105 9

			/* scale pixel (DONT CHANGE THIS CODE!) */
			sx = xmult;
			etx -= xmod;
			if (etx <= 0) {
				etx += etx2;
				sx++;
			}

a154 1

@


1.1
log
@changed 'prtprefs.h' reference to new 'intuition.h' file
V1.3 gamma 1 release
@
text
@d145 1
a145 1
				Dest2Int->colorSByte[PCMBLACK] += ety2;
a165 1
	UWORD width;
d167 1
a167 1
	width = PInfo->pi_pc;
d171 2
a172 5
	Dest2Int = PInfo->pi_Dest2Int;
	do {
		Dest2Int->colorLong = 0;
		Dest2Int++;
	} while (--width);
@


1.0
log
@added to rcs
@
text
@d2 1
a6 1
#include "prtprefs.h"
@
