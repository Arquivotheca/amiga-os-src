head     1.9;
branch   ;
access   ;
symbols  V38_4:1.9 V37_603:1.9 V36_603:1.9 V36_599:1.9 V36_596:1.9 V36_587:1.9 V36_579:1.9 V36_575:1.7 V36_573:1.7 V36_572:1.7 V36_570:1.4 L34_564:1.4 L34_563:1.4 L34_562:1.4 L35_560:1.4 L35_559:1.4 L35_558:1.4 L35_556:1.4 L35_548:1.4 L35_547:1.4 L35_544:1.2 L35_543:1.2 L35_541:1.2 L35_539:1.1 L35_534:1.1 L35_528:1.1 L35_522:1.1 L35_517:1.1;
locks    ; strict;
comment  @*   @;


1.9
date     90.07.26.16.57.27;  author valentin;  state Exp;
branches ;
next     1.8;

1.8
date     90.07.26.16.21.38;  author valentin;  state Exp;
branches ;
next     1.7;

1.7
date     90.04.30.12.51.18;  author daveb;  state Exp;
branches ;
next     1.6;

1.6
date     90.04.06.19.24.38;  author daveb;  state Exp;
branches ;
next     1.5;

1.5
date     90.03.12.14.35.33;  author daveb;  state Exp;
branches ;
next     1.4;

1.4
date     88.04.18.17.58.13;  author daveb;  state Exp;
branches ;
next     1.3;

1.3
date     88.04.18.11.29.10;  author daveb;  state Exp;
branches ;
next     1.2;

1.2
date     88.04.10.14.32.13;  author daveb;  state Exp;
branches ;
next     1.1;

1.1
date     87.10.01.11.26.02;  author daveb;  state Exp;
branches ;
next     1.0;

1.0
date     87.08.21.17.32.36;  author daveb;  state Exp;
branches ;
next     ;


desc
@added to rcs / V1.3 beta 2 release
@


1.9
log
@To make FixHeader happy
@
text
@   IFND  DEVICES_PRTBASE_I
DEVICES_PRTBASE_I EQU   1
**
**	$Id: $
**
**	printer.device base structure definitions
**
**	(C) Copyright 1987,1988 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

   IFND  EXEC_TYPES_I
   INCLUDE  "exec/types.i"
   ENDC
   IFND  EXEC_NODES_I
   INCLUDE  "exec/nodes.i"
   ENDC
   IFND  EXEC_LISTS_I
   INCLUDE  "exec/lists.i"
   ENDC
   IFND  EXEC_PORTS_I
   INCLUDE  "exec/ports.i"
   ENDC
   IFND  EXEC_LIBRARIES_I
   INCLUDE  "exec/libraries.i"
   ENDC
   IFND  EXEC_TASKS_I
   INCLUDE  "exec/tasks.i"
   ENDC

   IFND  DEVICES_PARALLEL_I
   INCLUDE  "devices/parallel.i"
   ENDC
   IFND  DEVICES_SERIAL_I
   INCLUDE  "devices/serial.i"
   ENDC
   IFND  DEVICES_TIMER_I
   INCLUDE  "devices/timer.i"
   ENDC
   IFND  LIBRARIES_DOSEXTENS_I
   INCLUDE  "libraries/dosextens.i"
   ENDC
   IFND  INTUITION_INTUITION_I
   INCLUDE  "intuition/intuition.i"
   ENDC


 STRUCTURE  DeviceData,LIB_SIZE
    APTR dd_Segment           ; A0 when initialized
    APTR dd_ExecBase          ; A6 for exec
    APTR dd_CmdVectors        ; command table for device commands
    APTR dd_CmdBytes          ; bytes describing which command queue
    UWORD   dd_NumCommands    ; the number of commands supported
    LABEL   dd_SIZEOF


*------
*------ device driver private variables ------------------------------
*------
du_Flags EQU   LN_PRI         ; various unit flags

;------ IO_FLAGS
    BITDEF  IO,QUEUED,4       ; command is queued to be performed
    BITDEF  IO,CURRENT,5      ; command is being performed
    BITDEF  IO,SERVICING,6    ; command is being actively performed
    BITDEF  IO,DONE,7         ; command is done

;------ du_Flags
    BITDEF  DU,STOPPED,0      ; commands are not to be performed


*------ Constants ----------------------------------------------------
P_PRIORITY	EQU	0
P_OLDSTKSIZE	EQU	$0800	; stack size for child task (OBSOLETE)
P_STKSIZE	EQU	$1000	; stack size for child task
P_BUFSIZE	EQU	256	; size of internal buffers for text i/o
P_SAFESIZE	EQU	128	; safety margin for text output buffer

*------ pd_Flags ------
   BITDEF   P,IOR0,0          ; IOR0 is in use
   BITDEF   P,IOR1,1          ; IOR1 is in use
   BITDEF   P,EXPUNGED,7      ; device to be expunged when all closed

 STRUCTURE  PrinterData,dd_SIZEOF
    STRUCT  pd_Unit,MP_SIZE   ; the one and only unit
    BPTR pd_PrinterSegment    ; the printer specific segment
    UWORD   pd_PrinterType    ; the segment printer type
    APTR pd_SegmentData       ; the segment data structure
    APTR pd_PrintBuf          ; the raster print buffer
    APTR pd_PWrite            ; the parallel write function
    APTR pd_PBothReady        ; the parallel write function's done

    IFGT IOEXTPar_SIZE-IOEXTSER_SIZE
    STRUCT  pd_IOR0,IOEXTPar_SIZE   ; port I/O request 0
    STRUCT  pd_IOR1,IOEXTPar_SIZE   ;   and 1 for double buffering
    ENDC

    IFLE IOEXTPar_SIZE-IOEXTSER_SIZE
    STRUCT  pd_IOR0,IOEXTSER_SIZE   ; port I/O request 0
    STRUCT  pd_IOR1,IOEXTSER_SIZE   ;   and 1 for double buffering
    ENDC

    STRUCT  pd_TIOR,IOTV_SIZE       ; timer I/O request
    STRUCT  pd_IORPort,MP_SIZE      ;   and message reply port
    STRUCT  pd_TC,TC_SIZE           ; write task
    STRUCT  pd_OldStk,P_OLDSTKSIZE  ;   and stack space (OBSOLETE)
    UBYTE   pd_Flags                ; device flags
    UBYTE   pd_pad		    ; padding
    STRUCT  pd_Preferences,pf_SIZEOF ; the latest preferences
    UBYTE   pd_PWaitEnabled         ; wait function switch
;   /* new fields for V2.0 */
    UBYTE   pd_Pad1		    ; padding
    STRUCT  pd_Stk,P_STKSIZE	    ; stack space
    LABEL   pd_SIZEOF               ; warning! this may be odd

    BITDEF  PPC,GFX,0		;graphics (bit position)
    BITDEF  PPC,COLOR,1		;color (bit position)

PPC_BWALPHA	EQU	$00	;black&white alphanumerics
PPC_BWGFX	EQU	$01	;black&white graphics
PPC_COLORALPHA	EQU	$02	;color alphanumerics
PPC_COLORGFX	EQU	$03	;color graphics

PCC_BW		EQU	1	;black&white only
PCC_YMC		EQU	2	;yellow/magenta/cyan only
PCC_YMC_BW	EQU	3	;yellow/magenta/cyan or black&white
PCC_YMCB	EQU	4	;yellow/magenta/cyan/black

PCC_4COLOR	EQU	$4	;a flag for YMCB and BGRW
PCC_ADDITIVE	EQU	$8	;not ymcb but blue/green/red/white
PCC_WB		EQU	$9	;black&white only, 0 == BLACK
PCC_BGR		EQU	$a	;blue/green/red
PCC_BGR_WB	EQU	$b	;blue/green/red or black&white
PCC_BGRW	EQU	$c	;blue/green/red/white
;	The picture must be scanned once for each color component, as the
;	printer can only define one color at a time.  ie. If 'PCC_YMC' then
;	first pass sends all 'Y' info to printer, second pass sends all 'M'
;	info, and third pass sends all C info to printer.  The CalComp
;	PlotMaster is an example of this type of printer.
PCC_MULTI_PASS	EQU	$10	;see explanation above

 STRUCTURE  PrinterExtendedData,0
    APTR    ped_PrinterName   ; printer name, null terminated
    APTR    ped_Init          ; called after LoadSeg
    APTR    ped_Expunge       ; called before UnLoadSeg
    APTR    ped_Open          ; called at OpenDevice
    APTR    ped_Close         ; called at CloseDevice
    UBYTE   ped_PrinterClass  ; printer class
    UBYTE   ped_ColorClass    ; color class
    UBYTE   ped_MaxColumns    ; number of print columns available
    UBYTE   ped_NumCharSets   ; number of character sets
    UWORD   ped_NumRows       ; number of 'pins' in print head
    ULONG   ped_MaxXDots      ; number of dots maximum in a raster dump
    ULONG   ped_MaxYDots      ; number of dots maximum in a raster dump
    UWORD   ped_XDotsInch     ; horizontal dot density
    UWORD   ped_YDotsInch     ; vertical dot density
    APTR    ped_Commands      ; printer text command table
    APTR    ped_DoSpecial     ; special command handler
    APTR    ped_Render        ; raster render function
    LONG    ped_TimeoutSecs   ; good write timeout
;------	the following only exists if the segment version is 33 or greater
	APTR     ped_8BitChars	;conversion strings for the extended font
	LONG     ped_PrintMode	;set if text printed, otherwise 0
;------	the following only exists if the segment version is 34 or greater
	APTR	ped_ConvFunv	; ptr to conversion function for all chars
	LABEL   ped_SIZEOF

 STRUCTURE  PrinterSegment,0
    ULONG   ps_NextSegment    ; (actually a BPTR)
    ULONG   ps_runAlert       ; MOVEQ #0,D0 : RTS
    UWORD   ps_Version        ; segment version
    UWORD   ps_Revision       ; segment revision
    LABEL   ps_PED            ; printer extended data

   ENDC
@


1.8
log
@Added $Id: $ line
@
text
@a0 12
********************************************************************
*               Commodore-Amiga, Inc.                              *
*               prtbase.i                                          *
********************************************************************
********************************************************************
*
*  printer device data definition
*
*  $Id: $
*
********************************************************************

d3 8
@


1.7
log
@renamed P_STKSIZE to P_OLDSTKSIZE.
renamed pd_Stk[P_STKSIZE] to pd_OldStk[P_OLDSTKSIZE].
added 'UBYTE pd_Pad1' at end of PrinterData struct.
added new P_STKSIZE of 0x1000.
added new pd_Stk[P_STKSIZE] at end of PrinterData struct.
all the above changes were made to allow the printer device
to work under V2.0.  The call to AutoRequest in pwrite.asm
overran the old stack.

@
text
@d9 2
@


1.6
log
@for rcs 4.x header change
@
text
@d76 2
a77 1
P_STKSIZE	EQU	$0800	; stack size for child task
d108 1
a108 1
    STRUCT  pd_Stk,P_STKSIZE        ;   and stack space
d110 1
a110 1
    UBYTE   pd_pad
d112 4
a115 1
    UBYTE      pd_PWaitEnabled      ; wait function switch
@


1.5
log
@now includes exec/types.i
@
text
@@


1.4
log
@added P_BUFSIZE and P_SAFESIZE defines
V1.3 Gamma 13
@
text
@d14 3
@


1.3
log
@changed stack size from $0800 to $1000 to fix expunge bug
V1.3 Gamma 13 release
@
text
@d72 4
a75 2
P_PRIORITY  EQU         0
P_STKSIZE   EQU         $1000	; stack size for child task
@


1.2
log
@V1.3 Gamma 10 release
@
text
@d73 1
a73 1
P_STKSIZE   EQU         $0800
@


1.1
log
@V1.3 Beta 4 release
@
text
@d109 2
a110 2
    BITDEF  PPC,GFX,0
    BITDEF  PPC,COLOR,1
d112 4
a115 4
PPC_BWALPHA		EQU	$00
PPC_BWGFX		EQU	$01
PPC_COLORALPHA	EQU	$02
PPC_COLORGFX	EQU	$03
d117 4
a120 4
PCC_BW		EQU	1
PCC_YMC		EQU	2
PCC_YMC_BW	EQU	3
PCC_YMCB	EQU	4
d122 12
a133 7
PCC_4COLOR	EQU	$4	; a flag for YMCB and BGRW
PCC_ADDITIVE	EQU	$8
PCC_WB		EQU	$9
PCC_BGR		EQU	$a
PCC_BGR_WB	EQU	$b
PCC_BGRW	EQU	$c
PCC_MULTI_PASS	EQU $10
d145 1
a145 1
    UWORD   ped_NumRows       ; number of raster rows in a raster dump
@


1.0
log
@added to rcs
@
text
@@
