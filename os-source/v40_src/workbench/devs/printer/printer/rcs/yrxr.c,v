head     1.11;
branch   ;
access   ;
symbols  V38_4:1.10 V37_603:1.10 V36_603:1.10 V36_599:1.10 V36_596:1.10 V36_587:1.10 V36_579:1.10 V36_575:1.10 V36_573:1.10 V36_572:1.10 V36_570:1.8 L34_564:1.8 L34_563:1.8 L34_562:1.8 L35_560:1.7 L35_559:1.7 L35_558:1.7 L35_556:1.7 L35_548:1.7 L35_547:1.7 L35_544:1.7 L35_543:1.7 L35_541:1.7 L35_539:1.7 L35_534:1.7 L35_528:1.5 L35_522:1.5 L35_517:1.4;
locks    ; strict;
comment  @*   @;


1.11
date     92.01.28.14.16.02;  author davidj;  state Exp;
branches ;
next     1.10;

1.10
date     90.04.30.12.49.48;  author daveb;  state Exp;
branches ;
next     1.9;

1.9
date     90.04.06.19.26.26;  author daveb;  state Exp;
branches ;
next     1.8;

1.8
date     88.08.12.21.32.30;  author daveb;  state Exp;
branches ;
next     1.7;

1.7
date     88.03.08.18.36.37;  author daveb;  state Exp;
branches ;
next     1.6;

1.6
date     88.03.08.17.40.37;  author daveb;  state Exp;
branches ;
next     1.5;

1.5
date     88.03.04.10.13.11;  author daveb;  state Exp;
branches ;
next     1.4;

1.4
date     88.02.02.16.01.26;  author daveb;  state Exp;
branches ;
next     1.3;

1.3
date     88.01.30.12.33.51;  author daveb;  state Exp;
branches ;
next     1.2;

1.2
date     87.10.27.17.05.41;  author daveb;  state Exp;
branches ;
next     1.1;

1.1
date     87.10.01.09.36.31;  author daveb;  state Exp;
branches ;
next     1.0;

1.0
date     87.08.21.17.24.33;  author daveb;  state Exp;
branches ;
next     ;


desc
@added to rcs / V1.3 beta 2 release
@


1.11
log
@compiled native
@
text
@#include <exec/types.h>
#include <intuition/intuition.h>

#include "printer.h"
#include "prtbase.h"
#include "prtgfx.h"

#include "internal.h"

#include "printer_iprotos.h"

#define DEBUG0	0

YReduceXReduce(PInfo, pass)
struct PrtInfo *PInfo;
int pass;
{
	extern struct PrinterData *PD;

	int err;
	UWORD y, ypos, sy, sy2, height, ymult, ymod;
	WORD ety, ety2;
	BOOL Floyd;

#if DEBUG0
	kprintf("yrxr: enter\n");
#endif
	/* init local variables */
	err = 0;
	ypos = 0;
	y = PInfo->pi_ystart;
	ymult = PInfo->pi_ymult;
	ymod = PInfo->pi_ymod;
	ety = ety2 = PInfo->pi_ety;
	height = PInfo->pi_height;
	Floyd = (PInfo->pi_PrefsFlags & FLOYD_DITHERING) &&
				(PD->pd_Preferences.PrintShade != SHADE_BW);
	/* can not anti-alias a yrxr image */
	PInfo->pi_PrefsFlags &= ~ANTI_ALIAS;

	/* for each source row */
	do {
		FixScalingVars(PInfo);
		/* read entire row of color code info in RowBuf */
		MyReadPixelArray(y, PInfo, PInfo->pi_RowBuf);
		/* convert entire row to YMCB intensity values */
		ConvertPixelArray(PInfo, y - PInfo->pi_ystart, 0);
		y++;
		/* calc # of rows to compress */
		sy = sy2 = Scale(ymult, ymod, ety2, &ety);
		while (--sy2) { /* total up intensity values */
			/* read entire row of color code info in RowBuf */
			MyReadPixelArray(y, PInfo, PInfo->pi_RowBuf);
			/* convert entire row to YMCB intensity values */
			ConvertPixelArray(PInfo, y - PInfo->pi_ystart, 1);
			y++;
		}
		/* Hedley scan convert */
		if (PInfo->pi_PrefsFlags & GREY_SCALE2) {
			ScanConvertPixelArray(PInfo, y);
		}
		/* compact entire row of pixels */
		CompactPixelArray(PInfo, sy);
		/* if want to fix color(s) and in HAM mode and doing a color dump */
		if ((PInfo->pi_PrefsFlags & CORRECT_RGB_MASK) &&
			(PInfo->pi_flags & PRT_HAM) &&
			(PD->pd_Preferences.PrintShade == SHADE_COLOR)) {
			FixColorsPixelArray(PInfo); /* fix all colors for this row */
		}
		if (Floyd) {
			FloydPixelArray(PInfo, 0);
		}
		/* scale(1:1), dither, and render entire row of pixels */
		TransferPixelArray(ypos, PInfo, pass);
		/* restore ptrs */
		if (Floyd) {
			SwapInts(PInfo);
			FloydSwapDest(PInfo);
		}
		/* dump buffer if neccessary */
		if (err = CheckBuf(++ypos, PInfo->pi_render, 0)) {
			break;
		}
		height -= sy; /* done sy more screen rows */
	} while (height);
	if (!err) {
		/* dump partial buffer if neccessary */
		err = CheckBuf(ypos, PInfo->pi_render, 1);
	}
#if DEBUG0
	kprintf("yrxr: exit\n");
#endif
	return(err);
}
@


1.10
log
@changed '"../intuition.h"' to '<intuition/intuition.h>'
@
text
@d10 1
a10 1
#define DEBUG	0
d12 2
d25 1
a25 1
#if DEBUG
d89 2
a90 2
	}				
#if DEBUG
@


1.9
log
@for rcs 4.x header change
@
text
@d2 1
a2 1
#include "../intuition.h"
@


1.8
log
@fixed call to CompactPixelArray, changed 'sy - 1' to 'sy'.
@
text
@@


1.7
log
@V1.3 Gamma 8 release
@
text
@d61 1
a61 1
		CompactPixelArray(PInfo, sy - 1);
@


1.6
log
@V1.3 Gamma 8 check-in
@
text
@d10 1
a10 1
#define DEBUG	1
@


1.5
log
@V1.3 Gamma 8 check-in
@
text
@d10 1
a10 1
#define DEBUG	0
@


1.4
log
@V1.3 Gamma 7 release
@
text
@d2 1
a2 1
#include <intuition/intuition.h>
@


1.3
log
@V1.3 Gamma 7 release
@
text
@d2 1
a2 1
#include "../intuition.h"
@


1.2
log
@V1.3 gamma 1 release
@
text
@@


1.1
log
@V1.3 beta 4 check-in
@
text
@d1 2
a2 1
#include <intuition/intuition.h>
a7 1
#include "prtprefs.h"
d18 1
a18 1
	int err = 0;
d21 1
d27 1
d34 4
d41 1
d43 1
a43 1
		MyReadPixelArray(y, PInfo);
d51 1
a51 1
			MyReadPixelArray(y, PInfo);
d56 4
d68 3
d73 5
@


1.0
log
@added to rcs
@
text
@d5 2
a6 1
#include "prtprivate.h"
d8 1
d27 5
a31 5
	y = PInfo->ystart;
	ymult = PInfo->ymult;
	ymod = PInfo->ymod;
	ety = ety2 = PInfo->ety;
	height = PInfo->height;
d38 1
a38 1
		ConvertPixelArray(PInfo, y - PInfo->ystart, 0);
d46 1
a46 1
			ConvertPixelArray(PInfo, y - PInfo->ystart, 1);
d52 2
a53 2
		if ((PInfo->PrefsFlags & CORRECT_RGB_MASK) &&
			(PInfo->flags & PRT_HAM) &&
d60 1
a60 1
		if (err = CheckBuf(++ypos, PInfo->render, 0)) {
d67 1
a67 1
		err = CheckBuf(ypos, PInfo->render, 1);
@
