head     1.6;
branch   ;
access   ;
symbols  V38_4:1.4 V37_603:1.4 V36_603:1.4 V36_599:1.4 V36_596:1.4 V36_587:1.4 V36_579:1.4 V36_575:1.4 V36_573:1.4 V36_572:1.4 V36_570:1.3 L34_564:1.2 L34_563:1.2 L34_562:1.2 L35_560:1.2 L35_559:1.2 L35_558:1.2 L35_556:1.2 L35_548:1.1 L35_547:1.1 L35_544:1.1 L35_543:1.1 L35_541:1.1 L35_539:1.1 L35_534:1.1 L35_528:1.1 L35_522:1.1 L35_517:1.1;
locks    ; strict;
comment  @*   @;


1.6
date     92.04.24.10.31.36;  author darren;  state Exp;
branches ;
next     1.5;

1.5
date     92.01.28.14.27.15;  author davidj;  state Exp;
branches ;
next     1.4;

1.4
date     90.04.06.19.25.08;  author daveb;  state Exp;
branches ;
next     1.3;

1.3
date     89.09.07.12.09.18;  author daveb;  state Exp;
branches ;
next     1.2;

1.2
date     88.05.16.15.08.48;  author daveb;  state Exp;
branches ;
next     1.1;

1.1
date     87.10.01.09.35.20;  author daveb;  state Exp;
branches ;
next     1.0;

1.0
date     87.10.01.09.35.09;  author daveb;  state Exp;
branches ;
next     ;


desc
@added to rcs
@


1.6
log
@make compiler happy
@
text
@#include <exec/types.h>
#include <exec/io.h>
#include <devices/parallel.h>
#include <devices/serial.h>

#include <clib/exec_protos.h>
#include <clib/intuition_protos.h>
#include <clib/graphics_protos.h>

#include "prtbase.h"

#include "printer_iprotos.h"

#define DEBUGQ	0

PCQuery(pio) /* printer device query command */
struct IOStdReq *pio;
{
	extern struct PrinterData *PD;

	union {
		struct IOExtPar par;
		struct IOExtSer ser;
	} ioreq;
	UBYTE *ptr;

#if DEBUGQ
	kprintf("Q: enter, ");
#endif
	ptr = (UBYTE *)pio->io_Data;

	if (PD->pd_Preferences.PrinterPort == SERIAL_PRINTER) { /* serial */
#if DEBUGQ
		kprintf("calling serial query, ");
#endif
		ioreq.ser = PD->pd_ior0.pd_s0; /* copy io request */
		ioreq.ser.IOSer.io_Command = SDCMD_QUERY;
		DoIO((struct IOStdReq *)&ioreq);
		*ptr++ = (UBYTE)(ioreq.ser.io_Status & 0x00ff);
		*ptr = (UBYTE)((ioreq.ser.io_Status & 0xff00) >> 8);
		pio->io_Actual = 2;
#if DEBUGQ
		kprintf("status=%ld, ", ioreq.ser.io_Status);
#endif
	}
	else { /* parallel (or netprint - D. Berez - Sept. 5/89) */
#if DEBUGQ
		kprintf("calling parallel query, ");
#endif
		ioreq.par = PD->pd_ior0.pd_p0; /* copy io request */
		ioreq.par.IOPar.io_Command = PDCMD_QUERY;
		DoIO((struct IOStdReq *)&ioreq);
		*ptr++ = ioreq.par.io_Status;
		*ptr = 0;
		pio->io_Actual = 1;
#if DEBUGQ
		kprintf("status=%ld, ", ioreq.par.io_Status);
#endif
	}
#if DEBUGQ
	kprintf("exit\n");
#endif
}
@


1.5
log
@compiled native
@
text
@d38 1
a38 1
		DoIO(&ioreq);
d52 1
a52 1
		DoIO(&ioreq);
@


1.4
log
@for rcs 4.x header change
@
text
@d5 5
d11 2
@


1.3
log
@PCQuery now tests for a PrinterPort selection of SERIAL
and assumes PARALLEL if it's not.  This was necessary to
get query to work with the netprint.device kludge.  This
code used to test for PARALLEL and assumed SERIAL if not.
@
text
@@


1.2
log
@V1.3 Gamma 15
@
text
@d25 1
a25 1
	if (PD->pd_Preferences.PrinterPort == PARALLEL_PRINTER) { /* parallel */
d27 14
a50 14
#endif
	}
	else { /* serial */
#if DEBUGQ
		kprintf("calling serial query, ");
#endif
		ioreq.ser = PD->pd_ior0.pd_s0; /* copy io request */
		ioreq.ser.IOSer.io_Command = SDCMD_QUERY;
		DoIO(&ioreq);
		*ptr++ = (UBYTE)(ioreq.ser.io_Status & 0x00ff);
		*ptr = (UBYTE)((ioreq.ser.io_Status & 0xff00) >> 8);
		pio->io_Actual = 2;
#if DEBUGQ
		kprintf("status=%ld, ", ioreq.ser.io_Status);
@


1.1
log
@new file, contains code for PRD_QUERY command
V1.3 beta 4 check-in
@
text
@@


1.0
log
@added to rcs
@
text
@@
