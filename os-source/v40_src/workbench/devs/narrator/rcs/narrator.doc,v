head     37.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


37.2
date     91.04.05.14.43.32;  author eric;  state Exp;
branches ;
next     37.1;

37.1
date     91.03.12.15.03.41;  author eric;  state Exp;
branches ;
next     37.0;

37.0
date     91.03.12.15.03.08;  author eric;  state Exp;
branches ;
next     ;


desc
@Autodocs for narrator.device
@


37.2
log
@Update from Joe Katz 29 Mar 91
@
text
@

TABLE OF CONTENTS

narrator.device/AbortIO
narrator.device/OpenDevice
narrator.device/CMD_FLUSH
narrator.device/CMD_READ
narrator.device/CMD_RESET
narrator.device/CMD_START
narrator.device/CMD_STOP
narrator.device/CMD_WRITE
narrator.device/CloseDevice


narrator.device/AbortIO				    narrator.device/AbortIO

   NAME
	AbortIO - Abort an IO request


   SYNOPSIS
	AbortIO(IORequest)
		   A1


   FUNCTION
	Exec library call to abort a specified READ or WRITE request.
	The IORequest may be in the queue or currently active.  If
	currently active, the request is immediately stopped and then
	removed.


   INPUTS
	Pointer to the IORequest block to be aborted.


   RESULTS
	io_Error field in the IORequest block set to #IOERR_ABORTED.


   SEE ALSO



narrator.device/CloseDevice			  narrator.device/CloseDevice

   NAME
	CloseDevice - terminates access to the narrator device


   SYNOPSIS
	CloseDevice(IORequest)
		       A1

   FUNCTION
	Close invalidates the IO_UNIT and IO_DEVICE fields in the
	IORequest block, preventing subsequent IO until another
	OpenDevice.  CloseDevice also reduces the open count.  If 
	the count goes to 0 and the expunge bit is set, the device
	is expunged.  If the open count goes to zero and the delayed
	expunge bit is not set, CloseDevice sets the expunge bit.


   INPUTS
	A valid IORequest block with its io_Message structure, and
	io_Device and io_Unit fields properly initialized.  These
	fields are initialized by OpenDevice.


   RESULTS
	CloseDevice invalidates the unit and device pointers in the
	IORequest block.


   SEE ALSO



narrator.device/CMD_FLUSH			narrator.device/CMD_FLUSH

   NAME
	CMD_FLUSH - Aborts all inprogress and queued requests


   SYNOPSIS
	Standard device command.


   FUNCTION
	Aborts all inprogress and queued speech requests.


   INPUTS
	Valid IORequest block with the io_Command field set to CMD_FLUSH.
	A valid IORequest block is one with its io_Message structure, and
	io_Device and io_Unit fields properly initialized.  The easiest 
	way to insure proper initialization is to make a copy of the
	IORequest block after a successful OpenDevice call.


   RESULTS
	io_Error in IORequest block set to 0


   SEE ALSO
  	Exec input/output documentation.


narrator.device/CMD_Read			narrator.device/CMD_Read

   NAME
	CMD_READ - Query the narrator device for mouth shape or other
		   synchronization events.


   SYNOPSIS
	Standard device command.


   FUNCTION
	Currently, there are three events which the user can inquire
	about from the narrator device.  These are: mouth shape changes,
	start of word, and start of syllable.  Each read request returns
	information about any or all of these events as determined by
	the bits set in the sync field of the read IORequest block.  In
	the case of mouth shape changes, each shape returned is guaranteed
	to be different from the previously returned shape to allow
	updating to be done only when necessary.  Each read request is 
	associated with a write request	by information contained in the 
	IORequest block used to open the device.  Since the first field
	in the read IORequest block is a write IORequest structure, this 
	association is easily made by copying the write IORequest block 
	(after the OpenDevice call) into the voice field of the read 
	IORequest block.  If there is no write in progress or in the
	device input queue with the same pseudo unit number as the read
	request, the read will be returned to the user with an error.  This
	is also how the user knows that the write request has finished and
	that s/he should not issue any more reads.  Note that in this case
	the mouth shapes may not be different from previously returned values.


   INPUTS
	mouth_rb IORequest block with the voice field (a narrator_rb 
	structure) copied from the associated write request with the 
	following fields modified:

	   io_Message - Pointer to message port for read request
	   io_Command - CMD_READ
	   io_Error   - Clear before issuing first read
	   width      - 0
	   height     - 0


   RESULTS
	As long as the speech is in progress, each read returns the
	following information in the mouth_rb IORequest block.

	If mouth shape changes are requested the following fields are
	modified:
	   width  - Contains mouth width value in arbitrary units
	   height - Contains mouth height value in arbitrary units
	   shape  - Compressed form of mouth shapes (internal use only)


	******	NEW FOR V37 NARRATOR

	If word synchronization is requested:
	   sync   - Bit NDB_WORDSYNC is set

	If syllable synchronization is requested:
	   sync   - Bit NDB_SYLSYNC is set

	Note that any or all of the above fields can be set and it is
	the user's responsibility to check for all possibilities.


   SEE ALSO
	CMD_WRITE
	Exec input/output documentation.


narrator.device/CMD_RESET			    narrator.device/CMD_RESET

   NAME
	CMD_RESET - Reset the device to a known state


   SYNOPSIS
	Standard device command.


   FUNCTION
	Resets the device as though it has just be initialized.
	Aborts all read/write requests whether active of enqueued.
	Restarts device if it has been stopped.


   INPUTS
	Valid IORequest block with the io_Command field set to CMD_RESET.
	A valid IORequest block is one with its io_Message structure, and
	io_Device and io_Unit fields properly initialized.  The easiest 
	way to insure proper initialization is to make a copy of the
	IORequest block after a successful OpenDevice call.


   RESULTS


   SEE ALSO
	Exec input/output documentation.




narrator.device/CMD_START			    narrator.device/CMD_START


   NAME
	CMD_START - Restarts the device after a CMD_STOP command


   SYNOPSIS
	Standard device command.


   FUNCTION
	CMD_START restarts the currently active speech (if any)	and 
	allows queued requests to start.


   INPUTS
	Valid IORequest block with the io_Command field set to CMD_START
	A valid IORequest block is one with its io_Message structure, and
	io_Device and io_Unit fields properly initialized.  The easiest 
	way to insure proper initialization is to make a copy of the
	IORequest block after a successful OpenDevice call.


   RESULTS
	io_Error set to 0.


   SEE ALSO
	Exec input/output documentation.




narrator.device/CMD_STOP			    narrator.device/CMD_STOP

   NAME
	CMD_STOP  - Stops the device.


   SYNOPSIS
	Standard device command.


   FUNCTION
	CMD_STOP halts the currently active speech (if any) and	prevents
	any queued requests from starting. 


   INPUTS
	Valid IORequest block with the io_Command field set to CMD_STOP.
	A valid IORequest block is one with its io_Message structure, and
	io_Device and io_Unit fields properly initialized.  The easiest 
	way to insure proper initialization is to make a copy of the
	IORequest block after a successful OpenDevice call.


   RESULTS
	io_Error set to 0.


   SEE ALSO
	Exec input/output documentation.


narrator.device/CMD_WRITE			    narrator.device/CMD_WRITE

   NAME
	CMD_WRITE - Send speech request to the narrator device


   SYNOPSIS
	Standard device command.


   FUNCTION
	Sends a phonetic string to the narrator device to be spoken
	and, optionally, is used to direct the narrator device to 
	return mouth shape changes, and word and syllable sync events
	in response to read requests from the user.  The phonetic string
	consists of ASCII characters representing the individual phonemes.
	Refer to the narrator device chapter of the libraries and devices
	volume of the ROM Kernel Manual for detailed information.

	
   INPUTS
	User IORequest block (struct narrator_rb as defined in .h file).
	The OpenDevice call will initialize the IORequest block to a 
	"standard male" voice.  If you want to change any parms, do so
	after the OpenDevice call and before the DoIO (or SendIO/WaitIO).
	For a complete description of the narrator_rb structure, see the
	narrator.h or .i include file.  Note that the OpenDevice call does
	not initialize all the fields needed by the narrator device.  The
	IORequest fields which must be set by the user before issuing the
	write request are:

	   io_Command - Set to CMD_WRITE

	   io_Data    - Pointer to phonetic string

	   io_Length  - Length of phonetic string

	   ch_masks   - Array of audio channel selection masks (see audio
			device documentation for description of this field)

	   nm_masks   - Number of audio channel selection masks


	   ****** NEW FOR V37 NARRATOR

	   flags 	- The bit NDB_NEWIORB must be set in the flags
			  field if any of the new features of the V37
			  narrator are used.  In additon, two new bits,
			  NDB_WORDSYNC and NDB_SYLSYNC are used to 
			  specify that word and/or syllable sync events
			  are to be generated.

	   F0enthusiasm	- F0 excursion fator.  This controls the degree
			  of pitch movement for accented syllables.

	   F0perturb    - F0 perturbation.  Controls degree of pitch
			  "shakeyness" across the utterance.

	   F1adj 	- F1, F2, and F3 pitch adjustments.  These are
	   F2adj	  ±5% step adjustments added to the formant
	   F3adj   	  frequencies and can be used to create unique
			  sounding vocal effects.

	   A1adj	- A1, A2, and A3 loudness adjustments.  These are
	   A2adj	  decibel adjustemts to the individual formant
	   A3adj	  loudnesses and can be used to create unique
			  sounding vocal effects.

	   articulate	- Transition time modification.  Controls the
			  abruptness of the transitions between phonemes.

	   centralize 	- Degree of vowel centralization.  All vowels in an
			  utterance can be made to sound somewhat like a user
			  specified vowel, giving a sense of regionality to
			  the voice.  "centralize" specifies the degree of 
			  movement (in percent) from the vowel in the input
			  utterance to a user specified vowel (see centphon).

	   centphon	- Pointer to an ASCII string specifying the particular
			  vowel that centralize interpolates towards.  The
			  allowable vowel strings are:
			    	"IY", "IH", "EH", "AE", "AA", "AH",
				"AO", "OW", "UH", "ER", and "UW".

	   AVbias	- Adjusts the voicing amplitude (in decibels).

	   AFbias	- Adjusts the fricative amplitude (in decibels).

	   priority	- User specified priority.  The synthesizer needs to
			  run as a high priority task while it is actually
			  speaking to prevent clicking and gurgling.  The
			  default priority is 100.  Users can set this field
			  to specify their own speaking priority.  CAUTION:
			  too high a value may lock out other necessary taks.

	In addition to producing synthetic speech, the narrator device
	also provides features for synchronizing the speech to animation
	or other user defined events.  There are three types of events
	that the user can request.  They are mouth shape changes, start of
	new word, and start of new syllable.  Mouth shape changes are 
	requested by setting the mouths field of the IORequest block to a
	non-zero value.  Word and syllable sync events are requested by 
	setting the NDB_WORDSYNC and/or NDB_SYLSYNC bits in the flags field
	of the IORequest block.  Note that word and syllable sync only work
	in V37 and later versions of the narrator device.


   RESULTS
	The narrator device range checks and performs other validity
	checks for all input parms.  If any input is in error, the device
	sets the io_Error field of the IORequest block to an appropriate
	value (see include files for error codes).  If everything is in
	order, the narrator device will produce the speech and clear the
	io_Error field.  The io_Actual field is set to the length of the
	input string that was actually processed.  If the return code
	indicates a phoneme error (ND_PhonErr), io_Actual is the NEGATIVE
	of the position in the input string where the error occured.


   SEE ALSO
	Read command.
	Audio device documentation.
	Exec input/output documentation.


narrator.device/OpenDevice			    narrator.device/OpenDevice

   NAME
	OpenDevice - opens the narrator device.


   SYNOPSIS
	error = OpenDevice("narrator.device",  unit, IORequest, flags);
	 D0                       A0            D0     A1         D1


   FUNCTION
	The OpenDevice routine grants access to the narrator device.
	OpenDevice checks the unit number, and if non-zero, returns an
	error (ND_UnitErr).  If this is the first time the driver has
	been opened, OpenDevice will attempt to open the audio device
	and allocate the driver's static buffers.  If either of these
	operations fail, an error is returned.  See the .h and .i
	include files for possible error return codes.  Next, OpenDevice
	(done for all opens, not just the first one) initializes various
	fields in the user's IORequest block (see below).  If users wish
	to use non-default values for these parms, the values must be set
	after the open is done.  OpenDevice also assigns a pseudo unit
	number to the IORB for use in synchronizing read and write requests.
	See the read command for more details.	Finally, OpenDevice stores
	the device node pointer in the IORequest block and clears the
	delayed expunge bit.

	***** NEW FOR V37 NARRATOR *****

	Several new fields in the IORequest block have been added for V37
	narrator.  These fields are initialized when the device is opened
	if the NDB_NEWIORB bit is set in the flags field of the user's 
	IORequest block.  Note that NDB_NEWIORB is set in the IORequest
	block, NOT in the "flags" input parm to the OpenDevice call.


   INPUTS
	device     - "narrator.device"
	unit       - 0
	IORequest  - Pointer to the user's IORequest block
	flags	   - 0


   RESULTS
	The narrator device will initialize the IORequest block as follows
	(assume IORB points to the IOrequest block):

	IORB->rate = 150;		/* Speaking rate in words/minute */
	IORB->pitch = 110;		/* Baseline pitch in Hertz     	*/
	IORB->mode = NATURALF0;		/* Pitch (F0) mode		*/
	IORB->sex = MALE;		/* Sex of voice			*/
	IORB->volume = 64		/* Volume, full on		*/
	IORB->sampfreq = 22200		/* Audio sampling freq 		*/
	IORB->mouths = 0		/* Don't generate sync events	*/

	and if the NDB_NEWIORB bit is set:

	IORB->F0enthusiasm = 0		/* F0 excursion factor		*/
	IORB->F0perturb = 32		/* F0 perturbation (in 32nds)	*/
	IORB->F1adj = 0			/* F1 adjustment in ±5% steps	*/
	IORB->F2adj = 0 		/* F2 adjustment in ±5% steps	*/
	IORB->F3adj = 0			/* F3 adjustment in ±5% steps	*/
	IORB->A1adj = 0			/* A1 adjustment in decibels	*/
	IORB->A2adj = 0			/* A2 adjustment in decibels	*/
	IORB->A3adj = 0		 	/* A3 adjustment in decibels	*/
	IORB->articulate = 100		/* Transition time multiplier	*/
	IORB->centralize = 0		/* Degree of vowel centralization */
	IORB->centphon = ""		/* Pointer to central ASCII phon  */
	IORB->AVbias = 0		/* AV bias			*/
	IORB->AFbias = 0		/* AF bias			*/
	IORB->priority = 100		/* Priority while speaking	*/



   SEE ALSO
	The include files contain the complete IORequest block definition,
	    default settings, and error return codes.
	Exec input/output documentation.


@


37.1
log
@New improved.  From Joe Katz 11 March 91
@
text
@d313 1
d315 1
d317 1
d320 1
d323 1
d326 6
a331 2
	   flags - The bit NDB_NEWIORB must be set in the flags field if
		   any of the new features of the V37 narrator are used
d333 42
@


37.0
log
@added to rcs
@
text
@d5 9
a13 12
Device/Speech/AbortIO
Device/Speech/Close
Device/Speech/FlushIO
Device/Speech/Open
Device/Speech/Read
Device/Speech/ResetIO
Device/Speech/StartIO
Device/Speech/Task
Device/Speech/Write
Exported
Imported
Included
d16 1
a16 1
Device/Speech/AbortIO                                     Device/Speech/AbortIO
d21 1
d24 1
d26 1
d28 4
a31 2
	Aborts a speech IO request.  The request may be in the queue
       or currently active.
d33 1
d35 1
a35 1
	IORB of request to abort.
d37 1
d39 1
a39 1
	io_Error field of IORB set to IOERR_ABORTED
d41 1
d46 1
a46 1
Device/Speech/Close                                         Device/Speech/Close
d51 1
d54 1
d58 4
a61 4
	IORB, preventing subsequent IO until another OpenDevice.
	CloseDevice also reduces the open count.  If the count 
	goes to 0 and the expunge bit is set, the device is 
	expunged.  If the open count goes to zero and the delayed
d64 1
d66 3
a68 1
	IORequest block
d70 1
d72 2
a73 1
	IORequest block with unit and device pointers invalidated.
d75 1
d80 1
a80 1
Device/Speech/FlushIO                                     Device/Speech/FlushIO
d83 1
a83 1
	Flush - Aborts all inprogress and queued requests
d85 1
d87 1
a87 1
	Standard device command.  See DoIO/SendIO
d89 1
d93 1
d95 5
a99 1
	io_Command - CMD_FLUSH
d101 1
d103 1
d105 1
d107 1
a108 3



d110 1
a110 1
Device/Speech/Open                                           Device/Speech/Open
d113 2
a114 1
	OpenDevice - open the narrator device.
d116 1
d118 1
a118 1
	error = OpenDevie("narrator.device", 0, IORequest, 0);
d120 1
d122 19
a140 17
	The OpenDevice routine grants access to the narrator device.
	OpenDevice checks the unit number, and if non-zero, returns
	an error (ND_UnitErr).  If this is the first time the driver
	has been opened, OpenDevice will attempt to open the audio
	device and allocate the driver's static buffers.  If either
	of these operations fail, an error is returned (see the .hi
	files for possible error return codes).  Next, OpenDevice
	(done for all opens, not just the first one) initializes the
	user's IORequest block (IORB).  Default values for sex, rate,
	pitch, pitch mode, sampling frequency, and mouths are set in
	the appropriate fields of the IORB.  Note that if users wish
	to use non-default values for these parms, the values must
	be set after the open is done.  OpenDevice then assigns a
	pseudo-unit number to the IORB for use in synchronizing read
	and write requests.  See the read command for more details.
	Finally, OpenDevice stores the device node pointer in the
	IORB and clears the delayed expunge bit.
d142 1
d144 3
a146 4
	deviceName - must be "narrator.device"
	unitNumber - must be 0
	IORequest  - the user's IORB (need not be initialized)
	flags	   - not used
d148 7
d156 2
a157 10
	IORB fields set:
	   rate	   - 150 words/minute
	   pitch   - 110 Hz
	   mode	   - Natural
	   sex     - Male
	   mouths  - Off
	   sampfreq - 22200
	   volume  - 64 (max)
	
	error - same as io_Error field of IORB
d159 5
a163 1
   SEE ALSO
d166 1
a166 2

Device/Speech/Read                                           Device/Speech/Read
d168 2
a169 3
   NAME
	Read - Return the next different mouth shape from an 
       associated write
d171 2
a172 2
   SYNOPSIS
	Standard device command.  See DoIO/SendIO.
d174 2
a175 19
   FUNCTION
	The read command of the narrator device returns mouth
	shapes to the user.  The shape returned is guaranteed
	to be differnt from the previously returned shape 
	(allowing updating to be done only when something has
	changed).  Each read request is associated with a 
	write request by the pseudo-unit number assigned by
	the OpenDevice call.  Since the first structure in
	the read-mouth IORB is a narrator (write) IORB, this
	association is easily made by copying the narrator 
	IORB into the narrate_rb field fo the read IORB.
	See the .hi files.  If there is no write in progress
	or in the device input queue with the same pseudo-
	unit number as the read request, the read will be
	returned to the user with an error.  This is also
	how the user knows that the write request has 
	finished and that s/he should not issue any more
	reads.  Note that in this case the mouth shapes may
	not be different from previously returned values.
a176 8
   INPUTS
	IORB with the narrator_rb structure copied from the
	associated write request execpt for:
	   io_Message - message port for read request
	   io_Command - CMD_READ
	   io_Error   - 0
	   width      - 0
	   height     - 0
a177 8
   RESULTS
	IORB fields set:
	   width  - mouth width in millimeters/3.67
		    (division done for scaling)
	   height - mouth height in millimeters
	   shape  - compressed form of mouth shapes
	  	    (internal use only)

d179 2
a180 1
	Write command.
d183 1
a183 1
Device/Speech/ResetIO                                     Device/Speech/ResetIO
d186 1
a186 1
	Reset - Reset the device to a known state
d188 1
d190 1
a190 1
	Standard device command.  See DoIO/SendIO.
d192 1
d198 1
d200 5
a204 1
	io_Command = CMD_RESET
d206 1
d209 1
d211 1
a214 1

d216 1
a216 1
Device/Speech/StartIO                                     Device/Speech/StartIO
d218 1
d220 1
a220 2
	StopIO  - Stops the device.
	StartIO - Restarts the device after StopIO
d222 1
d224 1
a224 1
	Standard device commands.  See DoIO/SendIO
d226 1
d228 2
a229 2
	StopIO halts the currently active speech (if any) and
	prevents any queued requests from starting. 
a230 2
	StartIO restarts the currently active speech (if any)
	and allows queued request to start.
d233 5
a237 1
	io_Command = CMD_STOP or CMD_START
d239 1
d241 1
d243 1
d245 1
a248 1

d250 1
a250 1
Device/Speech/Task                                           Device/Speech/Task
d253 1
a253 1
  NAME
d255 1
d257 1
a257 1
  SYNOPSIS
d259 1
d261 2
d266 5
a270 1
  INPUTS
d274 1
d278 1
a279 1

d281 1
a281 1
Device/Speech/Write                                         Device/Speech/Write
d284 1
a284 1
	Write - Send speech request to the narrator device
d286 1
d288 1
a288 1
	Standard device command.  See DoIO/SendIO.
d290 1
d292 7
a298 6
	Performs the speech request.  If there is an
	associated read request on the device input queue,
	write will remove it and return an initial mouth
	shape to the user.  Note that if you are going
	to be doing reads, the mouths parameter must be
	set to 1.
d300 1
d302 35
a336 19
	Narrator IORB
	   ch_masks - array of audio channel selection masks
		      (see audio device documentation for
		       description of this field)
	   nm_masks - number of audio channel selection masks
	   mouths   - 0 if no mouths are desired
		      1 if mouths are to be read
	   rate     - speaking rate
	   pitch    - pitch
	   mode     - pitch mode
	              0 if natural mode
		      1 if robotic mode
	   sex      - 0 if male
	  	    - 1 if female
	   io_Message - message port
	   io_Command - CMD_WRITE
	   io_Data    - input string
	   io_Length  - length of input string
	   
d338 9
a346 5
	The function sets the io_Error field of the IORB.  The
	io_Actual field is set to the length of the input string
	that was actually processed.  If the return code indicates
	a phoneme error (ND_PhonErr), io_Actual is the position in
	the input string where the error occured.
d348 1
d352 1
d355 80
a434 5
Exported                                                               Exported

Imported                                                               Imported

Included                                                               Included
@
