head     1.4;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @@;


1.4
date     90.08.21.16.58.30;  author eric;  state Exp;
branches ;
next     1.3;

1.3
date     90.08.20.10.58.32;  author andy;  state Exp;
branches ;
next     1.2;

1.2
date     90.04.03.12.08.55;  author andy;  state Exp;
branches ;
next     1.1;

1.1
date     90.04.02.16.40.19;  author andy;  state Exp;
branches ;
next     ;


desc
@@


1.4
log
@New version: 36.10
@
text
@
	TTL	'STRMARK.ASM'


*************************************************************************	
*                                                                    	*
*   Copyright 1990, Joseph Katz/Mark Barton.  All rights reserved.	*
*   No part of this program may be reproduced, transmitted, or stored   *
*   in any language or computer system, in any form, whatsoever,	*
*   without the prior written permission of the authors.   		*
*                                                                    	*
*************************************************************************

          SECTION      speech

**************************************************
*
* Main module STRMARK
*
* Marks the appropriate consonants to the left
* of a stressed vowel as stressed
*
* Note 1 - Oct 10, 1989  JK  -- Changed LEA's to MOVE.L's.  PHON, STRESS, and
*				DUR are now allocated rather than fixed bfrs.
**************************************************


 
	INCLUDE   'exec/types.i'
        INCLUDE   'featequ.i'
        INCLUDE   'gloequs.i'
        INCLUDE   'pcequs.i'

        XREF      FEAT
        XDEF      STRMARK

STRESSED	equ	$10	;stress bit
UNSTRESSED	equ	$ef	;complement of stress bit
STRESSBIT	equ	4

*-------- Initialize pointers

STRMARK:
	MOVE.L	PHON(a5),a0					;*** Note 1
	MOVE.L	STRESS(a5),a1					;*** Note 1
	LEA	FEAT,a4						;*** Note 1

	subq.l	#1,a0		;pt to previous phon
	bra.s	str1
strloop	addq.l	#1,a0		;next phon
	addq.l	#1,a1		;next stress
str1	moveq	#0,d0
	move.b	(a0),d0		;get previous phon
	move.b	(a1),d1		;get current stress
	beq	strloop		;not stressed, next phon
	cmp.b	#$ff,d1		;last phon?
	beq	strend		;yes, branch
	moveq	#0,d7		;no, get features of prev phon
	move.b	d0,d7
	lsl.w	#2,d7
	move.l	0(a4,d7),d2
	btst	#CONSBIT,d2	;consonant?
	beq	strloop		;no, next phon
	or.b	#STRESSED,-1(a1) ;yes, mark as stressed

* Start backup stress marking

	move.l	a0,a2		;transfer phon pointer
	move.l	a1,a3		;transfer stress pointer
	subq.l	#1,a3		;align stress with prev phon
	btst	#LIQUIDBIT,d2	;liquid?
	bne.s	liqgli		;yes, branch
	btst	#GLIDEBIT,d2	;glide?
	beq.s	checkNOSE	;no, branch
liqgli	or.b	#STRESSED,(a3)	;it's a liqgli, mark as stressed (redundant)
	subq.l	#1,a3		;backup stress
	move.b	-(a2),d0	;backup & get phon
	moveq	#0,d7
	move.b	d0,d7
	lsl.w	#2,d7
	move.l	0(a4,d7),d2	;get features
	bra.s	checkPLOS
checkNOSE:
	btst	#NASALBIT,d2	;nasal?
	beq.s	checkPLOS	;no, branch
markit	or.b	#STRESSED,(a3)	;yes, mark as stressed	
	subq.l	#1,a3		;backup stress
	move.b	-(a2),d0	;backup & get phon
	moveq	#0,d7
	move.b	d0,d7
	lsl.w	#2,d7
	move.l	0(a4,d7),d2	;get features
	bra.s	checkFRIC
checkPLOS:
	btst	#PLOSBIT,d2	;plosive?
	bne	markit		;yes, branch
	btst	#PLOSABIT,d2	;no, plosive aspirant?
	bne	markit		;yes, mark as stressed, then check fric
checkFRIC:
	btst	#FRICBIT,d2	;fricative?
	beq.s	checkAFFRIC	;no, branch
	btst	#VOICEDBIT,d2	;voiced fricative?
	bne.s	destress	;yes, branch to destressing loop
	or.b	#STRESSED,(a3)	;no, it's an unvoiced fric, mark as stressed
	bra.s	destress
checkAFFRIC:
	btst	#AFFRICBIT,d2	;affricate?
	beq.s	destress	;no, branch to destressing loop
	or.b	#STRESSED,(a3)	;yes, mark as stressed
destress:

	bra	strloop		;experimental, don't destress at all

	btst	#STRESSBIT,(a3)
	beq.s	des1
	addq.l	#1,a2		;start forward destressing loop
	addq.l	#1,a3		; by skipping the first accented consonant
des1	addq.l	#1,a2
	addq.l	#1,a3
	move.b	(a2),d0		;get phon
	moveq	#0,d7
	move.b	d0,d7
	lsl.w	#2,d7
	move.l	0(a4,d7),d2	;get features
	btst	#VOWELBIT,d2	;vowel?
	bne	strloop		;yes, next case
*	btst	#LIQUIDBIT,d2	;no,liquid?
*	bne	strloop		;yes, don't destress, next case
	and.b	#UNSTRESSED,(a3) ;no, destress
	bra	des1

strend	rts
	END
	
@


1.3
log
@new version from softvoice
@
text
@@


1.2
log
@*** empty log message ***
@
text
@d4 2
a5 1
*************************************************************************
d7 5
a11 8
*   Copyright 1986, 1989 Joseph Katz/Mark Barton.  All rights reserved.	*
*   No part of this program may be reproduced, transmitted,          	*
*   transcribed, stored in retrieval system, or translated into      	*
*   any language or computer language, in any form or by any         	*
*   means, electronic, mechanical, magnetic, optical, chemical,      	*
*   manual or otherwise, without the prior written permission of     	*
*   the authors.						     	*
*								     	*
@


1.1
log
@Initial revision
@
text
@d1 18
a18 13
	TTL	'$Header: strmark.asm,v 32.1 86/01/22 00:24:41 sam Exp $'
**********************************************************************
*                                                                    *
*   Copyright 1986, Commodore-Amiga Inc.   All rights reserved.      *
*   No part of this program may be reproduced, transmitted,          *
*   transcribed, stored in retrieval system, or translated into      *
*   any language or computer language, in any form or by any         *
*   means, electronic, mechanical, magnetic, optical, chemical,      *
*   manual or otherwise, without the prior written permission of     *
*   Commodore-Amiga Incorporated, 983 University Ave. Building #D,   *
*   Los Gatos, California, 95030                                     *
*                                                                    *
**********************************************************************
d20 1
a20 1
* $Header: strmark.asm,v 32.1 86/01/22 00:24:41 sam Exp $
d22 2
a23 1
* $Locker:  $
d25 3
a27 7
* $Log:	strmark.asm,v $
* Revision 32.1  86/01/22  00:24:41  sam
* placed under source control
* 
*
**********************************************************************
          SECTION      speech
a29 16
*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*                                                                           ;
*                        MARK STRESSED SEGMENTS                             ;
*                                                                           ;
*    A0 - STRESS ARRAY               A1 - PHON ARRAY                        ;
*    A2 - FEATURES MATRIX            A3 -                                   ;
*    A4 -                            A5 - GLOBALS AREA                      ;
*    A6 -                            A7 - STACK POINTER                     ;
*                                                                           ;
*    D0 - PHONEME STRESS             D1 - PHONEME CODE                      ;
*    D2 - PC FEATURES                D3 -                                   ;
*    D4 -                            D5 -                                   ;
*    D6 -                            D7 -                                   ;
*                                                                           ;
*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

d31 4
a34 3
          INCLUDE   'featequ.i'
          INCLUDE   'gloequs.i'
          INCLUDE   'pcequs.i'
d36 2
a37 2
          XREF      FEAT
          XDEF      STRMARK
d39 4
d45 4
a48 5
STRMARK   LEA       STRESS(A5),A0       ;GET ADDRESS OF STRESS ARRAY
          LEA       PHON(A5),A1         ;GET ADDRESS OF PHON ARRAY
          LEA       FEAT,A2             ;GET ADDRESS OF FEATURE ARRAY
          MOVEQ     #0,D0
          SUBQ.L    #1,A1               ;SET A1 TO POINT TO PREVIOUS PHONEME
d50 17
d68 1
a68 2
*-------- Main loop.  Sets stressed segment bit on consonents preceeding
*         stressed vowels.
d70 43
a112 11
STRLOOP   MOVEQ     #0,D1               ;CLEAR D1
          MOVE.B    (A1)+,D1            ;GET 'PREVIOUS' PHONEME CODE
          MOVE.B    (A0)+,D0            ;GET ENTRY FROM STRESS ARRAY
          BEQ.S     STRLOOP             ;IF STRESS = 0 (UNSTRESSED), SKIP
          CMP.B     #$FF,D0             ;END OF STRESS ARRAY?
          BEQ.S     STREND              ;YEP
          LSL.W     #2,D1               ;CONVERT PHONEME CODE INTO F.M. INDEX
          MOVE.L    0(A2,D1),D2         ;GET FEATURE MATRIX ENTRY
          BTST      #CONSBIT,D2         ;CONSONANT?
          BEQ.S     STRLOOP             ;NO
          OR.B      #$10,-2(A0)         ;SET STRESSED SEGMENT BIT
d114 1
d116 17
a132 3
*-------- Plosive aspirate preceeding liquid or glide which in turn preceeds a
*         stressed vowel is stressed  (extended to PLOS, PLOSA, FRIC, and 
*         AFFRIC)
d134 3
a136 30
          AND.L     #LIQUID+GLIDE,D2              ;EITHER LIQUID OR GLIDE?
          BEQ.S     STRCHKN                       ;CHECK FOR A NASAL
          MOVEQ     #0,D1                         ;CLEAR D1
          MOVE.B    -2(A1),D1                     ;GET PRE-PREVIOUS PHON
          LSL.W     #2,D1                         ;CONVERT TO F.M. INDEX
          MOVE.L    0(A2,D1),D2                   ;GET FEATURES
          BTST      #PLOSABIT,D2                  ;PLOSIVE ASPIRATE?
          BEQ.S     STRCHKP                       ;NO, CHECK OTHER STUFF
          OR.B      #$10,-3(A0)                   ;YES, SET STRSSD SEGMENT BIT
          CMP.B     #PHCS,-3(A1)                  ;PRECEEDED BY AN 'S'?
          BNE       STRLOOP
          OR.B      #$10,-4(A0)
          BRA       STRLOOP                       ;NEXT PHON\

STRCHKP   AND.L     #PLOS+AFFRIC+FRIC,D2          ;OTHER STUFF?
          BEQ       STRLOOP                       ;NO
          OR.B      #$10,-3(A0)                   ;YES, STRESS
          BRA       STRLOOP

STRCHKN   MOVE.L    0(A2,D1),D2                   ;GET FEATURES
          AND.L     #NASAL+PLOSA+PLOS,D2          ;IS IT A NASAL OR PLOSIVE?
          BEQ       STRLOOP                       ;NO
          CMP.B     #PHCS,-2(A1)                  ;YES, PRECEEDED BY AN 'S'?
          BNE       STRLOOP                       ;NO, SKIP
          OR.B      #$10,-3(A0)                   ;YES, SET STRESS SEGMENT BIT
          BRA       STRLOOP

STREND    RTS

          END 
@
