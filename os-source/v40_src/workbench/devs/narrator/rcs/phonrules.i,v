head     1.5;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @@;


1.5
date     91.04.05.14.44.22;  author eric;  state Exp;
branches ;
next     1.4;

1.4
date     90.08.21.16.56.10;  author eric;  state Exp;
branches ;
next     1.3;

1.3
date     90.06.04.20.32.12;  author andy;  state Exp;
branches ;
next     1.2;

1.2
date     90.04.03.12.13.52;  author andy;  state Exp;
branches ;
next     1.1;

1.1
date     90.04.02.16.49.59;  author andy;  state Exp;
branches ;
next     ;


desc
@@


1.5
log
@Update from Joe Katz 29 Mar 91
@
text
@
	TTL	'PHONRULES.I'


*************************************************************************	
*                                                                    	*
*   Copyright 1990, Joseph Katz/Mark Barton.  All rights reserved.	*
*   No part of this program may be reproduced, transmitted, or stored   *
*   in any language or computer system, in any form, whatsoever,	*
*   without the prior written permission of the authors.   		*
*                                                                    	*
*************************************************************************


*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*                                                                            ;
*                       PHONOLOGICAL RULES                                   ;
*                                                                            ;
*         RULE TEMPLATE:  PC TO KEY ON, LEFT CONTEXT PC, RIGHT CONTEXT PC,   ;
*                         LENGTH/OPTIONS, REPLACEMEMT PC, LEFT INSERT PC,    ;
*                         RIGHT INSERTION PC, CENTER PHONEME FEATURES,       ;
*                         LEFT CONTEXT PHONEME FEATURES, RIGHT CONTEXT       ;
*                         PHONEME FEATURES                                   ;
*                                                                            ;
*         ALL QUANTITIES ARE BYTE LONG                                       ;
*                                                                            ;
*         NOTE:   A CHANGE TO ANY RULE REQUIRES A RECOMPILATION OF MAIN      ;
*                                                                            ;
*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*
*  These rules modified July 30, 1988, and again May 10, 1990 (A3000)
*
*  PHRULES2 and the second call to PHONOL removed due to the elimination
*  of `prime' phons.  Some rules from PHRULES2 have been incorporated into
*  PHRULES1.
*
*--------- Rule equates

PHOLAST    EQU          $80             ;LAST BIT INDIC. ON=LAST RULE IN SET
PHORBIT    EQU          $40             ;CHECK BIT IN FM. OFF=CHECK STRESS
PHORON     EQU          $20             ;BIT ON/STRESSED PHONEME
PHORSTR    EQU          4               ;BIT IN STRESS ARRAY TO CHECK
MATCH      EQU          $FF             ;UNIVERSAL PC MATCH
NORULE     EQU          PHOLAST+PHORBIT+31  ;BIT 31 NOT USED IN FM, ALWAYS OFF
PHOBON     EQU          PHORBIT+PHORON
PHOBOFF    EQU          PHORBIT
PHOSTR     EQU          PHORON+PHORSTR
PHOSTRN    EQU          PHORSTR


*--------- Phonological rules, used immediately after PARSE

PHRULES1:

* AXP <== PLOSA // (SP) SILENT
 DC.B   MATCH,MATCH,MATCH,10+64,MATCH,MATCH,PHCAXP
 DC.B	   PHOLAST+PHOBON+PLOSABIT
 DC.B	   NORULE
 DC.B	   PHOLAST+PHOBON+SILENTBIT

* AXP <== PLOS // (SP) SILENT
 DC.B   MATCH,MATCH,MATCH,10+64,MATCH,MATCH,PHCAXP
 DC.B	   PHOLAST+PHOBON+PLOSBIT
 DC.B	   NORULE
 DC.B	   PHOLAST+PHOBON+SILENTBIT

* AXP <== FRIC // (SP) SILENT
 DC.B   MATCH,MATCH,MATCH,11+64,MATCH,MATCH,PHCAXP
 DC.B	   PHOBOFF+VOICEDBIT,PHOLAST+PHOBON+FRICBIT 
 DC.B	   NORULE
 DC.B	   PHOLAST+PHOBON+SILENTBIT

* Q <== N /T/ UN
 DC.B  PHCT,PHCN,PHCUN,10,PHCQ,MATCH,MATCH,NORULE,NORULE,NORULE

* TQ <== VOWEL /T/ UN
 DC.B  PHCT,MATCH,PHCUN,10,PHCTQ,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+VOWELBIT
 DC.B     NORULE

* UN <== Q /UN/	 (These next 2 rules prevent expansion to AXN after glottals)
 DC.B	PHCUN,PHCQ,MATCH,10,PHCUN,MATCH,MATCH,NORULE,NORULE,NORULE

* UN <== TQ /UN/
 DC.B	PHCUN,PHCTQ,MATCH,10,PHCUN,MATCH,MATCH,NORULE,NORULE,NORULE

* AX,N <== /UN/
 DC.B  PHCUN,MATCH,MATCH,10,PHCAX,MATCH,PHCN,NORULE,NORULE,NORULE

* AX,M <== /UM/
 DC.B  PHCUM,MATCH,MATCH,10,PHCAX,MATCH,PHCM,NORULE,NORULE,NORULE

* IX,L <== /IL/
 DC.B  PHCIL,MATCH,MATCH,32+10,PHCIX,MATCH,PHCL,NORULE,NORULE,NORULE

* IX,M <== /IM/
 DC.B  PHCIM,MATCH,MATCH,32+10,PHCIX,MATCH,PHCM,NORULE,NORULE,NORULE

* IX,N <== /IN/
 DC.B  PHCIN,MATCH,MATCH,32+10,PHCIX,MATCH,PHCN,NORULE,NORULE,NORULE

* L <== VOWEL /L/ VOWEL & STRESS   (Prevents LX before stressed vowel)
 DC.B   PHCL,MATCH,MATCH,11,PHCL,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOBON+VOWELBIT,PHOLAST+PHOSTR

* LX <== VOWEL /L/
 DC.B   PHCL,MATCH,MATCH,10,PHCLX,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      NORULE

* R <== VOWEL /R/ VOWEL & STRESS   (Prevents RX before stressed vowel)
 DC.B   PHCRR,MATCH,MATCH,11,PHCRR,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOSTR,PHOLAST+PHOBON+VOWELBIT

* RX <== VOWEL /R/
 DC.B   PHCRR,MATCH,MATCH,10,PHCRX,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT,NORULE

* R <== ER // VOWEL & STRESS
 DC.B   PHCER,MATCH,MATCH,11,MATCH,MATCH,PHCRR,NORULE,NORULE
 DC.B      PHOBON+VOWELBIT,PHOLAST+PHOSTR

* J <== /D/ R
 DC.B   PHCD,MATCH,PHCRR,10+32,PHCJ,MATCH,MATCH,NORULE,NORULE,NORULE

* CH <== /T/ R
 DC.B   PHCT,MATCH,PHCRR,10+32,PHCCH,MATCH,MATCH,NORULE,NORULE,NORULE

* T <== LX /T/   (NO FLAP)
 DC.B   PHCT,PHCLX,MATCH,10,PHCT,MATCH,MATCH,NORULE,NORULE,NORULE

* D <== LX /D/   (NO FLAP)
 DC.B   PHCD,PHCLX,MATCH,10,PHCD,MATCH,MATCH,NORULE,NORULE,NORULE

* T <== VOWEL /T/ (SP) DIPH  (NO FLAP)
 DC.B   PHCT,MATCH,MATCH,64+10,MATCH,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOLAST+PHOBON+DIPHBIT

* D <== VOWEL /D/ (SP) DIPH  (NO FLAP)
*DC.B   PHCD,MATCH,MATCH,64+10,MATCH,MATCH,MATCH,NORULE
*DC.B      PHOLAST+PHOBON+VOWELBIT
*DC.B      PHOLAST+PHOBON+DIPHBIT

* DX <== VOWEL /T/ (SP) VOWEL & ~STRESS   (FLAP RULE)
 DC.B   PHCT,MATCH,MATCH,64+11,PHCDX,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOBON+VOWELBIT
 DC.B      PHOLAST+PHOSTRN

* DX <== VOWEL /D/ (SP) VOWEL & ~STRESS   (FLAP RULE)
 DC.B   PHCD,MATCH,MATCH,64+11,PHCDX,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOBON+VOWELBIT
 DC.B      PHOLAST+PHOSTRN

* Q <== T // SP SONOR & STRESS & ~VOWEL   (~VOWEL IS NEW)
 DC.B   PHCBL,PHCT,MATCH,12,PHCBL,PHCQ,MATCH,NORULE,NORULE
 DC.B      PHOBON+SONORBIT,PHOBOFF+VOWELBIT,PHOLAST+PHOSTR

* Q <== PLOSA // IGNORE ~VOWEL  (WORD FINAL PLOSA) (USED TO BE ~SONOR)
* DC.B   MATCH,MATCH,MATCH,10,MATCH,PHCQ,MATCH
* DC.B      PHOLAST+PHOBON+IGNOREBIT		;This rule needs looking at!
* DC.B      PHOLAST+PHOBON+PLOSABIT
* DC.B      PHOLAST+PHOBOFF+VOWELBIT

* Q <== PLOSA // IGNORE PLOSA	(Better word boundary cue between plosives)
 DC.B   MATCH,MATCH,MATCH,10,MATCH,PHCQ,MATCH
 DC.B      PHOLAST+PHOBON+IGNOREBIT
 DC.B      PHOLAST+PHOBON+PLOSABIT
 DC.B      PHOLAST+PHOBON+PLOSABIT

* Q <== FRIC // IGNORE DH  (Better word boundary cue between frics & DH)
 DC.B   MATCH,MATCH,PHCDH,10,MATCH,PHCQ,MATCH
 DC.B      PHOLAST+PHOBON+IGNOREBIT
 DC.B      PHOLAST+PHOBON+FRICBIT
 DC.B      NORULE

* Q <== IY // SP IY & STRESS   (EXCEPTION TO RULE BELOW)
 DC.B   MATCH,PHCIY,PHCIY,10,MATCH,PHCQ,MATCH
 DC.B      PHOLAST+PHOBON+IGNOREBIT,NORULE
 DC.B      PHOLAST+PHOSTR

* null <== IY // SP VOWEL & STRESS  (NO GLOT STOP)
 DC.B   MATCH,PHCIY,MATCH,11,MATCH,MATCH,MATCH
 DC.B      PHOLAST+PHOBON+IGNOREBIT,NORULE
 DC.B      PHOBON+VOWELBIT,PHOLAST+PHOSTR

* Q <== VOWEL // SP VOWEL & STRESS
 DC.B   MATCH,MATCH,MATCH,11,MATCH,PHCQ,MATCH
 DC.B      PHOLAST+PHOBON+IGNOREBIT,PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOBON+VOWELBIT,PHOLAST+PHOSTR

* Q <== /T/ L
 DC.B   PHCT,MATCH,PHCL,10,PHCTQ,MATCH,MATCH,NORULE,NORULE,NORULE

* Q <== PLOSA // STOP
* DC.B   MATCH,MATCH,MATCH,10,MATCH,MATCH,PHCQ
* DC.B   PHOLAST+PHOBON+PLOSABIT
* DC.B   NORULE,PHOLAST+PHOBON+STOPBIT

* Q <== T // SP L
 DC.B   PHCBL,PHCT,PHCL,10,PHCBL,PHCQ,MATCH,NORULE,NORULE,NORULE

* GX <== /G/ MID
 DC.B  PHCG,MATCH,MATCH,10,PHCGX,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+MIDBIT

* GX <== /G/ BACK
 DC.B  PHCG,MATCH,MATCH,10,PHCGX,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+BACKBIT

* KX <== /K/ MID
 DC.B  PHCK,MATCH,MATCH,10,PHCKX,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+MIDBIT

* KX <== /K/ BACK
 DC.B  PHCK,MATCH,MATCH,10,PHCKX,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+BACKBIT

* GX <== MID /G/ ~SONOR
 DC.B  PHCG,MATCH,MATCH,10,PHCGX,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+MIDBIT,PHOLAST+PHOBOFF+SONORBIT

* GX <== BACK /G/ ~SONOR
 DC.B  PHCG,MATCH,MATCH,10,PHCGX,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+BACKBIT
 DC.B     PHOLAST+PHOBOFF+SONORBIT

* KX <== MID /K/ ~SONOR
 DC.B  PHCK,MATCH,MATCH,10,PHCKX,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+MIDBIT,PHOLAST+PHOBOFF+SONORBIT

* KX <== BACK /K/ ~SONOR
 DC.B  PHCK,MATCH,MATCH,10,PHCKX,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+BACKBIT
 DC.B     PHOLAST+PHOBOFF+SONORBIT

* /H <== SP / /C /           	(WORD-INITIAL /C BECOMES /H)
 DC.B  PHCHC,MATCH,MATCH,10,PHCHH,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+WORDBRKBIT
 DC.B     NORULE

* KX <== / /C /     		(NON WORD-INITIAL /C BECOMES KX)
 DC.B  PHCHC,MATCH,MATCH,00,PHCK,MATCH,MATCH,NORULE,NORULE,NORULE



 DC.B    'COPYRIGHT 1990 MARK BARTON / JOSEPH KATZ'
 CNOP	0,2
@


1.4
log
@New version: 36.10
@
text
@d67 6
d168 12
@


1.3
log
@new version from Joe Katz
@
text
@@


1.2
log
@*** empty log message ***
@
text
@d4 2
a5 1
*************************************************************************
d7 4
a10 7
*   Copyright 1986, 1988 Joseph Katz/Mark Barton. All rights reserved .	*
*   No part of this program may be reproduced, transmitted,          	*
*   transcribed, stored in retrieval system, or translated into      	*
*   any language or computer language, in any form or by any         	*
*   means, electronic, mechanical, magnetic, optical, chemical,      	*
*   manual or otherwise, without the prior written permission of     	*
*   the authors.							*
d14 1
d31 1
a31 1
*  These rules modified July 30, 1988
d55 2
a56 5
* SH <== /S/ (SP) SH
 DC.B   PHCS,MATCH,PHCSH,10+64,PHCSH,MATCH,MATCH,NORULE,NORULE,NORULE 

* AXP <== PLOSA // SILENT
 DC.B   MATCH,MATCH,MATCH,10,MATCH,MATCH,PHCAXP
d61 2
a62 2
* AXP <== PLOS // SILENT
 DC.B   MATCH,MATCH,MATCH,10,MATCH,MATCH,PHCAXP
d75 12
d182 3
a184 3
 DC.B   MATCH,MATCH,MATCH,10,MATCH,MATCH,PHCQ
 DC.B   PHOLAST+PHOBON+PLOSABIT
 DC.B   NORULE,PHOLAST+PHOBON+STOPBIT
d233 2
a234 1
 DC.B    'COPYRIGHT 1984,1988 MARK BARTON / JOSEPH KATZ '
@


1.1
log
@Initial revision
@
text
@a0 24
	TTL	'$Header: phonrules.i,v 32.1 86/01/22 00:25:34 sam Exp $'
**********************************************************************
*                                                                    *
*   Copyright 1986, Commodore-Amiga Inc.   All rights reserved.      *
*   No part of this program may be reproduced, transmitted,          *
*   transcribed, stored in retrieval system, or translated into      *
*   any language or computer language, in any form or by any         *
*   means, electronic, mechanical, magnetic, optical, chemical,      *
*   manual or otherwise, without the prior written permission of     *
*   Commodore-Amiga Incorporated, 983 University Ave. Building #D,   *
*   Los Gatos, California, 95030                                     *
*                                                                    *
**********************************************************************
*
* $Header: phonrules.i,v 32.1 86/01/22 00:25:34 sam Exp $
*
* $Locker:  $
*
* $Log:	phonrules.i,v $
* Revision 32.1  86/01/22  00:25:34  sam
* placed under source control
* 
*
**********************************************************************
d2 1
d4 11
d31 7
a37 3



d52 1
d54 1
a54 1
*--------- Rule group 1, used immediately after PARSE
d56 2
a57 1
PHRULES1
d59 12
d74 2
a75 2
* Q <== T // UN
 DC.B  PHCT,MATCH,PHCUN,10,PHCT,MATCH,PHCQ,NORULE
a78 12
* NN <== Q /UN/
 DC.B  PHCUN,PHCQ,MATCH,10,PHCN,MATCH,PHCN,NORULE,NORULE,NORULE

* AX,L <== /UL/
 DC.B  PHCUL,MATCH,MATCH,32+10,PHCAX,MATCH,PHCL,NORULE,NORULE,NORULE

* AX,M <== /UM/
 DC.B  PHCUM,MATCH,MATCH,32+10,PHCAX,MATCH,PHCM,NORULE,NORULE,NORULE

* AX,N <== /UN/
 DC.B  PHCUN,MATCH,MATCH,32+10,PHCAX,MATCH,PHCN,NORULE,NORULE,NORULE

d88 4
a91 3
*DC.B   PHCL,MATCH,MATCH,11, PHCL,MATCH,MATCH,NORULE
*DC.B      PHOLAST+PHOBON+VOWELBIT
*DC.B      PHOBON+VOWELBIT,PHOLAST+PHOSTR
d93 1
a93 9
* OH <== /OW/ LIQUID
 DC.B   PHCOW,MATCH,MATCH,10,PHCOH,MATCH,MATCH,NORULE,NORULE
 DC.B      PHOLAST+PHOBON+LIQUIDBIT

* OW <== /OH/ ~LIQUID
 DC.B   PHCOH,MATCH,MATCH,10,PHCOW,MATCH,MATCH,NORULE,NORULE
 DC.B      PHOLAST+PHOBOFF+LIQUIDBIT
          
* LX <== VOWEL /L/ ~VOWEL
d96 1
a96 1
 DC.B      PHOLAST+PHOBOFF+VOWELBIT
d98 1
a98 1
* R <== VOWEL /R/ VOWEL & STRESS
d107 3
a109 3
* R <== RX // VOWEL & STRESS    (A DUMB RULE!!)
*DC.B   PHCRX,MATCH,MATCH,11,MATCH,MATCH,PHCRR,NORULE,NORULE
*DC.B      PHOBON+VOWELBIT,PHOLAST+PHOSTR
d111 1
a111 17
* B <== S /P/ SONOR
* DC.B   PHCP,PHCS,MATCH,10,PHCB,MATCH,MATCH,NORULE,NORULE
* DC.B       PHOLAST+PHOBON+SONORBIT

* D <== S /T/ SONOR
* DC.B   PHCT,PHCS,MATCH,32+10,PHCD,MATCH,MATCH,NORULE,NORULE
* DC.B       PHOLAST+PHOBON+SONORBIT

* J <== S /CH/ SONOR
* DC.B   PHCCH,PHCS,MATCH,32+10,PHCJ,MATCH,MATCH,NORULE,NORULE
* DC.B       PHOLAST+PHOBON+SONORBIT

* G <== S /K/ SONOR
* DC.B   PHCK,PHCS,MATCH,10,PHCGG,MATCH,MATCH,NORULE,NORULE
* DC.B       PHOLAST+PHOBON+SONORBIT

* J <== D /R/
d114 1
a114 1
* CH <== T /R/
d139 1
a139 1
* DX <== VOWEL /D/ (SP) VOWEL & ~STRESS
a144 14
* S <== /Z/ (SP) FRIC
 DC.B   PHCZ,MATCH,MATCH,64+10,PHCS,MATCH,MATCH,NORULE,NORULE
 DC.B      PHOLAST+PHOBON+FRICBIT

* CH' <== CH //
 DC.B   PHCCH,MATCH,MATCH,10,MATCH,MATCH,PHCCHP,NORULE,NORULE,NORULE

* J' <== J //
 DC.B   PHCJ,MATCH,MATCH,10,MATCH,MATCH,PHCJP,NORULE,NORULE,NORULE

* UX <== DENTAL /UW/
 DC.B   PHCUW,MATCH,MATCH,10,PHCUX,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+DENTALBIT,NORULE

d151 1
a151 1
* DC.B      PHOLAST+PHOBON+IGNOREBIT
d160 1
a160 1
* IY <== /IY/ SP VOWEL & STRESS  (NO GLOT STOP)
d170 2
a171 2
* Q <== T // L
 DC.B   PHCT,MATCH,PHCL,10,PHCT,MATCH,PHCQ,NORULE,NORULE,NORULE
a172 6
* Q <== P // M
*DC.B   PHCP,MATCH,PHCM,10,PHCP,MATCH,PHCQ,NORULE,NORULE,NORULE

* Q <== T // N
*DC.B   PHCT,MATCH,PHCN,10,PHCT,MATCH,PHCQ,NORULE,NORULE,NORULE

d181 2
a182 32
* /H,W <== /WH/
 DC.B   PHCWH,MATCH,MATCH,00,PHCHH,MATCH,PHCW,NORULE,NORULE,NORULE


 DC.B    'COPYRIGHT 1984, MARK BARTON / JOSEPH KATZ '
*--------- Rule group 2, used after PROSOD and F0

PHRULES2

* EY' <== EY //
 DC.B  PHCEY,MATCH,MATCH,10,MATCH,MATCH,PHCEYP,NORULE,NORULE,NORULE

* AY' <== AY //
 DC.B  PHCAY,MATCH,MATCH,10,MATCH,MATCH,PHCAYP,NORULE,NORULE,NORULE

* OY' <== OY //
 DC.B  PHCOY,MATCH,MATCH,10,MATCH,MATCH,PHCOYP,NORULE,NORULE,NORULE

* OW' <== OW //
 DC.B  PHCOW,MATCH,MATCH,10,MATCH,MATCH,PHCOWP,NORULE,NORULE,NORULE

* AW' <== AW //
 DC.B  PHCAW,MATCH,MATCH,10,MATCH,MATCH,PHCAWP,NORULE,NORULE,NORULE

* UW' <== UW //
 DC.B  PHCUW,MATCH,MATCH,10,MATCH,MATCH,PHCUWP,NORULE,NORULE,NORULE

* UW' <== UX //
 DC.B  PHCUX,MATCH,MATCH,10,MATCH,MATCH,PHCUWP,NORULE,NORULE,NORULE

* GX <== /G/ MID (CONT)
 DC.B  PHCGG,MATCH,MATCH,10+32,PHCGX,MATCH,MATCH,NORULE,NORULE
d185 3
a187 3
* GX <== /G/ BACK & ~ROUND (CONT)
 DC.B  PHCGG,MATCH,MATCH,11+32,PHCGX,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOBOFF+ROUNDBIT,PHOLAST+PHOBON+BACKBIT
d189 2
a190 6
* GH <== /G/ BACK & ROUND (CONT)
 DC.B  PHCGG,MATCH,MATCH,11+32,PHCGH,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOBON+BACKBIT,PHOLAST+PHOBON+ROUNDBIT

* KX <== /K/ MID (CONT)
 DC.B  PHCK,MATCH,MATCH,10+32,PHCKX,MATCH,MATCH,NORULE,NORULE
d193 3
a195 3
* KX <== /K/ BACK & ~ROUND (CONT)
 DC.B  PHCK,MATCH,MATCH,11+32,PHCKX,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOBOFF+ROUNDBIT,PHOLAST+PHOBON+BACKBIT
d197 2
a198 6
* KH <== /K/ BACK & ROUND (CONT)
 DC.B  PHCK,MATCH,MATCH,11+32,PHCKH,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOBON+BACKBIT,PHOLAST+PHOBON+ROUNDBIT

* GX <== MID /G/ ~SONOR (CONT)
 DC.B  PHCGG,MATCH,MATCH,10+32,PHCGX,MATCH,MATCH,NORULE
d201 3
a203 3
* GX <== BACK & ~ROUND /G/ ~SONOR (CONT)
 DC.B  PHCGG,MATCH,MATCH,11+32,PHCGX,MATCH,MATCH,NORULE
 DC.B     PHOBON+BACKBIT,PHOLAST+PHOBOFF+ROUNDBIT
d206 2
a207 7
* GH <== BACK & ROUND /G/ ~SONOR (CONT)
 DC.B  PHCGG,MATCH,MATCH,11+32,PHCGH,MATCH,MATCH,NORULE
 DC.B     PHOBON+BACKBIT,PHOLAST+PHOBON+ROUNDBIT
 DC.B     PHOLAST+PHOBOFF+SONORBIT

* KX <== MID /K/ ~SONOR (CONT)
 DC.B  PHCK,MATCH,MATCH,10+32,PHCKX,MATCH,MATCH,NORULE
d210 3
a212 3
* KX <== BACK & ~ROUND /K/ ~SONOR (CONT)
 DC.B  PHCK,MATCH,MATCH,11+32,PHCKX,MATCH,MATCH,NORULE
 DC.B     PHOBON+BACKBIT,PHOLAST+PHOBOFF+ROUNDBIT
d215 4
a218 4
* KH <== BACK & ROUND /K/ ~SONOR (CONT)
 DC.B  PHCK,MATCH,MATCH,11+32,PHCKH,MATCH,MATCH,NORULE
 DC.B     PHOBON+BACKBIT,PHOLAST+PHOBON+ROUNDBIT
 DC.B     PHOLAST+PHOBOFF+SONORBIT
d220 2
a221 4
* B' <== S P // (SP)  ~STOP & ~ASPIR & ~BOUND & ~LABIAL (CONT)
 DC.B  PHCP,PHCS,MATCH,13+32+64,MATCH,MATCH,PHCBP,NORULE,NORULE
 DC.B     PHOBOFF+STOPBIT,PHOBOFF+BOUNDBIT,PHOBOFF+ASPIRBIT
 DC.B     PHOLAST+PHOBOFF+LABIALBIT
a222 3
* P' <== P // (SP) ~LABIAL (CONT)
 DC.B  PHCP,MATCH,MATCH,10+32+64,MATCH,MATCH,PHCPP,NORULE,NORULE
 DC.B  PHOLAST+PHOBOFF+LABIALBIT
a223 4
* D' <== S T // (SP)  ~STOP & ~ASPIR & ~BOUND & ~DENTAL (CONT)
 DC.B  PHCT,PHCS,MATCH,13+32+64,MATCH,MATCH,PHCDP,NORULE,NORULE
 DC.B     PHOBOFF+STOPBIT,PHOBOFF+BOUNDBIT,PHOBOFF+ASPIRBIT
 DC.B     PHOLAST+PHOBOFF+DENTALBIT
d225 1
a225 92
* T' <== T // (SP)  ~STOP & ~ASPIR (CONT)
 DC.B  PHCT,MATCH,MATCH,11+32+64,MATCH,MATCH,PHCTP,NORULE,NORULE
 DC.B     PHOBOFF+STOPBIT,PHOLAST+PHOBOFF+ASPIRBIT

* G' <== S K //  (SP) ~STOP & ~ASPIR & ~BOUND & ~PALATE (CONT)
 DC.B  PHCK,PHCS,MATCH,13+32+64,MATCH,MATCH,PHCGP,NORULE,NORULE
 DC.B     PHOBOFF+STOPBIT,PHOBOFF+BOUNDBIT,PHOBOFF+ASPIRBIT
 DC.B     PHOLAST+PHOBOFF+PALATEBIT

* K' <== K // (SP) ~PALATE (CONT)
 DC.B  PHCK,MATCH,MATCH,10+32+64,MATCH,MATCH,PHCKP,NORULE,NORULE
 DC.B  PHOLAST+PHOBOFF+PALATEBIT

* KX' <== KX // (SP) ~PALATE (CONT)
 DC.B  PHCKX,MATCH,MATCH,10+32+64,MATCH,MATCH,PHCKXP,NORULE,NORULE
 DC.B  PHOLAST+PHOBOFF+PALATEBIT

* KH' <== KH // (SP) ~PALATE (CONT)
 DC.B  PHCKH,MATCH,MATCH,10+32+64,MATCH,MATCH,PHCKHP,NORULE,NORULE
 DC.B  PHOLAST+PHOBOFF+PALATEBIT

* P' <== P' // SONOR
 DC.B  PHCPP,MATCH,MATCH,10,MATCH,MATCH,PHCPPP,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+SONORBIT

* T' <== T' // SONOR
 DC.B  PHCTP,MATCH,MATCH,10,MATCH,MATCH,PHCTPP,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+SONORBIT

* K' <== K' // SONOR
 DC.B  PHCKP,MATCH,MATCH,10,MATCH,MATCH,PHCKPP,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+SONORBIT

* KX' <== KX' // SONOR
 DC.B  PHCKXP,MATCH,MATCH,10,MATCH,MATCH,PHCKXPP,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+SONORBIT

* KH' <== KH' // SONOR
 DC.B  PHCKHP,MATCH,MATCH,10,MATCH,MATCH,PHCKHPP,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+SONORBIT

* B' <== B // (SP) ~LABIAL (CONT)
 DC.B  PHCB,MATCH,MATCH,10+32+64,MATCH,MATCH,PHCBP,NORULE,NORULE
 DC.B  PHOLAST+PHOBOFF+LABIALBIT

* D' <== D // (SP) ~DENTAL (CONT)
 DC.B  PHCD,MATCH,MATCH,10+32+64,MATCH,MATCH,PHCDP,NORULE,NORULE
 DC.B  PHOLAST+PHOBOFF+DENTALBIT

* G' <== G // (SP) ~PALATE (CONT)
 DC.B  PHCGG,MATCH,MATCH,10+32+64,MATCH,MATCH,PHCGP,NORULE,NORULE
 DC.B  PHOLAST+PHOBOFF+PALATEBIT

* GX' <== GX // (SP) ~PALATE (CONT)
 DC.B  PHCGX,MATCH,MATCH,10+32+64,MATCH,MATCH,PHCGXP,NORULE,NORULE
 DC.B  PHOLAST+PHOBOFF+PALATEBIT

* GH' <== GH // (SP) ~PALATE (CONT)
 DC.B  PHCGH,MATCH,MATCH,10+32+64,MATCH,MATCH,PHCGHP,NORULE,NORULE
 DC.B  PHOLAST+PHOBOFF+PALATEBIT

* B' <== B' //
 DC.B  PHCBP,MATCH,MATCH,10,MATCH,MATCH,PHCBPP,NORULE,NORULE,NORULE

* D' <== D' //
 DC.B  PHCDP,MATCH,MATCH,10,MATCH,MATCH,PHCDPP,NORULE,NORULE,NORULE

* G' <== G' //
 DC.B  PHCGP,MATCH,MATCH,10,MATCH,MATCH,PHCGPP,NORULE,NORULE,NORULE

* GX' <== GX' //
 DC.B  PHCGXP,MATCH,MATCH,10,MATCH,MATCH,PHCGXPP,NORULE,NORULE,NORULE

* GH' <== GH' //
 DC.B  PHCGHP,MATCH,MATCH,10,MATCH,MATCH,PHCGHPP,NORULE,NORULE,NORULE

* /M <== / /H / MID
 DC.B  PHCHH,MATCH,MATCH,10,PHCHM,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+MIDBIT

* /B <== / /H / BACK & ~ROUND
 DC.B  PHCHH,MATCH,MATCH,11,PHCHB,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOBOFF+ROUNDBIT,PHOLAST+PHOBON+BACKBIT

* /R <== / /H / BACK & ROUND
 DC.B  PHCHH,MATCH,MATCH,11,PHCHR,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOBON+BACKBIT,PHOLAST+PHOBON+ROUNDBIT

* CH' <== CH' // SONOR & STR
 DC.B  PHCCHP,MATCH,MATCH,00,MATCH,MATCH,PHCCHPP,NORULE,NORULE
 DC.B       PHOBON+SONORBIT,PHOLAST+PHOSTR

@
