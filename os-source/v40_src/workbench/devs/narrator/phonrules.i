
	TTL	'PHONRULES.I'


*************************************************************************	
*                                                                    	*
*   Copyright 1990, Joseph Katz/Mark Barton.  All rights reserved.	*
*   No part of this program may be reproduced, transmitted, or stored   *
*   in any language or computer system, in any form, whatsoever,	*
*   without the prior written permission of the authors.   		*
*                                                                    	*
*************************************************************************


*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*                                                                            ;
*                       PHONOLOGICAL RULES                                   ;
*                                                                            ;
*         RULE TEMPLATE:  PC TO KEY ON, LEFT CONTEXT PC, RIGHT CONTEXT PC,   ;
*                         LENGTH/OPTIONS, REPLACEMEMT PC, LEFT INSERT PC,    ;
*                         RIGHT INSERTION PC, CENTER PHONEME FEATURES,       ;
*                         LEFT CONTEXT PHONEME FEATURES, RIGHT CONTEXT       ;
*                         PHONEME FEATURES                                   ;
*                                                                            ;
*         ALL QUANTITIES ARE BYTE LONG                                       ;
*                                                                            ;
*         NOTE:   A CHANGE TO ANY RULE REQUIRES A RECOMPILATION OF MAIN      ;
*                                                                            ;
*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*
*  These rules modified July 30, 1988, and again May 10, 1990 (A3000)
*
*  PHRULES2 and the second call to PHONOL removed due to the elimination
*  of `prime' phons.  Some rules from PHRULES2 have been incorporated into
*  PHRULES1.
*
*--------- Rule equates

PHOLAST    EQU          $80             ;LAST BIT INDIC. ON=LAST RULE IN SET
PHORBIT    EQU          $40             ;CHECK BIT IN FM. OFF=CHECK STRESS
PHORON     EQU          $20             ;BIT ON/STRESSED PHONEME
PHORSTR    EQU          4               ;BIT IN STRESS ARRAY TO CHECK
MATCH      EQU          $FF             ;UNIVERSAL PC MATCH
NORULE     EQU          PHOLAST+PHORBIT+31  ;BIT 31 NOT USED IN FM, ALWAYS OFF
PHOBON     EQU          PHORBIT+PHORON
PHOBOFF    EQU          PHORBIT
PHOSTR     EQU          PHORON+PHORSTR
PHOSTRN    EQU          PHORSTR


*--------- Phonological rules, used immediately after PARSE

PHRULES1:

* AXP <== PLOSA // (SP) SILENT
 DC.B   MATCH,MATCH,MATCH,10+64,MATCH,MATCH,PHCAXP
 DC.B	   PHOLAST+PHOBON+PLOSABIT
 DC.B	   NORULE
 DC.B	   PHOLAST+PHOBON+SILENTBIT

* AXP <== PLOS // (SP) SILENT
 DC.B   MATCH,MATCH,MATCH,10+64,MATCH,MATCH,PHCAXP
 DC.B	   PHOLAST+PHOBON+PLOSBIT
 DC.B	   NORULE
 DC.B	   PHOLAST+PHOBON+SILENTBIT

* AXP <== FRIC // (SP) SILENT
 DC.B   MATCH,MATCH,MATCH,11+64,MATCH,MATCH,PHCAXP
 DC.B	   PHOBOFF+VOICEDBIT,PHOLAST+PHOBON+FRICBIT 
 DC.B	   NORULE
 DC.B	   PHOLAST+PHOBON+SILENTBIT

* Q <== N /T/ UN
 DC.B  PHCT,PHCN,PHCUN,10,PHCQ,MATCH,MATCH,NORULE,NORULE,NORULE

* TQ <== VOWEL /T/ UN
 DC.B  PHCT,MATCH,PHCUN,10,PHCTQ,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+VOWELBIT
 DC.B     NORULE

* UN <== Q /UN/	 (These next 2 rules prevent expansion to AXN after glottals)
 DC.B	PHCUN,PHCQ,MATCH,10,PHCUN,MATCH,MATCH,NORULE,NORULE,NORULE

* UN <== TQ /UN/
 DC.B	PHCUN,PHCTQ,MATCH,10,PHCUN,MATCH,MATCH,NORULE,NORULE,NORULE

* AX,N <== /UN/
 DC.B  PHCUN,MATCH,MATCH,10,PHCAX,MATCH,PHCN,NORULE,NORULE,NORULE

* AX,M <== /UM/
 DC.B  PHCUM,MATCH,MATCH,10,PHCAX,MATCH,PHCM,NORULE,NORULE,NORULE

* IX,L <== /IL/
 DC.B  PHCIL,MATCH,MATCH,32+10,PHCIX,MATCH,PHCL,NORULE,NORULE,NORULE

* IX,M <== /IM/
 DC.B  PHCIM,MATCH,MATCH,32+10,PHCIX,MATCH,PHCM,NORULE,NORULE,NORULE

* IX,N <== /IN/
 DC.B  PHCIN,MATCH,MATCH,32+10,PHCIX,MATCH,PHCN,NORULE,NORULE,NORULE

* L <== VOWEL /L/ VOWEL & STRESS   (Prevents LX before stressed vowel)
 DC.B   PHCL,MATCH,MATCH,11,PHCL,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOBON+VOWELBIT,PHOLAST+PHOSTR

* LX <== VOWEL /L/
 DC.B   PHCL,MATCH,MATCH,10,PHCLX,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      NORULE

* R <== VOWEL /R/ VOWEL & STRESS   (Prevents RX before stressed vowel)
 DC.B   PHCRR,MATCH,MATCH,11,PHCRR,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOSTR,PHOLAST+PHOBON+VOWELBIT

* RX <== VOWEL /R/
 DC.B   PHCRR,MATCH,MATCH,10,PHCRX,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT,NORULE

* R <== ER // VOWEL & STRESS
 DC.B   PHCER,MATCH,MATCH,11,MATCH,MATCH,PHCRR,NORULE,NORULE
 DC.B      PHOBON+VOWELBIT,PHOLAST+PHOSTR

* J <== /D/ R
 DC.B   PHCD,MATCH,PHCRR,10+32,PHCJ,MATCH,MATCH,NORULE,NORULE,NORULE

* CH <== /T/ R
 DC.B   PHCT,MATCH,PHCRR,10+32,PHCCH,MATCH,MATCH,NORULE,NORULE,NORULE

* T <== LX /T/   (NO FLAP)
 DC.B   PHCT,PHCLX,MATCH,10,PHCT,MATCH,MATCH,NORULE,NORULE,NORULE

* D <== LX /D/   (NO FLAP)
 DC.B   PHCD,PHCLX,MATCH,10,PHCD,MATCH,MATCH,NORULE,NORULE,NORULE

* T <== VOWEL /T/ (SP) DIPH  (NO FLAP)
 DC.B   PHCT,MATCH,MATCH,64+10,MATCH,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOLAST+PHOBON+DIPHBIT

* D <== VOWEL /D/ (SP) DIPH  (NO FLAP)
*DC.B   PHCD,MATCH,MATCH,64+10,MATCH,MATCH,MATCH,NORULE
*DC.B      PHOLAST+PHOBON+VOWELBIT
*DC.B      PHOLAST+PHOBON+DIPHBIT

* DX <== VOWEL /T/ (SP) VOWEL & ~STRESS   (FLAP RULE)
 DC.B   PHCT,MATCH,MATCH,64+11,PHCDX,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOBON+VOWELBIT
 DC.B      PHOLAST+PHOSTRN

* DX <== VOWEL /D/ (SP) VOWEL & ~STRESS   (FLAP RULE)
 DC.B   PHCD,MATCH,MATCH,64+11,PHCDX,MATCH,MATCH,NORULE
 DC.B      PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOBON+VOWELBIT
 DC.B      PHOLAST+PHOSTRN

* Q <== T // SP SONOR & STRESS & ~VOWEL   (~VOWEL IS NEW)
 DC.B   PHCBL,PHCT,MATCH,12,PHCBL,PHCQ,MATCH,NORULE,NORULE
 DC.B      PHOBON+SONORBIT,PHOBOFF+VOWELBIT,PHOLAST+PHOSTR

* Q <== PLOSA // IGNORE ~VOWEL  (WORD FINAL PLOSA) (USED TO BE ~SONOR)
* DC.B   MATCH,MATCH,MATCH,10,MATCH,PHCQ,MATCH
* DC.B      PHOLAST+PHOBON+IGNOREBIT		;This rule needs looking at!
* DC.B      PHOLAST+PHOBON+PLOSABIT
* DC.B      PHOLAST+PHOBOFF+VOWELBIT

* Q <== PLOSA // IGNORE PLOSA	(Better word boundary cue between plosives)
 DC.B   MATCH,MATCH,MATCH,10,MATCH,PHCQ,MATCH
 DC.B      PHOLAST+PHOBON+IGNOREBIT
 DC.B      PHOLAST+PHOBON+PLOSABIT
 DC.B      PHOLAST+PHOBON+PLOSABIT

* Q <== FRIC // IGNORE DH  (Better word boundary cue between frics & DH)
 DC.B   MATCH,MATCH,PHCDH,10,MATCH,PHCQ,MATCH
 DC.B      PHOLAST+PHOBON+IGNOREBIT
 DC.B      PHOLAST+PHOBON+FRICBIT
 DC.B      NORULE

* Q <== IY // SP IY & STRESS   (EXCEPTION TO RULE BELOW)
 DC.B   MATCH,PHCIY,PHCIY,10,MATCH,PHCQ,MATCH
 DC.B      PHOLAST+PHOBON+IGNOREBIT,NORULE
 DC.B      PHOLAST+PHOSTR

* null <== IY // SP VOWEL & STRESS  (NO GLOT STOP)
 DC.B   MATCH,PHCIY,MATCH,11,MATCH,MATCH,MATCH
 DC.B      PHOLAST+PHOBON+IGNOREBIT,NORULE
 DC.B      PHOBON+VOWELBIT,PHOLAST+PHOSTR

* Q <== VOWEL // SP VOWEL & STRESS
 DC.B   MATCH,MATCH,MATCH,11,MATCH,PHCQ,MATCH
 DC.B      PHOLAST+PHOBON+IGNOREBIT,PHOLAST+PHOBON+VOWELBIT
 DC.B      PHOBON+VOWELBIT,PHOLAST+PHOSTR

* Q <== /T/ L
 DC.B   PHCT,MATCH,PHCL,10,PHCTQ,MATCH,MATCH,NORULE,NORULE,NORULE

* Q <== PLOSA // STOP
* DC.B   MATCH,MATCH,MATCH,10,MATCH,MATCH,PHCQ
* DC.B   PHOLAST+PHOBON+PLOSABIT
* DC.B   NORULE,PHOLAST+PHOBON+STOPBIT

* Q <== T // SP L
 DC.B   PHCBL,PHCT,PHCL,10,PHCBL,PHCQ,MATCH,NORULE,NORULE,NORULE

* GX <== /G/ MID
 DC.B  PHCG,MATCH,MATCH,10,PHCGX,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+MIDBIT

* GX <== /G/ BACK
 DC.B  PHCG,MATCH,MATCH,10,PHCGX,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+BACKBIT

* KX <== /K/ MID
 DC.B  PHCK,MATCH,MATCH,10,PHCKX,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+MIDBIT

* KX <== /K/ BACK
 DC.B  PHCK,MATCH,MATCH,10,PHCKX,MATCH,MATCH,NORULE,NORULE
 DC.B     PHOLAST+PHOBON+BACKBIT

* GX <== MID /G/ ~SONOR
 DC.B  PHCG,MATCH,MATCH,10,PHCGX,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+MIDBIT,PHOLAST+PHOBOFF+SONORBIT

* GX <== BACK /G/ ~SONOR
 DC.B  PHCG,MATCH,MATCH,10,PHCGX,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+BACKBIT
 DC.B     PHOLAST+PHOBOFF+SONORBIT

* KX <== MID /K/ ~SONOR
 DC.B  PHCK,MATCH,MATCH,10,PHCKX,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+MIDBIT,PHOLAST+PHOBOFF+SONORBIT

* KX <== BACK /K/ ~SONOR
 DC.B  PHCK,MATCH,MATCH,10,PHCKX,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+BACKBIT
 DC.B     PHOLAST+PHOBOFF+SONORBIT

* /H <== SP / /C /           	(WORD-INITIAL /C BECOMES /H)
 DC.B  PHCHC,MATCH,MATCH,10,PHCHH,MATCH,MATCH,NORULE
 DC.B     PHOLAST+PHOBON+WORDBRKBIT
 DC.B     NORULE

* KX <== / /C /     		(NON WORD-INITIAL /C BECOMES KX)
 DC.B  PHCHC,MATCH,MATCH,00,PHCK,MATCH,MATCH,NORULE,NORULE,NORULE



 DC.B    'COPYRIGHT 1990 MARK BARTON / JOSEPH KATZ'
 CNOP	0,2
