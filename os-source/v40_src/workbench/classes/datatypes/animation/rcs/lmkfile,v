head     40.4;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


40.4
date     93.08.16.10.39.04;  author davidj;  state Exp;
branches ;
next     40.3;

40.3
date     93.05.03.15.00.28;  author davidj;  state Exp;
branches ;
next     40.2;

40.2
date     93.04.12.10.02.14;  author davidj;  state Exp;
branches ;
next     40.1;

40.1
date     93.03.18.15.49.28;  author davidj;  state Exp;
branches ;
next     40.0;

40.0
date     93.03.12.15.45.35;  author davidj;  state Exp;
branches ;
next     ;


desc
@initial RCS
@


40.4
log
@*** empty log message ***
@
text
@
MODNAME	          = animation
VERSION		  = 40

TEMP		  = RAM:Temp
LOCAL		  = W:classes/datatypes/$(MODNAME)
REMOTE		  = V$(VERSION):src/workbench/classes/datatypes/$(MODNAME)

LD_FILE	          = $(MODNAME).ld
LD_STRIP          = $(MODNAME).ld.strip

C_COMPILER        = LC
C_COMPILER_OPTS   = -b0 -ms -v -me -rr -cfistqmcu -d1
C_COMPILER        = SC
C_COMPILER_OPTS   = DATA=FARONLY PARM=REGISTERS UCHAR CONSTLIB \
		    STREQ STRMER DEBUG=L \
		    MEMSIZE=HUGE NOSTKCHK NOICONS NOVERSION NOMINC \
		    OPT OPTPEEP OPTINLOCAL OPTTIME OPTDEP=3 OPTRDEP=3

ASSEMBLER         = hx68 FROM
ASSEMBLER_OPTS    = QUIET ADDSYM DEBUG INCDIR INCLUDE: TO

LINKER            = SLINK
LINKER_OPTS	  = ADDSYM SC SD MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16
LINKER_OPTS_STRIP = ND

C_SOURCES	  = classbase.c dispatch.c loadproc.c dispproc.c putilbm.c
ASM_SOURCES	  = classinit.asm remap.asm copybitmap.asm endcode.asm

OBJECTS		  = classinit.o classbase.o dispatch.o loadproc.o dispproc.o putilbm.o \
		    remap.o copybitmap.o endcode.o

STARTUP		  =
LIBS		  = LIB:debug.lib LIB:amiga.lib LIB:lc.lib
LIBS		  = CBMLIB:debug.lib LIB:amiga.lib LIB:sc.lib


##############################################################################
# Build the stripped load file...
#
$(LD_STRIP):	$(LD_FILE)
		$(LINKER) FROM $(LD_FILE) TO $(LD_STRIP) $(LINKER_OPTS_STRIP)

##############################################################################
# Build the load file...
#
$(LD_FILE):	$(OBJECTS) $(LIBS)

		$(LINKER) <with <
FROM $(STARTUP) $(OBJECTS) TO $(LD_FILE) LIB $(LIBS) $(LINKER_OPTS)
<


##############################################################################
# Default rules...
#
.c.o:
	$(C_COMPILER) $(C_COMPILER_OPTS) $*.c

.asm.o:
	$(ASSEMBLER) $*.asm $(ASSEMBLER_OPTS) $*.o


##############################################################################
# All dependencies...
#
classinit.o:	classinit.asm $(MODNAME)_rev.rev classbase.i
classbase.o:	classbase.c classbase.h classdata.h
dispatch.o:	dispatch.c classdata.h
loadproc.o:	loadproc.c classdata.h
dispproc.o:	dispproc.c classdata.h

##############################################################################
# Make protos
#
protos:
	mkproto $(C_SOURCES) to class_iprotos.h

##############################################################################
# Bump the version...
#
version:
	@@BumpRev $(VERSION) $(MODNAME)_rev


##############################################################################
# Delete all object files
#
clean:
	-@@Delete $(OBJECTS)
        -@@Delete $(LD_FILE) $(MODNAME).map \#?.BAK


##############################################################################
# Build autodoc
#
$(MODNAME)_dtc.doc:	classbase.c
	@@Autodoc >$(MODNAME)_dtc.doc classbase.c



##############################################################################
# Release the current build to the server...
#
internal:
	-Delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc|class|datatype))|lmkfile)
	-protect ((\#?.(c|h|asm|i|ld|rev|doc))|lmkfile|$(LD_STRIP)) +r quiet
	-copy \#?.(strip|ld|doc|datatype) \#?_rev.\#? $(REMOTE)
	-copy $(MODNAME)_dtc.doc V$(VERSION):doc
	-copy $(MODNAME)class.h V$(VERSION):include/datatypes
	-copy $(MODNAME)class.h include:datatypes
	-copy $(MODNAME)class.i V$(VERSION):include/datatypes
	-copy $(MODNAME)class.i include:datatypes

##############################################################################
# Install the current build locally
#
install:
	-copy $(LD_STRIP) sys:classes/datatypes/$(MODNAME).datatype
	-copy $(MODNAME)class.h include:datatypes
	-copy $(MODNAME)class.i include:datatypes
	-flushlibs

headers:
	-copy $(MODNAME)class.h include:datatypes
	-copy $(MODNAME)class.i include:datatypes

##############################################################################
# Create the Autodoc and send it to the server.
#
doc:
	@@Autodoc >$(MODNAME)_dtc.doc classbase.c
	@@copy $(MODNAME)_dtc.doc V$(VERSION):doc
@


40.3
log
@changed revision
@
text
@d28 1
a28 1
ASM_SOURCES	  = classinit.asm remap.asm endcode.asm
d30 2
a31 1
OBJECTS		  = classinit.o classbase.o dispatch.o loadproc.o dispproc.o putilbm.o remap.o endcode.o
@


40.2
log
@*** empty log message ***
@
text
@d6 2
a7 2
LOCAL		  = W:classes/datatypes/animation
REMOTE		  = V$(VERSION):src/workbench/classes/datatypes/animation
d89 2
a90 2
	-Delete $(OBJECTS)
        -Delete $(LD_FILE) $(MODNAME).map \#?.BAK
d96 2
a97 2
$(MODNAME).doc:	autodocs.asm
	@@Autodoc >$(MODNAME).doc autodocs.asm
d108 5
a112 4
	-copy animationclass.h V$(VERSION):include/datatypes
	-copy animationclass.h include:datatypes
	-copy animationclass.i V$(VERSION):include/datatypes
	-copy animationclass.i include:datatypes
d119 2
a120 2
	-copy animationclass.h include:datatypes
	-copy animationclass.i include:datatypes
d124 2
a125 2
	-copy animationclass.h include:datatypes
	-copy animationclass.i include:datatypes
d131 2
a132 2
	@@Autodoc >$(MODNAME).datatype.doc classbase.c
	@@copy $(MODNAME).datatype.doc V$(VERSION):doc
@


40.1
log
@changed V39 to V40
@
text
@d14 5
d23 1
a23 1
LINKER            = blink
d27 1
a27 1
C_SOURCES	  = classbase.c dispatch.c loadproc.c dispproc.c
d30 1
a30 1
OBJECTS		  = classinit.o classbase.o dispatch.o loadproc.o dispproc.o remap.o endcode.o
d34 1
@


40.0
log
@initial RCS
@
text
@d3 1
a3 1
VERSION		  = 39
d102 1
a102 1
	-copy animationclass.h V39:include/datatypes
d104 1
a104 1
	-copy animationclass.i V39:include/datatypes
@
