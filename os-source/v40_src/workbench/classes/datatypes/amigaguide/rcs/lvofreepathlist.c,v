head     39.1;
branch   ;
access   ;
symbols  ;
locks    davidj:39.1; strict;
comment  @ * @;


39.1
date     93.04.23.09.38.12;  author davidj;  state Exp;
branches ;
next     39.0;

39.0
date     92.06.02.08.35.13;  author davidj;  state Exp;
branches ;
next     ;


desc
@initial RCS
@


39.1
log
@checks for null.
@
text
@/* FreePathListLVO.c
 *
 */

#include "amigaguidebase.h"

VOID ASM LVOFreePathList (REG (a6) struct AGLib *ag, REG (a0) BPTR p)
{
    BPTR next = p;
    BPTR lock;

    /* Check for NULL */
    if (p == NULL)
	return;

    /* funky bptr-list following! */
    while (p = (BPTR) BADDR (next))
    {
	/* Get the next path node */
	next = ((LONG *) p)[0];

	/* Convert to a lock */
	lock = (BPTR) (((LONG *) p)[1]);

	/* Unlock the lock */
	UnLock (lock);

	/* Free the path entry */
	FreeVec ((APTR) p);
    }
}
@


39.0
log
@initial RCS
@
text
@d11 4
@
