head     40.1;
branch   ;
access   ;
symbols  ;
locks    davidj:40.1; strict;
comment  @ * @;


40.1
date     93.05.25.12.00.31;  author davidj;  state Exp;
branches ;
next     40.0;

40.0
date     93.03.12.16.03.06;  author davidj;  state Exp;
branches ;
next     39.0;

39.0
date     92.06.02.08.44.39;  author davidj;  state Exp;
branches ;
next     ;


desc
@initial RCS
@


40.1
log
@auto.gen.
@
text
@
/* classbase.c */
Class *ASM ObtainAnimEngine ( REG (a6 )struct ClassBase *cb );
struct Library *ASM LibInit ( REG (d0 )struct ClassBase *cb , REG (a0 )BPTR seglist , REG (a6 )struct Library *sysbase );
LONG ASM LibOpen ( REG (a6 )struct ClassBase *cb );
LONG ASM LibClose ( REG (a6 )struct ClassBase *cb );
LONG ASM LibExpunge ( REG (a6 )struct ClassBase *cb );

/* dispatch.c */
Class *initClass ( struct ClassBase *cb );

/* animr.c */
LONG LoadDelta ( struct ClassBase *cb , struct IFFHandle *iff , WORD *ytable , struct BitMap *bm , struct AnimHeader *ah , LONG *deltalong );
WORD *AllocYTable ( struct ClassBase *cb , struct BitMap *bm );
VOID FreeYTable ( struct ClassBase *cb , WORD *ytable );
@


40.0
log
@initial RCS
@
text
@a9 4
ULONG setdtattrs ( struct ClassBase *cb , Object *o , ULONG data , ...);
ULONG getdtattrs ( struct ClassBase *cb , Object *o , ULONG data , ...);
void freebitmap ( struct ClassBase *cb , struct BitMap *bm );
struct BitMap *allocbitmap ( struct ClassBase *cb , ULONG w , ULONG h , ULONG d , ULONG flags , struct BitMap *fbm );
a10 6
BOOL unpackrow ( BYTE **pSource , BYTE **pDest , WORD srcBytes0 , WORD dstBytes0 );
LONG GetBody ( struct ClassBase *cb , struct IFFHandle *iff , struct BitMapHeader *bmhd , struct BitMap *bitmap );
ULONG InitializeData ( struct ClassBase *cb , Class *cl , Object *o , struct TagItem *attrs );
struct BitMap *loadframe ( struct ClassBase *cb , Class *cl , Object *o , struct adtFrame *msg );
ULONG unloadframe ( struct ClassBase *cb , Class *cl , Object *o , struct adtFrame *msg );
ULONG ASM Dispatch ( REG (a0 )Class *cl , REG (a2 )Object *o , REG (a1 )Msg msg );
d13 1
a13 1
LONG LoadDelta ( struct ClassBase *cb , struct IFFHandle *iff , WORD *ytable , struct BitMap *bm , struct AnimHeader *ah , LONG *dltabuffer );
@


39.0
log
@initial RCS
@
text
@a1 5
/* getbody.c */
LONG ASM GetBody ( REG (a6 )struct ClassBase *cb , REG (a0 )struct IFFHandle *iff , REG (a1 )struct BitMapHeader *bmhd , REG (a2 )struct BitMap *bitmap );
BOOL unpackrow ( BYTE **pSource , BYTE **pDest , WORD srcBytes0 , WORD dstBytes0 );
LONG loadbody2 ( struct ClassBase *cb , struct IFFHandle *iff , struct BitMap *bitmap , BYTE *mask , struct BitMapHeader *bmhd , BYTE *buffer , ULONG bufsize );

d3 1
a3 1
Class *ASM ObtainCBEngine ( REG (a6 )struct ClassBase *cb );
a8 5
/* getilbm.c */
BOOL ASM GetILBM ( REG (a6 )struct ClassBase *cb , REG (a0 )Class *cl , REG (a2 )Object *o , REG (a1 )struct TagItem *attrs );
BOOL ASM GetBMHD ( REG (a6 )struct ClassBase *cb , REG (a0 )struct IFFHandle *iff , REG (a1 )struct BitMapHeader *bmhd );
WORD ASM GetRanges ( REG (a6 )struct ClassBase *cb , REG (a0 )struct IFFHandle *iff );

d10 4
d15 5
a19 1
void freeExtraInfo ( struct ClassBase *cb , struct localData *lod );
a20 23
BOOL initializeAG ( struct ClassBase *cb , Class *cl , Object *o , struct opSet *msg );
ULONG getAGAttr ( struct ClassBase *cb , Class *cl , Object *o , struct opGet *msg );
ULONG setAGAttrsAttrs ( struct ClassBase *cb , Class *cl , Object *o , struct opSet *msg );
ULONG frameMethod ( struct ClassBase *cb , Class *cl , Object *o , struct dtFrameBox *msg );
ULONG renderMethod ( struct ClassBase *cb , Class *cl , Object *o , struct gpRender *msg );
ULONG printMethod ( struct ClassBase *cb , Class *cl , Object *o , struct dtPrint *msg );

/* misc.c */
APTR newdtobject ( struct ClassBase *cb , STRPTR name , Tag tag1 , ...);
ULONG dogadgetmethod ( struct ClassBase *cb , struct Gadget *g , struct Window *w , struct Requester *r , ULONG data , ...);
ULONG notifyAttrChanges ( struct ClassBase *cb , Object *o , struct Window *w , struct Requester *r , ULONG flags , ULONG tag1 , ...);
struct Process *createnewproc ( struct ClassBase *cb , Tag tag1 , ...);
ULONG setdtattrs ( struct ClassBase *cb , Object *o , Tag tag1 , ...);
ULONG setattrs ( struct ClassBase *cb , Object *o , Tag tag1 , ...);
ULONG getdtattrs ( struct ClassBase *cb , Object *o , Tag tag1 , ...);
Object *newobject ( struct ClassBase *cb , Class *cl , UBYTE *name , Tag tag1 , ...);
ULONG sam ( struct ClassBase *cb , struct MsgPort *mp , Msg msg , ULONG size );

/* process.c */
void ObjectHandler ( void );
Object *gotoMethod ( struct ClassBase *cb , Class *cl , Object *o , STRPTR name );
ULONG triggerMethod ( struct ClassBase *cb , Class *cl , Object *o , struct dtTrigger *msg );
ULONG layoutMethod ( struct ClassBase *cb , Class *cl , Object *o , LONG Initial );
d23 2
a24 2
LONG LoadDelta ( struct ClassBase *cb , struct IFFHandle *iff , WORD *ytable , struct BitMap *bm , struct AnimHeader *anhd , LONG *dltabuffer );
WORD *AllocYTable ( struct ClassBase *cb , WORD width , register WORD height );
@
