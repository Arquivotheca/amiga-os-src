head     36.3;
branch   ;
access   ;
symbols  V36_9:36.3 V36_6:36.3 V36_5:36.3 V36_1:36.1;
locks    ; strict;
comment  @*   @;


36.3
date     90.04.09.15.58.44;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     90.04.09.14.46.17;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     89.05.24.10.44.04;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     89.05.24.10.11.09;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.3
log
@resident tag version
@
text
@**
**	$Id$
**
**      translator library code
**
**      (C) Copyright 1986,1990 Commodore-Amiga, Inc.
**          All Rights Reserved
**
	SECTION	translator

**	Includes

 	INCLUDE "exec/types.i"
	INCLUDE "exec/nodes.i"
	INCLUDE "exec/lists.i"
	INCLUDE "exec/libraries.i"
	INCLUDE "exec/initializers.i"


**	Exports

	XDEF	TLInitTable


**	Imports

XLVO	MACRO
	XREF	_LVO\1
	ENDM

	XLVO	FreeMem

	XREF	TLName
	XREF	VERSION
	XREF	REVISION
	XREF	TLTranslate

	
**	Locals

CALLLVO	MACRO	* &sysroutine
		jsr	_LVO\1(a6)
	ENDM

*		;------ Translator library node
 STRUCTURE TR,LIB_SIZE
    APTR    tl_ExecBase		; SysBase
    APTR    tl_SegList		; pointer to segment list
    LABEL   TranslatorLibrary_SIZEOF



;------- translator.library/Init -------------------------------------
tlFuncInit:
		dc.w	-1
		dc.w	TLOpen-tlFuncInit
		dc.w	TLClose-tlFuncInit
		dc.w	TLExpunge-tlFuncInit
		dc.w	TLExtFunc-tlFuncInit
		dc.w	TLTranslate+(*-tlFuncInit)
		dc.w	-1

tlStructInit:
	    INITBYTE	LN_TYPE,NT_LIBRARY			; 1.4 redundant
	    INITLONG	LN_NAME,TLName				; 1.4 redundant
	    INITWORD	LIB_REVISION,REVISION
	    INITWORD	LIB_VERSION,VERSION			; 1.4 redundant
	    INITBYTE	LIB_FLAGS,LIBF_SUMUSED!LIBF_CHANGED	; 1.4 redundant
		dc.w		0

TLInitTable:
		dc.l	TranslatorLibrary_SIZEOF
		dc.l	tlFuncInit
		dc.l	tlStructInit
		dc.l	tlInit


;
;   d0	library base
;
tlInit:
		move.l	d0,a1
		move.l	a0,tl_SegList(a1)
		move.l	a6,tl_ExecBase(a1)
		rts


;------ translator.library/OpenLibrary -------------------------------
TLOpen:		
*		;-- Increment open count
		addq.w	#1,LIB_OPENCNT(a6)

		;-- Clear the delayed expnge bit
		bclr	#LIBB_DELEXP,LIB_FLAGS(a6)
		move.l	a6,d0
		rts


;------ translator.library/CloseLibrary ------------------------------
TLClose:
		subq.w  #1,LIB_OPENCNT(a6)
		bne.s	closeDone
		btst	#LIBB_DELEXP,LIB_FLAGS(a6)
		beq.s	closeDone
		jmp	LIB_EXPUNGE(a6)

closeDone:
		moveq	#0,d0
		rts


;------	translator.library/Expunge ------------------------------------
TLExpunge:
		bset	#LIBB_DELEXP,LIB_FLAGS(a6)
		tst.w	LIB_OPENCNT(a6)
		bne.s	closeDone

		move.l	a6,a1
		REMOVE

		move.l	tl_SegList(a6),-(a7)
		move.l	a6,a1
		move.l	tl_ExecBase(a6),a6
		moveq	#0,d0
		move.w	LIB_NEGSIZE(a1),d0
		suba.w	d0,a1
		add.w	LIB_POSSIZE(a1,d0.w),d0
		CALLLVO	FreeMem
		move.l	(a7)+,d0
		rts


;------	translator.library/<reserved> --------------------------------
TLExtFunc:
		moveq	#0,d0		; historically returns 0
		rts

	END
@


36.2
log
@modify to more familiar form
@
text
@d1 9
a9 35
	TTL	'$Header: library.asm,v 36.1 89/05/24 10:44:04 kodiak Exp $'
**********************************************************************
*                                                                    *
*   Copyright 1986, Commodore-Amiga Inc.   All rights reserved.      *
*   No part of this program may be reproduced, transmitted,          *
*   transcribed, stored in retrieval system, or translated into      *
*   any language or computer language, in any form or by any         *
*   means, electronic, mechanical, magnetic, optical, chemical,      *
*   manual or otherwise, without the prior written permission of     *
*   Commodore-Amiga Incorporated, 983 University Ave. Building #D,   *
*   Los Gatos, California, 95030                                     *
*                                                                    *
**********************************************************************
*
* $Header: library.asm,v 36.1 89/05/24 10:44:04 kodiak Exp $
*
* $Locker: kodiak $
*
* $Log:	library.asm,v $
*   Revision 36.1  89/05/24  10:44:04  kodiak
*   remove unreferenced includes, equates
*   
*   Revision 36.0  89/05/24  10:11:09  kodiak
*   *** empty log message ***
*   
* Revision 32.2  86/06/24  13:14:33  sam
* autodoc updates
* 
* Revision 32.1  86/01/22  01:16:59  sam
* placed under source control
* 
*
**********************************************************************
               SECTION reader
_AbsExecBase	EQU	4
d11 1
d13 5
a17 1
* ****** Included Files **********************************************
d20 1
a20 12
 	INCLUDE 'exec/types.i'
	INCLUDE 'exec/nodes.i'
	INCLUDE 'exec/lists.i'
	INCLUDE 'exec/strings.i'
	INCLUDE 'exec/initializers.i'
	INCLUDE 'exec/memory.i'
	INCLUDE 'exec/ports.i'
	INCLUDE 'exec/libraries.i'
	INCLUDE 'exec/resident.i'
	INCLUDE 'exec/execbase.i'
	INCLUDE 'exec/ables.i'
	INCLUDE 'exec/errors.i'
d22 1
a23 1
        INCLUDE	'translator_rev.i'
d25 1
a26 4

* ***** Imported Functions *******************************************


a31 2
	XLVO	MakeLibrary
	XLVO	AddLibrary
d33 4
a36 1
	XREF	Reader
d39 1
d41 3
a44 13
* ***** Exported Functions *******************************************

*	XDEF	TRInit



* ***** Local Definitions **********************************************


CALLSYS		MACRO	* &sysroutine
		JSR	_LVO\1(A6)
		ENDM

d47 3
a49 2
    APTR    TR_SEGLIST		;Pointer to segment list
    LABEL   TR_SIZE
d53 9
a61 33
* ****** Library/Translator/Initialize **********************************
*
*   NAME
*	Initialize -- initialize the Translator library
*
*   SYNOPSIS
*	Error = Initialize(), SysLib
*	D0		  	A6
*
*   FUNCTION
*	Initializes the Translator library from nothing.  Called by
*	the first call to OpenLibrary.  The TRInit entry point must
*	be the first code section of the first code hunk in the .ld
*	file.  This is necessary because we don't use the romtag
*	mechanism.
*
*   INPUTS
*
*
*   RESULTS
*
*
*   SEE ALSO
*
*
* *********************************************************************
*
*
*   REGISTER USAGE
*
*   IMPLEMENTATION
*
*
d63 7
d71 5
a76 4
TRInit:
		MOVEM.L A2/A6/D3,-(SP)
		MOVE.L	A0,D3			;Cache the segment list ptr
		MOVE.L	_AbsExecBase,A6
d78 8
a86 8
*		;------ Call the library initialization routine
		LEA	libFuncInit(PC),A0
		LEA	libStructInit(PC),A1
		SUB.L   A2,A2
		MOVE.L	#TR_SIZE,D0
		CALLSYS MakeLibrary
		TST.L	D0
		BEQ	Init_MakeBad
d88 4
d93 4
a96 4
Init_Success:
*		;------ Managed to get this far, everything else should be simple
		MOVE.L	D0,A2			;Copy device pointer
		MOVE.L	D3,TR_SEGLIST(A2)	;Store segment list pointer
d99 7
a105 3
*		;------ Add the library
		MOVE.L	A2,A1
		CALLSYS AddLibrary
d107 3
a110 2
*		;------ Everything worked, return NULL
		MOVEQ   #-1,D0
d112 5
d118 2
a119 3
Init_End:
		MOVEM.L (SP)+,A2/A6/D3
		RTS
d121 10
a131 3
Init_MakeBad:
 		MOVEQ	#0,D0
		BRA.S	Init_End
d133 4
a136 1
		
d138 1
a138 247

******* translator.library/OpenLibrary *****************************************
*
*    NAME
*	OpenLibrary - Grants access to the translator library
*
*    SYNOPSIS
*	TranslatorBase = OpenLibrary( "translator.library", 0 );
*	D0		 	       A1		   D0	
*
*	extern LONG TranslatorBase;
*	STRPTR library_name;
*	WORD version_number;
*
*    FUNCTION
*	The open routine grants access to the translator library
*	and returns a pointer to the library node.  The name
*	"TranslatorBase" must be used and it must be declared
*	to be external and LONG.
*
*    INPUTS
*	library_name - "translator.library"
*	version_number      - 0
*	
*    RESULTS
*	TranslatorBase - a pointer to the base address of the translator
*			 library, which must be declared as extern LONG.
*
*    BUGS	
*
*    SEE ALSO
*	translator.library/CloseLibrary, exec/libraries.h
********************************************************************************
*
*
*   REGISTER USAGE
*
*
*   IMPLEMENTATION
*
*


TROpen:		
*		;------ Increment open count
		ADDQ.W	#1,LIB_OPENCNT(A6)

	
Open_End:
		BCLR	#LIBB_DELEXP,LIB_FLAGS(A6)	;Clear the delayed expnge bit
		MOVE.L	A6,D0
		RTS





******* translator.library/CloseLibrary ****************************************
*
*    NAME
*	CloseLibrary - Closes the translator library
*
*    SYNOPSIS
*	CloseLibrary(TranslatorBase)
*		     A1
*
*	extern LONG TranslatorBase;
*
*    FUNCTION
*	The CloseLibrary routine is called when the user no longer
*	needs the translator library.  CloseLibrary reduces the
*	open count, and if zero and the expunge bit is on, expunges
*	the library.
*
*    INPUTS
*	TranslatorBase - The library base address returned from OpenLibrary.
*
*    RESULTS
*	The opencount of the translator library is decremented, and if it 
*	becomes zero, the library may be expunged from memory.
*
*    BUGS
*
*    SEE ALSO
*	translator.library/OpenLibrary, exec/libraries.h
********************************************************************************
*
*
*   REGISTER USAGE
*
*
*   IMPLEMENTAION
*
*


TRClose:

*	;------	Reduce device open count.  If last close, jump to Expunge
	MOVEQ	#0,D0			;!!!sam 8/30/85!!!
	SUBQ.W  #1,LIB_OPENCNT(A6)
	BNE.S	Close_NotLast
	BTST	#LIBB_DELEXP,LIB_FLAGS(A6)
	BEQ.S	Close_NotLast
	BSR	TRExpunge		;Returns segment list ptr in D0

Close_NotLast:
	RTS





* ****** Library/Translator/Expunge ***********************************
*
*   NAME
*	Expunge
*
*   SYNOPSIS
*	Expunge(devNode)
*		   A6
*
*   FUNCTION
*	Releases all memory and removes the library from the system
*	list.
*
*   INPUTS
*
*
*   RESULTS
*
*
*   SEE ALSO
*
*
* *********************************************************************
*
*
*   REGISTER USAGE
*
*
*   IMPLEMENTAION
*
*

TRExpunge:
	MOVEM.L	A3/A6/D3,-(SP)
	MOVE.L	A6,A3
	MOVE.L	_AbsExecBase,A6


*	;------ Last close?  If so, release fixed buffers
	TST.W	LIB_OPENCNT(A3)
	BEQ.S	ExDev
	BSET	#LIBB_DELEXP,LIB_FLAGS(A3)
	MOVEQ	#0,D0
	BRA.S	ExReturn


ExDev:
*       ;------ Remove the library
        MOVE.L  A3,A1
        REMOVE


*	;------	Remove library node
	MOVE.L	TR_SEGLIST(A3),D3
	MOVE.L	A3,A1
	MOVEQ	#0,D0			*!!!sam 8/31/85!!!
	MOVEQ	#0,D1			*!!!sam 8/31/85!!!
	MOVE.W	LIB_NEGSIZE(A3),D0	*!!!sam 8/31/85!!!
	SUB.L	D0,A1			*!!!sam 8/31/85!!!
	MOVE.W	LIB_POSSIZE(A3),D1	*!!!sam 8/31/85!!!
	ADD.L	D1,D0			*!!!sam 8/31/85!!!
*	MOVE.L	#TR_SIZE,D0		*!!!sam 8/31/85!!!
	CALLSYS	FreeMem
	MOVE.L	D3,D0


ExReturn:	
	MOVEM.L	(SP)+,A3/A6/D3
	RTS




* ****** Library/Translator/Null ****************************************
*
*   NAME
*	Null -- provide a dummy entry point
*
*   SYNOPSIS
*	Zero = Null(), DevNode
*	D0	       A6
*
*   FUNCTION
*	Be a constant source of zero's for unimplemented routines.
*
*   RESULTS
*	Zero -- Always return 0 in D0
*
*
*   SEE ALSO
*	SLNullFunc
*
*
* ********************************************************************

TRExtFunc:
		MOVEQ	#0,D0
		RTS





libStructInit:

*		;------ Initialize the device
		INITBYTE	LN_TYPE,NT_LIBRARY
		INITLONG	LN_NAME,TranslatorName
		INITWORD	LIB_REVISION,REVISION
		INITWORD	LIB_VERSION,VERSION
		INITBYTE	LIB_FLAGS,LIBF_SUMUSED!LIBF_CHANGED
		INITWORD	LIB_OPENCNT,0
		
		DC.W		0


*		;------ Device function table

libFuncInit:
		DC.L	TROpen		; - 6
		DC.L	TRClose		; - C
		DC.L	TRExpunge	; -12 
		DC.L	TRExtFunc	; -18
		DC.L	Reader		; -1E
		DC.L	-1		; END OF TABLE MARKER

TranslatorName:
		dc.b	'translator.library',0
		ds.w	0

		END



@


36.1
log
@remove unreferenced includes, equates
@
text
@d1 1
a1 1
	TTL	'$Header: library.asm,v 36.0 89/05/24 10:11:09 kodiak Exp $'
d15 1
a15 1
* $Header: library.asm,v 36.0 89/05/24 10:11:09 kodiak Exp $
d20 3
a40 1
	INCLUDE 'assembly.i'
a46 1
	INCLUDE 'exec/interrupts.i'
a48 3
	INCLUDE 'exec/devices.i'
	INCLUDE 'exec/io.i'
	INCLUDE 'exec/tasks.i'
a55 1
	INCLUDE 'private.i'
d62 3
a64 3
	EXTERN_SYS FreeMem
	EXTERN_SYS MakeLibrary
	EXTERN_SYS AddLibrary
d66 3
a69 1
 	XREF	TranslatorName
d84 3
d88 4
d93 2
a149 1
		MOVE.L  A6,TR_SYSLIB(A2)	;Store pointer to system library
a216 9
                TST.W   LIB_OPENCNT(A6)		        ;Driver already open?
		BNE.S   Is_Open				;Yes


*               ;------ First time driver has been opened.
		NOP


Is_Open:
d222 1
a222 1
		BCLR	#UNITB_EXPUNGE,LIB_FLAGS(A6)	;Clear the delayed expnge bit
d275 1
a275 1
	BTST	#UNITB_EXPUNGE,LIB_FLAGS(A6)
a276 1
	MOVE.L	A1,-(SP)
a277 1
	MOVE.L	(SP)+,A1
d327 1
a327 1
	BSET	#UNITB_EXPUNGE,LIB_FLAGS(A3)
a381 1
TRNull:
a388 1
		XDEF libStructInit
d399 1
a399 1
		DC.L		0
a403 1
		XDEF libFuncInit
d412 3
a414 3
libFuncEnd:

libFuncSize	EQU	(libFuncEnd-libFuncInit)
@


36.0
log
@*** empty log message ***
@
text
@d1 1
a1 1
	TTL	'$Header: library.asm,v 32.2 86/06/24 13:14:33 sam Exp $'
d15 1
a15 1
* $Header: library.asm,v 32.2 86/06/24 13:14:33 sam Exp $
d17 1
a17 1
* $Locker:  $
d20 3
a58 1
	INCLUDE	'translator.i'
a61 5
* ***** Imported Globals *********************************************

*	XREF	_AbsExecBase


a64 6
	EXTERN_SYS AddTask
	EXTERN_SYS RemTask
	EXTERN_SYS AllocMem
	EXTERN_SYS AllocSignal
	EXTERN_SYS Disable
	EXTERN_SYS Enable
a65 1
	EXTERN_SYS FreeEntry
a67 5
	EXTERN_SYS PutFmt
	EXTERN_SYS Signal
	EXTERN_SYS Wait
	EXTERN_SYS RemLibrary
	EXTERN_SYS FindTask
d70 1
a70 3

	XREF	INITIAL
 	XREF	endMarker,TranslatorName,TranslatorIdStr
a78 4
*	XDEF	TRExpunge
*	XDEF	TROpen
*	XDEF	TRClose
*	XDEF	TRNull
@
