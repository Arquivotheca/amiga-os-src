head     38.3;
branch   ;
access   ;
symbols  ;
locks    vertex:38.3; strict;
comment  @ * @;


38.3
date     91.10.24.10.23.33;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     91.10.21.11.09.54;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     91.10.07.15.34.13;  author vertex;  state Exp;
branches ;
next     ;


desc
@Pool handling
@


38.3
log
@Clean up and speed up
@
text
@
#include "commoditiesbase.h"
#include "cxpools.h"
#include "pool.h"


/*****************************************************************************/


struct Message *GetEMsg(LONG size)
{
struct Message *msg;

    if (msg = AllocPoolMem(size))
    {
        msg->mn_ReplyPort = &CxBase->cx_EMsgReply;
        msg->mn_Length    = size;
    }

    return (msg);
}
@


38.2
log
@Removed commented out code
@
text
@d10 1
a10 1
struct Message *CreateEMsg(LONG size)
d14 1
a14 1
    if (msg = GetEMsg(size))
@


38.1
log
@Initial V38 RCS checkin
@
text
@a1 1

a9 13
/*
/*****************************************************************************/


struct Message *GetEMsg(LONG size)
{
    return (AllocPoolMem(EMsgPool,size));
}
*/

/*****************************************************************************/


a21 56


/*****************************************************************************/

/*
VOID FreeEMsg(APTR msg)
{
    FreePoolMem(EMsgPool,msg);
}


/*****************************************************************************/


struct InputEvent *GetIE(VOID)
{
    return (AllocPoolMem(IEPool,IEP_SIZE));
}


/*****************************************************************************/


struct CxMsg *GetCxMsg(LONG size)
{
    return (AllocPoolMem(CxMsgPool,size));
}


/*****************************************************************************/


VOID FreeCxMsg(APTR msg)
{
    FreePoolMem(CxMsgPool,msg);
}


/*****************************************************************************/


CxObj *GetCxObj(LONG size)
{
    return (AllocPoolMem(CxObjPool,size));
}


/*****************************************************************************/


VOID FreeCxObj(APTR obj)
{
    FreePoolMem(CxObjPool,obj);
}

*/
@
