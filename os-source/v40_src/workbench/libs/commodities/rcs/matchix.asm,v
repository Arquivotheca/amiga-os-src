head     38.4;
branch   ;
access   ;
symbols  ;
locks    vertex:38.4; strict;
comment  @* @;


38.4
date     91.11.24.17.22.41;  author vertex;  state Exp;
branches ;
next     38.3;

38.3
date     91.10.24.10.23.44;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     91.10.21.11.08.46;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     91.10.07.15.31.53;  author vertex;  state Exp;
branches ;
next     ;


desc
@Input expression pattern matching
@


38.4
log
@Added meaningful labels
Fixed bug causing rshift to be different from shift
@
text
@	OPTIMON

;---------------------------------------------------------------------------

	INCLUDE "devices/inputevent.i"
	INCLUDE "commodities.i"

;---------------------------------------------------------------------------

	XDEF	_MatchIXLVO

;---------------------------------------------------------------------------

;  BOOL MatchIXLVO(struct Inputevent *ie, struct InputXpression *ix);
;  D0              A0                     A1

_MatchIXLVO:
	move.l    d2,-(a7)
	move.b    ix_Class(a1),d0
	beq.s     Success

	cmp.b     ie_Class(a0),d0
	bne.s     Fail

	move.w    ix_Code(a1),d0
	move.w    ie_Code(a0),d1
	eor.w     d0,d1
	and.w     ix_CodeMask(a1),d1
	bne.s     Fail

	move.w    ie_Qualifier(a0),d0
	move.w    ix_QualSame(a1),d1
	beq.s     TestQualMask

TestShiftSyn:
	btst      #0,d1     ; are lshift and rshift the same?
	beq.s     TestCapsSyn
	move.w    d0,d2
	andi.w    #IXSYM_SHIFTMASK,d2
	beq.s     TestCapsSyn
	ori.w     #IXSYM_SHIFTMASK,d0

TestCapsSyn:
	btst      #1,d1     ; is caps the same as shift?
	beq.s     TestAltSyn
	move.w    d0,d2
	andi.w    #IXSYM_CAPSMASK,d2
	beq.s     TestAltSyn
	ori.w     #IXSYM_CAPSMASK,d0

TestAltSyn:
	btst	  #2,d1     ; are lalt and ralt the same?
	beq.s	  TestQualMask
	move.w	  d0,d2
	andi.w	  #IXSYM_ALTMASK,d2
	beq.s	  TestQualMask
	ori.w     #IXSYM_ALTMASK,d0

TestQualMask:
	move.w    ix_Qualifier(a1),d1
	eor.w     d1,d0
	and.w     ix_QualMask(a1),d0
	bne.s     Fail

Success:
	moveq     #1,d0
	move.l    (a7)+,d2
	rts

Fail:
	moveq     #0,d0
	move.l    (a7)+,d2
	rts

;---------------------------------------------------------------------------

	END
@


38.3
log
@Clean up and speed up
@
text
@d33 1
a33 1
	beq.s     L00a0
d35 3
a37 2
	btst      #0,d0
	beq.s     L0064
d39 3
a41 3
	andi.w    #0003,d2
	beq.s     L0064
	ori.w     #0003,d0
d43 3
a45 2
L0064:  btst      #1,d1
	beq.s     L0082
d47 3
a49 3
	andi.w    #0007,d2
	beq.s     L0082
	ori.w     #0007,d0
d51 3
a53 2
L0082:	btst	  #0002,d1
	beq.s	  L00a0
d55 3
a57 3
	andi.w	  #$0030,d2
	beq.s	  L00a0
	ori.w     #$0030,d0
d59 2
a60 1
L00a0:	move.w    ix_Qualifier(a1),d1
@


38.2
log
@Changes to make the function external
@
text
@d5 5
d18 3
a20 35
   move.l   d2,-(sp)     ; save regs

   tst.b    0001(a1)          ; if(NULL_IX(ix)) goto success
   beq.s    1$

   move.b   0004(a0),d0       ; if(ie->ie_Class != ix->ix_Class)
   cmp.b    0001(a1),d0       ;     goto fail;
   bne.s    0$

   move.w   0002(a1),d0       ; if(IX_NOMATCH(ie->ie_Code,ix->ix_Code,ix->ix_CodeMask))
   move.w   0006(a0),d1       ;     goto fail
   eor.w    d0,d1
   and.w    0004(a1),d1
   bne.s    0$

   move.w   0008(a0),d0       ; tmpqual=ix_synonym(ie->ie_Qualifier,ix->ix_QualSame)
   move.w   $000A(a1),d1
   bsr.s    ix_synonym

   move.w   0006(a1),d1       ; if(IX_NOMATCH(tmpqual,ix->ix_Qual,ix->ix_QualMask))
   eor.w    d1,d0             ;     goto fail
   and.w    0008(a1),d0
   bne.s    0$

1$:                           ; Match
   move.l  (sp)+,d2     ; restore regs
   moveq.l  #$1,D0
   rts

0$:                           ; No match
   move.l  (sp)+,d2     ; restore regs
   moveq.l  #$0,D0
   rts

;---------------------------------------------------------------------------
d22 43
a64 28
;  WORD ix_synoym(UWORD iequal, UWORD syns);
;  d0                       d0          d1
;
;  d2 = scratch
;
ix_synonym:
   btst     #0000,d1          ; if(syns & IXSYM_SHIFT)
   beq.s    0$
   move.w   d0,d2             ; qual = IXQ_SYNONYM(qual,IXSYM_SHIFTMASK)
   andi.w   #0003,d2
   beq.s    0$
   ori.w    #0003,d0

0$:
   btst     #0001,d1          ; if(syns & IXSYM_CAPS)
   beq.s    1$
   move.w   d0,d2             ; qual = IXQ_SYNONYM(qual,IXSYM_CAPSMASK)
   andi.w   #0007,d2
   beq.s    1$
   ori.w    #0007,d0

1$:
   btst     #0002,d1          ; if(syns & IXSYM_ALT)
   beq.s    2$
   move.w   d0,d2             ; qual = IXQ_SYNONYM(qual,IXSYM_ALTMASK)
   andi.w   #$0030,d2
   beq.s    2$
   ori.w    #$0030,d0
d66 4
a69 2
2$:
   rts
@


38.1
log
@Initial V38 RCS checkin
@
text
@d1 3
a3 7
;
;  IX.asm - Assembly version of IX.c
;
;  LONG MatchIX(struct Inputevent *ie, IX *ix);
;  d0                              a0      a1
;
   xdef     _MatchIX
d5 6
a10 2
;allofem   reg      d0-d7/a0-a6
allofem   reg      d2
d12 2
a13 2
_MatchIX:
   movem.l  allofem,-(sp)     ; save regs
d16 1
a16 1
   beq      1$
d20 1
a20 1
   bne.b    0$
d26 1
a26 1
   bne.b    0$
d30 1
a30 1
   bsr      ix_synonym
d35 1
a35 1
   bne.b    0$
d38 1
a38 1
   movem.l  (sp)+,allofem     ; restore regs
d43 1
a43 1
   movem.l  (sp)+,allofem     ; restore regs
d46 3
a48 1
;
d56 1
a56 1
   beq.b    0$
d59 1
a59 1
   beq.b    0$
d64 1
a64 1
   beq.b    1$
d67 1
a67 1
   beq.b    1$
d72 1
a72 1
   beq.b    2$
d75 1
a75 1
   beq.b    2$
d81 3
a83 1
   end
@
