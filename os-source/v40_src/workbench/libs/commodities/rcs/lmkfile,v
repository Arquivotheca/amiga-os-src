head     38.9;
branch   ;
access   ;
symbols  ;
locks    vertex:38.9; strict;
comment  @# @;


38.9
date     93.02.09.13.55.56;  author vertex;  state Exp;
branches ;
next     38.8;

38.8
date     92.10.16.17.56.45;  author vertex;  state Exp;
branches ;
next     38.7;

38.7
date     92.08.24.14.00.21;  author vertex;  state Exp;
branches ;
next     38.6;

38.6
date     92.08.10.16.51.27;  author vertex;  state Exp;
branches ;
next     38.5;

38.5
date     92.07.02.10.18.21;  author vertex;  state Exp;
branches ;
next     38.4;

38.4
date     91.12.30.14.40.35;  author vertex;  state Exp;
branches ;
next     38.3;

38.3
date     91.10.24.10.18.08;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     91.10.21.10.59.49;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     91.10.07.15.21.03;  author vertex;  state Exp;
branches ;
next     ;


desc
@lmk file for commodities library
@


38.9
log
@Bumped to V40
@
text
@
MODNAME	          = commodities
VERSION		  = 40

REMOTE		  = V$(VERSION):src/workbench/libs/commodities

LD_FILE	          = $(MODNAME).ld
LD_STRIP          = $(MODNAME).ld.strip

C_COMPILER        = LC
C_COMPILER_OPTS   = -b0 -ms -v -me -rr -cfistqmcu -d1 -O

# for SAS/C 6.0, don't forget the linker line too
#C_COMPILER        = SC
#C_COMPILER_OPTS   = RESOPT DATA=FARONLY PARM=REGISTERS UCHAR CONSTLIB LIBCODE\
#		    STREQ STRMER COMMENTNEST DBG=SYMBOL\
#		    MEMSIZE=HUGE NOSTKCHK NOICONS NOVERSION NOMINC\
#		    OPT OPTPEEP OPTINLOCAL OPTSIZE OPTDEP=3 OPTRDEP=3

ASSEMBLER         = HX68 -a
ASSEMBLER_OPTS    = -csy -i include: -o

LINKER            = Blink
LINKER_OPTS	  = ADDSYM SC MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16
LINKER_OPTS_STRIP = ND

C_SOURCES   	  = commoditiesbase.c pool.c objects.c objlists.c messages.c \
		    broker.c ihandler.c parseix.c ikm.c exchange.c

ASM_SOURCES = commodities_lib.asm dispatch.asm matchix.asm ihandlerstub.asm \
	      serialout.asm endcode.asm

OBJECTS     = commodities_lib.o commoditiesbase.o pool.o matchix.o dispatch.o \
	      objects.o objlists.o broker.o messages.o ihandler.o \
	      parseix.o ikm.o exchange.o ihandlerstub.o serialout.o endcode.o

STARTUP     =
LIBS        = LIB:amiga.lib LIB:debug.lib


##############################################################################
# Build the stripped load file...
#
$(LD_STRIP):	$(LD_FILE)
		$(LINKER) FROM $(LD_FILE) TO $(LD_STRIP) $(LINKER_OPTS_STRIP)


##############################################################################
# Build the load file...
#
$(LD_FILE):	$(OBJECTS) $(LIBS)
		$(LINKER) <with <
FROM $(STARTUP) $(OBJECTS) TO $(LD_FILE) LIB $(LIBS) $(LINKER_OPTS)
<


##############################################################################
# Default rules...
#
.c.o:
	$(C_COMPILER) $(C_COMPILER_OPTS) $*.c #DISASM $*.dasm

.asm.o:
	$(ASSEMBLER) $*.asm $(ASSEMBLER_OPTS) $*.o


##############################################################################
# All dependencies...
#
commodities_lib.o: commodities_lib.asm $(MODNAME)_rev.rev commoditiesbase.i
commoditiesbase.o: commoditiesbase.c commoditiesbase.h
matchix.o: matchix.asm matchix.h commoditiesbase.h
pool.o: pool.c pool.h commoditiesbase.h
messages.o: messages.c messages.h commoditiesbase.h
objlists.o: objlists.c objlists.h commoditiesbase.h
ikm.o: ikm.c ikm.h commoditiesbase.h
exchange.o: exchange.c exchange.h commoditiesbase.h
parseix.o: parseix.c parseix.h commoditiesbase.h
broker.o: broker.c broker.h commoditiesbase.h
objects.o: objects.c objects.h commoditiesbase.h
dispatch.o: dispatch.asm dispatch.h
ihandlerstub.o: ihandlerstub.asm ihandlerstub.h
ihandler.o: ihandler.c ihandler.h commoditiesbase.h
endcode.o: endcode.asm


##############################################################################
# Bump the version...
#
version:
	@@BumpRev $(VERSION) $(MODNAME)_rev


##############################################################################
# Release stuff that should be...
#
headers:
	@@autodoc >$(MODNAME).doc autodocs.asm
	@@copy $(MODNAME).doc V$(VERSION):doc
	@@delete $(MODNAME).doc quiet
	@@protect V$(VERSION):include/libraries/commodities.? wrd quiet
	@@copy commodities.? V$(VERSION):include/libraries quiet
	@@protect V$(VERSION):lib/sfd/commodities_lib.sfd wrd
	@@copy commodities_lib.sfd V$(VERSION):lib/sfd


##############################################################################
# Delete all object files
#
clean:
	@@Delete $(OBJECTS)
	@@Delete $(LD_FILE) $(LD_STRIP)


##############################################################################
# Release the current build to the server...
#
internal:
	@@Delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc|library))|lmkfile)
	@@protect ((\#?.(c|h|asm|i|ld|rev|doc))|lmkfile|$(LD_STRIP)) +r quiet
	@@copy \#?.(strip|ld|doc|library) \#?_rev.\#? $(REMOTE)
@


38.8
log
@Added SAS 6 stuff
@
text
@d3 1
a3 1
VERSION		  = 39
@


38.7
log
@*** empty log message ***
@
text
@d13 7
d28 1
a28 1
		    broker.c ihandler.c cxpools.c parseix.c ikm.c exchange.c
d31 1
a31 1
	      endcode.asm
d34 2
a35 2
	      objects.o objlists.o broker.o messages.o ihandler.o cxpools.o \
	      parseix.o ikm.o exchange.o ihandlerstub.o endcode.o
d38 1
a38 1
LIBS        = LIB:amiga.lib LIB:lcr.lib LIB:debug.lib
d61 1
a61 1
	$(C_COMPILER) $(C_COMPILER_OPTS) $*.c
a74 1
cxpools.o: cxpools.c cxpools.h commoditiesbase.h
d102 1
a102 1
	@@copy asl.? V$(VERSION):include/libraries quiet
@


38.6
log
@Bumped version
@
text
@d13 1
a13 1
ASSEMBLER         = CAsm -a
@


38.5
log
@Added Headers: clause
@
text
@d3 1
a3 1
VERSION		  = 38
d5 1
a5 1
REMOTE		  = V:src/workbench/libs/commodities
d93 1
a93 1
	@@copy $(MODNAME).doc v:doc
d95 4
a98 4
	@@protect V:include/libraries/commodities.? wrd quiet
	@@copy asl.? V:include/libraries quiet
	@@protect V:lib/sfd/commodities_lib.sfd wrd
	@@copy commodities_lib.sfd V:lib/sfd
@


38.4
log
@*** empty log message ***
@
text
@d88 11
@


38.3
log
@Remove msgstack and methods
@
text
@d17 1
a17 1
LINKER_OPTS	  = ADDSYM SC SD MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16
@


38.2
log
@Removed actions.c and control.c
@
text
@d20 2
a21 3
C_SOURCES   	  = commoditiesbase.c msgstack.c pool.c objects.c objlists.c \
		    messages.c methods.c broker.c \
		    ihandler.c cxpools.c parseix.c ikm.c exchange.c
d26 3
a28 4
OBJECTS     = commodities_lib.o commoditiesbase.o pool.o matchix.o msgstack.o \
	      dispatch.o objects.o objlists.o broker.o messages.o \
	      methods.o ihandler.o cxpools.o parseix.o ikm.o \
	      exchange.o ihandlerstub.o endcode.o
a66 1
msgstack.o: msgstack.c msgstack.h commoditiesbase.h
a71 1
methods.o: methods.c methods.h commoditiesbase.h
@


38.1
log
@Initial V38 RCS checkin
@
text
@d21 1
a21 1
		    messages.c control.c actions.c methods.c broker.c \
d28 2
a29 2
	      dispatch.o objects.o objlists.o broker.o messages.o control.o \
	      actions.o methods.o ihandler.o cxpools.o parseix.o ikm.o \
a77 2
actions.o: actions.c actions.h commoditiesbase.h
control.o: control.c control.h commoditiesbase.h
@
