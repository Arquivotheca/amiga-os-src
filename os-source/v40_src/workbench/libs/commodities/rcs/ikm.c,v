head     38.4;
branch   ;
access   ;
symbols  ;
locks    vertex:38.4; strict;
comment  @ * @;


38.4
date     92.11.24.15.14.23;  author vertex;  state Exp;
branches ;
next     38.3;

38.3
date     92.02.27.17.01.52;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     91.10.21.11.00.42;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     91.10.07.15.23.41;  author vertex;  state Exp;
branches ;
next     ;


desc
@Keymap inversion
@


38.4
log
@Now sets the ie_SubClass and ie_TimeStamp fields to 0
@
text
@
#include <devices/inputevent.h>

#include <clib/keymap_protos.h>

#include <pragmas/keymap_pragmas.h>

#include "commoditiesbase.h"
#include "ikm.h"


/*****************************************************************************/


#define STIMSIZE 3


/*****************************************************************************/


BOOL ASM InvertKeyMapLVO(REG(d0) ULONG ansiCode,
                         REG(a0) struct InputEvent *ie,
                         REG(a1) struct KeyMap *km)
{
unsigned char buffer[80];
unsigned char rBuffer[STIMSIZE*2];

    ie->ie_EventAddress       = 0;
    ie->ie_SubClass           = 0;
    ie->ie_TimeStamp.tv_secs  = 0;
    ie->ie_TimeStamp.tv_micro = 0;
    ie->ie_Class              = IECLASS_RAWKEY;
    buffer[0]                 = (unsigned char)ansiCode;

    switch (MapANSI(buffer,1,rBuffer,STIMSIZE,km))
    {
        case 2 : ie->ie_Prev1DownCode = rBuffer[0];
                 ie->ie_Prev1DownQual = rBuffer[1];
                 ie->ie_Code          = rBuffer[2];
                 ie->ie_Qualifier     = rBuffer[3];
                 break;

        case 1 : ie->ie_Prev1DownCode = 0;
                 ie->ie_Prev1DownQual = 0;
                 ie->ie_Code          = rBuffer[0];
                 ie->ie_Qualifier     = rBuffer[1];
                 break;

        default: return(FALSE);
    }

    return(TRUE);
}
@


38.3
log
@*** empty log message ***
@
text
@d28 6
a33 3
    ie->ie_EventAddress = 0;
    ie->ie_Class        = IECLASS_RAWKEY;
    buffer[0]           = (unsigned char)ansiCode;
a49 1
                 break;
@


38.2
log
@Tidied up a bit
@
text
@d32 1
a32 1
    switch(MapANSI(buffer,1,rBuffer,STIMSIZE,km))
@


38.1
log
@Initial V38 RCS checkin
@
text
@a1 1

@
