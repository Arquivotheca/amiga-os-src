head     38.5;
branch   ;
access   ;
symbols  ;
locks    vertex:38.5; strict;
comment  @ * @;


38.5
date     92.11.23.10.52.25;  author vertex;  state Exp;
branches ;
next     38.4;

38.4
date     92.10.16.17.58.49;  author vertex;  state Exp;
branches ;
next     38.3;

38.3
date     91.10.24.10.18.51;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     91.10.21.11.01.05;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     91.10.07.15.23.20;  author vertex;  state Exp;
branches ;
next     ;


desc
@Commodity message handling
@


38.5
log
@Changed type of "copy" parameter in CopyIE()
@
text
@#ifndef MESSAGES_H
#define MESSAGES_H


/****************************************************************************/


#include <exec/types.h>
#include <devices/inputevent.h>
#include "commoditiesbase.h"


/*****************************************************************************/


struct CxMsg *CreateCxMsg(ULONG type, struct InputEvent *ie);
VOID ASM DisposeCxMsgLVO(REG(a0) struct CxMsg *cxm);
VOID ASM DivertCxMsgVO(REG(a0) struct CxMsg *cxm, REG(a1) struct CxObj *co, REG(a2) struct CxObj *returnObj);
VOID ASM RouteCxMsgLVO(REG(a0) struct CxMsg *cxm, REG(a1) struct CxObj *co);
ULONG ASM CxMsgTypeLVO(REG(a0) struct CxMsg *cxm);
APTR ASM CxMsgDataLVO(REG(a0) struct CxMsg *cxm);
LONG ASM CxMsgIDLVO(REG(a0) struct CxMsg *cxm);
VOID ASM AddIEventsLVO(REG(a0) struct InputEvent *ie);

ULONG IESize(struct InputEvent *ie);
VOID CopyIE(struct InputEvent *original, struct InputEvent *copy);
  /* "copy" must point to memory of size IESize(ie) */

#define FreeCxMsg(msg) FreePoolMem(msg)


/*****************************************************************************/


#endif /* MESSAGES_H */
@


38.4
log
@Added InputEvent copying routines
@
text
@d26 1
a26 1
VOID CopyIE(struct InputEvent *original, APTR copy);
@


38.3
log
@Clean up and speed up
@
text
@d16 1
a16 1
struct CxMsg *CreateCxMsg(VOID);
d25 3
d29 3
d33 1
@


38.2
log
@Tidied up a bit
@
text
@d16 1
a16 1
struct CxMsg *CreateCxMsg(ULONG type);
a17 1
LONG CxMsgLength(LONG type);
@


38.1
log
@Initial V38 RCS checkin
@
text
@d5 1
a5 1
/*****************************************************************************/
a16 1
VOID InsertCxMsg(struct List *list, struct CxMsg *cxm, struct CxMsg *pred);
d19 1
a19 1
VOID ASM DivertCxMsgLVO(REG(a0) struct CxMsg *cxm, REG(a1) struct CxObj *co, REG(a2) struct CxObj *comyself);
d22 1
a22 1
STRPTR ASM CxMsgDataLVO(REG(a0) struct CxMsg *cxm);
a27 1

@
