head     38.3;
branch   ;
access   ;
symbols  ;
locks    vertex:38.3; strict;
comment  @* @;


38.3
date     93.02.11.12.41.57;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     91.10.21.11.09.33;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     91.10.07.15.33.01;  author vertex;  state Exp;
branches ;
next     ;


desc
@Commodity method dispatched
                          ^r
@


38.3
log
@Rename Dispatch() to CxDispatch() to avoid conflict with Exec function
@
text
@	OPTIMON

;---------------------------------------------------------------------------

	XDEF _CxDispatch

;---------------------------------------------------------------------------

_CxDispatch:
	move.l	a4,-(sp)	; save this guy
	move.l	d0,a4		; function pointer in a4

	movem.l	a0/a1,-(sp)     ; parameters on stack as well as in regs
	jsr	(a4)		; jump to function
	addq.l	#8,sp           ; remove args from stack

	move.l	(sp)+,a4        ; restore this one
	rts

;---------------------------------------------------------------------------

	END
@


38.2
log
@Cleaned up
@
text
@d5 1
a5 1
	XDEF _Dispatch
d9 1
a9 1
_Dispatch:
@


38.1
log
@Initial V38 RCS checkin
@
text
@d1 4
a4 5
;/*
; * interface to custom routines
; * note that it saves all registers and passes parameters
; * both on the stack and in registers
; */
d7 12
d20 1
a20 2
allofem   reg      a4
;allofem   reg      d0-d7/a0-a6
d22 1
a22 10
_Dispatch:
   movem.l   4(sp),d0/a0/a1      ; function pointer in d0, cxm in a0, co in a1
   movem.l   allofem,-(sp)      ; protect self very well
   movem.l   a0/a1,-(sp)         ; parameters on stack as well as in regs
   move.l   d0,a4
   jsr      (a4)
   addq.l   #8,sp            ; pop params
   movem.l   (sp)+,allofem      ; restore
   rts
   end
@
