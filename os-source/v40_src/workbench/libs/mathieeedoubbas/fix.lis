MC68000 ASSEMBLER VERSION 11.183                                                                                                   

   LOC              OBJECT             STMT            SOURCE STATEMENT


0000'                                     1         idnt    CXV53
                                          2         include "float.i"
                                          1 *******************************************************************************
                                          2 *
                                          3 *       $Header:
                                          4 *
                                          5 *******************************************************************************
                                          6
0000'                                     7         section mathieeedoubbas
                                          8         xref    do_trapv
                                          9         xref    do_div0
                                         10
                                         11 ;ALLOW_TRAPS    equ 1
                                         12
                                         13 ;       overflow trap
                                         14 fptrap  macro
                                         15 ;       overfloat trap
                                         16         ifd ALLOW_TRAPS
                                         17                 ifeq \1-2
                                         18                         bsr     do_trapv
                                         19                 endc
                                         20 ;               underfloat is ignored
                                         21                 ifeq \1-1
                                         22                 endc
                                         23 ; divide by zero
                                         24                 ifeq \1-3
                                         25                         bsr     do_div0
                                         26                 endc
                                         27 ; indefinate trap
                                         28                 ifeq \1-4
                                         29 ;                       bsr     do_trapv
                                         30                 endc
                                         31                 ifne \1-4
                                         32                         ifne \1-1
                                         33                                 ifne \1-2
                                         34                                         ifne \1-3
                                         35                                                 fail
                                         36                                         endc
                                         37                                 endc
                                         38                         endc
                                         39                 endc
                                         40         endc
                                         41         endm
                                         42
                                         43 sdebug  macro
                                         44 ;       move.l  \1,-(sp)
                                         45 ;       move.l  \2,-(sp)
                                         46 ;       addq.l  #8,sp
                                         47         endm
                                         48
                                          3         xdef    _CXV53          ; Convert double to long
                                          4         xref    _CXFERR         ; Exception handler
                                          5         xdef    MIIEEEDPFix
0000'                                     6 MIIEEEDPFix:
0000'                                     7 _CXV53:
MC68000 ASSEMBLER VERSION 11.183                                                                                                   

   LOC              OBJECT             STMT            SOURCE STATEMENT


0000'      2042                           8         move.l  d2,a0           ; Save d2
0002'      2243                           9         move.l  d3,a1           ; Save d3
0004'      263C  7FFF  FFFF              10         move.l  #$7fffffff,d3   ; Set largest positive value
000A'      2400                          11         move.l  d0,d2           ; Get sign
000C'      6A04                          12         bpl.s   dtoi1           ; - positive
000E'      5283                          13         addq.l  #1,d3           ; Set largest negative value
0010'      B780                          14         eor.l   d3,d0           ; Make positive
0012'                                    15 dtoi1:
0012'      4840                          16         swap    d0              ; Get exponent
0014'      3400                          17         move.w  d0,d2
0016'      0242  7FF0                    18         and.w   #$7ff0,d2
001A'      B540                          19         eor.w   d2,d0
001C'      0442  3FF0                    20         sub.w   #$3ff0,d2       ; Remove exponent bias
0020'      6D18                          21         blt.s   dtoi2           ; - result is zero
0022'      0A40  0010                    22         eor.w   #$0010,d0       ; Add hidden bit
0026'      4840                          23         swap    d0
0028'      E842                          24         asr.w   #4,d2           ; Form left shift count
002A'      0442  0014                    25         sub.w   #20,d2
002E'      6E12                          26         bgt.s   dtoi4           ; - shift left
0030'      4442                          27         neg.w   d2              ; Form right shift count
0032'      E4A8                          28         lsr.l   d2,d0           ; Shift right 0-20
0034'      4A82                          29         tst.l   d2              ; Check result sign
0036'      6B22                          30         bmi.s   dtoi5           ; - negative
0038'      6022                          31         bra.s   dtoi6           ; - positive
003A'                                    32 dtoi2:
003A'      7000                          33         moveq   #0,d0           ; Zero result
003C'      601E                          34         bra.s   dtoi6
003E'                                    35 dtoi3:
                                         36         fptrap  2               ; Overflow trap
                                         36+;       overfloat trap
           False                         36+        ifd ALLOW_TRAPS
                                         36+                ifeq 2-2
003E'                                    36+                        bsr     do_trapv
                                         36+                endc
                                         36+;               underfloat is ignored
                                         36+                ifeq 2-1
                                         36+                endc
                                         36+; divide by zero
                                         36+                ifeq 2-3
003E'                                    36+                        bsr     do_div0
                                         36+                endc
                                         36+; indefinate trap
                                         36+                ifeq 2-4
                                         36+;                       bsr     do_trapv
                                         36+                endc
                                         36+                ifne 2-4
                                         36+                        ifne 2-1
                                         36+                                ifne 2-2
                                         36+                                        ifne 2-3
                                         36+                                                fail
                                         36+                                        endc
                                         36+                                endc
                                         36+                        endc
                                         36+                endc
                                         36+        endc
MC68000 ASSEMBLER VERSION 11.183                                                                                                   

   LOC              OBJECT             STMT            SOURCE STATEMENT


003E'      2003                          37         move.l  d3,d0           ; Get largest value
0040'      601A                          38         bra.s   dtoi6
0042'                                    39 dtoi4:
0042'      0C42  000B                    40         cmp.w   #11,d2          ; Exponent out of range?
0046'      6EF6                          41         bgt.s   dtoi3           ; - yes
0048'      2243                          42         move.l  d3,a1           ; Save d3
004A'      B380                          43         eor.l   d1,d0           ; Shift left 1-11
004C'      E5B8                          44         rol.l   d2,d0
004E'      E5A9                          45         lsl.l   d2,d1
0050'      B380                          46         eor.l   d1,d0
0052'      B083                          47         cmp.l   d3,d0           ; Overflow?
0054'      62E8                          48         bhi.s   dtoi3           ; - yes
0056'      4A82                          49         tst.l   d2              ; Check result sign
0058'      6A02                          50         bpl.s   dtoi6           ; - positive
005A'                                    51 dtoi5:
005A'      4480                          52         neg.l   d0              ; Make result negative
005C'                                    53 dtoi6:
005C'      2408                          54         move.l  a0,d2           ; Restore d2
005E'      2609                          55         move.l  a1,d3           ; Restore d3
0060'      4E75                          56         rts
                                         57         end



No errors found in this Assembly
