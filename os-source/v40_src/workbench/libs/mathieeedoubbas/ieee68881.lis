MC68000 ASSEMBLER VERSION 11.183                                                                                                   

   LOC              OBJECT             STMT            SOURCE STATEMENT


0000'                                     1         section mathieeedoubbas
                                          2         include "float.i"
                                          1 *******************************************************************************
                                          2 *
                                          3 *       $Header:
                                          4 *
                                          5 *******************************************************************************
                                          6
0000'                                     7         section mathieeedoubbas
                                          8         xref    do_trapv
                                          9         xref    do_div0
                                         10
                                         11 ;ALLOW_TRAPS    equ 1
                                         12
                                         13 ;       overflow trap
                                         14 fptrap  macro
                                         15 ;       overfloat trap
                                         16         ifd ALLOW_TRAPS
                                         17                 ifeq \1-2
                                         18                         bsr     do_trapv
                                         19                 endc
                                         20 ;               underfloat is ignored
                                         21                 ifeq \1-1
                                         22                 endc
                                         23 ; divide by zero
                                         24                 ifeq \1-3
                                         25                         bsr     do_div0
                                         26                 endc
                                         27 ; indefinate trap
                                         28                 ifeq \1-4
                                         29 ;                       bsr     do_trapv
                                         30                 endc
                                         31                 ifne \1-4
                                         32                         ifne \1-1
                                         33                                 ifne \1-2
                                         34                                         ifne \1-3
                                         35                                                 fail
                                         36                                         endc
                                         37                                 endc
                                         38                         endc
                                         39                 endc
                                         40         endc
                                         41         endm
                                         42
                                         43 sdebug  macro
                                         44 ;       move.l  \1,-(sp)
                                         45 ;       move.l  \2,-(sp)
                                         46 ;       addq.l  #8,sp
                                         47         endm
                                         48
                                          3         xdef    HARDMIIEEEDPSub
                                          4         xdef    HARDMIIEEEDPFix
                                          5         xdef    HARDMIIEEEDPFlt
                                          6         xdef    HARDMIIEEEDPFloor
                                          7         xdef    HARDMIIEEEDPDiv
MC68000 ASSEMBLER VERSION 11.183                                                                                                   

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                          8         xdef    HARDMIIEEEDPMul
                                          9         xdef    HARDMIIEEEDPAdd
                                         10
          =00001000                      11 FPCR    equ     $1000
          =00000800                      12 FPSR    equ     $0800
          =00000400                      13 FPIAR   equ     $0400
          =0000F200                      14 FMOVE   equ     $F200
          =00001400                      15 DPR     equ     $1400   ; format = double precision real
          =0000                          16 LWI     equ     $0      ; format = long word integer
                                         17 FMOVESPtoFP0 macro
                                         18         dc.w    FMOVE+$1f               ; FMOVE.d (sp)+,fp0
                                         19         dc.w    $4000+DPR
                                         20         endm
                                         21 FMOVEFD0D1toFP0 macro
                                         22         move.l  d1,-(sp)
                                         23         move.l  d0,-(sp)
                                         24         FMOVESPtoFP0
                                         25         endm
                                         26 FMOVEFP0toFD0D1 macro
                                         27         dc.w    FMOVE+$27               ; FMOVE.d       fp0,-(sp)
                                         28         dc.w    $6000+DPR
                                         29         move.l  (sp)+,d0
                                         30         move.l  (sp)+,d1
                                         31         endm
0000'                                    32         cnop    0,4
0000'                                    33 HARDMIIEEEDPFlt:
0000'      F200                          34         dc.w    FMOVE                   ; FMOVE.l       d0,fp0
0002'      4000                          35         dc.w    $4000+LWI
0004'      F227                          36         dc.w    FMOVE+$27               ; FMOVE.d       fp0,-(sp)
0006'      7400                          37         dc.w    $6000+DPR
0008'      4CDF  0003                    38         movem.l (sp)+,d0/d1
000C'      4E75                          39         rts
000E'                                    40 HARDMIIEEEDPFix:
                                         41         FMOVEFD0D1toFP0
000E'      2F01                          41+        move.l  d1,-(sp)
0010'      2F00                          41+        move.l  d0,-(sp)
                                         41+        FMOVESPtoFP0
0012'      F21F                          41+        dc.w    FMOVE+$1f               ; FMOVE.d (sp)+,fp0
0014'      5400                          41+        dc.w    $4000+DPR
0016'      F200                          42         dc.w    FMOVE                   ; FMOVE.l fp0,d0
0018'      6000                          43         dc.w    $6000+LWI
001A'      4E75                          44         rts
001C'                                    45         cnop    0,4
001C'                                    46         cnop    0,4
001C'                                    47 floorneg:
                                         48         FMOVEFD0D1toFP0
001C'      2F01                          48+        move.l  d1,-(sp)
001E'      2F00                          48+        move.l  d0,-(sp)
                                         48+        FMOVESPtoFP0
0020'      F21F                          48+        dc.w    FMOVE+$1f               ; FMOVE.d (sp)+,fp0
0022'      5400                          48+        dc.w    $4000+DPR
0024'      F200                          49         dc.w FMOVE                      ; FMOVE.l FPCR,d0
0026'      B000                          50         dc.w $8000+$2000+FPCR
0028'      2200                          51         move.l  d0,d1                   ; save to restore
002A'      103C  0020                    52         move.b #$20,d0                  ; round toward minus infinity
MC68000 ASSEMBLER VERSION 11.183                                                                                                   

   LOC              OBJECT             STMT            SOURCE STATEMENT


002E'      F200                          53         dc.w FMOVE                      ; FMOVE.l d0,FPCR
0030'      9000                          54         dc.w $8000+$0000+FPCR           ; set up what we want
0032'      F200                          55         dc.w FMOVE                      ; FINT FP0,FP0
0034'      0001                          56         dc.w $1                         ;
0036'      F201                          57         dc.w FMOVE+1                    ; FMOVE.l d1,FPCR  ; restore
0038'      9000                          58         dc.w $8000+$0000+FPCR           ; set up what used to be
                                         59         FMOVEFP0toFD0D1
003A'      F227                          59+        dc.w    FMOVE+$27               ; FMOVE.d       fp0,-(sp)
003C'      7400                          59+        dc.w    $6000+DPR
003E'      201F                          59+        move.l  (sp)+,d0
0040'      221F                          59+        move.l  (sp)+,d1
0042'      4E75                          60         rts
0044'                                    61         cnop    0,4
0044'                                    62 HARDMIIEEEDPFloor:
0044'      4A80                          63         tst.l   d0                      ; is arg < 0?
0046'      6DD4                          64         blt     floorneg
0048'      48E7  C000                    65         movem.l d0/d1,-(sp)
004C'      F21F                          66         dc.w    FMOVE+$1f               ; FINTRZ.d (sp)+,fp0
004E'      5403                          67         dc.w    $4000+DPR+$3            ;
                                         68         FMOVEFP0toFD0D1
0050'      F227                          68+        dc.w    FMOVE+$27               ; FMOVE.d       fp0,-(sp)
0052'      7400                          68+        dc.w    $6000+DPR
0054'      201F                          68+        move.l  (sp)+,d0
0056'      221F                          68+        move.l  (sp)+,d1
0058'      4E75                          69         rts
005A'      4E71                          70         nop
005C'                                    71         cnop    0,4
005C'                                    72 HARDMIIEEEDPAdd:
005C'      48E7  F000                    73         movem.l d0/d1/d2/d3,-(sp)
                                         74         FMOVESPtoFP0
0060'      F21F                          74+        dc.w    FMOVE+$1f               ; FMOVE.d (sp)+,fp0
0062'      5400                          74+        dc.w    $4000+DPR
0064'      F21F                          75         dc.w    FMOVE+$1f               ; FADD.d (sp)+,fp0
0066'      5422                          76         dc.w    $4000+DPR+$22
                                         77         FMOVEFP0toFD0D1
0068'      F227                          77+        dc.w    FMOVE+$27               ; FMOVE.d       fp0,-(sp)
006A'      7400                          77+        dc.w    $6000+DPR
006C'      201F                          77+        move.l  (sp)+,d0
006E'      221F                          77+        move.l  (sp)+,d1
0070'      4E75                          78         rts
0074'                                    79         cnop    0,4
0074'                                    80 HARDMIIEEEDPSub:
                                         81         FMOVEFD0D1toFP0
0074'      2F01                          81+        move.l  d1,-(sp)
0076'      2F00                          81+        move.l  d0,-(sp)
                                         81+        FMOVESPtoFP0
0078'      F21F                          81+        dc.w    FMOVE+$1f               ; FMOVE.d (sp)+,fp0
007A'      5400                          81+        dc.w    $4000+DPR
007C'      48E7  3000                    82         movem.l d2/d3,-(sp)
0080'      F21F                          83         dc.w    FMOVE+$1f               ; FSUB.d (sp)+,fp0
0082'      5428                          84         dc.w    $4000+DPR+$28
                                         85         FMOVEFP0toFD0D1
0084'      F227                          85+        dc.w    FMOVE+$27               ; FMOVE.d       fp0,-(sp)
0086'      7400                          85+        dc.w    $6000+DPR
0088'      201F                          85+        move.l  (sp)+,d0
MC68000 ASSEMBLER VERSION 11.183                                                                                                   

   LOC              OBJECT             STMT            SOURCE STATEMENT


008A'      221F                          85+        move.l  (sp)+,d1
008C'      4E75                          86         rts
0090'                                    87         cnop    0,4
0090'                                    88 HARDMIIEEEDPMul:
0090'      48E7  F000                    89         movem.l d0/d1/d2/d3,-(sp)
                                         90         FMOVESPtoFP0
0094'      F21F                          90+        dc.w    FMOVE+$1f               ; FMOVE.d (sp)+,fp0
0096'      5400                          90+        dc.w    $4000+DPR
0098'      F21F                          91         dc.w    FMOVE+$1f               ; FMUL.d (sp)+,fp0
009A'      5423                          92         dc.w    $4000+DPR+$23
                                         93         FMOVEFP0toFD0D1
009C'      F227                          93+        dc.w    FMOVE+$27               ; FMOVE.d       fp0,-(sp)
009E'      7400                          93+        dc.w    $6000+DPR
00A0'      201F                          93+        move.l  (sp)+,d0
00A2'      221F                          93+        move.l  (sp)+,d1
00A4'      4E75                          94         rts
00A8'                                    95         cnop    0,4
00A8'                                    96 HARDMIIEEEDPDiv:
                                         97         FMOVEFD0D1toFP0
00A8'      2F01                          97+        move.l  d1,-(sp)
00AA'      2F00                          97+        move.l  d0,-(sp)
                                         97+        FMOVESPtoFP0
00AC'      F21F                          97+        dc.w    FMOVE+$1f               ; FMOVE.d (sp)+,fp0
00AE'      5400                          97+        dc.w    $4000+DPR
00B0'      48E7  3000                    98         movem.l d2/d3,-(sp)
00B4'      F21F                          99         dc.w    FMOVE+$1f               ; FDIV.d (sp)+,fp0
00B6'      5420                         100         dc.w    $4000+DPR+$20
                                        101         FMOVEFP0toFD0D1
00B8'      F227                         101+        dc.w    FMOVE+$27               ; FMOVE.d       fp0,-(sp)
00BA'      7400                         101+        dc.w    $6000+DPR
00BC'      201F                         101+        move.l  (sp)+,d0
00BE'      221F                         101+        move.l  (sp)+,d1
00C0'      4E75                         102         rts
                                        103         xdef    init_68881
00C2'                                   104 init_68881:
           False                        105         ifd     ALLOW_TRAPS
00C2'                                   106         move.l  #$1490,d0       ; chop and round to double
                                        107         endc
           True                         108         ifnd    ALLOW_TRAPS
00C2'      203C  0000  0090             109         move.l  #$0090,d0       ; chop and round to double
                                        110         endc
00C8'      F200                         111         dc.w    FMOVE
00CA'      9000                         112         dc.w    $8000+$0000+FPCR        ; enable traps
00CC'      4280                         113         clr.l   d0
00CE'      4E75                         114         rts
                                        115         end



No errors found in this Assembly
