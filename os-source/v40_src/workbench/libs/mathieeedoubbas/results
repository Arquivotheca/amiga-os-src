Confidentail Information
Commodore-Amiga, Inc

Updated from alpha1 readme file release
test results

alpha1
func  mathffp  1.2 dbl.lib  new library   %time decrease    times-faster
------------------------------------------------------------------------
Float   59       208usec        121usec      42%                1.72
Fix     40       281             58          79%                4.84
Abs     32        61             33          46%                1.85
Neg     34       102             34          67%                3.00
Tst     50        95             32          66%                2.97
Floor   89       712            180          75%                3.96
Ceil   106       867            199          77%                4.36
Cmp     81       152             62          59%                2.45
Add    106       255            154          39%		1.65
Sub    109       265            168          36%                1.57
Mul    140       461            240	     48%		1.92
Div    167       758            598          27%                1.26

alpha2
func  mathffp  1.2 dbl.lib  new library   %time decrease    times-faster
------------------------------------------------------------------------
Float   59       208usec        121usec      42%                1.72
Fix     40       281             58          79%                4.84
Abs     32        61             33          46%                1.85
Neg     34       102             34          67%                3.00
Tst     50        95             32          66%                2.97
Floor   89       712            180          75%                3.96
Ceil   106       867            199          77%                4.36
Cmp     81       152             62          59%                2.45
Add*   106       255            146          42%		1.74
Sub*   109       265            161          39%                1.64
Mul*   140       461            229	     50%		2.01
Div*   167       758            383          49%                1.98
* - changed code

beta2/68010
func  mathffp  1.2 dbl.lib  new library   %time decrease    times-faster
------------------------------------------------------------------------
Float   59       208usec         90usec      52%                2.31
Fix     40       281             58          79%                4.84
Abs     32        61             33          46%                1.85
Neg     34       102             34          67%                3.00
Tst     50        95             32          66%                2.97
Floor   89       712            180          75%                3.96
Ceil   106       867            199          77%                4.36
Cmp     81       152             56          63%                2.71
Add*   106       255            126          51%                2.02
Sub*   109       265            138          48%                1.92
Mul*   140       461            228          51%                2.02
Div*   167       758            343          55%                2.21

Most of the new library is based on internal commodore software

I rewrote Float and fix

I rewrote Floor, Ceil depends on Floor.
In the old library, not only was it slow for Floor/Ceil but it also
gave incorrect results for large numbers.

I rewrote add/sub and cmp

I rewrote Mul,

I rewrote a couple pieces of Div, but really do not want to
tackle it any further.

begin testing with paranoia.c
so far it found my incorrect dealing with -0.0  (fixed in fcmp)
also found a stack problem when underflowing Mul

Found a few more forgotten statements.
Big question: How important is that last bit of precision?
I needed to add guard bits to add/sub and Mul. Which slowed them down
abit. It is easy for me to remove them`, but they are necessary to
get any kind of passing mark from paranoia.

The new library will trap with a Div0 error as well as trapv for overflow.
I like this method because you do not need to constantly check for
overflow. I have included some code that you can use to intercept
those traps as well as others.
------------------------------------------------------------------------

alpha2-
Rewrote divide routine, it's uses registers exclusively now.

Please let me know asap about any problems, suggestions you have for this
replacement library.

beta2---------------------------------
The major difference here is Commodore-Amiga purchasing the rights
to the same basic library that Lattice uses. After much massaging,
tuning, and some upgrade in divide capabilities, it is now compatible
with the beta1 release, corrects several deficiencies in the previous
releases and is faster in several cases.

Dale Luck
Commodore-Amiga, Inc.
16795 Lark Ave. Suite 106
Los Gatos, Ca  95030

beta 1 list
andy
microbotics
jim goodnow
Al Aburto
csa
sparta
absoft
rick ross
Dave Milligan
Tracy McSherry

Perry Kivolowitz
280 River Rd. 54A
Piscataway, NJ  08854

Samuel Paolucci
Sandia National Labs
Livermore, California  94550
415-422-2018

Dave Yulton
Micro Magic
Suite 320b
261 Hamilton Ave.
Palo Alto, CA 94301
415-327-9107


John Song
AMIGO
192 Laurel Road
East Northport, NY
    11731
516-757-7334

Seven Seas Software			dougs math aquarium
35 Cape Geord Wye
Port Townsend, Wa.   98368
206/385-3771   385-1956

