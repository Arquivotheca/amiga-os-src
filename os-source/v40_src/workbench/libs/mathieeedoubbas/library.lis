MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


0000'                                     2         SECTION         mathieeedoubbas
                                          3         INCLUDE         'exec/types.i'
           True                           1         IFND    EXEC_TYPES_I
          >00000001                       2 EXEC_TYPES_I    SET     1
          =00000024                       3 INCLUDE_VERSION EQU     36
                                          4 EXTERN_LIB      MACRO
                                          5         XREF    _LVO\1
                                          6         ENDM
                                          7 STRUCTURE       MACRO
                                          8 \1      EQU     0
                                          9 SOFFSET SET     \2
                                         10         ENDM
                                         11 FPTR    MACRO
                                         12 \1      EQU     SOFFSET
                                         13 SOFFSET SET     SOFFSET+4
                                         14         ENDM
                                         15 BOOL    MACRO
                                         16 \1      EQU     SOFFSET
                                         17 SOFFSET SET     SOFFSET+2
                                         18         ENDM
                                         19 BYTE    MACRO
                                         20 \1      EQU     SOFFSET
                                         21 SOFFSET SET     SOFFSET+1
                                         22         ENDM
                                         23 UBYTE   MACRO
                                         24 \1      EQU     SOFFSET
                                         25 SOFFSET SET     SOFFSET+1
                                         26         ENDM
                                         27 WORD    MACRO
                                         28 \1      EQU     SOFFSET
                                         29 SOFFSET SET     SOFFSET+2
                                         30         ENDM
                                         31 UWORD   MACRO
                                         32 \1      EQU     SOFFSET
                                         33 SOFFSET SET     SOFFSET+2
                                         34         ENDM
                                         35 SHORT   MACRO
                                         36 \1      EQU     SOFFSET
                                         37 SOFFSET SET     SOFFSET+2
                                         38         ENDM
                                         39 USHORT  MACRO
                                         40 \1      EQU     SOFFSET
                                         41 SOFFSET SET     SOFFSET+2
                                         42         ENDM
                                         43 LONG    MACRO
                                         44 \1      EQU     SOFFSET
                                         45 SOFFSET SET     SOFFSET+4
                                         46         ENDM
                                         47 ULONG   MACRO
                                         48 \1      EQU     SOFFSET
                                         49 SOFFSET SET     SOFFSET+4
                                         50         ENDM
                                         51 FLOAT   MACRO
                                         52 \1      EQU     SOFFSET
                                         53 SOFFSET SET     SOFFSET+4
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                         54         ENDM
                                         55 DOUBLE  MACRO
                                         56 \1      EQU     SOFFSET
                                         57 SOFFSET SET     SOFFSET+8
                                         58         ENDM
                                         59 APTR    MACRO
                                         60 \1      EQU     SOFFSET
                                         61 SOFFSET SET     SOFFSET+4
                                         62         ENDM
                                         63 CPTR    MACRO
                                         64 \1      EQU     SOFFSET
                                         65 SOFFSET SET     SOFFSET+4
                                         66         ENDM
                                         67 RPTR    MACRO
                                         68 \1      EQU     SOFFSET
                                         69 SOFFSET SET     SOFFSET+2
                                         70         ENDM
                                         71 LABEL   MACRO
                                         72 \1      EQU     SOFFSET
                                         73         ENDM
                                         74 STRUCT  MACRO
                                         75 \1      EQU     SOFFSET
                                         76 SOFFSET SET     SOFFSET+\2
                                         77         ENDM
                                         78 ALIGNWORD       MACRO
                                         79 SOFFSET SET     (SOFFSET+1)&$fffffffe
                                         80         ENDM
                                         81 ALIGNLONG       MACRO
                                         82 SOFFSET SET     (SOFFSET+3)&$fffffffc
                                         83         ENDM
                                         84 ENUM    MACRO
                                         85         IFC     '\1',''
                                         86 EOFFSET EQU     0
                                         87         ENDC
                                         88         IFNC    '\1',''
                                         89 EOFFSET EQU     \1
                                         90         ENDC
                                         91         ENDM
                                         92 EITEM   MACRO
                                         93 \1      EQU     EOFFSET
                                         94 EOFFSET SET     EOFFSET+1
                                         95         ENDM
                                         96 BITDEF  MACRO
                                         97         BITDEF0 \1,\2,B_,\3
                                         98 \@BITDEF        SET     1<<\3
                                         99         BITDEF0 \1,\2,F_,\@BITDEF
                                        100         ENDM
                                        101 BITDEF0 MACRO
                                        102 \1\3\2  EQU     \4
                                        103         ENDM
          =00000021                     104 LIBRARY_MINIMUM EQU     33
                                        105         ENDC
                                          4         INCLUDE         'exec/libraries.i'
           True                           1         IFND    EXEC_LIBRARIES_I
          >00000001                       2 EXEC_LIBRARIES_I        SET     1
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


           True                           3         IFND    EXEC_NODES_I
                                          4         INCLUDE "exec/nodes.i"
           True                           1         IFND    EXEC_NODES_I
          >00000001                       2 EXEC_NODES_I    SET     1
                                          3         STRUCTURE       LN,0
          =0000                           3+LN      EQU     0
          >0000                           3+SOFFSET SET     0
                                          4         APTR    LN_SUCC
          =0000                           4+LN_SUCC EQU     SOFFSET
          >00000004                       4+SOFFSET SET     SOFFSET+4
                                          5         APTR    LN_PRED
          =00000004                       5+LN_PRED EQU     SOFFSET
          >00000008                       5+SOFFSET SET     SOFFSET+4
                                          6         UBYTE   LN_TYPE
          =00000008                       6+LN_TYPE EQU     SOFFSET
          >00000009                       6+SOFFSET SET     SOFFSET+1
                                          7         BYTE    LN_PRI
          =00000009                       7+LN_PRI  EQU     SOFFSET
          >0000000A                       7+SOFFSET SET     SOFFSET+1
                                          8         APTR    LN_NAME
          =0000000A                       8+LN_NAME EQU     SOFFSET
          >0000000E                       8+SOFFSET SET     SOFFSET+4
                                          9         LABEL   LN_SIZE
          =0000000E                       9+LN_SIZE EQU     SOFFSET
                                         10         STRUCTURE       MLN,0
          =0000                          10+MLN     EQU     0
          >0000                          10+SOFFSET SET     0
                                         11         APTR    MLN_SUCC
          =0000                          11+MLN_SUCC EQU    SOFFSET
          >00000004                      11+SOFFSET SET     SOFFSET+4
                                         12         APTR    MLN_PRED
          =00000004                      12+MLN_PRED EQU    SOFFSET
          >00000008                      12+SOFFSET SET     SOFFSET+4
                                         13         LABEL   MLN_SIZE
          =00000008                      13+MLN_SIZE EQU    SOFFSET
          =0000                          14 NT_UNKNOWN      EQU     0
          =00000001                      15 NT_TASK EQU     1
          =00000002                      16 NT_INTERRUPT    EQU     2
          =00000003                      17 NT_DEVICE       EQU     3
          =00000004                      18 NT_MSGPORT      EQU     4
          =00000005                      19 NT_MESSAGE      EQU     5
          =00000006                      20 NT_FREEMSG      EQU     6
          =00000007                      21 NT_REPLYMSG     EQU     7
          =00000008                      22 NT_RESOURCE     EQU     8
          =00000009                      23 NT_LIBRARY      EQU     9
          =0000000A                      24 NT_MEMORY       EQU     10
          =0000000B                      25 NT_SOFTINT      EQU     11
          =0000000C                      26 NT_FONT EQU     12
          =0000000D                      27 NT_PROCESS      EQU     13
          =0000000E                      28 NT_SEMAPHORE    EQU     14
          =0000000F                      29 NT_SIGNALSEM    EQU     15
          =00000010                      30 NT_BOOTNODE     EQU     16
          =00000011                      31 NT_KICKMEM      EQU     17
          =00000012                      32 NT_GRAPHICS     EQU     18
          =000000FE                      33 NT_USER EQU     254
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


          =000000FF                      34 NT_EXTENDED     EQU     255
                                         35         ENDC
                                          5         ENDC
          =00000006                       6 LIB_VECTSIZE    EQU     6
          =00000004                       7 LIB_RESERVED    EQU     4
          =FFFFFFFA                       8 LIB_BASE        EQU     $FFFFFFFA
          =FFFFFFE2                       9 LIB_USERDEF     EQU     LIB_BASE-(LIB_RESERVED*LIB_VECTSIZE)
          =FFFFFFE2                      10 LIB_NONSTD      EQU     LIB_USERDEF
                                         11 LIBINIT MACRO
                                         12         IFC     '\1',''
                                         13 COUNT_LIB       SET     LIB_USERDEF
                                         14         ENDC
                                         15         IFNC    '\1',''
                                         16 COUNT_LIB       SET     \1
                                         17         ENDC
                                         18         ENDM
                                         19 LIBDEF  MACRO
                                         20 \1      EQU     COUNT_LIB
                                         21 COUNT_LIB       SET     COUNT_LIB-LIB_VECTSIZE
                                         22         ENDM
                                         23         LIBINIT LIB_BASE
           False                         23+        IFC     'LIB_BASE',''
0000'                                    23+COUNT_LIB       SET     LIB_USERDEF
                                         23+        ENDC
           True                          23+        IFNC    'LIB_BASE',''
          >FFFFFFFA                      23+COUNT_LIB       SET     LIB_BASE
                                         23+        ENDC
                                         24         LIBDEF  LIB_OPEN
          =FFFFFFFA                      24+LIB_OPEN EQU    COUNT_LIB
          >FFFFFFF4                      24+COUNT_LIB       SET     COUNT_LIB-LIB_VECTSIZE
                                         25         LIBDEF  LIB_CLOSE
          =FFFFFFF4                      25+LIB_CLOSE EQU   COUNT_LIB
          >FFFFFFEE                      25+COUNT_LIB       SET     COUNT_LIB-LIB_VECTSIZE
                                         26         LIBDEF  LIB_EXPUNGE
          =FFFFFFEE                      26+LIB_EXPUNGE EQU COUNT_LIB
          >FFFFFFE8                      26+COUNT_LIB       SET     COUNT_LIB-LIB_VECTSIZE
                                         27         LIBDEF  LIB_EXTFUNC
          =FFFFFFE8                      27+LIB_EXTFUNC EQU COUNT_LIB
          >FFFFFFE2                      27+COUNT_LIB       SET     COUNT_LIB-LIB_VECTSIZE
                                         28         STRUCTURE       LIB,LN_SIZE
          =0000                          28+LIB     EQU     0
          >0000000E                      28+SOFFSET SET     LN_SIZE
                                         29         UBYTE   LIB_FLAGS
          =0000000E                      29+LIB_FLAGS EQU   SOFFSET
          >0000000F                      29+SOFFSET SET     SOFFSET+1
                                         30         UBYTE   LIB_pad
          =0000000F                      30+LIB_pad EQU     SOFFSET
          >00000010                      30+SOFFSET SET     SOFFSET+1
                                         31         UWORD   LIB_NEGSIZE
          =00000010                      31+LIB_NEGSIZE EQU SOFFSET
          >00000012                      31+SOFFSET SET     SOFFSET+2
                                         32         UWORD   LIB_POSSIZE
          =00000012                      32+LIB_POSSIZE EQU SOFFSET
          >00000014                      32+SOFFSET SET     SOFFSET+2
                                         33         UWORD   LIB_VERSION
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


          =00000014                      33+LIB_VERSION EQU SOFFSET
          >00000016                      33+SOFFSET SET     SOFFSET+2
                                         34         UWORD   LIB_REVISION
          =00000016                      34+LIB_REVISION EQU SOFFSET
          >00000018                      34+SOFFSET SET     SOFFSET+2
                                         35         APTR    LIB_IDSTRING
          =00000018                      35+LIB_IDSTRING EQU SOFFSET
          >0000001C                      35+SOFFSET SET     SOFFSET+4
                                         36         ULONG   LIB_SUM
          =0000001C                      36+LIB_SUM EQU     SOFFSET
          >00000020                      36+SOFFSET SET     SOFFSET+4
                                         37         UWORD   LIB_OPENCNT
          =00000020                      37+LIB_OPENCNT EQU SOFFSET
          >00000022                      37+SOFFSET SET     SOFFSET+2
                                         38         LABEL   LIB_SIZE
          =00000022                      38+LIB_SIZE EQU    SOFFSET
                                         39         BITDEF  LIB,SUMMING,0
                                         39+        BITDEF0 LIB,SUMMING,B_,0
          =0000                          39+LIBB_SUMMING EQU 0
          >00000001                      39+.001BITDEF      SET     1<<0
                                         39+        BITDEF0 LIB,SUMMING,F_,.001BITDEF
          =00000001                      39+LIBF_SUMMING EQU .001BITDEF
                                         40         BITDEF  LIB,CHANGED,1
                                         40+        BITDEF0 LIB,CHANGED,B_,1
          =00000001                      40+LIBB_CHANGED EQU 1
          >00000002                      40+.002BITDEF      SET     1<<1
                                         40+        BITDEF0 LIB,CHANGED,F_,.002BITDEF
          =00000002                      40+LIBF_CHANGED EQU .002BITDEF
                                         41         BITDEF  LIB,SUMUSED,2
                                         41+        BITDEF0 LIB,SUMUSED,B_,2
          =00000002                      41+LIBB_SUMUSED EQU 2
          >00000004                      41+.003BITDEF      SET     1<<2
                                         41+        BITDEF0 LIB,SUMUSED,F_,.003BITDEF
          =00000004                      41+LIBF_SUMUSED EQU .003BITDEF
                                         42         BITDEF  LIB,DELEXP,3
                                         42+        BITDEF0 LIB,DELEXP,B_,3
          =00000003                      42+LIBB_DELEXP EQU 3
          >00000008                      42+.004BITDEF      SET     1<<3
                                         42+        BITDEF0 LIB,DELEXP,F_,.004BITDEF
          =00000008                      42+LIBF_DELEXP EQU .004BITDEF
                                         43         BITDEF  LIB,EXP0CNT,4
                                         43+        BITDEF0 LIB,EXP0CNT,B_,4
          =00000004                      43+LIBB_EXP0CNT EQU 4
          >00000010                      43+.005BITDEF      SET     1<<4
                                         43+        BITDEF0 LIB,EXP0CNT,F_,.005BITDEF
          =00000010                      43+LIBF_EXP0CNT EQU .005BITDEF
                                         44 CALLLIB MACRO
                                         45         IFGT    NARG-1
                                         46         FAIL    !!!
                                         47         ENDC
                                         48         JSR     \1(A6)
                                         49         ENDM
                                         50 LINKLIB MACRO
                                         51         IFGT    NARG-2
                                         52         FAIL    !!!
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                         53         ENDC
                                         54         MOVE.L  A6,-(SP)
                                         55         MOVE.L  \2,A6
                                         56         JSR     \1(A6)
                                         57         MOVE.L  (SP)+,A6
                                         58         ENDM
                                         59         ENDC
                                          5         INCLUDE         'exec/initializers.i'
           True                           1         IFND    EXEC_INITIALIZERS_I
          >00000001                       2 EXEC_INITIALIZERS_I     SET     1
                                          3 INITBYTE        MACRO
                                          4         IFLE    (\1)-255
                                          5         DC.B    $a0,\1
                                          6         DC.B    \2,0
                                          7         MEXIT
                                          8         ENDC
                                          9         DC.B    $e0,0
                                         10         DC.W    \1
                                         11         DC.B    \2,0
                                         12         ENDM
                                         13 INITWORD        MACRO
                                         14         IFLE    (\1)-255
                                         15         DC.B    $90,\1
                                         16         DC.W    \2
                                         17         MEXIT
                                         18         ENDC
                                         19         DC.B    $d0,0
                                         20         DC.W    \1
                                         21         DC.W    \2
                                         22         ENDM
                                         23 INITLONG        MACRO
                                         24         IFLE    (\1)-255
                                         25         DC.B    $80,\1
                                         26         DC.L    \2
                                         27         MEXIT
                                         28         ENDC
                                         29         DC.B    $c0,0
                                         30         DC.W    \1
                                         31         DC.L    \2
                                         32         ENDM
                                         33 INITSTRUCT      MACRO
                                         34         DS.W    0
                                         35         IFC     '\4',''
                                         36 COUNT\@ SET     0
                                         37         ENDC
                                         38         IFNC    '\4',''
                                         39 COUNT\@ SET     \4
                                         40         ENDC
                                         41 CMD\@   SET     (((\1)<<4)!COUNT\@)
                                         42         IFLE    (\2)-255
                                         43         DC.B    (CMD\@)!$80
                                         44         DC.B    \2
                                         45         MEXIT
                                         46         ENDC
                                         47         DC.B    CMD\@!$0C0
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                         48         DC.B    (((\2)>>16)&$0FF)
                                         49         DC.W    ((\2)&$0FFFF)
                                         50         ENDM
                                         51         ENDC
                                          6         INCLUDE         'exec/execbase.i'
           True                           1         IFND    EXEC_EXECBASE_I
          >00000001                       2 EXEC_EXECBASE_I SET     1
           False                          3         IFND    EXEC_TYPES_I
                                          4         INCLUDE "exec/types.i"
                                          5         ENDC
           True                           6         IFND    EXEC_LISTS_I
                                          7         INCLUDE "exec/lists.i"
           True                           1         IFND    EXEC_LISTS_I
          >00000001                       2 EXEC_LISTS_I    SET     1
           False                          3         IFND    EXEC_NODES_I
                                          4         INCLUDE "exec/nodes.i"
                                          5         ENDC
                                          6         STRUCTURE       LH,0
          =0000                           6+LH      EQU     0
          >0000                           6+SOFFSET SET     0
                                          7         APTR    LH_HEAD
          =0000                           7+LH_HEAD EQU     SOFFSET
          >00000004                       7+SOFFSET SET     SOFFSET+4
                                          8         APTR    LH_TAIL
          =00000004                       8+LH_TAIL EQU     SOFFSET
          >00000008                       8+SOFFSET SET     SOFFSET+4
                                          9         APTR    LH_TAILPRED
          =00000008                       9+LH_TAILPRED EQU SOFFSET
          >0000000C                       9+SOFFSET SET     SOFFSET+4
                                         10         UBYTE   LH_TYPE
          =0000000C                      10+LH_TYPE EQU     SOFFSET
          >0000000D                      10+SOFFSET SET     SOFFSET+1
                                         11         UBYTE   LH_pad
          =0000000D                      11+LH_pad  EQU     SOFFSET
          >0000000E                      11+SOFFSET SET     SOFFSET+1
                                         12         LABEL   LH_SIZE
          =0000000E                      12+LH_SIZE EQU     SOFFSET
                                         13         STRUCTURE       MLH,0
          =0000                          13+MLH     EQU     0
          >0000                          13+SOFFSET SET     0
                                         14         APTR    MLH_HEAD
          =0000                          14+MLH_HEAD EQU    SOFFSET
          >00000004                      14+SOFFSET SET     SOFFSET+4
                                         15         APTR    MLH_TAIL
          =00000004                      15+MLH_TAIL EQU    SOFFSET
          >00000008                      15+SOFFSET SET     SOFFSET+4
                                         16         APTR    MLH_TAILPRED
          =00000008                      16+MLH_TAILPRED EQU SOFFSET
          >0000000C                      16+SOFFSET SET     SOFFSET+4
                                         17         LABEL   MLH_SIZE
          =0000000C                      17+MLH_SIZE EQU    SOFFSET
                                         18 NEWLIST MACRO
                                         19         MOVE.L  \1,LH_TAILPRED(\1)
                                         20         ADDQ.L  #4,\1
                                         21         CLR.L   (\1)
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                         22         MOVE.L  \1,-(\1)
                                         23         ENDM
                                         24 TSTLIST MACRO
                                         25         IFGT    NARG-1
                                         26         FAIL    !!!
                                         27         ENDC
                                         28         IFC     '\1',''
                                         29         CMP.L   LH_TAIL+LN_PRED(A0),A0
                                         30         ENDC
                                         31         IFNC    '\1',''
                                         32         CMP.L   LH_TAIL+LN_PRED(\1),\1
                                         33         ENDC
                                         34         ENDM
                                         35 TSTLST2 MACRO
                                         36         MOVE.L  \1,\2
                                         37         TST.L   (\2)
                                         38         ENDM
                                         39 SUCC    MACRO
                                         40         MOVE.L  (\1),\2
                                         41         ENDM
                                         42 PRED    MACRO
                                         43         MOVE.L  LN_PRED(\1),\2
                                         44         ENDM
                                         45 IFEMPTY MACRO
                                         46         CMP.L   LH_TAIL+LN_PRED(\1),\1
                                         47         BEQ     \2
                                         48         ENDM
                                         49 IFNOTEMPTY      MACRO
                                         50         CMP.L   LH_TAIL+LN_PRED(\1),\1
                                         51         BNE     \2
                                         52         ENDM
                                         53 TSTNODE MACRO
                                         54         MOVE.L  (\1),\2
                                         55         TST.L   (\2)
                                         56         ENDM
                                         57 NEXTNODE        MACRO
                                         58         MOVE.L  \1,\2
                                         59         MOVE.L  (\2),\1
                                         60         IFC     '\0',''
                                         61         BEQ     \3
                                         62         ENDC
                                         63         IFNC    '\0',''
                                         64         BEQ.S   \3
                                         65         ENDC
                                         66         ENDM
                                         67 ADDHEAD MACRO
                                         68         MOVE.L  (A0),D0
                                         69         MOVE.L  A1,(A0)
                                         70         MOVEM.L D0/A0,(A1)
                                         71         MOVE.L  D0,A0
                                         72         MOVE.L  A1,LN_PRED(A0)
                                         73         ENDM
                                         74 ADDTAIL MACRO
                                         75         ADDQ.L  #LH_TAIL,A0
                                         76         MOVE.L  LN_PRED(A0),D0
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                         77         MOVE.L  A1,LN_PRED(A0)
                                         78         MOVE.L  A0,(A1)
                                         79         MOVE.L  D0,LN_PRED(A1)
                                         80         MOVE.L  D0,A0
                                         81         MOVE.L  A1,(A0)
                                         82         ENDM
                                         83 REMOVE  MACRO
                                         84         MOVE.L  (A1),A0
                                         85         MOVE.L  LN_PRED(A1),A1
                                         86         MOVE.L  A0,(A1)
                                         87         MOVE.L  A1,LN_PRED(A0)
                                         88         ENDM
                                         89 REMHEAD MACRO
                                         90         MOVE.L  (A0),A1
                                         91         MOVE.L  (A1),D0
                                         92         BEQ.S   REMHEAD\@
                                         93         MOVE.L  D0,(A0)
                                         94         EXG.L   D0,A1
                                         95         MOVE.L  A0,LN_PRED(A1)
                                         96 REMHEAD\@
                                         97         ENDM
                                         98 REMHEADQ        MACRO
                                         99         MOVE.L  (\1),\2
                                        100         MOVE.L  (\2),\3
                                        101         MOVE.L  \3,(\1)
                                        102         MOVE.L  \1,LN_PRED(\3)
                                        103         ENDM
                                        104 REMTAIL MACRO
                                        105         MOVE.L  LH_TAIL+LN_PRED(A0),A1
                                        106         MOVE.L  LN_PRED(A1),D0
                                        107         BEQ.S   REMTAIL\@
                                        108         MOVE.L  D0,LH_TAIL+LN_PRED(A0)
                                        109         EXG.L   D0,A1
                                        110         MOVE.L  A0,(A1)
                                        111         ADDQ.L  #4,(A1)
                                        112 REMTAIL\@
                                        113         ENDM
                                        114         ENDC
                                          8         ENDC
           True                           9         IFND    EXEC_INTERRUPTS_I
                                         10         INCLUDE "exec/interrupts.i"
           True                           1         IFND    EXEC_INTERRUPTS_I
          >00000001                       2 EXEC_INTERRUPTS_I       SET     1
           False                          3         IFND    EXEC_NODES_I
                                          4         INCLUDE "exec/nodes.i"
                                          5         ENDC
           False                          6         IFND    EXEC_LISTS_I
                                          7         INCLUDE "exec/lists.i"
                                          8         ENDC
                                          9         STRUCTURE       IS,LN_SIZE
          =0000                           9+IS      EQU     0
          >0000000E                       9+SOFFSET SET     LN_SIZE
                                         10         APTR    IS_DATA
          =0000000E                      10+IS_DATA EQU     SOFFSET
          >00000012                      10+SOFFSET SET     SOFFSET+4
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                         11         APTR    IS_CODE
          =00000012                      11+IS_CODE EQU     SOFFSET
          >00000016                      11+SOFFSET SET     SOFFSET+4
                                         12         LABEL   IS_SIZE
          =00000016                      12+IS_SIZE EQU     SOFFSET
                                         13         STRUCTURE       IV,0
          =0000                          13+IV      EQU     0
          >0000                          13+SOFFSET SET     0
                                         14         APTR    IV_DATA
          =0000                          14+IV_DATA EQU     SOFFSET
          >00000004                      14+SOFFSET SET     SOFFSET+4
                                         15         APTR    IV_CODE
          =00000004                      15+IV_CODE EQU     SOFFSET
          >00000008                      15+SOFFSET SET     SOFFSET+4
                                         16         APTR    IV_NODE
          =00000008                      16+IV_NODE EQU     SOFFSET
          >0000000C                      16+SOFFSET SET     SOFFSET+4
                                         17         LABEL   IV_SIZE
          =0000000C                      17+IV_SIZE EQU     SOFFSET
                                         18         BITDEF  S,SAR,15
                                         18+        BITDEF0 S,SAR,B_,15
          =0000000F                      18+SB_SAR  EQU     15
          >00008000                      18+.006BITDEF      SET     1<<15
                                         18+        BITDEF0 S,SAR,F_,.006BITDEF
          =00008000                      18+SF_SAR  EQU     .006BITDEF
                                         19         BITDEF  S,TQE,14
                                         19+        BITDEF0 S,TQE,B_,14
          =0000000E                      19+SB_TQE  EQU     14
          >00004000                      19+.007BITDEF      SET     1<<14
                                         19+        BITDEF0 S,TQE,F_,.007BITDEF
          =00004000                      19+SF_TQE  EQU     .007BITDEF
                                         20         BITDEF  S,SINT,13
                                         20+        BITDEF0 S,SINT,B_,13
          =0000000D                      20+SB_SINT EQU     13
          >00002000                      20+.008BITDEF      SET     1<<13
                                         20+        BITDEF0 S,SINT,F_,.008BITDEF
          =00002000                      20+SF_SINT EQU     .008BITDEF
                                         21         STRUCTURE       SH,LH_SIZE
          =0000                          21+SH      EQU     0
          >0000000E                      21+SOFFSET SET     LH_SIZE
                                         22         UWORD   SH_PAD
          =0000000E                      22+SH_PAD  EQU     SOFFSET
          >00000010                      22+SOFFSET SET     SOFFSET+2
                                         23         LABEL   SH_SIZE
          =00000010                      23+SH_SIZE EQU     SOFFSET
          =000000F0                      24 SIH_PRIMASK     EQU     $0F0
          =00000005                      25 SIH_QUEUES      EQU     5
                                         26         BITDEF  INT,NMI,15
                                         26+        BITDEF0 INT,NMI,B_,15
          =0000000F                      26+INTB_NMI EQU    15
          >00008000                      26+.009BITDEF      SET     1<<15
                                         26+        BITDEF0 INT,NMI,F_,.009BITDEF
          =00008000                      26+INTF_NMI EQU    .009BITDEF
                                         27         ENDC
                                         11         ENDC
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


           False                         12         IFND    EXEC_LIBRARIES_I
                                         13         INCLUDE "exec/libraries.i"
                                         14         ENDC
                                         15         STRUCTURE       ExecBase,LIB_SIZE
          =0000                          15+ExecBase EQU    0
          >00000022                      15+SOFFSET SET     LIB_SIZE
                                         16         UWORD   SoftVer
          =00000022                      16+SoftVer EQU     SOFFSET
          >00000024                      16+SOFFSET SET     SOFFSET+2
                                         17         WORD    LowMemChkSum
          =00000024                      17+LowMemChkSum EQU SOFFSET
          >00000026                      17+SOFFSET SET     SOFFSET+2
                                         18         ULONG   ChkBase
          =00000026                      18+ChkBase EQU     SOFFSET
          >0000002A                      18+SOFFSET SET     SOFFSET+4
                                         19         APTR    ColdCapture
          =0000002A                      19+ColdCapture EQU SOFFSET
          >0000002E                      19+SOFFSET SET     SOFFSET+4
                                         20         APTR    CoolCapture
          =0000002E                      20+CoolCapture EQU SOFFSET
          >00000032                      20+SOFFSET SET     SOFFSET+4
                                         21         APTR    WarmCapture
          =00000032                      21+WarmCapture EQU SOFFSET
          >00000036                      21+SOFFSET SET     SOFFSET+4
                                         22         APTR    SysStkUpper
          =00000036                      22+SysStkUpper EQU SOFFSET
          >0000003A                      22+SOFFSET SET     SOFFSET+4
                                         23         APTR    SysStkLower
          =0000003A                      23+SysStkLower EQU SOFFSET
          >0000003E                      23+SOFFSET SET     SOFFSET+4
                                         24         ULONG   MaxLocMem
          =0000003E                      24+MaxLocMem EQU   SOFFSET
          >00000042                      24+SOFFSET SET     SOFFSET+4
                                         25         APTR    DebugEntry
          =00000042                      25+DebugEntry EQU  SOFFSET
          >00000046                      25+SOFFSET SET     SOFFSET+4
                                         26         APTR    DebugData
          =00000046                      26+DebugData EQU   SOFFSET
          >0000004A                      26+SOFFSET SET     SOFFSET+4
                                         27         APTR    AlertData
          =0000004A                      27+AlertData EQU   SOFFSET
          >0000004E                      27+SOFFSET SET     SOFFSET+4
                                         28         APTR    MaxExtMem
          =0000004E                      28+MaxExtMem EQU   SOFFSET
          >00000052                      28+SOFFSET SET     SOFFSET+4
                                         29         WORD    ChkSum
          =00000052                      29+ChkSum  EQU     SOFFSET
          >00000054                      29+SOFFSET SET     SOFFSET+2
                                         30         LABEL   IntVects
          =00000054                      30+IntVects EQU    SOFFSET
                                         31         STRUCT  IVTBE,IV_SIZE
          =00000054                      31+IVTBE   EQU     SOFFSET
          >00000060                      31+SOFFSET SET     SOFFSET+IV_SIZE
                                         32         STRUCT  IVDSKBLK,IV_SIZE
          =00000060                      32+IVDSKBLK EQU    SOFFSET
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


          >0000006C                      32+SOFFSET SET     SOFFSET+IV_SIZE
                                         33         STRUCT  IVSOFTINT,IV_SIZE
          =0000006C                      33+IVSOFTINT EQU   SOFFSET
          >00000078                      33+SOFFSET SET     SOFFSET+IV_SIZE
                                         34         STRUCT  IVPORTS,IV_SIZE
          =00000078                      34+IVPORTS EQU     SOFFSET
          >00000084                      34+SOFFSET SET     SOFFSET+IV_SIZE
                                         35         STRUCT  IVCOPER,IV_SIZE
          =00000084                      35+IVCOPER EQU     SOFFSET
          >00000090                      35+SOFFSET SET     SOFFSET+IV_SIZE
                                         36         STRUCT  IVVERTB,IV_SIZE
          =00000090                      36+IVVERTB EQU     SOFFSET
          >0000009C                      36+SOFFSET SET     SOFFSET+IV_SIZE
                                         37         STRUCT  IVBLIT,IV_SIZE
          =0000009C                      37+IVBLIT  EQU     SOFFSET
          >000000A8                      37+SOFFSET SET     SOFFSET+IV_SIZE
                                         38         STRUCT  IVAUD0,IV_SIZE
          =000000A8                      38+IVAUD0  EQU     SOFFSET
          >000000B4                      38+SOFFSET SET     SOFFSET+IV_SIZE
                                         39         STRUCT  IVAUD1,IV_SIZE
          =000000B4                      39+IVAUD1  EQU     SOFFSET
          >000000C0                      39+SOFFSET SET     SOFFSET+IV_SIZE
                                         40         STRUCT  IVAUD2,IV_SIZE
          =000000C0                      40+IVAUD2  EQU     SOFFSET
          >000000CC                      40+SOFFSET SET     SOFFSET+IV_SIZE
                                         41         STRUCT  IVAUD3,IV_SIZE
          =000000CC                      41+IVAUD3  EQU     SOFFSET
          >000000D8                      41+SOFFSET SET     SOFFSET+IV_SIZE
                                         42         STRUCT  IVRBF,IV_SIZE
          =000000D8                      42+IVRBF   EQU     SOFFSET
          >000000E4                      42+SOFFSET SET     SOFFSET+IV_SIZE
                                         43         STRUCT  IVDSKSYNC,IV_SIZE
          =000000E4                      43+IVDSKSYNC EQU   SOFFSET
          >000000F0                      43+SOFFSET SET     SOFFSET+IV_SIZE
                                         44         STRUCT  IVEXTER,IV_SIZE
          =000000F0                      44+IVEXTER EQU     SOFFSET
          >000000FC                      44+SOFFSET SET     SOFFSET+IV_SIZE
                                         45         STRUCT  IVINTEN,IV_SIZE
          =000000FC                      45+IVINTEN EQU     SOFFSET
          >00000108                      45+SOFFSET SET     SOFFSET+IV_SIZE
                                         46         STRUCT  IVNMI,IV_SIZE
          =00000108                      46+IVNMI   EQU     SOFFSET
          >00000114                      46+SOFFSET SET     SOFFSET+IV_SIZE
                                         47         APTR    ThisTask
          =00000114                      47+ThisTask EQU    SOFFSET
          >00000118                      47+SOFFSET SET     SOFFSET+4
                                         48         ULONG   IdleCount
          =00000118                      48+IdleCount EQU   SOFFSET
          >0000011C                      48+SOFFSET SET     SOFFSET+4
                                         49         ULONG   DispCount
          =0000011C                      49+DispCount EQU   SOFFSET
          >00000120                      49+SOFFSET SET     SOFFSET+4
                                         50         UWORD   Quantum
          =00000120                      50+Quantum EQU     SOFFSET
          >00000122                      50+SOFFSET SET     SOFFSET+2
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                         51         UWORD   Elapsed
          =00000122                      51+Elapsed EQU     SOFFSET
          >00000124                      51+SOFFSET SET     SOFFSET+2
                                         52         UWORD   SysFlags
          =00000124                      52+SysFlags EQU    SOFFSET
          >00000126                      52+SOFFSET SET     SOFFSET+2
                                         53         BYTE    IDNestCnt
          =00000126                      53+IDNestCnt EQU   SOFFSET
          >00000127                      53+SOFFSET SET     SOFFSET+1
                                         54         BYTE    TDNestCnt
          =00000127                      54+TDNestCnt EQU   SOFFSET
          >00000128                      54+SOFFSET SET     SOFFSET+1
                                         55         UWORD   AttnFlags
          =00000128                      55+AttnFlags EQU   SOFFSET
          >0000012A                      55+SOFFSET SET     SOFFSET+2
                                         56         UWORD   AttnResched
          =0000012A                      56+AttnResched EQU SOFFSET
          >0000012C                      56+SOFFSET SET     SOFFSET+2
                                         57         APTR    ResModules
          =0000012C                      57+ResModules EQU  SOFFSET
          >00000130                      57+SOFFSET SET     SOFFSET+4
                                         58         APTR    TaskTrapCode
          =00000130                      58+TaskTrapCode EQU SOFFSET
          >00000134                      58+SOFFSET SET     SOFFSET+4
                                         59         APTR    TaskExceptCode
          =00000134                      59+TaskExceptCode EQU SOFFSET
          >00000138                      59+SOFFSET SET     SOFFSET+4
                                         60         APTR    TaskExitCode
          =00000138                      60+TaskExitCode EQU SOFFSET
          >0000013C                      60+SOFFSET SET     SOFFSET+4
                                         61         ULONG   TaskSigAlloc
          =0000013C                      61+TaskSigAlloc EQU SOFFSET
          >00000140                      61+SOFFSET SET     SOFFSET+4
                                         62         UWORD   TaskTrapAlloc
          =00000140                      62+TaskTrapAlloc EQU SOFFSET
          >00000142                      62+SOFFSET SET     SOFFSET+2
                                         63         STRUCT  MemList,LH_SIZE
          =00000142                      63+MemList EQU     SOFFSET
          >00000150                      63+SOFFSET SET     SOFFSET+LH_SIZE
                                         64         STRUCT  ResourceList,LH_SIZE
          =00000150                      64+ResourceList EQU SOFFSET
          >0000015E                      64+SOFFSET SET     SOFFSET+LH_SIZE
                                         65         STRUCT  DeviceList,LH_SIZE
          =0000015E                      65+DeviceList EQU  SOFFSET
          >0000016C                      65+SOFFSET SET     SOFFSET+LH_SIZE
                                         66         STRUCT  IntrList,LH_SIZE
          =0000016C                      66+IntrList EQU    SOFFSET
          >0000017A                      66+SOFFSET SET     SOFFSET+LH_SIZE
                                         67         STRUCT  LibList,LH_SIZE
          =0000017A                      67+LibList EQU     SOFFSET
          >00000188                      67+SOFFSET SET     SOFFSET+LH_SIZE
                                         68         STRUCT  PortList,LH_SIZE
          =00000188                      68+PortList EQU    SOFFSET
          >00000196                      68+SOFFSET SET     SOFFSET+LH_SIZE
                                         69         STRUCT  TaskReady,LH_SIZE
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


          =00000196                      69+TaskReady EQU   SOFFSET
          >000001A4                      69+SOFFSET SET     SOFFSET+LH_SIZE
                                         70         STRUCT  TaskWait,LH_SIZE
          =000001A4                      70+TaskWait EQU    SOFFSET
          >000001B2                      70+SOFFSET SET     SOFFSET+LH_SIZE
                                         71         STRUCT  SoftInts,SH_SIZE*5
          =000001B2                      71+SoftInts EQU    SOFFSET
          >00000202                      71+SOFFSET SET     SOFFSET+SH_SIZE*5
                                         72         STRUCT  LastAlert,4*4
          =00000202                      72+LastAlert EQU   SOFFSET
          >00000212                      72+SOFFSET SET     SOFFSET+4*4
                                         73         UBYTE   VBlankFrequency
          =00000212                      73+VBlankFrequency EQU SOFFSET
          >00000213                      73+SOFFSET SET     SOFFSET+1
                                         74         UBYTE   PowerSupplyFrequency
          =00000213                      74+PowerSupplyFrequency EQU SOFFSET
          >00000214                      74+SOFFSET SET     SOFFSET+1
                                         75         STRUCT  SemaphoreList,LH_SIZE
          =00000214                      75+SemaphoreList EQU SOFFSET
          >00000222                      75+SOFFSET SET     SOFFSET+LH_SIZE
                                         76         APTR    KickMemPtr
          =00000222                      76+KickMemPtr EQU  SOFFSET
          >00000226                      76+SOFFSET SET     SOFFSET+4
                                         77         APTR    KickTagPtr
          =00000226                      77+KickTagPtr EQU  SOFFSET
          >0000022A                      77+SOFFSET SET     SOFFSET+4
                                         78         APTR    KickCheckSum
          =0000022A                      78+KickCheckSum EQU SOFFSET
          >0000022E                      78+SOFFSET SET     SOFFSET+4
                                         79         UWORD   ex_Pad0
          =0000022E                      79+ex_Pad0 EQU     SOFFSET
          >00000230                      79+SOFFSET SET     SOFFSET+2
                                         80         ULONG   ex_Reserved0
          =00000230                      80+ex_Reserved0 EQU SOFFSET
          >00000234                      80+SOFFSET SET     SOFFSET+4
                                         81         APTR    ex_RamLibPrivate
          =00000234                      81+ex_RamLibPrivate EQU SOFFSET
          >00000238                      81+SOFFSET SET     SOFFSET+4
                                         82         ULONG   ex_EClockFrequency
          =00000238                      82+ex_EClockFrequency EQU SOFFSET
          >0000023C                      82+SOFFSET SET     SOFFSET+4
                                         83         ULONG   ex_CacheControl
          =0000023C                      83+ex_CacheControl EQU SOFFSET
          >00000240                      83+SOFFSET SET     SOFFSET+4
                                         84         ULONG   ex_TaskID
          =00000240                      84+ex_TaskID EQU   SOFFSET
          >00000244                      84+SOFFSET SET     SOFFSET+4
                                         85         STRUCT  ex_ExecBaseNewReserved,8
          =00000244                      85+ex_ExecBaseNewReserved EQU SOFFSET
          >0000024C                      85+SOFFSET SET     SOFFSET+8
                                         86         LABEL   SYSBASESIZE
          =0000024C                      86+SYSBASESIZE EQU SOFFSET
                                         87         BITDEF  AF,68010,0
                                         87+        BITDEF0 AF,68010,B_,0
          =0000                          87+AFB_68010 EQU   0
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


          >00000001                      87+.010BITDEF      SET     1<<0
                                         87+        BITDEF0 AF,68010,F_,.010BITDEF
          =00000001                      87+AFF_68010 EQU   .010BITDEF
                                         88         BITDEF  AF,68020,1
                                         88+        BITDEF0 AF,68020,B_,1
          =00000001                      88+AFB_68020 EQU   1
          >00000002                      88+.011BITDEF      SET     1<<1
                                         88+        BITDEF0 AF,68020,F_,.011BITDEF
          =00000002                      88+AFF_68020 EQU   .011BITDEF
                                         89         BITDEF  AF,68030,2
                                         89+        BITDEF0 AF,68030,B_,2
          =00000002                      89+AFB_68030 EQU   2
          >00000004                      89+.012BITDEF      SET     1<<2
                                         89+        BITDEF0 AF,68030,F_,.012BITDEF
          =00000004                      89+AFF_68030 EQU   .012BITDEF
                                         90         BITDEF  AF,68040,3
                                         90+        BITDEF0 AF,68040,B_,3
          =00000003                      90+AFB_68040 EQU   3
          >00000008                      90+.013BITDEF      SET     1<<3
                                         90+        BITDEF0 AF,68040,F_,.013BITDEF
          =00000008                      90+AFF_68040 EQU   .013BITDEF
                                         91         BITDEF  AF,68881,4
                                         91+        BITDEF0 AF,68881,B_,4
          =00000004                      91+AFB_68881 EQU   4
          >00000010                      91+.014BITDEF      SET     1<<4
                                         91+        BITDEF0 AF,68881,F_,.014BITDEF
          =00000010                      91+AFF_68881 EQU   .014BITDEF
                                         92         BITDEF  AF,68882,5
                                         92+        BITDEF0 AF,68882,B_,5
          =00000005                      92+AFB_68882 EQU   5
          >00000020                      92+.015BITDEF      SET     1<<5
                                         92+        BITDEF0 AF,68882,F_,.015BITDEF
          =00000020                      92+AFF_68882 EQU   .015BITDEF
                                         93         BITDEF  CACR,EnableI,0
                                         93+        BITDEF0 CACR,EnableI,B_,0
          =0000                          93+CACRB_EnableI EQU 0
          >00000001                      93+.016BITDEF      SET     1<<0
                                         93+        BITDEF0 CACR,EnableI,F_,.016BITDEF
          =00000001                      93+CACRF_EnableI EQU .016BITDEF
                                         94         BITDEF  CACR,FreezeI,1
                                         94+        BITDEF0 CACR,FreezeI,B_,1
          =00000001                      94+CACRB_FreezeI EQU 1
          >00000002                      94+.017BITDEF      SET     1<<1
                                         94+        BITDEF0 CACR,FreezeI,F_,.017BITDEF
          =00000002                      94+CACRF_FreezeI EQU .017BITDEF
                                         95         BITDEF  CACR,ClearI,3
                                         95+        BITDEF0 CACR,ClearI,B_,3
          =00000003                      95+CACRB_ClearI EQU 3
          >00000008                      95+.018BITDEF      SET     1<<3
                                         95+        BITDEF0 CACR,ClearI,F_,.018BITDEF
          =00000008                      95+CACRF_ClearI EQU .018BITDEF
                                         96         BITDEF  CACR,IBE,4
                                         96+        BITDEF0 CACR,IBE,B_,4
          =00000004                      96+CACRB_IBE EQU   4
          >00000010                      96+.019BITDEF      SET     1<<4
MC68000 ASSEMBLER VERSION 11.183                                        '$Header: library.asm,v 36.1 89/12/06 21:44:29 dale Exp $' 

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                         96+        BITDEF0 CACR,IBE,F_,.019BITDEF
          =00000010                      96+CACRF_IBE EQU   .019BITDEF
                                         97         BITDEF  CACR,EnableD,8
                                         97+        BITDEF0 CACR,EnableD,B_,8
          =00000008                      97+CACRB_EnableD EQU 8
          >00000100                      97+.020BITDEF      SET     1<<8
                                         97+        BITDEF0 CACR,EnableD,F_,.020BITDEF
          =00000100                      97+CACRF_EnableD EQU .020BITDEF
                                         98         BITDEF  CACR,FreezeD,9
                                         98+        BITDEF0 CACR,FreezeD,B_,9
          =00000009                      98+CACRB_FreezeD EQU 9
          >00000200                      98+.021BITDEF      SET     1<<9
                                         98+        BITDEF0 CACR,FreezeD,F_,.021BITDEF
          =00000200                      98+CACRF_FreezeD EQU .021BITDEF
                                         99         BITDEF  CACR,ClearD,11
                                         99+        BITDEF0 CACR,ClearD,B_,11
          =0000000B                      99+CACRB_ClearD EQU 11
          >00000800                      99+.022BITDEF      SET     1<<11
                                         99+        BITDEF0 CACR,ClearD,F_,.022BITDEF
          =00000800                      99+CACRF_ClearD EQU .022BITDEF
                                        100         BITDEF  CACR,DBE,12
                                        100+        BITDEF0 CACR,DBE,B_,12
          =0000000C                     100+CACRB_DBE EQU   12
          >00001000                     100+.023BITDEF      SET     1<<12
                                        100+        BITDEF0 CACR,DBE,F_,.023BITDEF
          =00001000                     100+CACRF_DBE EQU   .023BITDEF
                                        101         BITDEF  CACR,WriteAllocate,13
                                        101+        BITDEF0 CACR,WriteAllocate,B_,13
          =0000000D                     101+CACRB_WriteAllocate EQU 13
          >00002000                     101+.024BITDEF      SET     1<<13
                                        101+        BITDEF0 CACR,WriteAllocate,F_,.024BITDEF
          =00002000                     101+CACRF_WriteAllocate EQU .024BITDEF
                                        102         ENDC
                                          7         INCLUDE         'mathieeedoubbas_rev.i'
          =00000024                       1 VERSION         EQU     36
          =00000037                       2 REVISION        EQU     55
                                          3 DATE    MACRO
                                          4                 dc.b    '15 Dec 1989'
                                          5         ENDM
                                          6 VERS    MACRO
                                          7                 dc.b    'mathieeedoubbas 36.55'
                                          8         ENDM
                                          9 VSTRING MACRO
                                         10                 dc.b    'mathieeedoubbas 36.55 (15 Dec 1989)',13,10,0
                                         11                 ds.w    0
                                         12         ENDM
                                          8         INCLUDE         'macros.i'
                                          2 **********************************************************************
                                          3 *                                                                    *
                                          4 *   Copyright 1985, Commodore-Amiga Inc.   All rights reserved.      *
                                          5 *   No part of this program may be reproduced, transmitted,          *
                                          6 *   transcribed, stored in retrieval system, or translated into      *
                                          7 *   any language or computer language, in any form or by any         *
                                          8 *   means, electronic, mechanical, magnetic, optical, chemical,      *
                                          9 *   manual or otherwise, without the prior written permission of     *
MC68000 ASSEMBLER VERSION 11.183                                         '$Header: macros.i,v 36.0 89/06/05 16:14:20 dale Exp $'   

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                         10 *   Commodore-Amiga Incorporated, 983 University Ave. Building #D,   *
                                         11 *   Los Gatos, California, 95030                                     *
                                         12 *                                                                    *
                                         13 **********************************************************************
                                         14 *
                                         15 *   Source Control
                                         16 *   --------------
                                         17 *   $Header: macros.i,v 36.0 89/06/05 16:14:20 dale Exp $
                                         18 *
                                         19 **********************************************************************
                                         20
                                         21 *------ library function definition macro ----------------------------
                                         22
                                         23 XREF_EXE        MACRO
                                         24         XREF    _LVO\1
                                         25                 ENDM
                                         26
                                         27 XREF_ML         MACRO
                                         28         XREF    _LVO\1
                                         29                 ENDM
                                         30
                                         31
                                         32 *------ library dispatch macros --------------------------------------
                                         33
                                         34 LINKEXE         MACRO
                                         35                 LINKLIB _LVO\1,_AbsExecBase
                                         36                 ENDM
                                         37
                                         38 CALLEXE         MACRO
                                         39                 CALLLIB _LVO\1
                                         40                 ENDM
                                          9         include "resources/mathresource.i"
           True                           1         IFND    RESOURCES_MATHRESOURCE_I
          >00000001                       2 RESOURCES_MATHRESOURCE_I        SET     1
           False                          3         IFND    EXEC_TYPES_I
                                          4         include "exec/types.i"
                                          5         ENDC
           False                          6         IFND    EXEC_NODES_I
                                          7         include "exec/nodes.i"
                                          8         ENDC
                                          9         STRUCTURE       MathIEEEResourceResource,0
          =0000                           9+MathIEEEResourceResource EQU 0
          >0000                           9+SOFFSET SET     0
                                         10         STRUCT  MathIEEEResource_Node,LN_SIZE
          =0000                          10+MathIEEEResource_Node EQU SOFFSET
          >0000000E                      10+SOFFSET SET     SOFFSET+LN_SIZE
                                         11         USHORT  MathIEEEResource_Flags
          =0000000E                      11+MathIEEEResource_Flags EQU SOFFSET
          >00000010                      11+SOFFSET SET     SOFFSET+2
                                         12         APTR    MathIEEEResource_BaseAddr
          =00000010                      12+MathIEEEResource_BaseAddr EQU SOFFSET
          >00000014                      12+SOFFSET SET     SOFFSET+4
                                         13         APTR    MathIEEEResource_DblBasInit
          =00000014                      13+MathIEEEResource_DblBasInit EQU SOFFSET
          >00000018                      13+SOFFSET SET     SOFFSET+4
MC68000 ASSEMBLER VERSION 11.183                                         '$Header: macros.i,v 36.0 89/06/05 16:14:20 dale Exp $'   

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                         14         APTR    MathIEEEResource_DblTransInit
          =00000018                      14+MathIEEEResource_DblTransInit EQU SOFFSET
          >0000001C                      14+SOFFSET SET     SOFFSET+4
                                         15         APTR    MathIEEEResource_SglBasInit
          =0000001C                      15+MathIEEEResource_SglBasInit EQU SOFFSET
          >00000020                      15+SOFFSET SET     SOFFSET+4
                                         16         APTR    MathIEEEResource_SglTransInit
          =00000020                      16+MathIEEEResource_SglTransInit EQU SOFFSET
          >00000024                      16+SOFFSET SET     SOFFSET+4
                                         17         APTR    MathIEEEResource_ExtBasInit
          =00000024                      17+MathIEEEResource_ExtBasInit EQU SOFFSET
          >00000028                      17+SOFFSET SET     SOFFSET+4
                                         18         APTR    MathIEEEResource_ExtTransInit
          =00000028                      18+MathIEEEResource_ExtTransInit EQU SOFFSET
          >0000002C                      18+SOFFSET SET     SOFFSET+4
                                         19         LABEL   MathIEEEResourceResource_SIZE
          =0000002C                      19+MathIEEEResourceResource_SIZE EQU SOFFSET
                                         20         BITDEF  MATHIEEERESOURCE,DBLBAS,0
                                         20+        BITDEF0 MATHIEEERESOURCE,DBLBAS,B_,0
          =0000                          20+MATHIEEERESOURCEB_DBLBAS EQU 0
          >00000001                      20+.025BITDEF      SET     1<<0
                                         20+        BITDEF0 MATHIEEERESOURCE,DBLBAS,F_,.025BITDEF
          =00000001                      20+MATHIEEERESOURCEF_DBLBAS EQU .025BITDEF
                                         21         BITDEF  MATHIEEERESOURCE,DBLTRANS,1
                                         21+        BITDEF0 MATHIEEERESOURCE,DBLTRANS,B_,1
          =00000001                      21+MATHIEEERESOURCEB_DBLTRANS EQU 1
          >00000002                      21+.026BITDEF      SET     1<<1
                                         21+        BITDEF0 MATHIEEERESOURCE,DBLTRANS,F_,.026BITDEF
          =00000002                      21+MATHIEEERESOURCEF_DBLTRANS EQU .026BITDEF
                                         22         BITDEF  MATHIEEERESOURCE,SGLBAS,2
                                         22+        BITDEF0 MATHIEEERESOURCE,SGLBAS,B_,2
          =00000002                      22+MATHIEEERESOURCEB_SGLBAS EQU 2
          >00000004                      22+.027BITDEF      SET     1<<2
                                         22+        BITDEF0 MATHIEEERESOURCE,SGLBAS,F_,.027BITDEF
          =00000004                      22+MATHIEEERESOURCEF_SGLBAS EQU .027BITDEF
                                         23         BITDEF  MATHIEEERESOURCE,SGLTRANS,3
                                         23+        BITDEF0 MATHIEEERESOURCE,SGLTRANS,B_,3
          =00000003                      23+MATHIEEERESOURCEB_SGLTRANS EQU 3
          >00000008                      23+.028BITDEF      SET     1<<3
                                         23+        BITDEF0 MATHIEEERESOURCE,SGLTRANS,F_,.028BITDEF
          =00000008                      23+MATHIEEERESOURCEF_SGLTRANS EQU .028BITDEF
                                         24         BITDEF  MATHIEEERESOURCE,EXTBAS,4
                                         24+        BITDEF0 MATHIEEERESOURCE,EXTBAS,B_,4
          =00000004                      24+MATHIEEERESOURCEB_EXTBAS EQU 4
          >00000010                      24+.029BITDEF      SET     1<<4
                                         24+        BITDEF0 MATHIEEERESOURCE,EXTBAS,F_,.029BITDEF
          =00000010                      24+MATHIEEERESOURCEF_EXTBAS EQU .029BITDEF
                                         25         BITDEF  MATHIEEERESOURCE,EXTTRANS,5
                                         25+        BITDEF0 MATHIEEERESOURCE,EXTTRANS,B_,5
          =00000005                      25+MATHIEEERESOURCEB_EXTTRANS EQU 5
          >00000020                      25+.030BITDEF      SET     1<<5
                                         25+        BITDEF0 MATHIEEERESOURCE,EXTTRANS,F_,.030BITDEF
          =00000020                      25+MATHIEEERESOURCEF_EXTTRANS EQU .030BITDEF
                                         26         ENDC
                                         10         include "privatemathlibrary.i"
MC68000 ASSEMBLER VERSION 11.183                                         '$Header: macros.i,v 36.0 89/06/05 16:14:20 dale Exp $'   

   LOC              OBJECT             STMT            SOURCE STATEMENT


           True                           1         IFND    LIBRARIES_MATHLIBRARY_I
          >00000001                       2 LIBRARIES_MATHLIBRARY_I SET     1
                                          3 **
                                          4 **      FILENAME: libraries/mathlibrary.i
                                          5 **      RELEASE:  1.3
                                          6 **
                                          7 **
                                          8 **
                                          9 **      (C) Copyright 1987,1988 Commodore-Amiga, Inc.
                                         10 **          All Rights Reserved
                                         11 **
                                         12
           False                         13         ifnd    EXEC_TYPES_I
                                         14         include "exec/types.i"
                                         15         endc
                                         16
           False                         17         ifnd EXEC_LIBRARIES_I
                                         18         include "exec/libraries.i"
                                         19         endc
                                         20
                                         21         STRUCTURE MathIEEEBase,0
          =0000                          21+MathIEEEBase EQU 0
          >0000                          21+SOFFSET SET     0
                                         22                 STRUCT  MathIEEEBase_LibNode,LIB_SIZE
          =0000                          22+MathIEEEBase_LibNode EQU SOFFSET
          >00000022                      22+SOFFSET SET     SOFFSET+LIB_SIZE
                                         23                 UBYTE   MathIEEEBase_Flags
          =00000022                      23+MathIEEEBase_Flags EQU SOFFSET
          >00000023                      23+SOFFSET SET     SOFFSET+1
                                         24                 UBYTE   MathIEEEBase_reserved1
          =00000023                      24+MathIEEEBase_reserved1 EQU SOFFSET
          >00000024                      24+SOFFSET SET     SOFFSET+1
                                         25                 APTR    MathIEEEBase_68881      ; ptr to base of 68881 io
          =00000024                      25+MathIEEEBase_68881 EQU SOFFSET
          >00000028                      25+SOFFSET SET     SOFFSET+4
                                         26                 APTR    MathIEEEBase_SysLib
          =00000028                      26+MathIEEEBase_SysLib EQU SOFFSET
          >0000002C                      26+SOFFSET SET     SOFFSET+4
                                         27                 APTR    MathIEEEBase_SegList
          =0000002C                      27+MathIEEEBase_SegList EQU SOFFSET
          >00000030                      27+SOFFSET SET     SOFFSET+4
                                         28                 APTR    MathIEEEBase_Resource   ; ptr to math resource found
          =00000030                      28+MathIEEEBase_Resource EQU SOFFSET
          >00000034                      28+SOFFSET SET     SOFFSET+4
                                         29                 APTR    MathIEEEBase_TaskOpenLib        ; hook
          =00000034                      29+MathIEEEBase_TaskOpenLib EQU SOFFSET
          >00000038                      29+SOFFSET SET     SOFFSET+4
                                         30                 APTR    MathIEEEBase_TaskCloseLib       ; hook
          =00000038                      30+MathIEEEBase_TaskCloseLib EQU SOFFSET
          >0000003C                      30+SOFFSET SET     SOFFSET+4
                                         31 *       This structure may be extended in the future */
                                         32         LABEL   MathIEEEBase_SIZE
          =0000003C                      32+MathIEEEBase_SIZE EQU SOFFSET
                                         33
                                         34 ;       Math resources may need to know when a program opens or closes this
MC68000 ASSEMBLER VERSION 11.183                                         '$Header: macros.i,v 36.0 89/06/05 16:14:20 dale Exp $'   

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                         35 ;       library. The functions TaskOpenLib and TaskCloseLib are called when
                                         36 ;       a task opens or closes this library. The yare initialized to point
                                         37 ;       local initialization pertaining to 68881 stuff if 68881 resources
                                         38 ;       are found. To override the default the vendor must provide appropriate
                                         39 ;       hooks in the MathIEEEResource. If specified, these will be called
                                         40 ;       when the library initializes.
                                         41
                                         42         ENDC    ; LIBRARIES_MATHLIBRARY_I
                                         11         XREF    MIName
                                         12         xref    _AbsExecBase
                                         13         XREF_EXE        MakeLibrary     * Generates:  XREF      _LVOMakeLibrary
                                         13+        XREF    _LVOMakeLibrary
                                         14         XREF_EXE        OpenResource    * Generates:  XREF      _LVOOpenLibrary
                                         14+        XREF    _LVOOpenResource
                                         15         XREF_EXE        AddLibrary      * Generates:  XREF  _LVOAddLibrary
                                         15+        XREF    _LVOAddLibrary
                                         16         XREF_EXE        FreeMem         * Generates:  XREF  _LVOFreeMem
                                         16+        XREF    _LVOFreeMem
                                         17         XREF_EXE        NoFunc          * Generates:  XREF  _LVONoFunc
                                         17+        XREF    _LVONoFunc
                                         18         XREF_EXE        Permit
                                         18+        XREF    _LVOPermit
                                         19         XREF_EXE        Forbid
                                         19+        XREF    _LVOForbid
                                         20         XDEF    _MathSegList
                                         21         XDEF    MIInit
0000'                                    22 my_rts:
0000'      4280                          23         clr.l   d0
0002'      4E75                          24         rts
                                         25         xref    _LVOMakeLibrary
                                         26         xref    _LVOAddLibrary
                                         27         xref    hardlibFuncInit
                                         28         xref    iolibFuncInit
0004'      4D61  7468  4945  4545        29 io68881 dc.b    'MathIEEE.resource',0
           2E72  6573  6F75  7263
           6500
0016'                                    30         CNOP    0,2
0016'                                    31 MIInit:
0016'      23C8  0000  0186              32         move.l  a0,_MathSegList
001C'      48E7  3020                    33         movem.l d2/d3/a2,-(sp)  * save registers used
0020'      4282                          34         clr.l   d2
0022'      4283                          35         clr.l   d3
0024'      41F9  0000  0000              36         lea     hardlibFuncInit,a0
002A'      082E  0004  0129              37         btst    #AFB_68881,AttnFlags+1(a6)
           True                          38         ifnd    MAXIPLANBUG
0030'      6626                          39         bne.s   load_it
                                         40         endc
0032'      7000                          41         moveq   #0,d0                   * resource version
0034'      43FA  FFCE                    42         lea     io68881,a1
0038'      4EAE  0000                    43         jsr     _LVOOpenResource(a6)    * for now
003C'      2600                          44         move.l  d0,d3
003E'      6712                          45         beq.s   use_soft
0040'      2240                          46                 move.l  d0,a1
0042'      2429  0010                    47                 move.l  MathIEEEResource_BaseAddr(a1),d2        ; extract ptr to 68881 b
0046'      4A82                          48                 tst.l   d2                      ; is it there?
MC68000 ASSEMBLER VERSION 11.183                                         '$Header: macros.i,v 36.0 89/06/05 16:14:20 dale Exp $'   

   LOC              OBJECT             STMT            SOURCE STATEMENT


0048'      6708                          49                 beq.s   use_soft
004A'      41F9  0000  0000              50                 lea     iolibFuncInit,a0
0050'      6006                          51         bra.s   load_it
0052'                                    52 use_soft:
0052'      41F9  0000  0000              53         lea     libFuncInit,a0
0058'                                    54 load_it:
0058'      95CA                          55         sub.l   a2,a2                   * There is not MakeLibrary init
005A'      43F9  0000  00CA              56         lea     libStructInit,a1        *
0060'      203C  0000  003C              57         move.l  #MathIEEEBase_SIZE,d0
0066'      4281                          58         clr.l   d1
0068'      4EAE  0000                    59         jsr     _LVOMakeLibrary(a6)
006C'      2440                          60         move.l  d0,a2
006E'      43FA  FF90                    61         lea     my_rts,a1
0072'      2549  0034                    62         move.l  a1,MathIEEEBase_TaskOpenLib(a2)
0076'      2549  0038                    63         move.l  a1,MathIEEEBase_TaskCloseLib(a2)
007A'      102E  0129                    64         move.b  AttnFlags+1(a6),d0
007E'      0200  0010                    65         and.b   #AFF_68881,d0
           False                         66         ifd     MAXIPLANBUG
0082'                                    67         bclr    #AFB_68881,d0
0082'                                    68         btst    #AFB_68881,d0
                                         69         endc
                                         70 *>      if <>
0082'      670A                          71         beq.s _if00000
0084'      43F9  0000  0000              72                 lea     init_68881,a1
008A'      2549  0034                    73                 move.l  a1,MathIEEEBase_TaskOpenLib(a2)
                                         74 *>      endif
008E'                                    75 _if00000:
008E'      1540  0022                    76         move.b  d0,MathIEEEBase_Flags(a2)
0092'      2542  0024                    77         move.l  d2,MathIEEEBase_68881(a2)
0096'      254E  0028                    78         move.l  a6,MathIEEEBase_SysLib(a2)
009A'      2543  0030                    79         move.l  d3,MathIEEEBase_Resource(a2)
                                         80 *>      if <>                           ; check for alternate routines
009E'      671A                          81         beq.s _if00001
00A0'      43F9  0000  0000              82                 lea     init_io68881,a1
00A6'      2549  0034                    83                 move.l  a1,MathIEEEBase_TaskOpenLib(a2)
00AA'      2243                          84                 move.l  d3,a1
00AC'      0829  0000  000F              85                 btst    #MATHIEEERESOURCEB_DBLBAS,MathIEEEResource_Flags+1(a1)
                                         86 *>              if <>
00B2'      6706                          87                 beq.s _if00002
00B4'      2069  0014                    88                         move.l  MathIEEEResource_DblBasInit(a1),a0
00B8'      4E90                          89                         jsr (a0)
                                         90 *>              endif
00BA'                                    91 _if00002:
                                         92 *>      endif
00BA'                                    93 _if00001:
00BA'      224A                          94         move.l  a2,a1
00BC'      4EAE  0000                    95         jsr     _LVOAddLibrary(a6)      ; a1->Library
00C0'      4CDF  040C                    96         movem.l (sp)+,d2/d3/a2  * restore register
00C4'      4E75                          97         rts
00C6'                                    98 MIExtFunc:
00C6'      7000                          99                 moveq   #0,d0
00C8'      4E75                         100                 RTS
00CA'                                   101 libStructInit:
                                        102                 INITBYTE    LN_TYPE,NT_LIBRARY
           True                         102+        IFLE    (LN_TYPE)-255
MC68000 ASSEMBLER VERSION 11.183                                         '$Header: macros.i,v 36.0 89/06/05 16:14:20 dale Exp $'   

   LOC              OBJECT             STMT            SOURCE STATEMENT


00CA'      A008                         102+        DC.B    $a0,LN_TYPE
00CC'      0900                         102+        DC.B    NT_LIBRARY,0
                                        103                 INITLONG    LN_NAME,MIName
           True                         103+        IFLE    (LN_NAME)-255
00CE'      800A                         103+        DC.B    $80,LN_NAME
00D0'      0000  0000                   103+        DC.L    MIName
                                        104                 INITWORD        LIB_REVISION,REVISION
           True                         104+        IFLE    (LIB_REVISION)-255
00D4'      9016                         104+        DC.B    $90,LIB_REVISION
00D6'      0037                         104+        DC.W    REVISION
                                        105                 INITWORD        LIB_VERSION,VERSION
           True                         105+        IFLE    (LIB_VERSION)-255
00D8'      9014                         105+        DC.B    $90,LIB_VERSION
00DA'      0024                         105+        DC.W    VERSION
                                        106                 INITBYTE    LIB_FLAGS,LIBF_SUMUSED!LIBF_CHANGED
           True                         106+        IFLE    (LIB_FLAGS)-255
00DC'      A00E                         106+        DC.B    $a0,LIB_FLAGS
00DE'      0600                         106+        DC.B    LIBF_SUMUSED!LIBF_CHANGED,0
                                        107                 INITWORD        LIB_OPENCNT,0
           True                         107+        IFLE    (LIB_OPENCNT)-255
00E0'      9020                         107+        DC.B    $90,LIB_OPENCNT
00E2'      0000                         107+        DC.W    0
00E4'      0000                         108                 DC.W        0
                                        109         xref    libFuncInit
                                        110         xdef    MIOpen
                                        111         xdef    MIClose
                                        112         xdef    MIExtFunc
                                        113         xdef    MIExpunge
00E6'                                   114 MIExpunge:
                                        115         LINKEXE Forbid
                                        115+                LINKLIB _LVOForbid,_AbsExecBase
           False                        115+        IFGT    NARG-2
                                        115+        FAIL    !!!
                                        115+        ENDC
00E6'      2F0E                         115+        MOVE.L  A6,-(SP)
00E8'      2C79  0000  0000             115+        MOVE.L  _AbsExecBase,A6
00EE'      4EAE  0000                   115+        JSR     _LVOForbid(A6)
00F2'      2C5F                         115+        MOVE.L  (SP)+,A6
00F4'      4A6E  0020                   116         TST.W   LIB_OPENCNT(A6)
00F8'      6640                         117         BNE.S   Exp_InUse
00FA'      224E                         118         MOVE.L  A6,A1
                                        119         REMOVE
00FC'      2051                         119+        MOVE.L  (A1),A0
00FE'      2269  0004                   119+        MOVE.L  LN_PRED(A1),A1
0102'      2288                         119+        MOVE.L  A0,(A1)
0104'      2149  0004                   119+        MOVE.L  A1,LN_PRED(A0)
0108'      224E                         120         MOVE.L  A6,A1
010A'      7000                         121         MOVEQ   #0,D0
010C'      302E  0010                   122         MOVE.W  LIB_NEGSIZE(A6),D0
0110'      92C0                         123         SUB.W   D0,A1
0112'      D06E  0012                   124         ADD.W   LIB_POSSIZE(A6),D0
                                        125         LINKEXE FreeMem
                                        125+                LINKLIB _LVOFreeMem,_AbsExecBase
           False                        125+        IFGT    NARG-2
                                        125+        FAIL    !!!
MC68000 ASSEMBLER VERSION 11.183                                         '$Header: macros.i,v 36.0 89/06/05 16:14:20 dale Exp $'   

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                        125+        ENDC
0116'      2F0E                         125+        MOVE.L  A6,-(SP)
0118'      2C79  0000  0000             125+        MOVE.L  _AbsExecBase,A6
011E'      4EAE  0000                   125+        JSR     _LVOFreeMem(A6)
0122'      2C5F                         125+        MOVE.L  (SP)+,A6
                                        126         LINKEXE Permit
                                        126+                LINKLIB _LVOPermit,_AbsExecBase
           False                        126+        IFGT    NARG-2
                                        126+        FAIL    !!!
                                        126+        ENDC
0124'      2F0E                         126+        MOVE.L  A6,-(SP)
0126'      2C79  0000  0000             126+        MOVE.L  _AbsExecBase,A6
012C'      4EAE  0000                   126+        JSR     _LVOPermit(A6)
0130'      2C5F                         126+        MOVE.L  (SP)+,A6
0132'      2039  0000  0186             127         MOVE.L   _MathSegList,D0
0138'      4E75                         128         RTS
013A'                                   129 Exp_InUse:
013A'      08EE  0003  000E             130         BSET    #LIBB_DELEXP,LIB_FLAGS(A6)
                                        131         LINKEXE Permit
                                        131+                LINKLIB _LVOPermit,_AbsExecBase
           False                        131+        IFGT    NARG-2
                                        131+        FAIL    !!!
                                        131+        ENDC
0140'      2F0E                         131+        MOVE.L  A6,-(SP)
0142'      2C79  0000  0000             131+        MOVE.L  _AbsExecBase,A6
0148'      4EAE  0000                   131+        JSR     _LVOPermit(A6)
014C'      2C5F                         131+        MOVE.L  (SP)+,A6
014E'      7000                         132         MOVEQ   #0,D0       ;still in use
0150'      4E75                         133         RTS
                                        134         xref init_68881
                                        135         xref init_io68881
0152'                                   136 MIOpen:
0152'      206E  0034                   137         move.l  MathIEEEBase_TaskOpenLib(a6),a0
0156'      4E90                         138         jsr     (a0)
                                        139 *>      if d0.l
0158'      4A80                         140         tst.l d0
015A'      6704                         141         beq.s _if00003
015C'                                   142 openFail:
015C'      4280                         143                 clr.l   d0
015E'      4E75                         144                 rts
                                        145 *>      endif
0160'                                   146 _if00003:
0160'      526E  0020                   147         ADDQ.W  #1,LIB_OPENCNT(A6)              * Bump library open counter
0164'      08AE  0003  000E             148         BCLR    #LIBB_DELEXP,LIB_FLAGS(A6)      * cancel pending expunge
016A'      200E                         149         MOVE.L  A6,D0
016C'      4E75                         150         RTS
016E'                                   151 MIClose:
016E'      206E  0038                   152         move.l  MathIEEEBase_TaskCloseLib(a6),a0
0172'      4E90                         153         jsr     (a0)
0174'      536E  0020                   154         SUBQ.W  #1,LIB_OPENCNT(A6)
0178'      082E  0003  000E             155         BTST    #LIBB_DELEXP,LIB_FLAGS(A6)
017E'      6600  FF66                   156         BNE     MIExpunge       ; Expunge will check opencount
0182'      4280                         157         clr.l   d0              ; don't expunge
0184'                                   158 closed:
0184'      4E75                         159         RTS
MC68000 ASSEMBLER VERSION 11.183                                         '$Header: macros.i,v 36.0 89/06/05 16:14:20 dale Exp $'   

   LOC              OBJECT             STMT            SOURCE STATEMENT


0186'                                   160 _MathSegList:
0186'      0000  0000                   161                 DC.L    0
                                        162                     END



No errors found in this Assembly
