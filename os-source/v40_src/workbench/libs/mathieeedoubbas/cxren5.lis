MC68000 ASSEMBLER VERSION 11.183                                                                                                   

   LOC              OBJECT             STMT            SOURCE STATEMENT


                                          1         include 'float.i'
                                          1 *******************************************************************************
                                          2 *
                                          3 *       $Header:
                                          4 *
                                          5 *******************************************************************************
                                          6
0000'                                     7         section mathieeedoubbas
                                          8         xref    do_trapv
                                          9         xref    do_div0
                                         10
                                         11 ;ALLOW_TRAPS    equ 1
                                         12
                                         13 ;       overflow trap
                                         14 fptrap  macro
                                         15 ;       overfloat trap
                                         16         ifd ALLOW_TRAPS
                                         17                 ifeq \1-2
                                         18                         bsr     do_trapv
                                         19                 endc
                                         20 ;               underfloat is ignored
                                         21                 ifeq \1-1
                                         22                 endc
                                         23 ; divide by zero
                                         24                 ifeq \1-3
                                         25                         bsr     do_div0
                                         26                 endc
                                         27 ; indefinate trap
                                         28                 ifeq \1-4
                                         29 ;                       bsr     do_trapv
                                         30                 endc
                                         31                 ifne \1-4
                                         32                         ifne \1-1
                                         33                                 ifne \1-2
                                         34                                         ifne \1-3
                                         35                                                 fail
                                         36                                         endc
                                         37                                 endc
                                         38                         endc
                                         39                 endc
                                         40         endc
                                         41         endm
                                         42
                                         43 sdebug  macro
                                         44 ;       move.l  \1,-(sp)
                                         45 ;       move.l  \2,-(sp)
                                         46 ;       addq.l  #8,sp
                                         47         endm
                                         48
                                          2         xdef    _CXREN5         ; Renormalize denormalized number
                                          3         xref    _CXTAB5         ; Normalization table
0000'                                     4 _CXREN5:
0000'      4840                           5         swap    d0
0002'      4844                           6         swap    d4
0004'      7A10                           7         moveq   #16,d5          ; Initialize exponent
MC68000 ASSEMBLER VERSION 11.183                                                                                                   

   LOC              OBJECT             STMT            SOURCE STATEMENT


0006'      0C80  0000  0020               8         cmp.l   #$20,d0 ; Shift 16?
000C'      6C14                           9         bge.s   ren10           ; - no
000E'                                    10 ren1:
000E'      4840                          11         swap    d0              ; Do 16 bit shift
0010'      4841                          12         swap    d1
0012'      3001                          13         move.w  d1,d0
0014'      4241                          14         clr.w   d1
0016'      0445  0100                    15         sub.w   #16*16,d5       ; Decrement exponent
001A'      0C80  0000  0020              16         cmp.l   #$20,d0 ; Shift another 16?
0020'      6DEC                          17         blt.s   ren1            ; - yes
0022'                                    18 ren10:
0022'      4244                          19         clr.w   d4              ; Initialize shift count
0024'      0C80  0000  2000              20         cmp.l   #$2000,d0       ; 8 bit normalize
002A'      6C04                          21         bge.s   ren11           ; - nope
002C'      E188                          22         lsl.l   #8,d0           ; Shift d0
002E'      5044                          23         addq.w  #8,d4           ; Adjust shift count
0030'                                    24 ren11:
0030'      4840                          25         swap    d0              ; Swap for convenience
0032'      4A40                          26         tst.w   d0              ; 4 bit normalize
0034'      6604                          27         bne.s   ren12           ; - nope
0036'      E998                          28         rol.l   #4,d0           ; Shift left
0038'      5844                          29         addq.w  #4,d4           ; Adjust shift count
003A'                                    30 ren12:
003A'      7C00                          31         moveq   #0,d6           ; Get shift count
003C'      43F9  0000  0000              32         lea     _CXTAB5,a1
0042'      1C31  0000                    33         move.b  0(a1,d0.w),d6
0046'      EDB8                          34         rol.l   d6,d0           ; Shift left
0048'      D846                          35         add.w   d6,d4           ; Adjust shift count
004A'      4840                          36         swap    d0              ; Shift left by saved count
004C'      2C01                          37         move.l  d1,d6
004E'      E9A9                          38         lsl.l   d4,d1
0050'      E9BE                          39         rol.l   d4,d6
0052'      B346                          40         eor.w   d1,d6
0054'      BD40                          41         eor.w   d6,d0
0056'      E94C                          42         lsl.w   #4,d4           ; Compute exponent
0058'      9A44                          43         sub.w   d4,d5
005A'      4840                          44         swap    d0
005C'      4844                          45         swap    d4
005E'      4E75                          46         rts
                                         47         end



No errors found in this Assembly
