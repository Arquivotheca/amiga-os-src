head     37.1;
branch   ;
access   ;
symbols  V37_1:37.1 V36_20:36.1 V36_21:36.1 V36_13:36.0 V36_12:36.0 V36_7:36.0;
locks    ; strict;
comment  @*   @;


37.1
date     91.01.21.11.43.33;  author mks;  state Exp;
branches ;
next     36.2;

36.2
date     90.07.25.13.31.54;  author dale;  state Exp;
branches ;
next     36.1;

36.1
date     90.04.08.01.29.12;  author dale;  state Exp;
branches ;
next     36.0;

36.0
date     89.06.05.15.46.13;  author dale;  state Exp;
branches ;
next     ;


desc
@@


37.1
log
@V37 checkin for Make Internal
@
text
@
	include 'exec/types.i'

        section mathieeesingtrans

iszero:	clr.l	d1
	rts

	xdef	MIIEEESPTieee
*	convert natural to single ieee
*	enter with d0 exit with d0
******* mathieeesingtrans.library/IEEESPTieee ********************************
*
*   NAME
*	IEEESPTieee -- convert IEEE single to IEEE single
*
*   SYNOPSIS
*	  x   = IEEESPTieee(  y  );
*	 d0	            d0
*
*	float 	y;
*	float   x;
*
*   FUNCTION
*	Convert IEEE single precision number to IEEE single precision.
*	These are included for completeness although they just
*	return the input parameter. A good way to remember how these
*	functions work is: They convert to and from the local format
*	to Single Precision IEEE. The local format for this library
*	happens to also be Single Precision IEEE.
*
*   INPUTS
*	y - IEEE single precision floating point value
*
*   RESULT
*	x - IEEE single precision floating point value
*
*   BUGS
*
*   SEE ALSO
*	IEEESPFieee()
**************************************************************************/
MIIEEESPTieee:
	rts

******* mathieeesingtrans.library/IEEESPFieee ********************************
*
*   NAME
*	IEEESPFieee -- convert IEEE single to IEEE single
*
*   SYNOPSIS
*	  x   = IEEESPFieee(  y  );
*	d0	              d0
*
*	float	y;
*	float  x;
*
*   FUNCTION
*	Convert IEEE single precision number to IEEE single precision.
*	These are included for completeness although they just
*	return the input parameter. A good way to remember how these
*	functions work is: They convert to and from the local format
*	to Single Precision IEEE. The local format for this library
*	happens to also be Single Precision IEEE.
*
*   INPUTS
*	y - IEEE single precision floating point value
*
*   RESULT
*	x - IEEE single precision floating point value
*
*   BUGS
*
*   SEE ALSO
*	IEEESPTieee()
**************************************************************************/
	xdef	MIIEEESPFieee
*	convert single to single ieee
*	enter with d0 exit with d0/d1
MIIEEESPFieee:
	rts

	end
@


36.2
log
@Extra Autodoc information
@
text
@d60 5
@


36.1
log
@new RCS
@
text
@d26 5
@


36.0
log
@*** empty log message ***
@
text
@@
