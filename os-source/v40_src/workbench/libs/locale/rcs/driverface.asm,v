head     38.3;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @* @;


38.3
date     91.08.27.13.23.49;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     91.08.27.12.00.27;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     91.06.26.15.21.02;  author vertex;  state Exp;
branches ;
next     ;


desc
@locale.library interface to language drivers
@


38.3
log
@Back to using a0 for all functions
@
text
@	OPTIMON

;---------------------------------------------------------------------------

	NOLIST

	INCLUDE "exec/types.i"
	INCLUDE "exec/memory.i"
	INCLUDE "exec/lists.i"
	INCLUDE "dos/dos.i"

	INCLUDE "localebase.i"

	LIST

;---------------------------------------------------------------------------

	XDEF _ConvToLowerLVO
	XDEF _ConvToUpperLVO
	XDEF _GetCodeSet
	XDEF _GetDriverInfo
	XDEF _GetLocaleStrLVO
	XDEF _IsAlNumLVO
	XDEF _IsAlphaLVO
	XDEF _IsCntrlLVO
	XDEF _IsDigitLVO
	XDEF _IsGraphLVO
	XDEF _IsLowerLVO
	XDEF _IsPrintLVO
	XDEF _IsPunctLVO
	XDEF _IsSpaceLVO
	XDEF _IsUpperLVO
	XDEF _IsXDigitLVO
	XDEF _StrConvertLVO
	XDEF _StrnCmpLVO

;---------------------------------------------------------------------------
* WARNING: Also check patches.asm when making any changes to this routine!

_ConvToLowerLVO:
        move.l	el_ConvToLower(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------
* WARNING: Also check patches.asm when making any changes to this routine!

_ConvToUpperLVO:
        move.l	el_ConvToUpper(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_GetCodeSet:
        move.l	el_GetCodeSet(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_GetDriverInfo:
        move.l	el_GetDriverInfo(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_GetLocaleStrLVO:
        move.l	el_GetLocaleStr(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_IsAlNumLVO:
        move.l	el_IsAlNum(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_IsAlphaLVO:
        move.l	el_IsAlpha(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_IsCntrlLVO:
        move.l	el_IsCntrl(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_IsDigitLVO:
        move.l	el_IsDigit(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_IsGraphLVO:
        move.l	el_IsGraph(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_IsLowerLVO:
        move.l	el_IsLower(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_IsPrintLVO:
        move.l	el_IsPrint(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_IsPunctLVO:
        move.l	el_IsPunct(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_IsSpaceLVO:
        move.l	el_IsSpace(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_IsUpperLVO:
        move.l	el_IsUpper(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_IsXDigitLVO:
        move.l	el_IsXDigit(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_StrConvertLVO:
        move.l	el_StrConvert(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

_StrnCmpLVO:
        move.l	el_StrnCmp(a0),a0
	jmp	(a0)

;---------------------------------------------------------------------------

	END
@


38.2
log
@Now correctlys preserves A0 (LanguageDriver base pointer) before calling the drivers
@
text
@d41 2
a42 2
        move.l	el_ConvToLower(a0),a1
	jmp	(a1)
d48 2
a49 2
        move.l	el_ConvToUpper(a0),a1
	jmp	(a1)
d54 2
a55 2
        move.l	el_GetCodeSet(a0),a1
	jmp	(a1)
d60 2
a61 2
        move.l	el_GetDriverInfo(a0),a1
	jmp	(a1)
d66 2
a67 2
        move.l	el_GetLocaleStr(a0),a1
	jmp	(a1)
d72 2
a73 2
        move.l	el_IsAlNum(a0),a1
	jmp	(a1)
d78 2
a79 2
        move.l	el_IsAlpha(a0),a1
	jmp	(a1)
d84 2
a85 2
        move.l	el_IsCntrl(a0),a1
	jmp	(a1)
d90 2
a91 2
        move.l	el_IsDigit(a0),a1
	jmp	(a1)
d96 2
a97 2
        move.l	el_IsGraph(a0),a1
	jmp	(a1)
d102 2
a103 2
        move.l	el_IsLower(a0),a1
	jmp	(a1)
d108 2
a109 2
        move.l	el_IsPrint(a0),a1
	jmp	(a1)
d114 2
a115 2
        move.l	el_IsPunct(a0),a1
	jmp	(a1)
d120 2
a121 2
        move.l	el_IsSpace(a0),a1
	jmp	(a1)
d126 2
a127 2
        move.l	el_IsUpper(a0),a1
	jmp	(a1)
d132 2
a133 2
        move.l	el_IsXDigit(a0),a1
	jmp	(a1)
d138 2
a139 2
        move.l	el_StrConvert(a0),a1
	jmp	(a1)
@


38.1
log
@Initial V38 RCS checkin
@
text
@d41 2
a42 2
        move.l	el_ConvToLower(a0),a0
	jmp	(a0)
d48 2
a49 2
        move.l	el_ConvToUpper(a0),a0
	jmp	(a0)
d54 2
a55 2
        move.l	el_GetCodeSet(a0),a0
	jmp	(a0)
d60 2
a61 2
        move.l	el_GetDriverInfo(a0),a0
	jmp	(a0)
d66 2
a67 2
        move.l	el_GetLocaleStr(a0),a0
	jmp	(a0)
d72 2
a73 2
        move.l	el_IsAlNum(a0),a0
	jmp	(a0)
d78 2
a79 2
        move.l	el_IsAlpha(a0),a0
	jmp	(a0)
d84 2
a85 2
        move.l	el_IsCntrl(a0),a0
	jmp	(a0)
d90 2
a91 2
        move.l	el_IsDigit(a0),a0
	jmp	(a0)
d96 2
a97 2
        move.l	el_IsGraph(a0),a0
	jmp	(a0)
d102 2
a103 2
        move.l	el_IsLower(a0),a0
	jmp	(a0)
d108 2
a109 2
        move.l	el_IsPrint(a0),a0
	jmp	(a0)
d114 2
a115 2
        move.l	el_IsPunct(a0),a0
	jmp	(a0)
d120 2
a121 2
        move.l	el_IsSpace(a0),a0
	jmp	(a0)
d126 2
a127 2
        move.l	el_IsUpper(a0),a0
	jmp	(a0)
d132 2
a133 2
        move.l	el_IsXDigit(a0),a0
	jmp	(a0)
d138 2
a139 2
        move.l	el_StrConvert(a0),a0
	jmp	(a0)
@
