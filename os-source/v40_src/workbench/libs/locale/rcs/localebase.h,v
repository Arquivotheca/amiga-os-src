head     38.9;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


38.9
date     93.01.19.12.23.53;  author vertex;  state Exp;
branches ;
next     38.8;

38.8
date     92.04.27.09.34.03;  author vertex;  state Exp;
branches ;
next     38.7;

38.7
date     92.03.23.09.30.23;  author vertex;  state Exp;
branches ;
next     38.6;

38.6
date     92.03.16.12.02.33;  author vertex;  state Exp;
branches ;
next     38.5;

38.5
date     92.01.29.09.31.20;  author vertex;  state Exp;
branches ;
next     38.4;

38.4
date     91.11.07.14.09.51;  author vertex;  state Exp;
branches ;
next     38.3;

38.3
date     91.10.02.13.11.46;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     91.08.27.12.02.27;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     91.06.26.15.24.01;  author vertex;  state Exp;
branches ;
next     ;


desc
@Library base definition for locale.library
@


38.9
log
@*** empty log message ***
@
text
@#ifndef LOCALEBASE_H
#define LOCALEBASE_H


/*****************************************************************************/


#include <exec/lists.h>
#include <exec/libraries.h>
#include <exec/semaphores.h>
#include <prefs/locale.h>
#include <utility/utility.h>
#include <dos.h>
#include "locale.h"


/*****************************************************************************/


struct ExtLocale
{
    struct Locale      el_Locale;
    UWORD              el_UsageCnt;
    UWORD              el_MaxDateLen;   /* used by date patches */

    struct Library    *el_Language;
    APTR               el_ConvToLower;
    APTR               el_ConvToUpper;
    APTR               el_GetCodeSet;
    APTR	       el_GetDriverInfo;
    APTR               el_GetLocaleStr;
    APTR               el_IsAlNum;
    APTR               el_IsAlpha;
    APTR               el_IsCntrl;
    APTR               el_IsDigit;
    APTR               el_IsGraph;
    APTR               el_IsLower;
    APTR               el_IsPrint;
    APTR               el_IsPunct;
    APTR               el_IsSpace;
    APTR               el_IsUpper;
    APTR               el_IsXDigit;
    APTR               el_StrConvert;
    APTR               el_StrnCmp;

    char	       el_LocaleName[32];
    struct LocalePrefs el_Prefs;

    UBYTE	       el_NumFormat[16];
};


/*****************************************************************************/


struct LocaleLib
{
    struct Library	   lb_Lib;
    BOOL                   lb_PatchedOS;
    struct SignalSemaphore lb_LibLock;   /* Lock before modifying library */
    UWORD		   lb_UsageCnt;
    struct Library        *lb_SysLib;
    struct Library        *lb_DosLib;
    struct UtilityBase    *lb_UtilityLib;
    struct Library        *lb_IntuitionLib;
    ULONG		   lb_SegList;

    APTR		   lb_SMult32;
    APTR		   lb_UMult32;
    APTR		   lb_SDivMod32;
    APTR		   lb_UDivMod32;

    /* stuff used by the OS patches */
    struct Catalog        *lb_DOSCatalog;
    ULONG		   lb_OldGetDOSString;

    struct MinList	   lb_Catalogs;  /* see semaphore above */

    struct ExtLocale      *lb_DefaultLocale;
    struct ExtLocale       lb_PrefLocale;

    STRPTR                 lb_OldReqTitle;
    STRPTR                 lb_OldWBTitle;
};


/*****************************************************************************/


#define ASM           __stdargs __asm
#define REG(x)	      register __ ## x

#define LocaleBase    ((struct LocaleLib *)getreg(REG_A6))
#define SysBase       LocaleBase->lb_SysLib
#define DOSBase       LocaleBase->lb_DosLib
#define IntuitionBase LocaleBase->lb_IntuitionLib
#define UtilityBase   LocaleBase->lb_UtilityLib

#define D_S(type,name) char a_##name[sizeof(type)+3]; \
		       type *name = (type *)((LONG)(a_##name+3) & ~3);
kprintf(STRPTR,...);


/*****************************************************************************/


#define BOOLEAN UBYTE    /* byte boolean */


/*****************************************************************************/


struct ExtLocale * ASM OpenLocaleLVO(REG(a0) STRPTR name);

VOID ASM CloseLocaleLVO(REG(a0) struct ExtLocale *locale);

struct ExtLocale * ASM SetDefaultLocaleLVO(REG(a0) struct ExtLocale *locale);

VOID ASM LockLib(VOID);
VOID ASM UnlockLib(VOID);
VOID ASM FlushLib(VOID);

APTR AllocVecFlush(ULONG memSize, ULONG memReqs);


/*****************************************************************************/


#endif /* LOCALEBASE_H */
@


38.8
log
@*** empty log message ***
@
text
@d12 1
d64 1
a64 1
    struct Library        *lb_UtilityLib;
d83 1
@


38.7
log
@Long aligned things
Removed catalog semaphore
@
text
@d23 1
a23 1
    UWORD              el_MaxMonthLen;   /* used by date patches */
@


38.6
log
@Added definition for type BOOLEAN
@
text
@d23 1
a58 1
    WORD                   lb_Pad0;
a59 1
    struct SignalSemaphore lb_CatLock;   /* Lock before modifying catalog list */
a74 2
    ULONG		   lb_OldDateToStr;
    ULONG                  lb_OldStrToDate;
d76 2
a80 2
    struct MinList	   lb_Catalogs;  /* see semaphore above */

d117 2
d120 2
@


38.5
log
@Added LocaleBase->lb_OldReqTitle
@
text
@d68 5
d103 6
@


38.4
log
@Added LocaleBase->lb_PatchedOS support
@
text
@d78 2
@


38.3
log
@Added OldDateToStr and OldStrToDate to LocaleBase
@
text
@d57 2
@


38.2
log
@Removed LocaleBase as a parameter to all functions, compiler tracks this for us
@
text
@d69 2
@


38.1
log
@Initial V38 RCS checkin
@
text
@d12 1
d54 1
a54 1
struct LocaleBase
d57 2
a58 2
    struct SignalSemaphore lb_LocLock;
    struct SignalSemaphore lb_CatLock;
d60 4
a63 4
    ULONG		   lb_SysLib;
    ULONG		   lb_DosLib;
    ULONG		   lb_UtilityLib;
    ULONG		   lb_IntuitionLib;
d73 1
a73 1
    struct MinList	   lb_Catalogs;
d82 2
d86 2
a87 2
#define IntuitionBase LocaleBase->lb_IntuitionLib;
#define UtilityBase   LocaleBase->lb_UtilityLib;
d97 1
a97 2
struct ExtLocale * ASM OpenLocaleLVO(REG(a0) STRPTR name,
                                     REG(a6) struct LocaleBase *LocaleBase);
d99 1
a99 2
VOID ASM CloseLocaleLVO(REG(a0) struct ExtLocale *locale,
                        REG(a6) struct LocaleBase *LocaleBase);
d101 1
a101 2
struct ExtLocale * ASM SetDefaultLocaleLVO(REG(a0) struct ExtLocale *locale,
                                           REG(a6) struct LocaleBase *LocaleBase);
d103 1
a103 1
VOID ASM FlushLib(REG(a6) struct LocaleBase *LocaleBase);
@
