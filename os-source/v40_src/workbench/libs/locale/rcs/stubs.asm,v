head     38.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @* @;


38.2
date     92.03.16.12.05.15;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     91.06.26.15.25.30;  author vertex;  state Exp;
branches ;
next     ;


desc
@Code to use utility.library instead of SAS link-time code
@


38.2
log
@Uses new stub trick
@
text
@
; replacements for standard lc.lib routines using utility.library instead

	OPTIMON

;---------------------------------------------------------------------------

	NOLIST

	INCLUDE	"localebase.i"

	LIST

;---------------------------------------------------------------------------

        XREF	_UtilityBase
	XREF	_SysBase
	XREF	_LVOSDivMod32
	XREF	_LVOUDivMod32
	XREF	_LVOSMult32
	XREF	_LVOUMult32

	XDEF	__CXM22			; Unsigned multiply
	XDEF	__CXM33			; Signed multiply
	XDEF	__CXD22			; Unsigned divide
	XDEF	__CXD33			; Signed divide

;---------------------------------------------------------------------------

__CXD33:	move.l	lb_SDivMod32(a6),-(sp)
		rts

;---------------------------------------------------------------------------

__CXD22:	move.l	lb_UDivMod32(a6),-(sp)
		rts

;---------------------------------------------------------------------------

__CXM33:	move.l	lb_SMult32(a6),-(sp)
		rts

;---------------------------------------------------------------------------

__CXM22:	move.l	lb_UMult32(a6),-(sp)
		rts

;---------------------------------------------------------------------------

		END
@


38.1
log
@Initial V38 RCS checkin
@
text
@d30 1
a30 4
__CXD33:	move.l	a6,-(sp)		; Save your base pointer
		move.l	lb_UtilityLib(a6),a6	; Get utility base pointer
		jsr	_LVOSDivMod32(a6)	; Do the divide
		move.l	(sp)+,a6		; Restore base register
d35 1
a35 4
__CXD22:	move.l	a6,-(sp)		; Save your base pointer
		move.l	lb_UtilityLib(a6),a6	; Get utility base pointer
		jsr	_LVOUDivMod32(a6)	; Do the divide
		move.l	(sp)+,a6		; Restore base register
d40 1
a40 4
__CXM33:	move.l	a6,-(sp)		; Save your base pointer
		move.l	lb_UtilityLib(a6),a6	; Get utility base pointer
		jsr	_LVOSMult32(a6)		; Do the multiply
		move.l	(sp)+,a6		; Restore base register
d45 1
a45 4
__CXM22:	move.l	a6,-(sp)		; Save your base pointer
		move.l	lb_UtilityLib(a6),a6	; Get utility base pointer
		jsr	_LVOUMult32(a6)		; Do the multply
		move.l	(sp)+,a6		; Restore base register
@
