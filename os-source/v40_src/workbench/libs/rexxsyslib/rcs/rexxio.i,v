head     1.8;
branch   ;
access   ;
symbols  LOCKDOWN_2_04:1.6 V36_23:1.6 V36_21:1.6;
locks    ; strict;
comment  @* @;


1.8
date     91.11.08.15.06.51;  author mks;  state Exp;
branches ;
next     1.7;

1.7
date     91.11.08.14.42.32;  author mks;  state Exp;
branches ;
next     1.6;

1.6
date     90.11.02.18.24.25;  author mks;  state Exp;
branches ;
next     1.5;

1.5
date     90.07.12.14.06.04;  author rsbx;  state Exp;
branches ;
next     1.4;

1.4
date     90.07.12.13.58.43;  author rsbx;  state Exp;
branches ;
next     1.3;

1.3
date     90.06.07.15.24.29;  author rsbx;  state Exp;
branches ;
next     1.2;

1.2
date     90.03.04.23.29.44;  author rsbx;  state Exp;
branches ;
next     1.1;

1.1
date     90.03.04.18.40.56;  author rsbx;  state Exp;
branches ;
next     ;


desc
@I/O structure definitions (PUBLIC)
@


1.8
log
@One more time, fix that comment
@
text
@         IFND     REXX_REXXIO_I
REXX_REXXIO_I SET      1
**
**	$Id: rexxio.i,v 1.7 91/11/08 14:42:32 mks Exp Locker: mks $
**
**	Include file for Input/Output related structures
**
**	(C) Copyright 1986,1987,1988,1989,1990 William S. Hawes.
**	(C) Copyright 1990,1991 Commodore-Amiga, Inc.
**		All Rights Reserved
**

         IFND     REXX_STORAGE_I
         INCLUDE  "rexx/storage.i"
         ENDC

RXBUFFSZ EQU      204                  ; buffer length

* The IoBuff is a resource node used to maintain the File List.  Nodes are
* allocated and linked into the list whenever a file is opened.

         STRUCTURE IoBuff,RRSIZEOF     ; structure for files/strings
         APTR     iobRpt               ; read/write pointer
         LONG     iobRct               ; character count
         LONG     iobDFH               ; DOS filehandle
         APTR     iobLock              ; DOS lock
         LONG     iobBct               ; buffer length
         STRUCT   iobArea,RXBUFFSZ     ; buffer area
         LABEL    iobSIZEOF            ; size: 256 bytes

IOBNAME  EQU      LN_NAME              ; logical name
IOBMODE  EQU      rr_Arg1              ; access mode
IOBEOF   EQU      rr_Arg1+1            ; EOF flag
IOBPOS   EQU      rr_Arg2              ; current position

* Access mode definitions
RXIO_EXIST  EQU      -1                ; an existing filehandle
RXIO_STRF   EQU      0                 ; a "string file"
RXIO_READ   EQU      1                 ; read-only access
RXIO_WRITE  EQU      2                 ; write mode
RXIO_APPEND EQU      3                 ; append mode (existing file)

* Offset anchors for SeekF()
RXIO_BEGIN  EQU      -1                ; relative to start
RXIO_CURR   EQU      0                 ; relative to current position
RXIO_END    EQU      1                 ; relative to end

* The Library List contains just plain resource nodes.
LLOFFSET EQU      rr_Arg1              ; "Query" offset
LLVERS   EQU      rr_Arg2              ; library version

* The RexxClipNode structure is used to maintain the Clip List.  The
* value string is stored as an argstring in the rr_Arg1 field.
CLVALUE  EQU      rr_Arg1              ; value string

* A message port structure, maintained as a resource node.
* The ReplyList holds packets that have been received but haven't been
* replied.

         STRUCTURE RexxMsgPort,RRSIZEOF
         STRUCT   rmp_Port,MP_SIZE           ; the message port
         STRUCT   rmp_ReplyList,LH_SIZE      ; messages awaiting reply
         LABEL    rmp_SIZEOF

* Device types
DT_DEV   EQU      0                    ; a device
DT_DIR   EQU      1                    ; an ASSIGNed directory
DT_VOL   EQU      2                    ; a volume

* Private packet types
ACTION_STACK   EQU   2002              ; stack a line
ACTION_QUEUE   EQU   2003              ; queue a line

         ENDC
@


1.7
log
@Copyright messages updated
@
text
@d4 1
a4 1
**	$Id: rexxio.i,v 1.6 90/11/02 18:24:25 mks Exp Locker: mks $
d8 1
a9 3
**		All Rights Reserved
**
**	(C) Copyright 1986,1987,1988,1989,1990 William S. Hawes.
@


1.6
log
@Changed references of rr_SIZEOF to RRSIZEOF (since rr_SIZEOF was used
already by graphics)
@
text
@d4 1
a4 1
**	$Id: rexxio.i,v 1.5 90/07/12 14:06:04 rsbx Exp Locker: mks $
d7 3
@


1.5
log
@Now include storage.i from rexx include directory.
@
text
@d4 1
a4 1
**	$Id: rexxio.i,v 1.4 90/07/12 13:58:43 rsbx Exp Locker: rsbx $
d21 1
a21 1
         STRUCTURE IoBuff,rr_SIZEOF    ; structure for files/strings
d59 1
a59 1
         STRUCTURE RexxMsgPort,rr_SIZEOF
d61 1
a61 1
         STRUCT   rmp_ReplyList,LH_SIZE      ; messages awaiting reply 
@


1.4
log
@Changed headers to conform to Commodore include style guide.
@
text
@d4 1
a4 1
**	$Id$
d13 1
a13 1
         INCLUDE  "storage.i"
@


1.3
log
@Added REXX_ prefix to ARexx include file identifier variables.
@
text
@a0 7
* === rexx/rexxio.i ====================================================
*
* Copyright (c) 1986, 1987 by William S. Hawes (All Rights Reserved)
*
* ======================================================================
* Include file for Input/Output related structures

d3 8
@


1.2
log
@Removed path specification from includes
@
text
@d8 2
a9 2
         IFND     REXXIO_I
REXXIO_I SET      1
d11 1
a11 1
         IFND     STORAGE_I
@


1.1
log
@Initial revision
@
text
@d8 2
a9 2
         IFND     REXX_REXXIO_I
REXX_REXXIO_I  SET   1
d11 2
a12 2
         IFND     REXX_STORAGE_I
         INCLUDE  "rexx/storage.i"
@
