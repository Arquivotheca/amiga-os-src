head     38.4;
branch   ;
access   ;
symbols  ;
locks    davidj:38.4; strict;
comment  @ * @;


38.4
date     92.07.31.17.40.10;  author vertex;  state Exp;
branches ;
next     38.3;

38.3
date     92.06.08.18.41.30;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     92.01.17.13.06.22;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     92.01.10.15.38.04;  author vertex;  state Exp;
branches ;
next     ;


desc
@Main library dispatching
@


38.4
log
@*** empty log message ***
@
text
@
/* includes */
#include <exec/types.h>
#include <utility/tagitem.h>
#include <dos/dos.h>

#include <clib/dos_protos.h>

#include <pragmas/dos_pragmas.h>

/* application includes */
#include "asl.h"
#include "aslbase.h"
#include "requtils.h"
#include "filereq.h"
#include "fontreq.h"
#include "screenmodereq.h"


/*****************************************************************************/


APTR ASM AllocAslRequest(REG(d0) ULONG reqType,
                         REG(a0) struct TagItem *tagList)
{
struct ReqInfo *req;

    switch (reqType)
    {
        case ASL_FileRequest      : req = (APTR)AllocFileRequest(tagList);
                                    break;

        case ASL_FontRequest      : req = (APTR)AllocFontRequest(tagList);
                                    break;

        case ASL_ScreenModeRequest: req = (APTR)AllocSMRequest(tagList);
                                    break;

        default                   : return(NULL);
    }

    if (req)
    {
        req->ri_ReqType = reqType;
        return((APTR)((ULONG)req+sizeof(struct ReqInfo)));
    }

    return(NULL);
}


/*****************************************************************************/


VOID ASM FreeAslRequest(REG(a0) APTR requester)
{
struct ReqInfo *req;

    if (requester)
    {
        req = (struct ReqInfo *)((ULONG)requester - sizeof(struct ReqInfo));

        switch (req->ri_ReqType)
        {
            case ASL_FileRequest      : FreeFileRequest((struct ExtFileReq *)req);
                                        break;

            case ASL_FontRequest      : FreeFontRequest((struct ExtFontReq *)req);
                                        break;

            case ASL_ScreenModeRequest: FreeSMRequest((struct ExtSMReq *)req);
                                        break;
        }
    }
}


/*****************************************************************************/


APTR ASM AslRequest(REG(a0) APTR requester,
		    REG(a1) struct TagItem *tagList)
{
struct ReqInfo *req;

    if (requester)
    {
        req = (struct ReqInfo *)((ULONG)requester - sizeof(struct ReqInfo));

        req->ri_A4 = getreg(REG_A4);  /* needed for callback hooks */

        switch (req->ri_ReqType)
        {
            case ASL_FileRequest      : return(FileRequest((struct ExtFileReq *)req,tagList));
            case ASL_FontRequest      : return(FontRequest((struct ExtFontReq *)req,tagList));
            case ASL_ScreenModeRequest: return(SMRequest((struct ExtSMReq *)req,tagList));
        }
    }
    else
    {
        SetIoErr(ERROR_NO_FREE_STORE);
    }

    return(NULL);
}


/*****************************************************************************/


/* WARNING: This routine is called from the library's expunge vector and so
 *          runs under Forbid().
 */
VOID ASM FlushLib(VOID)
{
    FlushFontCaches();
}
@


38.3
log
@Removed some dead code
@
text
@@


38.2
log
@*** empty log message ***
@
text
@a72 2

            default                   : break;
a96 1
            default                   : break;
a116 1
    FlushFileCaches();
@


38.1
log
@Initial V38 RCS checkin
@
text
@d26 1
a26 1
ULONG *ptr;
d30 1
a30 1
        case ASL_FileRequest      : ptr = (APTR)AllocFileRequest(tagList);
d33 1
a33 1
        case ASL_FontRequest      : ptr = (APTR)AllocFontRequest(tagList);
d36 1
a36 1
        case ASL_ScreenModeRequest: ptr = (APTR)AllocSMRequest(tagList);
d42 1
a42 1
    if (ptr)
d44 2
a45 2
        *ptr = reqType;
        return((APTR)((ULONG)ptr+sizeof(struct ReqInfo)));
d57 1
a57 1
ULONG *ptr;
d61 1
a61 1
        ptr = (ULONG *)((ULONG)requester - sizeof(struct ReqInfo));
d63 1
a63 1
        switch (*ptr)
d65 1
a65 1
            case ASL_FileRequest      : FreeFileRequest((struct ExtFileReq *)ptr);
d68 1
a68 1
            case ASL_FontRequest      : FreeFontRequest((struct ExtFontReq *)ptr);
d71 1
a71 1
            case ASL_ScreenModeRequest: FreeSMRequest((struct ExtSMReq *)ptr);
d86 1
a86 1
ULONG *ptr;
d90 1
a90 1
        ptr = (ULONG *)((ULONG)requester - sizeof(struct ReqInfo));
d92 3
a94 1
        switch (*ptr)
d96 3
a98 3
            case ASL_FileRequest      : return(FileRequest((struct ExtFileReq *)ptr,tagList));
            case ASL_FontRequest      : return(FontRequest((struct ExtFontReq *)ptr,tagList));
            case ASL_ScreenModeRequest: return(SMRequest((struct ExtSMReq *)ptr,tagList));
@
