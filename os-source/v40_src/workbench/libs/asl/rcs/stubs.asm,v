head     38.3;
branch   ;
access   ;
symbols  ;
locks    davidj:38.3; strict;
comment  @* @;


38.3
date     92.04.23.15.47.20;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     92.03.19.09.55.46;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     92.01.10.15.48.01;  author vertex;  state Exp;
branches ;
next     ;


desc
@ASL compiler stubs
@


38.3
log
@Removed extraneous underscore in front of _sprintf()
@
text
@
; replacements for standard lc.lib routines using utility.library instead

	OPTIMON

;---------------------------------------------------------------------------

	NOLIST

	INCLUDE	"aslbase.i"

	LIST

;---------------------------------------------------------------------------

	XREF	_SysBase
	XREF	_LVOSDivMod32
	XREF	_LVOUDivMod32
	XREF	_LVOSMult32
	XREF	_LVOUMult32
	XREF	_LVORawDoFmt

	XDEF	__CXM22			; Unsigned multiply
	XDEF	__CXM33			; Signed multiply
	XDEF	__CXD22			; Unsigned divide
	XDEF	__CXD33			; Signed divide
	XDEF	_sprintf

;---------------------------------------------------------------------------

__CXD33:	move.l	ASL_SDivMod32(a6),-(sp)
		rts

;---------------------------------------------------------------------------

__CXD22:	move.l	ASL_UDivMod32(a6),-(sp)
		rts

;---------------------------------------------------------------------------

__CXM33:	move.l	ASL_SMult32(a6),-(sp)
		rts

;---------------------------------------------------------------------------

__CXM22:	move.l	ASL_UMult32(a6),-(sp)
		rts

;---------------------------------------------------------------------------

_sprintf:	; ( string, format, {values} )
		movem.l	a2/a3/a4/a6,-(sp)
		move.l  5*4(sp),a3

		move.l	6*4(sp),a0
		lea	7*4(sp),a1
		lea	stuffChar(pc),a2
		move.l	ASL_SysBase(a6),a6
		jsr	_LVORawDoFmt(a6)

		movem.l	(sp)+,a2/a3/a4/a6
		rts

stuffChar:
		move.b	d0,(a3)+
		rts

;---------------------------------------------------------------------------

		END
@


38.2
log
@New smaller/faster stubs using caches in library base
@
text
@d27 1
a27 1
	XDEF	__sprintf
d51 1
a51 1
__sprintf:	; ( string, format, {values} )
@


38.1
log
@Initial V38 RCS checkin
@
text
@d31 1
a31 4
__CXD33:	move.l	a6,-(sp)		; Save your base pointer
		move.l	ASL_UtilityBase(a6),a6	; Get utility base pointer
		jsr	_LVOSDivMod32(a6)	; Do the divide
		move.l	(sp)+,a6		; Restore base register
d36 1
a36 4
__CXD22:	move.l	a6,-(sp)		; Save your base pointer
		move.l	ASL_UtilityBase(a6),a6	; Get utility base pointer
		jsr	_LVOUDivMod32(a6)	; Do the divide
		move.l	(sp)+,a6		; Restore base register
d41 1
a41 4
__CXM33:	move.l	a6,-(sp)		; Save your base pointer
		move.l	ASL_UtilityBase(a6),a6	; Get utility base pointer
		jsr	_LVOSMult32(a6)		; Do the multiply
		move.l	(sp)+,a6		; Restore base register
d46 1
a46 4
__CXM22:	move.l	a6,-(sp)		; Save your base pointer
		move.l	ASL_UtilityBase(a6),a6	; Get utility base pointer
		jsr	_LVOUMult32(a6)		; Do the multply
		move.l	(sp)+,a6		; Restore base register
@
