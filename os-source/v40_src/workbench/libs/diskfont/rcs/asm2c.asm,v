head     39.0;
branch   ;
access   ;
symbols  V36_167:36.5 V36_162:36.5 V36_160:36.5 V36_157:36.5 V36_139:36.5 V36_137:36.4 V36_135:36.4 V36_125:36.3 V36_124:36.3 V36_122:36.3 V36_121:36.3 V36_116:36.3 V36_111:36.2 V36_97:36.1 V36_86:36.1;
locks    ; strict;
comment  @*   @;


39.0
date     92.07.08.14.32.38;  author darren;  state Exp;
branches ;
next     38.0;

38.0
date     91.02.25.14.46.58;  author kodiak;  state Exp;
branches ;
next     37.0;

37.0
date     90.11.26.12.13.05;  author kodiak;  state Exp;
branches ;
next     36.7;

36.7
date     90.06.12.06.59.38;  author kodiak;  state Exp;
branches ;
next     36.6;

36.6
date     90.04.09.05.45.58;  author kodiak;  state Exp;
branches ;
next     36.5;

36.5
date     90.02.19.11.40.42;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     90.01.30.12.56.50;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     89.09.11.12.25.22;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     89.09.08.11.48.53;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     89.05.16.17.03.42;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     89.05.16.16.58.49;  author kodiak;  state Exp;
branches ;
next     35.1;

35.1
date     88.05.25.18.12.56;  author kodiak;  state Exp;
branches ;
next     35.0;

35.0
date     87.12.16.13.34.01;  author kodiak;  state Exp;
branches ;
next     ;


desc
@assembler interface to C routines that functions are coded in
@


39.0
log
@First pass at supporting multiple fonts of same name, Y size, and style.
DUPLICATES are marked by AddDiskFont(); need to reconsider if
flag diffs count.
@
text
@**
**	$Id: asm2c.asm,v 39.0 92/07/08 14:30:00 darren Exp $
**
**      diskfont.library assembler to C function interfaces
**
**      (C) Copyright 1989 Commodore-Amiga, Inc.
**          All Rights Reserved
**
	SECTION	diskfont

	INCLUDE	"exec/types.i"
	INCLUDE	"exec/lists.i"

	INCLUDE	"graphics/text.i"
	INCLUDE	"graphics/gfxbase.i"

	INCLUDE	"diskfont.i"
	INCLUDE	"dfdata.i"
	INCLUDE	"macros.i"

	INCLUDE "ddebug.i"

	XLVO	AddFont

	XDEF	_AddDiskFont
	XDEF	_EqualAspect

	XDEF	_EOpenEngine
	XDEF	_ECloseEngine
	XDEF	_ESetInfo
	XDEF	_EObtainInfo
	XDEF	_EReleaseInfo


** Private bit in gfx/text/txtdata.i

	IFND	TE0B_DUPLICATE
		BITDEF	TE0,DUPLICATE,7	; Duplicate font - differs by DPI
	ENDC

_AddDiskFont:
		;-- AddFont(&dfh->dfh_TF);
		move.l	a6,-(a7)
		move.l	8(a7),a6
		move.l	12(a7),a1

	PRINTF	DBG_ENTRY,<'AddDiskFont($%lx,$%lx)'>,A6,A1

	;-- loop through font list, looking for dups of name, Y size, and
	;-- Style/Flag combos ... mark dups as dups so they cannot
	;-- be found by OpenFont() if called without DPI tag info

			movem.l	a1-a6,-(sp)
			
			lea	dfh_TF(a1),a3	; TextFont
			move.l	dfh_TF+tf_Extension(a1),a4

			move.l	dfl_GfxBase(a6),a5
			lea	gb_TextFonts(a5),a0
			move.l	dfl_SysBase(a6),a6

notadup:
			move.l	LN_NAME(a3),a1

			JSRLIB	FindName
			tst.l	d0
			BEQ_S	nofontdups

			move.l	d0,a0

	PRINTF	DBG_FLOW,<'  AddDiskFont ... Name Match ... '>

	;-- check Y size


	PUSHWORD	tf_YSize(a3)
	PRINTF	DBG_FLOW,<'    NewFont YSize = %ld'>
	PUSHWORD	tf_YSize(a0)
	PRINTF	DBG_FLOW,<'    Compare YSize = %ld'>
	POPLONG		2


			move.w	tf_YSize(a3),d0
			cmp.w	tf_YSize(a0),d0
			BNE_S	notadup


	;-- check relevant Style bits

	PUSHBYTE	tf_Style(a3)
	PRINTF	DBG_FLOW,<'    NewFont Style = $%lx'>
	PUSHBYTE	tf_Style(a0)
	PRINTF	DBG_FLOW,<'    Compare Style = $%lx'>
	POPLONG		2

	;-- Compare for diffs in Italic, Bold, Underlined,
	;
	;-- Ignore Intrinsic of COLORFONT, EXTENDED
	;
	;-- Ignore bits only suitable for query: FSF_TAGGED
	;

			move.b	tf_Style(a3),d0
			move.b	tf_Style(a0),d1

			and.b	#FSF_UNDERLINED!FSF_BOLD!FSF_ITALIC,d0
			and.b	#FSF_UNDERLINED!FSF_BOLD!FSF_ITALIC,d1

			cmp.b	d0,d1
			BNE_S	notadup

	;-- check relevant Flag bits?
	;
	;-- ROMFONT and DISKFONT are source info; they will differ
	;-- depending on if source is/was ROM, DISK, SCALED, or OUTLINE.
	;-- 
	;-- REVPATH, TALLDOT, WIDEDOT, and PROPORTIONAL are set for
	;-- an entire font family, so should not differ.
	;--
	;-- DESIGNED is meaningful for QUERY, and type
	;
	;-- REMOVED is only meaningful for fonts not on the font list.


	PUSHBYTE	tf_Flags(a3)
	PRINTF	DBG_FLOW,<'    NewFont Flags = $%lx'>
	PUSHBYTE	tf_Flags(a0)
	PRINTF	DBG_FLOW,<'    Compare Flags = $%lx'>
	POPLONG		2


	;-- Note that we have a possible DUP, but need to check what
	;-- are comparing against first to see if it is already marked
	;-- as a DUPLICATE.  If so, this one we are going to add may
	;-- not be.
			suba.l	a1,a1		;No tags
			move.l	a0,a2		;cache
			exg	a5,a6		;Use GfxBase, Cache ExecBase

			JSRLIB	ExtendFont

			move.l	a2,a0		;restore
			exg	a5,a6		;Use ExecBase, Cache GfxBase
			
			tst.l	d0
			BEQ_S	notadup		;what?? Low on memory

			move.l	tf_Extension(a0),a1
			btst	#TE0B_DUPLICATE,tfe_Flags0(a1)
			BNE_S	notadup

	;-- Well, we found a DUPLICATE on the list that has not been
	;-- marked as a DUPLICATE, so this one will be added as a DUPLICATE.


	PRINTF	DBG_FLOW,<'      NewFont marked as DUPLICATE'>

			bset	#TE0B_DUPLICATE,tfe_Flags0(a4)
nofontdups:
			movem.l	(sp)+,a1-a6

		lea	dfh_TF(a1),a1
		LINKGFX	AddFont

		;-- dfh->dfh_TF.tf_Extension->tfe_Flags0 |= TE0F_NOREMFONT;
		move.l	12(a7),a1
		move.l	dfh_TF+tf_Extension(a1),a0
		bset	#TE0B_NOREMFONT,tfe_Flags0(a0)


		;-- dfh->dfh_TF.tf_Accessors = 1;
		move.w	#1,dfh_TF+tf_Accessors(a1)
		;-- AddTail(&DiskfontBase->dfl_DiskFonts, dfh);
		lea	dfl_DiskFonts(a6),a0
		ADDTAIL
		;-- (DiskfontBase->dfl_NumLFonts)++;
		addq.w	#1,dfl_NumLFonts(a6)
		move.l	(a7)+,a6
		rts

_EqualAspect:
		movem.w	4(a7),d0-d1
		mulu	10(a7),d0
		mulu	8(a7),d1
		cmp.l	d0,d1
		seq	d0
		ext.w	d0
		ext.l	d0
		rts


_EOpenEngine:
		move.l	a6,-(a7)
		move.l	8(a7),a6
		jsr	-30(a6)		;_LVOOpenEngine(a6)
		move.l	(a7)+,a6
		rts

_ECloseEngine:
		move.l	a6,-(a7)
		move.l	8(a7),a0
		move.l	(a0),a6
		jsr	-36(a6)		;_LVOCloseEngine(a6)
		move.l	(a7)+,a6
		rts

_ESetInfo:
		move.l	a6,-(a7)
		lea	8(a7),a1
		move.l	(a1)+,a0
		move.l	(a0),a6
		jsr	-42(a6)		;_LVOSetInfo(a6)
		move.l	(a7)+,a6
		rts

_EObtainInfo:
		move.l	a6,-(a7)
		lea	8(a7),a1
		move.l	(a1)+,a0
		move.l	(a0),a6
		jsr	-48(a6)		;_LVOObtainInfo(a6)
		move.l	(a7)+,a6
		rts

_EReleaseInfo:
		move.l	a6,-(a7)
		lea	8(a7),a1
		move.l	(a1)+,a0
		move.l	(a0),a6
		jsr	-54(a6)		;_LVOReleaseInfo(a6)
		move.l	(a7)+,a6
		rts

	END
@


38.0
log
@Phase 2 Alpha 1
@
text
@d2 1
a2 1
**	$Header: Q2500:Src/Bullet/Src/Diskfont/RCS/asm2c.asm,v 37.0 90/11/26 12:13:05 kodiak Exp Locker: kodiak $
d15 1
d21 2
d34 7
d46 116
d164 1
d169 2
@


37.0
log
@pass dfl as parameter, not in a6
@
text
@d2 1
a2 1
**	$Header: Q2500:Src/Bullet/Diskfont/RCS/asm2c.asm,v 36.7 90/06/12 06:59:38 kodiak Exp Locker: kodiak $
d25 6
d60 43
@


36.7
log
@set new TE0B_NOREMFONT flag in extension when adding fonts
@
text
@d2 1
a2 1
**	$Header: V36:src/workbench/libs/diskfont/RCS/asm2c.asm,v 36.6 90/04/09 05:45:58 kodiak Exp Locker: kodiak $
d27 3
a29 1
		move.l	4(a7),a1
d33 1
a33 1
		move.l	4(a7),a1
d43 1
@


36.6
log
@convert to both new rcs and native build
@
text
@d2 1
a2 1
**	$Header: Q:Src/diskfont/RCS/asm2c.asm,v 36.6 90/04/09 05:00:43 kodiak Exp $
d30 4
a34 1
		move.l	4(a7),a1
@


36.5
log
@fix tf_Accessors of created fonts to be 1
@
text
@d2 1
a2 1
**	$Header: asm2c.asm,v 36.4 90/01/30 12:56:50 kodiak Exp $
a19 5
	XREF	_DFCAvailFonts
	XREF	_DFCOpenDiskFont
	XREF	_DFCNewFontContents
	XREF	_DFCDisposeFontContents

a21 5
	XDEF	DFAAvailFonts
	XDEF	DFAOpenDiskFont
	XDEF	DFANewFontContents
	XDEF	DFADisposeFontContents
	XDEF	_FetchGfxBase
a23 28

DFAAvailFonts:
		movem.l	d0/d1/a0,-(a7)
		jsr	_DFCAvailFonts
		lea	12(a7),a7
		rts

DFAOpenDiskFont:
		move.l	a0,-(a7)
		jsr	_DFCOpenDiskFont
		addq.l	#4,a7
		rts

DFANewFontContents:
		movem.l	a0/a1,-(a7)
		jsr	_DFCNewFontContents
		addq.l	#8,a7
		rts

DFADisposeFontContents:
		move.l	a1,-(a7)
		jsr	_DFCDisposeFontContents
		addq.l	#4,a7
		rts

_FetchGfxBase:
		move.l	dfl_GfxBase(a6),d0
		rts
@


36.4
log
@add EqualAspect()
@
text
@d2 1
a2 1
**	$Header: asm2c.asm,v 36.3 89/09/11 12:25:22 kodiak Exp $
d14 2
d68 3
a72 1
		move.l	4(a7),a1
@


36.3
log
@add FetchGfxBase & AddDiskFont as part of making ROMable
@
text
@d2 1
a2 1
**	$Header: asm2c.asm,v 36.2 89/09/08 11:48:53 kodiak Exp $
d31 1
d72 10
@


36.2
log
@swizzled parameters to AvailFonts C code for movem efficiency
@
text
@d2 1
a2 1
**	$Header: asm2c.asm,v 36.1 89/05/16 17:03:42 kodiak Exp $
d9 1
a9 4
	XREF	_AvailFonts
	XREF	_OpenDiskFont
	XREF	_NewFontContents
	XREF	_DisposeFontContents
d11 2
a12 4
	XDEF	DFAvailFonts
	XDEF	DFOpenDiskFont
	XDEF	DFNewFontContents
	XDEF	DFDisposeFontContents
d14 19
a32 1
DFAvailFonts:
d34 1
a34 1
		jsr	_AvailFonts
d38 1
a38 1
DFOpenDiskFont:
d40 1
a40 1
		jsr	_OpenDiskFont
d44 1
a44 1
DFNewFontContents:
d46 1
a46 1
		jsr	_NewFontContents
d50 1
a50 1
DFDisposeFontContents:
d52 1
a52 1
		jsr	_DisposeFontContents
d54 17
@


36.1
log
@*** empty log message ***
@
text
@d2 1
a2 1
**	$Header$
d20 4
a23 5
		MOVEM.L	D0/D1,-(A7)
		MOVE.L	A0,-(A7)
		JSR	_AvailFonts
		ADD.W	#12,A7
		RTS
d26 4
a29 4
		MOVE.L	A0,-(A7)
		JSR	_OpenDiskFont
		ADDQ	#4,A7
		RTS
@


36.0
log
@(bump rev to 36)
@
text
@d1 8
@


35.1
log
@add FontContents interfaces
@
text
@@


35.0
log
@initial for V35
@
text
@d3 2
d8 2
d24 13
a36 1
		END
@
