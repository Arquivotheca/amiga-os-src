head     39.1;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


39.1
date     92.07.08.14.41.13;  author darren;  state Exp;
branches ;
next     39.0;

39.0
date     92.07.08.14.26.50;  author darren;  state Exp;
branches ;
next     38.8;

38.8
date     92.06.18.12.07.12;  author darren;  state Exp;
branches ;
next     38.7;

38.7
date     92.03.26.11.57.32;  author davidj;  state Exp;
branches ;
next     38.6;

38.6
date     92.01.29.13.57.44;  author davidj;  state Exp;
branches ;
next     38.5;

38.5
date     91.04.11.17.07.17;  author kodiak;  state Exp;
branches ;
next     38.0;

38.0
date     91.02.25.14.45.22;  author kodiak;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.31.14.49.38;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


39.1
log
@What the heck; time to switch to HX68.
@
text
@
MODNAME=		diskfont
VERSION=		39

REMOTE=			V$(VERSION):src/Workbench/libs/diskfont

LD_FILE=		$(MODNAME).ld
LD_STRIP=		$(MODNAME).ld.strip

C_COMPILER=		LC
C_COMPILER_OPTS=	-. -b1 -csuw -ma -O -r -v

ASSEMBLER=		HX68 -a
ASSEMBLER_OPTS=		-cfvqrsy -i include: -o

LINKER=			Blink
LINKER_OPTS=		ADDSYM BATCH BUFSIZE 1024 SMALLCODE SMALLDATA MAP $(MODNAME).map,f,h,l,s,x
LINKER_OPTS_STRIP=	ND

EXTERNHFILES=		diskfont.h
EXTERNIFILES=		diskfont.i

AFILES=			residenttag.asm asm2c.asm library.asm scaledfont.asm ddebug.asm

CFILES=			availfonts.c fontcontents.c opendiskfont.c env.c genfont.c \
			strings.c

OBJECTS=		residenttag.o \
			asm2c.o \
			library.o \
			scaledfont.o \
			availfonts.o \
			env.o \
			fontcontents.o \
			genfont.o \
			opendiskfont.o \
			strings.o \
			ddebug.o
STARTUP=
LIBS=			lib:lc.lib lib:lcm.lib lib:amiga.lib lib:debug.lib

##############################################################################
# Build the stripped load file...
#
$(LD_STRIP):	$(LD_FILE)
		$(LINKER) FROM $(LD_FILE) TO $(LD_STRIP) $(LINKER_OPTS_STRIP)


##############################################################################
# Build the load file...
#
$(LD_FILE):	$(OBJECTS) $(LIBS)

		$(LINKER) <with <
FROM $(STARTUP) $(OBJECTS) TO $(LD_FILE) LIB $(LIBS) $(LINKER_OPTS)
<


##############################################################################
# Default rules...
#
.c.o:
	$(C_COMPILER) $(C_COMPILER_OPTS) $*.c

.asm.o:
	$(ASSEMBLER) $*.asm $(ASSEMBLER_OPTS) $*.o


##############################################################################
# All dependencies...
#
residenttag.o:	residenttag.asm $(MODNAME)_rev.rev


##############################################################################
# Bump the version...
#
version:
	@@BumpRev $(VERSION) $(MODNAME)_rev


##############################################################################
# Delete all object files
#
clean:
	@@Delete $(OBJECTS)
	@@Delete $(LD_FILE) $(LD_STRIP) $(MODNAME).map


##############################################################################
# Build autodoc
#
doc:	$(MODNAME).doc

$(MODNAME).doc:	$(AFILES) $(CFILES)
	@@Echo "Making $(MODNAME).doc"
	@@JOIN <as RAM:$(MODNAME).cat ~? ~< <
	$(AFILES) $(CFILES) ;
	<
	@@AutoDoc >$(MODNAME).doc -a -C -s -l78 RAM:$(MODNAME).cat
	@@Delete RAM:$(MODNAME).cat QUIET
	@@Protect $(MODNAME).doc +rwd


##############################################################################
# Release the current build to the server...
#
internal:
	@@Delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc|library))|lmkfile)
	@@protect ((\#?.(c|h|asm|i|ld|rev|doc))|lmkfile|$(LD_STRIP)) +r quiet
	@@copy ((\#?.(c|h|asm|i|rev|doc|sfd|ld|ld.\#?))|makefile|lmkfile) $(REMOTE)

##############################################################################
# Release public includes, docs, sfd to server
#
headers:
	
	@@copy $(EXTERNIFILES) $(EXTERNHFILES) TO V$(VERSION):include/diskfont
	@@copy $(MODNAME).doc V$(VERSION):doc NOPRO
	@@copy $(MODNAME)_lib.sfd V$(VERSION):lib/sfd NOPRO
@


39.0
log
@First V39 build; now also builds conditional debug stub
@
text
@d13 1
a13 1
ASSEMBLER=		CAsm -a
@


38.8
log
@Copy source, and includes to server for 'internal'; makes docs
now; 'headers' added to copy doc, sfd, and includes to proper
places.  REMOTE is V38 instead of V; much to easy to get hosed
in our environment which has multiple Vxx directories
@
text
@d3 1
a3 1
VERSION=		38
d5 1
a5 1
REMOTE=			V$(VERSION):src/workbench/libs/diskfont
d23 1
a23 1
AFILES=			residenttag.asm asm2c.asm library.asm scaledfont.asm
d37 2
a38 2
			strings.o

@


38.7
log
@added lib:debug.lib to the LIBS section
@
text
@d5 1
a5 1
REMOTE=			V:src/workbench/libs/diskfont
d20 3
d93 1
a93 2
$(MODNAME).doc:	autodocs.asm
		@@Autodoc >$(MODNAME).doc autodocs.asm
d95 8
d111 10
a120 1
	@@copy \#?.(strip|ld|doc|library) \#?_rev.\#? $(REMOTE)
@


38.6
log
@smarter & simpler make file
@
text
@d37 1
a37 1
LIBS=			lib:lc.lib lib:lcm.lib lib:amiga.lib
@


38.5
log
@use BLINK to strip executable
@
text
@a0 2
###########################################################
#	lmkmeta included part
d2 2
a3 34
###########################################################
#	required volumes/assigns:
#	MYINCLUDE:	- additional search path for temp include files which
#					have not yet been checked in.
#					will be *empty* for official build
#	QUAD:		- used for lattice, and by default precompiled includes.
#				  should be very fast access, e.g., RAM: or RAD:.

VERNUM=38
VERDIR=V$(VERNUM):

# make the standard default target "all"
default: all

###########################################################
#	tools
RX=rx
REXX=$(VERDIR)aug/rexx/
#REXX=work:amiga/native/rexx/

ASM=casm -a
BUMPREV=bumprev
LINK=blink
STRIP=blink QUIET NODEBUG from
CC=lc
RM=delete
AUTODOC=autodoc
VERMACRO=$(RX) $(REXX)vermacro.rexx

# a little weird
ZOOTMP=zoo.tmp
ZOOTMP2=zoo.tmp2
FEEDZOO=$(RX) >$(ZOOTMP2) $(REXX)feedzoo.rexx
#FEEDZOO=$(REXX)feedzoo.rexx >$(ZOOTMP2) 
d5 1
d7 52
a58 2
###########################################################
#	standard build implicit rules
d60 1
a60 2
	@@echo "$*.c: $(CFLAGS)" NOLINE
	@@$(CC) $(CFLAGS) $(CINCL) $*
d63 2
a64 2
	@@echo "$*.asm: $(AFLAGS)"
	@@$(ASM) $*.asm $(AFLAGS) $(AINCL) -o $*.o
d66 11
a76 81
#	disassembled listing; you must declare "foo.lst: foo.o"
.o.lst:
	omd >$*.lst $*.o $*.c

#	automatic revision bumping
#	doesn't pass all dependency files, ala makemeta
.rev.i .rev.h:
	$(BUMPREV) $(VERNUM) $* $*.rev $?

###########################################################
#	standard build file groups

HFILES= $(EXTERNHFILES) $(MYHFILES)
IFILES= $(EXTERNIFILES) $(MYIFILES)

#	everything copied to SRCPATH, and checked into RCS
ALLSRC=$(AFILES) $(CFILES) $(HFILES) $(IFILES) \
	$(MAKEFILE) $(MISCSRC) $(SFDFILE)

###########################################################
#	standard build targets

LFILES=$(MYLIBS) SYS:Lib2.0/lc.lib SYS:Lib2.0/amiga.lib

$(SUBSYSNAME)_lib.i:	$(SUBSYSNAME)_lib.sfd
	sfd -i $(SUBSYSNAME)_lib.sfd

$(SUBSYSNAME).with: $(MAKEFILE) $(METAFILE)
	@@echo $(SUBSYSNAME).with:
	@@copy to $(SUBSYSNAME).with <from <
	$(LFLAGS)
	from $(STARTUP) $(FIRSTO) $(OFILES)
	lib $(LFILES)
	to $(SUBSYSNAME).ld
	<

#	default executable build
$(SUBSYSNAME).ld: $(OFILES) $(FIRSTO) $(LFILES) $(SUBSYSNAME).with
	@@echo "link $(SUBSYSNAME).ld"
	$(LINK) with $(SUBSYSNAME).with
	$(STRIP) $(SUBSYSNAME).ld to $(SUBSYSNAME).library
	copy $(SUBSYSNAME).library kodiak0:diskfont.library nopro
	copy $(SUBSYSNAME).ld kodiak0:diskfont.ld nopro

#	ram copy of precompiled include file
$(SYMDIR)$(SYM): $(SYM)
	copy $(SYM) $(SYMDIR)

#	disk copy of precompiled include file
#	ZZZ: would be better to also depend on $(HEADERUPDATE)
$(SYM): $(SYMSRC)
	@@echo "	precompiling $(SYMSRC) to $(SYM)"
	lc1 -. -cu $(CINCL) -ph -o$(SYM) $(SYMSRC)

#	revision bumping
$(SUBSYSNAME)_rev.h $(SUBSYSNAME)_rev.i: $(SUBSYSNAME)_rev.rev \
		$(OFILES)

$(SUBSYSNAME)_rev.rev:
	echo >$(SUBSYSNAME)_rev.rev 0

#	zoo file
# if this depends on ALLSRC
$(SUBSYSNAME).zoo: FRC
	-@@$(RM) $(SUBSYSNAME).zoo
	@@copy to zoo.tmp <from <
	$(ALLSRC)
	$(BINFILES)
	<
	@@$(FEEDZOO) zoo.tmp 
	@@zoo	<zoo.tmp2 aI $(SUBSYSNAME).zoo
	@@$(RM) zoo.tmp
	@@$(RM) zoo.tmp2

zoo:	$(SUBSYSNAME).zoo

#	autodocs
$(SUBSYSNAME).doc: FRC
	@@echo "not making autodocs yet"

doc:	$(SUBSYSNAME).doc
a77 3
#	force target never exists
FRC:
	@@echo "" NOLINE
d79 3
d83 19
a101 1
	$(RM) \#?.o \#?.sym \#?.lst \#?.obj \#?.bak \#?.tmp
@


38.0
log
@Phase 2 Alpha 1
@
text
@d90 2
a91 2
	stripf $(SUBSYSNAME).ld $(SUBSYSNAME).ld.strip
	copy $(SUBSYSNAME).ld.strip kodiak0:diskfont.library nopro
@


37.0
log
@Phase 1 lmkfile
@
text
@d2 1
a2 1
#	lmkmeta included part :ts=4
d12 1
a12 1
VERNUM=37
@
