head     38.0;
branch   ;
access   ;
symbols  V36_167:36.2 V36_162:36.2 V36_160:36.2 V36_157:36.2 V36_139:36.2 V36_137:36.2 V36_135:36.2 V36_125:36.1 V36_124:36.1 V36_122:36.0 V36_121:36.0 V36_116:36.0 V36_111:36.0 V36_97:36.0 V36_86:36.0;
locks    ; strict;
comment  @*   @;


38.0
date     92.06.18.11.06.58;  author darren;  state Exp;
branches ;
next     37.0;

37.0
date     90.11.26.12.13.27;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     90.06.19.21.37.12;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     90.04.09.18.04.20;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     90.01.30.12.55.38;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     90.01.15.10.03.27;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     89.05.16.17.11.37;  author kodiak;  state Exp;
branches ;
next     35.1;

35.1
date     88.05.25.18.20.43;  author kodiak;  state Exp;
branches ;
next     35.0;

35.0
date     88.05.25.18.19.36;  author kodiak;  state Exp;
branches ;
next     ;


desc
@diskfont library external structures
@


38.0
log
@change LIBRARIES_DISKFONT -> DISKFONT_DISKFONT since the includes
were moved to their own directory
@
text
@#ifndef	DISKFONT_DISKFONT_H
#define	DISKFONT_DISKFONT_H
/*
**	$Id: diskfont.h,v 37.0 90/11/26 12:13:27 kodiak Exp Locker: darren $
**
**	diskfont library definitions 
**
**	(C) Copyright 1990 Robert R. Burns
**	    All Rights Reserved
**	(C) Copyright 1985,1986,1987,1988,1989 Commodore-Amiga, Inc.
**	    All Rights Reserved
*/

#ifndef     EXEC_NODES_H
#include "exec/nodes.h"
#endif
#ifndef     EXEC_LISTS_H
#include "exec/lists.h"
#endif
#ifndef     GRAPHICS_TEXT_H
#include "graphics/text.h"
#endif

#define     MAXFONTPATH 256   /* including null terminator */

struct FontContents {
    char    fc_FileName[MAXFONTPATH];
    UWORD   fc_YSize;
    UBYTE   fc_Style;
    UBYTE   fc_Flags;
};

struct TFontContents {
    char    tfc_FileName[MAXFONTPATH-2];
    UWORD   tfc_TagCount;	/* including the TAG_DONE tag */
    /*
     *	if tfc_TagCount is non-zero, tfc_FileName is overlayed with
     *	Text Tags starting at:  (struct TagItem *)
     *	    &tfc_FileName[MAXFONTPATH-(tfc_TagCount*sizeof(struct TagItem))]
     */
    UWORD   tfc_YSize;
    UBYTE   tfc_Style;
    UBYTE   tfc_Flags;
};


#define  FCH_ID		0x0f00	/* FontContentsHeader, then FontContents */
#define  TFCH_ID	0x0f02	/* FontContentsHeader, then TFontContents */
#define  OFCH_ID	0x0f03	/* FontContentsHeader, then TFontContents,
				 * associated with outline font */

struct FontContentsHeader {
    UWORD   fch_FileID;		/* FCH_ID */
    UWORD   fch_NumEntries;	/* the number of FontContents elements */
    /* struct FontContents fch_FC[], or struct TFontContents fch_TFC[]; */
};


#define  DFH_ID		0x0f80
#define  MAXFONTNAME	32	/* font name including ".font\0" */

struct DiskFontHeader {
    /* the following 8 bytes are not actually considered a part of the	*/
    /* DiskFontHeader, but immediately preceed it. The NextSegment is	*/
    /* supplied by the linker/loader, and the ReturnCode is the code	*/
    /* at the beginning of the font in case someone runs it...		*/
    /*   ULONG dfh_NextSegment;			\* actually a BPTR	*/
    /*   ULONG dfh_ReturnCode;			\* MOVEQ #0,D0 : RTS	*/
    /* here then is the official start of the DiskFontHeader...		*/
    struct Node dfh_DF;		/* node to link disk fonts */
    UWORD   dfh_FileID;		/* DFH_ID */
    UWORD   dfh_Revision;	/* the font revision */
    LONG    dfh_Segment;	/* the segment address when loaded */
    char    dfh_Name[MAXFONTNAME]; /* the font name (null terminated) */
    struct TextFont dfh_TF;	/* loaded TextFont structure */
};

/* unfortunately, this needs to be explicitly typed */
/* used only if dfh_TF.tf_Style FSB_TAGGED bit is set */
#define	dfh_TagList	dfh_Segment	/* destroyed during loading */


#define     AFB_MEMORY	0
#define     AFF_MEMORY	0x0001
#define     AFB_DISK	1
#define     AFF_DISK	0x0002
#define     AFB_SCALED	2
#define     AFF_SCALED	0x0004
#define     AFB_BITMAP	3
#define     AFF_BITMAP	0x0008

#define     AFB_TAGGED	16	/* return TAvailFonts */
#define     AFF_TAGGED	0x10000L

struct AvailFonts {
    UWORD   af_Type;		/* MEMORY, DISK, or SCALED */
    struct TextAttr af_Attr;	/* text attributes for font */
};

struct TAvailFonts {
    UWORD   taf_Type;		/* MEMORY, DISK, or SCALED */
    struct TTextAttr taf_Attr;	/* text attributes for font */
};

struct AvailFontsHeader {
    UWORD   afh_NumEntries;      /* number of AvailFonts elements */
    /* struct AvailFonts afh_AF[], or struct TAvailFonts afh_TAF[]; */
};

#endif	/* DISKFONT_DISKFONT_H */
@


37.0
log
@alpha 2 Bullet
@
text
@d1 2
a2 2
#ifndef	LIBRARIES_DISKFONT_H
#define	LIBRARIES_DISKFONT_H
d4 1
a4 1
**	$Id$
d110 1
a110 1
#endif	/* LIBRARIES_DISKFONT_H */
@


36.4
log
@don't start more comments than closed
@
text
@d4 1
a4 1
**	$Header: V36:src/workbench/libs/diskfont/RCS/diskfont.h,v 36.3 90/04/09 18:04:20 kodiak Exp Locker: kodiak $
d8 2
d49 2
d89 2
@


36.3
log
@rcs upgrade
@
text
@d4 1
a4 1
**	$Header: Q:Src/diskfont/RCS/diskfont.h,v 36.2 90/01/30 12:55:38 kodiak Exp $
d59 6
a64 6
    /* the following 8 bytes are not actually considered a part of the */
    /* DiskFontHeader, but immediately preceed it. The NextSegment is  */
    /* supplied by the linker/loader, and the ReturnCode is the code   */
    /* at the beginning of the font in case someone runs it...         */
    /*   ULONG dfh_NextSegment;	/* actually a BPTR */
    /*   ULONG dfh_ReturnCode;	/* MOVEQ #0,D0 : RTS */
@


36.2
log
@obsolete X... concept and introduce T... concept
@
text
@d4 1
a4 1
**	$Header: diskfont.h,v 36.1 90/01/15 10:03:27 kodiak Exp $
@


36.1
log
@put #endif comment in /* */
@
text
@d4 1
a4 1
**	$Header: diskfont.h,v 36.0 89/05/16 17:11:37 kodiak Exp $
d31 11
a41 7

struct XFontContents {
    char    xfc_FileName[MAXFONTPATH-2];
    UWORD   xfc_XSize;
    UWORD   xfc_YSize;
    UBYTE   xfc_Style;
    UBYTE   xfc_Flags;
d45 2
a46 2
#define     FCH_ID	0x0f00	/* FontContentsHeader, then FontContents */
#define     XFCH_ID	0x0f01	/* FontContentsHeader, then XFontContents */
d51 1
a51 1
    /* struct FontContents fch_FC[], or struct XFontContents fch_XFC[]; */
d55 2
a56 2
#define     DFH_ID      0x0f80
#define     MAXFONTNAME 32 /* font name including ".font\0" */
d74 3
d78 1
d86 2
a87 2
#define     AFB_XATTR	16
#define     AFF_XATTR	0x10000L
d94 3
a96 3
struct XAvailFonts {
    UWORD   xaf_Type;		/* MEMORY, DISK, or SCALED */
    struct XTextAttr xaf_Attr;	/* text attributes for font */
d101 1
a101 1
    /* struct AvailFonts afh_AF[], or struct XAvailFonts afh_XAF[]; */
@


36.0
log
@standard headers for V36
@
text
@d4 1
a4 1
**	$Header$
d96 1
a96 1
#endif	LIBRARIES_DISKFONT_H
@


35.1
log
@official 1.3 release version
@
text
@d4 1
a4 2
**	FILENAME: libraries/diskfont.h
**	RELEASE:  1.3
d8 1
a8 1
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
d25 4
a28 4
   char  fc_FileName[MAXFONTPATH];
   UWORD fc_YSize;
   UBYTE fc_Style;
   UBYTE fc_Flags;
a30 1
#define     FCH_ID      0x0f00
d32 12
d45 3
a47 3
   UWORD fch_FileID; /* FCH_ID */
   UWORD fch_NumEntries;   /* the number of FontContents elements */
    /*   struct FontContents fch_FC[]; */
d50 1
d59 9
a67 9
    /*   ULONG dfh_NextSegment;/* actually a BPTR */
    /*   ULONG dfh_ReturnCode;   /* MOVEQ #0,D0 : RTS */
    /* here then is the official start of the DiskFontHeader...      */
   struct   Node dfh_DF;   /* node to link disk fonts */
   UWORD dfh_FileID; /* DFH_ID */
   UWORD dfh_Revision;  /* the font revision */
   LONG  dfh_Segment;   /* the segment address when loaded */
   char  dfh_Name[MAXFONTNAME];  /* the font name (null terminated) */
   struct   TextFont dfh_TF;/* loaded TextFont structure */
d71 6
a76 4
#define     AFB_MEMORY  0
#define     AFF_MEMORY  1
#define     AFB_DISK 1
#define     AFF_DISK 2
d78 3
d82 2
a83 2
   UWORD af_Type;    /* MEMORY or DISK */
   struct   TextAttr af_Attr; /* text attributes for font */
d86 5
d92 2
a93 2
   UWORD afh_NumEntries;      /* number of AvailFonts elements */
    /*   struct   AvailFonts afh_AF[]; */
d96 1
a96 1
#endif	/* LIBRARIES_DISKFONT_H */
@


35.0
log
@initial from 1.2
@
text
@d1 11
a11 11
#ifndef     LIBRARIES_DISKFONT_H
#define     LIBRARIES_DISKFONT_H
/********************************************************************/
/*               Commodore-Amiga, Inc.                              */
/*               diskfont.h                                         */
/********************************************************************/
/*********************************************************************
 *
 * diskfont library definitions
 *
 ********************************************************************/
d75 1
a75 1
#endif
@
