head     38.0;
branch   ;
access   ;
symbols  V36_167:36.1 V36_162:36.1 V36_160:36.1 V36_157:36.1 V36_139:36.1 V36_137:36.1 V36_135:36.1 V36_125:36.0 V36_124:36.0 V36_122:36.0 V36_121:36.0 V36_116:36.0 V36_111:36.0 V36_97:36.0 V36_86:36.0;
locks    ; strict;
comment  @*   @;


38.0
date     92.06.18.11.06.05;  author darren;  state Exp;
branches ;
next     37.0;

37.0
date     90.11.26.12.13.34;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     90.04.09.18.04.00;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     90.01.30.12.55.57;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     89.05.16.17.11.50;  author kodiak;  state Exp;
branches ;
next     35.1;

35.1
date     88.05.25.18.20.59;  author kodiak;  state Exp;
branches ;
next     35.0;

35.0
date     88.05.25.18.19.55;  author kodiak;  state Exp;
branches ;
next     ;


desc
@diskfont library external structures
@


38.0
log
@change LIBRARIES_DISKFONT -> DISKFONT_DISKFONT since the
includes were moved to their own include directory
@
text
@	IFND	DISKFONT_DISKFONT_I
DISKFONT_DISKFONT_I	SET	1
**
**	$Id: diskfont.i,v 37.0 90/11/26 12:13:34 kodiak Exp Locker: darren $
**
**	diskfont library definitions 
**
**	(C) Copyright 1990 Robert R. Burns
**	    All Rights Reserved
**	(C) Copyright 1985,1986,1987,1988,1989 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

	IFND	EXEC_NODES_I
	INCLUDE	"exec/nodes.i"
	ENDC
	IFND	EXEC_LISTS_I
	INCLUDE	"exec/lists.i"
	ENDC
	IFND	GRAPHICS_TEXT_I
	INCLUDE	"graphics/text.i"
	ENDC

MAXFONTPATH	EQU	256	; including null terminator

 STRUCTURE  FC,0		; FontContents
    STRUCT  fc_FileName,MAXFONTPATH
    UWORD   fc_YSize
    UBYTE   fc_Style
    UBYTE   fc_Flags
    LABEL   fc_SIZEOF

 STRUCTURE  TFC,0		; TFontContents
    STRUCT  tfc_FileName,MAXFONTPATH-2
    UWORD   tfc_TagCount	; including the TAG_DONE tag
    ;
    ;   if tfc_TagCount is non-zero, tfc_FileName is overlayed with
    ;	Text Tags starting at:  (struct TagItem *)
    ;	    &tfc_FileName[MAXFONTPATH-(tfc_TagCount*sizeof(struct TagItem))]
    ;
    UWORD   tfc_YSize
    UBYTE   tfc_Style
    UBYTE   tfc_Flags
    LABEL   tfc_SIZEOF


FCH_ID		EQU	$0f00	; FontContentsHeader, then FontContents
TFCH_ID		EQU	$0f02	; FontContentsHeader, then TFontContents
OFCH_ID		EQU	$0f03	; FontContentsHeader, then TFontContents,
				; associated with outline font

 STRUCTURE  FCH,0		; FontContentsHeader
    UWORD   fch_FileID		; FCH_ID or TFCH_ID
    UWORD   fch_NumEntries	; the number of FontContents elements
    LABEL   fch_FC		; the [T]FontContents elements follow here


DFH_ID		EQU	$0f80
MAXFONTNAME	EQU	32	; font name including ".font\0"

 STRUCTURE  DiskFontHeader,0
    ; the following 8 bytes are not actually considered a part of the
    ; DiskFontHeader, but immediately preceed it.  The NextSegment is supplied
    ; by the linker/loader, and the ReturnCode is the code at the beginning
    ; of the font in case someone runs it...
    ; ULONG dfh_NextSegment	; actually a BPTR
    ; ULONG dfh_ReturnCode	; MOVEQ #0,D0 : RTS
    ; here then is the official start of the DiskFontHeader...
    STRUCT  dfh_DF,LN_SIZE	; node to link disk fonts
    UWORD   dfh_FileID		; DFH_ID
    UWORD   dfh_Revision	; the font revision in this version
    LONG    dfh_Segment		; the segment address when loaded
    STRUCT  dfh_Name,MAXFONTNAME ; the font name (null terminated)
    STRUCT  dfh_TF,tf_SIZEOF	; loaded TextFont structure
    LABEL   dfh_SIZEOF

; used only if dfh_TF.tf_Style FSB_TAGGED bit is set
dfh_TagList	EQU	dfh_Segment	; destroyed during loading


    BITDEF  AF,MEMORY,0
    BITDEF  AF,DISK,1
    BITDEF  AF,SCALED,2
    BITDEF  AF,BITMAP,3

    BITDEF  AF,TTATTR,16	; return TAvailFonts

 STRUCTURE  AF,0		; AvailFonts
    UWORD   af_Type		; MEMORY, DISK, or SCALED
    STRUCT  af_Attr,ta_SIZEOF	; text attributes for font
    LABEL   af_SIZEOF

 STRUCTURE  TAF,0		; TAvailFonts
    UWORD   taf_Type		; MEMORY, DISK, or SCALED
    STRUCT  taf_Attr,tta_SIZEOF	; text attributes for font
    LABEL   taf_SIZEOF

 STRUCTURE  AFH,0		; AvailFontsHeader
    UWORD   afh_NumEntries	; number of AvailFonts elements
    LABEL   afh_AF		; the [T]AvailFonts elements follow here

	ENDC	; DISKFONT_DISKFONT_I
@


37.0
log
@alpha 2 Bullet
@
text
@d1 2
a2 2
	IFND	LIBRARIES_DISKFONT_I
LIBRARIES_DISKFONT_I	SET	1
d4 1
a4 1
**	$Id$
d102 1
a102 1
	ENDC	; LIBRARIES_DISKFONT_I
@


36.2
log
@rcs upgrade
@
text
@d4 1
a4 1
**	$Header: Q:Src/diskfont/RCS/diskfont.i,v 36.1 90/01/30 12:55:57 kodiak Exp $
d8 2
d49 2
a50 1

d84 1
@


36.1
log
@obsolete X... concept and introduce T... concept
@
text
@d4 1
a4 1
**	$Header: diskfont.i,v 36.0 89/05/16 17:11:50 kodiak Exp $
@


36.0
log
@standard headers for V36
@
text
@d4 1
a4 1
**	$Header$
d31 12
a42 7
 STRUCTURE  XFC,0		; XFontContents
    STRUCT  xfc_FileName,MAXFONTPATH-2
    UWORD   xfc_XSize
    UWORD   xfc_YSize
    UBYTE   xfc_Style
    UBYTE   xfc_Flags
    LABEL   xfc_SIZEOF
d46 1
a46 1
XFCH_ID		EQU	$0f01	; FontContentsHeader, then XFontContents
d48 1
d50 1
a50 1
    UWORD   fch_FileID		; FCH_ID or XFCH_ID
d52 1
a52 1
    LABEL   fch_FC		; the [X]FontContents elements follow here
d74 2
d77 1
d82 1
a82 1
    BITDEF  AF,XATTR,16
d89 4
a92 4
 STRUCTURE  XAF,0		; XAvailFonts
    UWORD   xaf_Type		; MEMORY, DISK, or SCALED
    STRUCT  xaf_Attr,xta_SIZEOF	; text attributes for font
    LABEL   xaf_SIZEOF
d96 1
a96 1
    LABEL   afh_AF		; the [X]AvailFonts elements follow here
@


35.1
log
@official 1.3 release version
@
text
@d4 1
a4 2
**	FILENAME: libraries/diskfont.i
**	RELEASE:  1.3
d8 1
a8 1
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
d12 9
a20 9
   IFND     EXEC_NODES_I
   INCLUDE     "exec/nodes.i"
   ENDC
   IFND     EXEC_LISTS_I
   INCLUDE     "exec/lists.i"
   ENDC
   IFND     GRAPHICS_TEXT_I
   INCLUDE     "graphics/text.i"
   ENDC
d22 1
a22 1
MAXFONTPATH EQU   256   ; including null terminator
d24 6
a29 6
 STRUCTURE  FC,0
   STRUCT   fc_FileName,MAXFONTPATH
   UWORD fc_YSize
   UBYTE fc_Style
   UBYTE fc_Flags
   LABEL fc_SIZEOF
d31 7
a37 1
FCH_ID      EQU   $0f00
a38 4
 STRUCTURE  FCH,0
   UWORD fch_FileID  ; FCH_ID
   UWORD fch_NumEntries ; the number of FontContents elements
   LABEL fch_FC      ; the FontContents elements
d40 2
d43 4
a46 2
DFH_ID      EQU   $0f80
MAXFONTNAME EQU   32 ; font name including ".font\0"
d48 4
d57 2
a58 2
    ; ULONG dfh_NextSegment   ; actually a BPTR
    ; ULONG dfh_ReturnCode    ; MOVEQ #0,D0 : RTS
d60 7
a66 7
   STRUCT   dfh_DF,LN_SIZE    ; node to link disk fonts
   UWORD dfh_FileID           ; DFH_ID
   UWORD dfh_Revision         ; the font revision in this version
   LONG  dfh_Segment          ; the segment address when loaded
   STRUCT   dfh_Name,MAXFONTNAME ; the font name (null terminated)
   STRUCT   dfh_TF,tf_SIZEOF  ; loaded TextFont structure
   LABEL dfh_SIZEOF
d69 3
a71 2
   BITDEF   AF,MEMORY,0
   BITDEF   AF,DISK,1
d73 1
a73 4
 STRUCTURE  AF,0
   UWORD af_Type        ; MEMORY or DISK
   STRUCT   af_Attr,ta_SIZEOF ; text attributes for font
   LABEL af_SIZEOF
d75 13
a87 3
 STRUCTURE  AFH,0
   UWORD afh_NumEntries    ; number of AvailFonts elements
   LABEL afh_AF         ; the AvailFonts elements
@


35.0
log
@initial from 1.2
@
text
@d1 11
a11 11
   IFND  LIBRARIES_DISKFONT_I
LIBRARIES_DISKFONT_I SET   1
********************************************************************
*               Commodore-Amiga, Inc.                              *
*               diskfont.i                                         *
********************************************************************
********************************************************************
*
*  diskfont library definitions
*
********************************************************************
d72 1
a72 1
   ENDC
@
