head     40.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


40.2
date     93.03.26.13.29.20;  author vertex;  state Exp;
branches ;
next     40.1;

40.1
date     93.03.16.11.11.17;  author vertex;  state Exp;
branches ;
next     ;


desc
@Lock management for realtime.library
@


40.2
log
@Changed lib base references names
@
text
@
#include <exec/semaphores.h>

#include <clib/exec_protos.h>

#include <pragmas/exec_pragmas.h>

#include "realtimebase.h"


/*****************************************************************************/


APTR ASM LIBLockRealTime(REG(d0) ULONG lockType,
			 REG(a6) struct RealTimeLib *RealTimeBase)
{
    if (lockType == RT_CONDUCTORS)
    {
	ObtainSemaphore(&RealTimeBase->rtl_ConductorLock);
	return(&RealTimeBase->rtl_ConductorLock);
    }

    return(NULL);
}


/*****************************************************************************/


VOID ASM LIBUnlockRealTime(REG(a0) struct SignalSemaphore *lockHandle,
			   REG(a6) struct RealTimeLib *RealTimeBase)
{
    if (lockHandle)
        ReleaseSemaphore(lockHandle);
}
@


40.1
log
@Initial V40 RCS checkin
@
text
@d19 2
a20 2
	ObtainSemaphore(&RealTimeBase->rtb_ConductorLock);
	return(&RealTimeBase->rtb_ConductorLock);
@
