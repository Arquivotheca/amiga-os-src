%% ----------------------------------------------------------------------
%% (C) 1991 Commodore-Amiga (written by L. Vanhelsuwe)
%% ----------------------------------------------------------------------
%% Amiga Postscript fonts initialization file.
%% This file creates the internal dictionary FontDirectory.
%% ----------------------------------------------------------------------

systemdict begin				% define dictionary in systemdict

/loadfont						% fontkey
	{ /fname 20 string def				% initial filename with prefix
		fname 0 80 put			% 'P'
		fname 1 83 put			% 'S'
		fname 2 58 put			% ':'

	  20 string cvs /font exch def				% get fontname in string
	  0 1 font length 1 sub {					% for every char in fontname
		/index exch def							% get char
		fname index 3 add						% and copy to filename PAST
			font index get						% device prefix
		put
% fname print (\n) print flush
	  } for
	fname run									% in currentdict: def font
	} def
%-------------------------------
/findfont						% fontkey "findfont" | fontdict
	{	1 dict begin
		/fkey exch def

		FontDirectory fkey known

		{ FontDirectory fkey get	% if font exists.. 

			begin					% go inside font (Ooh Err..)

			FontType 5 eq			% if font is built-in font load into Strings
			{	
				CharStrings length 0 eq {
					CharStrings begin fkey loadfont end	% load font file
				} if
				currentdict end		% return font dict
			}
									% ELSE load into Procs
	
			{  currentdict /CharProcs known
			   { (Weird: User-font that needs loading from disk..\n) print
					CharProcs length 0 eq {
						CharProcs begin fkey loadfont end		% load font file
					} if
			   } if					% only if CharProcs exists test its length

			  currentdict end
			}						% return font dict
			ifelse
		
		}							% if already loaded, just return font dict

		{ fkey end cvx exec }		% if unknown font : gen an undefined error

		ifelse

		end
	}
def
%-------------------------------
/StandardEncoding 

[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash 
/zero /one /two /three /four /five /six /seven /eight /nine 
/colon /semicolon /less /equal /greater /question /at 
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z 
/bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft 
/a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z 
/braceleft /bar /braceright /asciitilde

%% now comes the second half of the ASCII set (128..255)

/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef 
/exclamdown /cent /sterling /fraction /yen /florin /section /currency 
/quotesingle /quotedblleft /guillemotleft /guilsinglleft /guilsinglright 
/fi /fl /.notdef /endash /dagger /daggerdbl /periodcentered /.notdef 
/paragraph /bullet /quotesinglbase /quotedblbase /quotedblright /guillemotright 
/ellipsis /perthousand /.notdef /questiondown /.notdef /grave /acute 
/circumflex /tilde /macron /breve /dotaccent /dieresis /.notdef /ring 
/cedilla /.notdef /hungarumlaut /ogonek /caron /emdash /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /AE /.notdef /ordfeminine 
/.notdef /.notdef /.notdef /.notdef /Lslash /Oslash /OE /ordmasculine 
/.notdef /.notdef /.notdef /.notdef /.notdef /ae /.notdef /.notdef /.notdef 
/dotlessi /.notdef /.notdef /lslash /oslash /oe /germandbls /.notdef /.notdef 
/.notdef /.notdef ]
readonly						% protect array from modifications
def								% define StandardEncoding vector

%-------------------------------
% Still in systemdict...

/FontDirectory 50 dict def		% maximum number of different fonts in system

/BuildChar {					% receives "font char" as arguments
	1000 0
	0 0 750 750 setcachedevice
	exch begin					% font begin
	Encoding exch get			% index by char in Encoding
	CharProcs exch get			% Look up name in CharProcs (get procedure)
	end							% leave font
	exec						% render character
} def

10 dict begin					% don't gen crap in systemdict

/initfont {
%%	/FontType 3 def				% User-Defined fonts !!
	/FontType 5 def				% Internal fonts !!
	/FontMatrix [ 0.001 0 0 0.001 0 0] def	% map char space to one unit square
	/FontBBox [ 0 0 999 999] def
	/Encoding StandardEncoding def	% use default system character encoding
%%	/Metrics 1 dict def
%%	/StrokeWidth 50 def			% linewidth for a 1000*1000 character
%%	/FontInfo 1 dict def
	/CharStrings 256 dict def	% this is where the char defs will be !!
%%	/CharProcs 256 dict def		% this is where the char defs will be !!
%%	/Private 1 dict def
} def

%-------------------------------
% Construct font skeletons and then submit them all with 'definefont'
%-------------------------------
/Cour 16 dict def
	Cour begin
	/FontName /Courier def
	initfont
	/PaintType 3 def			% character path stroked by font itself
	end							% pop Courier font off dict stack
%-------------------------------
/TR 16 dict def
	TR begin
	/FontName /Times-Roman def
	initfont
	/PaintType 0 def			% "show" has to fill character path
	end							% pop font off dict stack
%-------------------------------
/Helv 16 dict def
	Helv begin
	/FontName /Helvetica def
	initfont
	/PaintType 0 def			% "show" has to fill character path
	end							% pop font off dict stack
%-------------------------------
/SB 16 dict def
	SB begin
	/FontName /SchoolBook def
	initfont
	/PaintType 0 def			% "show" has to fill character path
	end							% pop font off dict stack
%-------------------------------
/Courier		Cour	definefont pop	% discard returned fonts
/Times-Roman	TR		definefont pop
/Helvetica		Helv	definefont pop
/SchoolBook		SB		definefont pop

end								% discard temporary 

%----------------------------------------------------------------------
% Everything is done: pop systemdict off dict stack.
% Dict stack will now again contain the usual userdict & systemdict.
%----------------------------------------------------------------------

end					% return dictstack to default programming model.

