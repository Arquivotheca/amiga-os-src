   MemServer.doc       John W. Lockhart       Docs 12 Mar 1992

   Purpose In Life:
        To provide a means of allocating RAM on any given expansion 
        board, or on the motherboard.  Also, to allow multiple programs
        to share blocks of RAM, and provide a means where those programs
        can write coherently to a logfile.

   Requires:
        AmigaDOS V37 or better.  Very helpful if you have the
        KillServer program, too.

   Current Bugs:
        None known.

   Changes:
        As of versions numbered 2.x, should handle motherboard Fast RAM
        and properly give pointers to ROM on SKS/ROM/KickIt machines.
        Serial reporting and simple client control are also new for 2.x.

   Use:  run memserver <logfile> [safe] [pri] [NoSer] [NoClientQuit]
   Where:
        logfile is the name of the file you want to use to record the activities
                of the MemServer's clients.  It is humbly suggested that you
                choose someplace on a scratch disk drive, or serial port,
                so that you don't munge anything if you crash.  (Crashes should
                be due to hardware or firmware failures, btw :-)
        safe    is whether to close the logfile between writes.  While it
                adds some security and peace of mind, it also slows down the
                recordkeeping (ie, Open/Seek/Close all the time).  And if you're
                writing out the serial port, you don't really want this option,
                unless you like Seek()ing on SER:...
        pri     is the priority to run at.  Default is 4, well above Workbench.  
                The intended scheme is to run clients at 2, a shell at 3, and
                this server at 4.  Workbench and low-priority shells would run
                at 1 and 0, respectively.
        noSer   Do not send information out the serial port at 9600 baud.
                Default: send info, complete with bells and inverse video
                when a client reports an error.  It's recommended that you
                leave the serial reporting on, especially if you're using
                the Safe option; if you crash, you can wind up with a message
                or two more from the serial port than in the log file.
        NCQ     NoClientQuit, or NCQ, tells clients to continue if they 
                encounter serious errors such as read errors or corrupt
                disks on verifies.  Of course, clients may ignore the server
                and exit anyway, if the client thinks it can't continue.
                Default:  tell clients to quit.

    Note that there is no way to exit the server.  You must use the
    KillServer program, or have a client who is bravely foolish enough
    to send along the CMD_QUIT message (see Programmer's Docs).


Valid board/memory types:  (This is the master reference list.)

    Expansion boards are numbered 1 to n, starting closest to the CPU and
    proceeding to the left.  Non-RAM boards are not counted; neither are
    empty slots.  Alternatively, you may specify any of the following:

                   Board    Meaning            Value on Error Reports
                   -----    -----------        ----------------------
                    CPU     CPU_BOARD               1
                    1       BUS_1                   1
                    2       BUS_2                   2   
                    3       BUS_3                   3
                    4       BUS_4                   4
                    5       BUS_5                   5
                    6       BUS_6                   6
                    MB      MOTHERBOARD             7
                    CHIP    CHIP RAM                8
                    FAST    FAST RAM                9
                    ANY     ANY RAM                10
                    ROM     ROM                    11

    As of this writing, Motherboard RAM is treated as any Fast RAM not on the
    expansion bus. ROM should now work.  CPU is equivalent to BUS_1 if a CPU
    board with expansion RAM is present.

    This code is not residentable, unlike most of its clients.
