
                            TstMgr - Test Manager
                                Version 37.32
                                 19 May 1992
                                J.W. Lockhart

Usage:
    run tstmgr [USEWB] [NOSER] [USEPAR] [USECON] [LOGFILE] [ERRABORT]
               [PRIORITY]
    or use from Workbench with tooltypes as above.

Where:
    Keyword      - Meaning                                 Default
    ---------    ----------------------------------------  -------
    USEWB/S      - open window on default pubscreen/wb      [OFF]
    NOSER/S      - do not send reports to ser:              [OFF]
    USEPAR/S     - send reports to par: as well             [OFF]
    USECON/S     - send reports to con: as well             [OFF]
    LOGFILE/K    - send reports to specified file as well   [OFF]
    ERRABORT/S   - abort test on first error                [OFF]
    PRIORITY/K/N - priority at which to run (default 4)     [ 4 ]
    ERRLEV/K/N   - level of error reporting to see          [ 2 ]
    VERBOSE/K/N  - level of verbosity                       [ 0 ]
    DEBUG/K/N    - level of debug info                      [ 0 ]

Purpose:
   To monitor any number of tests which are running on the same machine.
   TstMgr provides unified reporting to multiple error logs, simple Pass/Fail
   status, timestamping, and program identification.  Many different
   levels of reporting are available, but the default is to provide
   startup, exit, error, and extended error reports.  Optionally you
   may add up to three levels of verbose or debugging information.

Requirements:
   One Amiga running Release 2.04 (V37) or better.
   A test or collection of tests that use TstMgr for error reporting.


The default is to send reports only to ser: via KPrintF(), and to run at
priority 4.  All other options are OFF.  Messages out the serial port
will ring the terminal's bell and display inverse video for any error
reports.

These options may be used in the icon's tooltype, or used from the CLI.
Numeric options, if used from the icon's tooltype, may be entered in
decimal, octal, or hexadecimal, for the strange of heart.  From the CLI,
only decimal may be used.

For clients, be aware that the first test manager will have the port name
"TestMgr_0", and each subsequent invocation will increase the number by 1, to
a maximum of "TestMgr_999".

Certain features such as ERRABORT depend on how the client program is
written.  Specifically, clients *must* check the return from their
error-reporting function and act accordingly.

Note that tests will not abort immediately when you hit the "Abort Test"
gadget; they will instead get an abort message the next time they report to
the Test Manager.  

Note that clicking the Exit gadget does nothing if you have clients still
running.  This also holds true for the CloseWindow gadget if you have
selected the USEWB option.  To exit in these cases, click the "Abort Test"
gadget and wait for the status to be displayed as "Idle/Done".  Then click
"Exit" or (if it's present) the close gadget.

Keyword Notes:
    The following three keywords control the amount of information which
    TestMgr pumps out.  The default is to give program progress, error
    messages, and startup/exit messages; these cannot be turned off. 
    Additional levels may be requested, however, and may be useful for various
    clients.  Levels are cumulative; if you select Verbose 2, you also
    see Verbose Level 1 messages.

 -  ERRLEV may be 1 (off) or 2.  Additional info about errors.
    Note that you can only turn off the Additional Errors.  
 -  VERBOSE may be 0 (off), 1, 2, 3.  Additional progress info.
 -  DEBUG may be 0 (off), 1, 2, 3.   Test program debugging info.

    Note that the TestManager excels at ignoring messages the user
    doesn't want to hear, but always reports startup, exit,
    basic progress, and basic errors, no matter what.  (In fact, by
    checking in with the Manager (and checking out), clients automatically
    send startup/exit messages.)

 -  LOGFILE may be anything you desire.  The logfile will be kept open for
    the entire TestMgr session, and no Seek()s or other untoward functions
    will be called on said file.

 -  USECON uses a hardcoded console window value which should be
    acceptable for most screens (640 x 100 window).  
    
 -  PRIORITY ranges should be from -5 to +5 so as not to interfere
    with normal system use.  Preferably TstMgr will run between
    +2 and +5, to avoid being slowed down by Workbench, which runs
    at priority 1.  Note that Clients will wait for their reports
    to be processed; if the Test Manager is waiting for a higher
    priority task before it can process the reports, you will
    slow down the Clients as well.  Default priority is 4.

Exiting the program
    Only allowed when the status box reads IDLE.  Simply click on
    the Exit gadget to terminate the tests.  Please note that
    changing the reporting parameters (ie, output or types of messages
    to see) is not allowed after TstMgr starts up; you must exit
    and re-start with the new parameters.

Detecting errors
  Custom Screen (default)
    The status box will read FAIL and the window will turn bright red
    (darker grey on a Moniterm).  Usual color is green, or light
    grey on a Moniterm.
  PubScreen (USEWB option)
    A DisplayBeep() will be sent to *all* screens.  Also, the window will be
    recolored _once_.  That is, if you obscure the window, the color won't be
    refreshed (but the information will be).  The purpose here is to draw
    your attention to the error condition.  At any rate, the window will be
    filled with Complemented colors.  This means strange colors if your
    screen has more than 4 colors; see what your single-image icons do.
    Be aware that the recoloring is a hack which is somewhat unkosher
    (it calls Intuition's RefreshGadgets() on GadTools gadgets to pull
    this one off), and this behavior may well change in future releases.

Other Gadgets
    Have a look at it; it should be self-explanatory, or I've goofed
    somewhere :-)

Acknowledgements
    Thanks to Fred Mitchell for suggesting the USEWB feature.


History:
    Version 37.9  - initial release, 08 May 92.
    Version 37.32 - 19 May 92.  Added USEWB, performed code cleanup,
        nailed a few bugs and potential problems here & there.
