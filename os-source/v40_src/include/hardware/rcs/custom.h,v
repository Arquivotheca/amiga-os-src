head     39.0;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @**	@;


39.0
date     91.08.27.17.38.45;  author spence;  state Exp;
branches ;
next     36.4;

36.4
date     90.11.05.17.59.13;  author bryce;  state Exp;
branches ;
next     36.3;

36.3
date     90.07.26.10.20.30;  author rsbx;  state Exp;
branches ;
next     36.2;

36.2
date     90.07.10.21.26.22;  author bryce;  state Exp;
branches ;
next     36.1;

36.1
date     89.06.05.14.43.25;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     89.06.05.14.27.50;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@new AA registers
@
text
@#ifndef	HARDWARE_CUSTOM_H
#define	HARDWARE_CUSTOM_H
/*
**	$Id: custom.h,v 36.4 90/11/05 17:59:13 bryce Exp Locker: spence $
**
**	Offsets of Amiga custom chip registers
**
**	(C) Copyright 1985,1986,1987,1988,1990 Commodore-Amiga, Inc.
**	    All Rights Reserved
*/

#ifndef EXEC_TYPES_H
#include "exec/types.h"
#endif /* EXEC_TYPES_H */



/*
 * do this to get base of custom registers:
 * extern struct Custom custom;
 */


struct Custom {
    UWORD   bltddat;
    UWORD   dmaconr;
    UWORD   vposr;
    UWORD   vhposr;
    UWORD   dskdatr;
    UWORD   joy0dat;
    UWORD   joy1dat;
    UWORD   clxdat;
    UWORD   adkconr;
    UWORD   pot0dat;
    UWORD   pot1dat;
    UWORD   potinp;
    UWORD   serdatr;
    UWORD   dskbytr;
    UWORD   intenar;
    UWORD   intreqr;
    APTR    dskpt;
    UWORD   dsklen;
    UWORD   dskdat;
    UWORD   refptr;
    UWORD   vposw;
    UWORD   vhposw;
    UWORD   copcon;
    UWORD   serdat;
    UWORD   serper;
    UWORD   potgo;
    UWORD   joytest;
    UWORD   strequ;
    UWORD   strvbl;
    UWORD   strhor;
    UWORD   strlong;
    UWORD   bltcon0;
    UWORD   bltcon1;
    UWORD   bltafwm;
    UWORD   bltalwm;
    APTR    bltcpt;
    APTR    bltbpt;
    APTR    bltapt;
    APTR    bltdpt;
    UWORD   bltsize;
    UBYTE   pad2d;
    UBYTE   bltcon0l;	/* low 8 bits of bltcon0, write only */
    UWORD   bltsizv;
    UWORD   bltsizh;	/* 5e */
    UWORD   bltcmod;
    UWORD   bltbmod;
    UWORD   bltamod;
    UWORD   bltdmod;
    UWORD   pad34[4];
    UWORD   bltcdat;
    UWORD   bltbdat;
    UWORD   bltadat;
    UWORD   pad3b[3];
    UWORD   deniseid;	/* 7c */
    UWORD   dsksync;
    ULONG   cop1lc;
    ULONG   cop2lc;
    UWORD   copjmp1;
    UWORD   copjmp2;
    UWORD   copins;
    UWORD   diwstrt;
    UWORD   diwstop;
    UWORD   ddfstrt;
    UWORD   ddfstop;
    UWORD   dmacon;
    UWORD   clxcon;
    UWORD   intena;
    UWORD   intreq;
    UWORD   adkcon;
    struct  AudChannel {
      UWORD *ac_ptr; /* ptr to start of waveform data */
      UWORD ac_len;     /* length of waveform in words */
      UWORD ac_per;     /* sample period */
      UWORD ac_vol;     /* volume */
      UWORD ac_dat;     /* sample pair */
      UWORD ac_pad[2];  /* unused */
    } aud[4];
    APTR    bplpt[8];
    UWORD   bplcon0;
    UWORD   bplcon1;
    UWORD   bplcon2;
    UWORD   bplcon3;
    UWORD   bpl1mod;
    UWORD   bpl2mod;
    UWORD   bplcon4;
    UWORD   clxcon2;
    UWORD   bpldat[8];
    APTR    sprpt[8];
    struct  SpriteDef {
      UWORD pos;
      UWORD ctl;
      UWORD dataa;
      UWORD datab;
    } spr[8];
    UWORD   color[32];
    UWORD htotal;
    UWORD hsstop;
    UWORD hbstrt;
    UWORD hbstop;
    UWORD vtotal;
    UWORD vsstop;
    UWORD vbstrt;
    UWORD vbstop;
    UWORD sprhstrt;
    UWORD sprhstop;
    UWORD bplhstrt;
    UWORD bplhstop;
    UWORD hhposw;
    UWORD hhposr;
    UWORD beamcon0;
    UWORD hsstrt;
    UWORD vsstrt;
    UWORD hcenter;
    UWORD diwhigh;	/* 1e4 */
    UWORD padf3[11];
    UWORD fmode;
};

#ifdef ECS_SPECIFIC
 
/* defines for beamcon register */
#define VARVBLANK       0x1000  /* Variable vertical blank enable */
#define LOLDIS          0x0800  /* long line disable */
#define CSCBLANKEN      0x0400  /* redirect composite sync */
#define VARVSYNC        0x0200  /* Variable vertical sync enable */
#define VARHSYNC        0x0100  /* Variable horizontal sync enable */
#define VARBEAM         0x0080  /* variable beam counter enable */
#define DISPLAYDUAL     0x0040  /* use UHRES pointer and standard pointers */
#define DISPLAYPAL      0x0020  /* set decodes to generate PAL display */
#define VARCSYNC        0x0010  /* Variable composite sync enable */
#define CSBLANK         0x0008  /* Composite blank out to CSY* pin */
#define CSYNCTRUE       0x0004  /* composite sync true signal */
#define VSYNCTRUE       0x0002  /* vertical sync true */
#define HSYNCTRUE       0x0001  /* horizontal sync true */
 
/* new defines for bplcon0 */
#define USE_BPLCON3     1
 
/* new defines for bplcon2 */
#define BPLCON2_ZDCTEN          (1<<10) /* colormapped genlock bit */
#define BPLCON2_ZDBPEN          (1<<11) /* use bitplane as genlock bits */
#define BPLCON2_ZDBPSEL0        (1<<12) /* three bits to select one */
#define BPLCON2_ZDBPSEL1        (1<<13) /* of 8 bitplanes in */
#define BPLCON2_ZDBPSEL2        (1<<14) /* ZDBPEN genlock mode */
 
/* defines for bplcon3 register */
#define BPLCON3_EXTBLNKEN       (1<<0)  /* external blank enable */
#define BPLCON3_EXTBLKZD        (1<<1)  /* external blank ored into trnsprncy */
#define BPLCON3_ZDCLKEN         (1<<2)  /* zd pin outputs a 14mhz clock*/
#define BPLCON3_BRDNTRAN        (1<<4)  /* border is opaque */
#define BPLCON3_BRDNBLNK        (1<<5)  /* border is opaque */
 
#endif	/* ECS_SPECIFIC */

#endif	/* HARDWARE_CUSTOM_H */
@


36.4
log
@Add types.x
@
text
@d4 1
a4 1
**	$Id: custom.h,v 36.3 90/07/26 10:20:30 rsbx Exp Locker: bryce $
d78 1
a78 1
    UWORD deniseid;   /* 7c */
d109 2
a110 2
    UWORD   bplhmod;
    UWORD   pad86[1];
d138 3
a140 1
    UWORD   diwhigh;	/* 1e4 */
@


36.3
log
@Added ECS defines.
@
text
@d4 1
a4 1
**	$Id: custom.h,v 36.2 90/07/10 21:26:22 bryce Exp Locker: rsbx $
d6 1
a6 1
**	offsets of custom registers
d8 1
a8 1
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
d11 6
@


36.2
log
@Fix bad #endif, and update header for 2.0 includes release
@
text
@d4 1
a4 1
**	$Id: /usr/machines/ghostwheel/commodore/amiga/V36/src/include/hardware/RCS/custom.h,v 36.1 89/06/05 14:43:25 kodiak Exp Locker: bryce $
d134 37
@


36.1
log
@standard include header
@
text
@d1 2
a2 2
#ifndef  HARDWARE_CUSTOM_H
#define  HARDWARE_CUSTOM_H
d4 1
a4 1
**	$Header$
d134 1
a134 1
#endif !HARDWARE_CUSTOM_H
@


36.0
log
@*** empty log message ***
@
text
@a0 10
/*******************************************************************
* Commodore-Amiga, Inc.
* custom.h
*
* $Header: custom.h,v 27.1 85/06/24 14:42:53 neil Exp $
*
* $Locker:  $
*
********************************************************************/

d3 8
@
