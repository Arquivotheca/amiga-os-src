head     39.0;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @**	@;


39.0
date     91.08.27.17.42.27;  author spence;  state Exp;
branches ;
next     36.6;

36.6
date     91.04.30.13.48.34;  author bryce;  state Exp;
branches ;
next     36.5;

36.5
date     90.11.05.17.59.17;  author bryce;  state Exp;
branches ;
next     36.4;

36.4
date     90.07.10.21.27.01;  author bryce;  state Exp;
branches ;
next     36.3;

36.3
date     89.06.06.12.36.01;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     89.06.05.14.43.27;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     89.06.05.14.30.17;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     89.06.05.14.27.52;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@new AA registers
@
text
@	IFND	HARDWARE_CUSTOM_I
HARDWARE_CUSTOM_I	SET	1
**
**	$Id: custom.i,v 36.6 91/04/30 13:48:34 bryce Exp Locker: spence $
**
**	Offsets of Amiga custom chip registers
**
**	(C) Copyright 1985,1986,1987,1988,1990 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

*
* do this to get base of custom registers:
*  XREF _custom;
*

bltddat     EQU   $000
dmaconr     EQU   $002
vposr       EQU   $004
vhposr      EQU   $006
dskdatr     EQU   $008
joy0dat     EQU   $00A
joy1dat     EQU   $00C
clxdat      EQU   $00E

adkconr     EQU   $010
pot0dat     EQU   $012
pot1dat     EQU   $014
potinp      EQU   $016
serdatr     EQU   $018
dskbytr     EQU   $01A
intenar     EQU   $01C
intreqr     EQU   $01E

dskpt       EQU   $020
dsklen      EQU   $024
dskdat      EQU   $026
refptr      EQU   $028
vposw       EQU   $02A
vhposw      EQU   $02C
copcon      EQU   $02E
serdat      EQU   $030
serper      EQU   $032
potgo       EQU   $034
joytest     EQU   $036
strequ      EQU   $038
strvbl      EQU   $03A
strhor      EQU   $03C
strlong     EQU   $03E

bltcon0     EQU   $040
bltcon1     EQU   $042
bltafwm     EQU   $044
bltalwm     EQU   $046
bltcpt      EQU   $048
bltbpt      EQU   $04C
bltapt      EQU   $050
bltdpt      EQU   $054
bltsize     EQU   $058
bltcon0l    EQU   $05B		; note: byte access only
bltsizv     EQU   $05C
bltsizh     EQU   $05E

bltcmod     EQU   $060
bltbmod     EQU   $062
bltamod     EQU   $064
bltdmod     EQU   $066

bltcdat     EQU   $070
bltbdat     EQU   $072
bltadat     EQU   $074

deniseid    EQU   $07C
dsksync     EQU   $07E

cop1lc      EQU   $080
cop2lc      EQU   $084
copjmp1     EQU   $088
copjmp2     EQU   $08A
copins      EQU   $08C
diwstrt     EQU   $08E
diwstop     EQU   $090
ddfstrt     EQU   $092
ddfstop     EQU   $094
dmacon      EQU   $096
clxcon      EQU   $098
intena      EQU   $09A
intreq      EQU   $09C
adkcon      EQU   $09E

aud         EQU   $0A0
aud0        EQU   $0A0
aud1        EQU   $0B0
aud2        EQU   $0C0
aud3        EQU   $0D0

* AudChannel
ac_ptr      EQU   $00   ; ptr to start of waveform data
ac_len      EQU   $04   ; length of waveform in words
ac_per      EQU   $06   ; sample period
ac_vol      EQU   $08   ; volume
ac_dat      EQU   $0A   ; sample pair
ac_SIZEOF   EQU   $10

bplpt       EQU   $0E0

bplcon0     EQU   $100
bplcon1     EQU   $102
bplcon2     EQU   $104
bplcon3     EQU   $106
bpl1mod     EQU   $108
bpl2mod     EQU   $10A
bplcon4     EQU   $10C
clxcon2     EQU   $10E

bpldat      EQU   $110

sprpt       EQU   $120

spr         EQU   $140

* SpriteDef
sd_pos      EQU   $00
sd_ctl      EQU   $02
sd_dataa    EQU   $04
sd_dataB    EQU   $06
sd_SIZEOF   EQU   $08

color       EQU   $180

htotal      EQU   $1c0
hsstop      EQU   $1c2
hbstrt      EQU   $1c4
hbstop      EQU   $1c6
vtotal      EQU   $1c8
vsstop      EQU   $1ca
vbstrt      EQU   $1cc
vbstop      EQU   $1ce
sprhstrt    EQU   $1d0
sprhstop    EQU   $1d2
bplhstrt    EQU   $1d4
bplhstop    EQU   $1d6
hhposw      EQU   $1d8
hhposr      EQU   $1da
beamcon0    EQU   $1dc
hsstrt      EQU   $1de
vsstrt      EQU   $1e0
hcenter     EQU   $1e2
diwhigh     EQU   $1e4
fmode       EQU   $1fc

   ENDC  !HARDWARE_CUSTOM_I
@


36.6
log
@Remove spelling mistake: "beamcom" vs. "beamcon".
@
text
@d4 1
a4 1
**	$Id: custom.i,v 36.5 90/11/05 17:59:17 bryce Exp Locker: bryce $
d113 2
a114 1
bplhmod     EQU   $10C
d150 1
@


36.5
log
@Add types.x
@
text
@d4 1
a4 1
**	$Id: custom.i,v 36.4 90/07/10 21:27:01 bryce Exp Locker: bryce $
d144 1
a144 1
beamcom0    EQU   $1dc
@


36.4
log
@Update header for 2.0 includes release
@
text
@d4 1
a4 1
**	$Id: /usr/machines/ghostwheel/commodore/amiga/V36/src/include/hardware/RCS/custom.i,v 36.3 89/06/06 12:36:01 kodiak Exp Locker: bryce $
d6 1
a6 1
**	offsets of custom registers
d8 1
a8 1
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
@


36.3
log
@rename sd_datab to sd_dataB while I'm here (since it changed)
add sd_SIZEOF
@
text
@d4 1
a4 1
**	$Header: custom.i,v 36.2 89/06/05 14:43:27 kodiak Exp $
@


36.2
log
@standard include header
@
text
@d4 1
a4 1
**	$Header$
d97 1
a97 1
* STRUCTURE AudChannel,0
d120 2
a121 1
* STRUCTURE SpriteDef
d125 2
a126 1
sd_datab    EQU   $06
@


36.1
log
@fix sd_datab to $06 (from $08)
@
text
@d1 10
a10 12
********************************************************************
* Commodore-Amiga, Inc.
* custom.i
*
* $Header: custom.i,v 36.0 89/06/05 14:27:52 kodiak Exp $
*
* $Locker: kodiak $
*
*********************************************************************

   IFND  HARDWARE_CUSTOM_I
HARDWARE_CUSTOM_I SET   1
@


36.0
log
@*** empty log message ***
@
text
@d5 1
a5 1
* $Header: custom.i,v 27.1 85/06/24 14:42:56 neil Exp $
d7 1
a7 1
* $Locker:  $
d126 1
a126 1
sd_datab    EQU   $08
@
