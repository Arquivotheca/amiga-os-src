head     38.6;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


38.6
date     92.01.13.11.00.02;  author vertex;  state Exp;
branches ;
next     38.5;

38.5
date     91.12.30.13.31.50;  author vertex;  state Exp;
branches ;
next     38.4;

38.4
date     91.08.20.09.42.51;  author vertex;  state Exp;
branches ;
next     38.3;

38.3
date     91.07.15.10.42.50;  author vertex;  state Exp;
branches ;
next     38.2;

38.2
date     91.06.24.13.26.45;  author vertex;  state Exp;
branches ;
next     38.1;

38.1
date     91.06.21.13.32.12;  author vertex;  state Exp;
branches ;
next     ;


desc
@Prefs editor shell - utility functions
@


38.6
log
@*** empty log message ***
@
text
@#ifndef PE_UTILS_H
#define PE_UTILS_H


/*****************************************************************************/


#include <intuition/intuition.h>
#include "pe_custom.h"
#include "pe_strings.h"


/*****************************************************************************/


struct EdMenu
{
    UBYTE          em_Type;        /* NM_XXX from gadtools.h */
    AppStringsID   em_Label;
    enum EdCommand em_Command;
    UWORD	   em_ItemFlags;
};


struct EdGadget
{
    ULONG          eg_GadgetKind;

    WORD           eg_LeftEdge;
    WORD           eg_TopEdge;
    WORD           eg_Width;
    WORD           eg_Height;

    AppStringsID   eg_Label;
    enum EdCommand eg_Command;
    ULONG          eg_GadgetFlags;
};


/*****************************************************************************/


/* Macro to get longword-aligned stack space for a structure	*/
/* Uses ANSI token catenation to form a name for the char array */
/* based on the variable name, then creates an appropriately	*/
/* typed pointer to point to the first longword boundary in the */
/* char array allocated.					*/
#define D_S(type,name) char a_##name[sizeof(type)+3]; \
		       type *name = (type *)((LONG)(a_##name+3) & ~3);


/*****************************************************************************/


struct Window *OpenPrefsWindow(EdDataPtr ed, ULONG tag1, ...);

APTR AllocPrefsRequest(EdDataPtr ed, ULONG type, ULONG tag1, ...);
BOOL RequestPrefsFile(EdDataPtr ed, ULONG tag1, ...);

VOID kprintf(STRPTR,...);

struct Menu *CreatePrefsMenus(EdDataPtr ed, struct EdMenu *em);

struct Gadget *DoPrefsGadget(EdDataPtr ed, struct EdGadget *eg,
                             struct Gadget *gad, ULONG tags, ...);

VOID SetGadgetAttr(EdDataPtr ed, struct Gadget *gad, ULONG tags, ...);

VOID ShowError1(EdDataPtr ed, AppStringsID es);

VOID ShowError2(EdDataPtr ed, EdStatus es);


/*****************************************************************************/


#endif /* PE_UTILS_H */
@


38.5
log
@*** empty log message ***
@
text
@d57 1
@


38.4
log
@CreatePrefsGadget() was renamed to DoPrefsGadget as it can now be used to both
  create gadgets or set the attributes of already created gadgets
@
text
@d18 4
a21 4
    UBYTE             em_Type;        /* NM_XXX from gadtools.h */
    AppStringsID      em_Label;
    enum EdCommand    em_Command;
    UWORD	      em_ItemFlags;
d27 1
a27 1
    ULONG             eg_GadgetKind;
d29 4
a32 4
    WORD              eg_LeftEdge;
    WORD              eg_TopEdge;
    WORD              eg_Width;
    WORD              eg_Height;
d34 3
a36 3
    AppStringsID      eg_Label;
    enum EdCommand    eg_Command;
    ULONG             eg_GadgetFlags;
@


38.3
log
@Changes to use new pe_strings module
@
text
@a14 3
/* for new look menus. These are here until they get added to the intuition
 * and gadtools include files
 */
a15 14
/* Pass to OpenWindowTags() */
#ifndef	WA_NewLookMenus
#define WA_NewLookMenus	(WA_Dummy + 0x30)
#endif

/* Pass to LayoutMenus() and LayoutMenuItems() */
#ifndef GTMN_NewLookMenus
#define GTMN_NewLookMenus	    GT_TagBase+67
#endif


/*****************************************************************************/


d63 2
a64 4
struct Gadget *CreatePrefsGadget(EdDataPtr ed, struct EdGadget *eg, ULONG tags, ...);

VOID DrawPrefsBevelBox(EdDataPtr ed, SHORT x, SHORT y,
                                     SHORT w, SHORT h, ULONG tags, ...);
@


38.2
log
@Changed ShowError into ShowError1() and ShowError2()
@
text
@d10 1
a10 1
#include "texttable.h"
d36 1
a36 1
    enum AppStringsID em_Label;
d51 1
a51 1
    enum AppStringsID eg_Label;
d87 1
a87 1
VOID ShowError1(EdDataPtr ed, enum AppStringsID es);
@


38.1
log
@Initial V38 RCS checkin
@
text
@d87 1
a87 1
VOID ShowError1(EdDataPtr ed, EdStatus es);
d89 1
a89 1
VOID ShowError2(EdDataPtr ed, enum AppStringsID es);
@
