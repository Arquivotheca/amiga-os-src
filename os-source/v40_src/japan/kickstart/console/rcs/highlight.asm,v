head     36.11;
branch   ;
access   ;
symbols  V39_4:36.9 V37_157:36.9 V37_149:36.9 V37_136:36.9 V37_133:36.9 V37_110:36.9 V37_98:36.9 V37_85:36.9 V37_63:36.9 V37_36:36.9 V37_15:36.9 V37_10:36.9 V37_7:36.9 V37_2:36.9 V36_558:36.9 V36_554:36.9 V36_549:36.9 V36_548:36.9 V36_547:36.9 V36_546:36.9 V36_545:36.9 V36_544:36.9 V36_543:36.9 V36_542:36.9 V36_540:36.9 V36_539:36.9 V36_538:36.9 V36_537:36.9 V36_536:36.9 V36_529:36.9 V36_527:36.9 V36_525:36.9 V36_524:36.9 V36_523:36.9 V36_522:36.9 V36_521:36.9 V36_520:36.9 V36_519:36.9 V36_518:36.9 V36_495:36.9 V36_491:36.9 V36_486:36.9 V36_482:36.9 V36_476:36.9 V36_471:36.9 V36_465:36.9 V36_463:36.9 V36_461:36.9 V36_460:36.9 V36_453:36.9 V36_447:36.9 V36_442:36.9 V36_429:36.9 V36_423:36.9 V36_413:36.7 V36_394:36.6 V36_387:36.5 V36_382:36.5 V36_381:36.5 V36_379:36.4 V36_373:36.4 V36_367:36.3 V36_361:36.3 V36_359:36.3 V36_357:36.3 V36_353:36.3 V36_346:36.3 V36_343:36.3 V36_338:36.3 V36_332:36.3 V36_327:36.3 V36_321:36.3 V36_319:36.3 V36_318:36.3 V36_316:36.3 V36_313:36.3 V36_311:36.3 V36_310:36.3 V36_300:36.3 V36_299:36.3 V36_297:36.3 V36_295:36.3 V36_278:36.3 V36_274:36.3 V36_221:36.1 V36_205:36.1 V36_171:36.0 V36_167:36.0 V36_165:36.0;
locks    ; strict;
comment  @*   @;


36.11
date     92.03.23.12.44.35;  author darren;  state Exp;
branches ;
next     36.10;

36.10
date     92.03.19.12.52.06;  author darren;  state Exp;
branches ;
next     36.9;

36.9
date     90.04.17.11.21.56;  author kodiak;  state Exp;
branches ;
next     36.8;

36.8
date     90.04.16.19.09.06;  author kodiak;  state Exp;
branches ;
next     36.7;

36.7
date     90.04.13.13.32.29;  author kodiak;  state Exp;
branches ;
next     36.6;

36.6
date     90.04.12.17.06.10;  author kodiak;  state Exp;
branches ;
next     36.5;

36.5
date     90.04.02.10.47.17;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     90.03.03.16.32.41;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     89.12.04.22.55.36;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     89.12.02.11.36.44;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     89.11.04.16.02.29;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     89.08.21.15.11.46;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.11
log
@Like cursor, use a variable for mask so I can set it to $FF for
compatability with existing screens.
@
text
@**
**	$Id: highlight.asm,v 36.10 92/03/19 12:52:06 darren Exp Locker: darren $
**
**      manipulate console highlighting
**
**      (C) Copyright 1989 Commodore-Amiga, Inc.
**          All Rights Reserved
**
	SECTION	console

**	Includes

	INCLUDE	"cddata.i"

	INCLUDE	"intuition/intuition.i"


**	Exports

	XDEF	UpdateHighlight


**	Imports

	XLVO	RectFill		; Graphics
	XLVO	SetDrMd			;

	XREF	CursDisable
	XREF	CursEnable


**	Assumptions

	IFNE	CMAB_HIGHLIGHT-CMAB_SELECTED-1
	FAIL	"HIGHLIGHT not the bit above SELECTED, recode below"
	ENDC


*------	UpdateHighlight ----------------------------------------------
*
*   a2	unit data
*

;
;   d4	incrementing X line position
;   d5	X max
;   d6	decrementing Y line counter
;   d7	Y raster position
;
;   a2	console unit
;   a3	running attribute line
;   a4	cm_AttrDispLines array
;   a6	console device
;
UpdateHighlight:
		tst.l	cu_CM+cm_AllocSize(a2)
		beq	uhRts

		btst	#CUB_TOOSMALL,cu_Flags(a2)
		bne	uhRts

		bsr	CursDisable

		;-- set drawing mode to complement
		moveq	#0,d0
		move.b	cd_RastPort+rp_DrawMode(a6),d0
		lea	cd_RastPort(a6),a1

		movem.l	d0/d2-d7/a1/a3-a4,-(a7)	; save registers

		moveq	#RP_COMPLEMENT,d0
		LINKGFX	SetDrMd

		;-- highlight with mask for AA machines

		move.b	cu_CursorMask(a2),cd_RastPort+rp_Mask(a6)

		;-- set area pattern to solid
		clr.l	cd_RastPort+rp_AreaPtrn(a6)

		;-- initialize buffer variables
		move.w	cu_CM+cm_DisplayWidth(a2),d5	; first unused cell
		move.w	cu_DisplayYL(a2),d6
		move.l	cu_CM+cm_AttrDispLines(a2),a4

		;-- initialize Y raster position
		move.w	cu_YROrigin(a2),d7	
		sub.w	cu_YRSize(a2),d7

uhRowLoop:
		moveq	#0,d4			; index of first cell
		tst.w	d6
		bne.s	uhHaveXMax
		move.w	cu_DisplayXL(a2),d5	; index of first unused cell
uhHaveXMax:
		add.w	cu_YRSize(a2),d7
		move.l	(a4)+,a3		; get this attribute line (/2)
		add.l	a3,a3

uhColLoop:
		move.w	#CMAF_HIGHLIGHT!CMAF_SELECTED,d3
		bra.s	uhSkipEntry

		;--	scan chars that don't need updating
uhSkipLoop:
		addq.w	#1,d4			; update to current cell
uhSkipEntry:
		cmp.w	d4,d5
		ble.s	uhRowDBF
		move.w	(a3)+,d1
		and.w	d3,d1
		beq.s	uhSkipLoop		; HIGHLIGHT & SELECTED clear
		eor.w	d3,d1
		beq.s	uhSkipLoop		; HIGHLIGHT & SELECTED set

		;--	scan chars that need updating
		move.w	d4,d0			; save X start index
		subq.l	#2,a3			; rewind attr to match index

uhUpdateLoop:
		eori.w	#CMAF_HIGHLIGHT,(a3)+
		addq.w	#1,d4
		cmp.w	d4,d5
		ble.s	uhUpdate
		move.w	(a3),d1
		and.w	d3,d1
		beq.s	uhUpdate
		eor.w	d3,d1
		bne.s	uhUpdateLoop

uhUpdate:
		;--	d4,a3 point to cell beyond that to update
		;--	perform update
		mulu	cu_XRSize(a2),d0	; calculate X start position
		add.w	cu_XROrigin(a2),d0

		move.w	d7,d1			; get Y start position

		move.w	d4,d2			; calculate X end position
		mulu	cu_XRSize(a2),d2
		add.w	cu_XROrigin(a2),d2
		subq.w	#1,d2
		tst.w	-2(a3)			; check if last is rendered
		bmi.s	uhYEnd
		move.w	cu_XRSize(a2),d3
		lsr.w	#1,d3
		sub.w	d3,d2

uhYEnd:
		move.w	cu_YRSize(a2),d3	; calculate Y end position
		add.w	d1,d3
		subq.w	#1,d3

		lea	cd_RastPort(a6),a1

		LINKGFX RectFill

		bra.s	uhColLoop

uhRowDBF:
		dbf	d6,uhRowLoop

		movem.l	(a7)+,d0/d2-d7/a1/a3-a4	; restore registers
		LINKGFX	SetDrMd

		;-- restore mask

		move.b	cu_Mask(a2),cd_RastPort+rp_Mask(a6)

		bsr	CursEnable

uhRts:
		rts


	END
@


36.10
log
@Highlight via a mask of 2 planes, hence highlighting is not affected
by screen depth.
@
text
@d2 1
a2 1
**	$Id: highlight.asm,v 36.9 90/04/17 11:21:56 kodiak Exp Locker: darren $
d76 1
a76 1
		move.b	#03,cd_RastPort+rp_Mask(a6)
@


36.9
log
@cursor-in-selection is now specially ghosted
@
text
@d2 1
a2 1
**	$Id: highlight.asm,v 36.8 90/04/16 19:09:06 kodiak Exp Locker: kodiak $
d74 4
d165 4
@


36.8
log
@fix highlight problem with more than one change per line.
@
text
@d2 1
a2 1
**	$Id: highlight.asm,v 36.7 90/04/13 13:32:29 kodiak Exp $
d28 2
d31 1
d62 2
d78 1
a78 1
		move.w	cu_XMax(a2),d5	; cm_DisplayWidth-1
d87 1
a87 1
		moveq	#0,d4
d90 1
a90 1
		move.w	cu_DisplayXL(a2),d5
d102 2
a105 2
		addq.w	#1,d4
uhSkipEntry:
d114 1
a114 1
		subq.l	#2,a3			; rewind attr by one
d120 1
a120 1
		blt.s	uhUpdate
d128 1
d139 1
a139 3
		subq.l	#2,a3			; rewind attr by one
		subq.w	#1,d4			;
		tst.w	(a3)			; check if last is rendered
d161 2
@


36.7
log
@use Id instead of Header for 4.x rcs
@
text
@d2 1
a2 1
**	$Id$
d134 1
@


36.6
log
@bound origin & window size, and move TOOSMALL to just skip graphics rendering
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/highlight.asm,v 36.5 90/04/02 10:47:17 kodiak Exp Locker: kodiak $
@


36.5
log
@for 4.x rcs
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/highlight.asm,v 36.4 90/03/03 16:32:41 kodiak Exp Locker: kodiak $
d55 3
@


36.4
log
@fix highlight at line wrap
@
text
@d2 1
a2 1
**	$Header: highlight.asm,v 36.3 89/12/04 22:55:36 kodiak Exp $
@


36.3
log
@checkin for release on Monday 4 Dec -- map w/ indirect line buffers
@
text
@d2 1
a2 1
**	$Header: highlight.asm,v 36.2 89/12/02 11:36:44 kodiak Exp $
d70 1
a70 1
		move.w	cu_CM+cm_DisplayWidth(a2),d5
d90 1
d94 2
d97 1
a97 2
		cmp.w	d4,d5
		blt.s	uhRowDBF
a104 2
		subq.w	#1,d4			; rewind attr by one
		subq.l	#2,a3			;
d106 1
d130 2
a131 1
		tst.w	-2(a3)			; check if last is rendered
d146 1
a146 4
		subq.w	#1,d4
		subq.l	#2,a3

		bra	uhColLoop
@


36.2
log
@checkpoint after line buffer coding completed,
and just after start of line length coding
@
text
@d2 1
a2 1
**	$Header$
a76 2

		bra	uhRowDBF
@


36.1
log
@restructure map variables
use XLVO macro strategy
@
text
@d1 9
a9 10
	TTL	'$Header: highlight.asm,v 36.0 89/08/21 15:11:46 kodiak Exp $'
**********************************************************************
*
*			--------------
*   highlight.asm	CONSOLE DEVICE	manipulate console highlighting
*			--------------
*
*   Copyright 1989 Commodore-Amiga Inc.
*
**********************************************************************
d11 1
a11 1
	SECTION		rawinput
d13 1
a13 1
*------ Included Files -----------------------------------------------
d15 1
a15 1
	INCLUDE		"cddata.i"
a16 1
	INCLUDE		"intuition/intuition.i"
d18 1
d20 1
a20 1
*------ Imported Names -----------------------------------------------
d22 3
d29 1
a29 1
*------ Exported Functions -------------------------------------------
d31 3
a33 1
	XDEF		UpdateHighlight
d38 2
a39 3
	IFNE	CMAB_HIGHLIGHT-CMAB_SELECTED-1
	FAIL	"HIGHLIGHT not the bit above SELECTED, recode below"
	ENDC
d41 16
a56 1
uhRestoreDrMd:
d58 1
a58 1
		move.b	(a7)+,d0
a59 1
		LINKGFX	SetDrMd
d61 1
a61 3
uhEnd:
		movem.l	(a7)+,d2-d7/a3
		rts
a62 10

UpdateHighlight:
		movem.l	d2-d7/a3,-(a7)

		tst.w	cu_CM+cm_Elements(a2)
		beq.s	uhEnd

uhSetDrMd:
		;-- set drawing mode to complement
		move.b	cd_RastPort+rp_DrawMode(A6),-(a7)
a63 1
		lea	cd_RastPort(a6),a1
d67 1
a67 1
		clr.l	cd_RastPort+rp_AreaPtrn(A6)
d69 5
d76 1
a76 2
		move.w	cu_YRSize(a2),d0
		sub.w	d0,d7
d78 1
a78 4
		;-- initialize more buffer variables
		move.l	cu_CM+cm_AttrDisplay(a2),a3
		move.w	cu_CM+cm_DisplayHeight(a2),d4
		moveq	#0,d6			; running char count
a79 1

d81 5
a85 3
		subq.w	#1,d4			; decrement remaining rows
		blt.s	uhRestoreDrMd

d87 2
a88 2
		move.w	cu_CM+cm_DisplayWidth(a2),d5 ; size of this row
		add.w	d5,d6			; beginning of next row
a90 5
		move.w	d6,d0			; point to current attribute
		sub.w	d5,d0			;
		add.w	d0,d0			;
		lea	0(a3,d0.w),a0		;

d95 4
a98 3
		subq.w	#1,d5
		blt.s	uhRowLoop
		move.w	(a0)+,d1
d105 3
a107 4
		addq.w	#1,d5			; rewind attr by one
		subq.l	#2,a0			;
		move.w	cu_CM+cm_DisplayWidth(a2),d0 ; calculate X start index
		sub.w	d5,d0			;
d110 5
a114 4
		eori.w	#CMAF_HIGHLIGHT,(a0)+
		subq.w	#1,d5
		ble.s	uhUpdate
		move.w	(a0),d1
d127 1
a127 2
		move.w	cu_CM+cm_DisplayWidth(a2),d2 ; calculate X end position
		sub.w	d5,d2
d131 1
a131 1
		tst.w	-(a0)			; check if last is rendered
d146 3
d150 10
@


36.0
log
@*** empty log message ***
@
text
@d1 1
a1 1
	TTL	'$Header$'
d23 2
a24 2
	XREF_GFX	RectFill
	XREF_GFX	SetDrMd
d34 1
a34 1
	IFNE	CUAB_HIGHLIGHT-CUAB_SELECTED-1
d40 1
a40 1
		MOVE.B	d4,d0
d52 1
a52 1
		tst.w	cu_BufferSize(a2)
d57 1
a57 1
		MOVE.B	cd_RastPort+rp_DrawMode(A6),d4
d71 3
a73 2
		move.w	cu_BufferOffset(a2),d6
		move.l	cu_AttrBuffer(a2),a3
d77 2
a78 2
		cmp.w	cu_BufferSize(a2),d6	; compare size to current offset
		bge.s	uhRestoreDrMd
d81 1
a81 1
		move.w	cu_BufferWidth(a2),d5	; size of this row
d90 1
a90 1
		move.w	#CUAF_HIGHLIGHT!CUAF_SELECTED,d3
d105 1
a105 1
		move.w	cu_BufferWidth(a2),d0	; calculate X start index
d109 1
a109 1
		eori.w	#CUAF_HIGHLIGHT,(a0)+
d125 1
a125 1
		move.w	cu_BufferWidth(a2),d2	; calculate X end position
@
