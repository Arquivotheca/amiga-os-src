head     36.0;
access   ;
symbols  V36_167:36.0 V36_165:36.0 V36_153:36.0 V36_146:36.0 V36_140:36.0 V36_129:36.0 V36_113:36.0 V36_56:36.0 V36_53:36.0 V36_51:36.0 V36_45:36.0 L36_42:36.0;
locks    ; strict;
comment  @*   @;


36.0
date     88.09.06.19.51.58;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.0
log
@*** empty log message ***
@
text
@	TTL	'$Header: msgport.asm,v 35.1 87/11/12 13:35:31 kodiak Exp $'
**********************************************************************
*
*			---------------
*   msgport.asm		RAWINPUT MODULE		message port support
*			---------------
*
*   Copyright 1985, 1987 Commodore-Amiga Inc.
*
*   Source Control	$Locker:  $
*
*   $Log:	msgport.asm,v $
*   Revision 35.1  87/11/12  13:35:31  kodiak
*   use CALLEXE instead of LINKEXE
*   
*   
**********************************************************************

	SECTION		rawinput

*------ Included Files -----------------------------------------------

	INCLUDE		"cddata.i"


*------ Imported Names -----------------------------------------------

*------ Imported Functions -------------------------------------------

	XREF_EXE	AllocSignal
	XREF_EXE	FindTask
	XREF_EXE	FreeSignal


*------ Exported Functions -------------------------------------------

	XDEF		InitMsgPort
	XDEF		ExpungeMsgPort


*------ InitMsgPort --------------------------------------------------
*
*   NAME
*	InitMsgPort - initialize a message port
*
*   SYNOPSYS
*	signal = InitMsgPort(msgPort)
*	D0		     A0
*
*   FUNCTION
*	Initialize a port, usually for use by an I/O request.
*
*---------------------------------------------------------------------
InitMsgPort:
		MOVEM.L	A2/a6,-(A7)
		move.l	cd_ExecLib(a6),a6
		MOVE.L	A0,A2
		MOVE.B	#NT_MSGPORT,LN_TYPE(A2)
		CLR.B	MP_FLAGS(A2)
		SUB.L	A1,A1
		CALLEXE	FindTask
		MOVE.L	D0,MP_SIGTASK(A2)
		LEA	MP_MSGLIST(A2),A0
		NEWLIST	A0
		MOVEQ	#-1,D0
		CALLEXE	AllocSignal
		MOVE.B	D0,MP_SIGBIT(A2)
		MOVEM.L	(A7)+,A2/A6
		RTS


*------ ExpungeMsgPort------------------------------------------------
*
*   NAME
*	ExpungeMsgPort - expunge a message port
*
*   SYNOPSYS
*	ExpungeMsgPort(msgPort)
*		       A0
*
*   FUNCTION
*	Expunge a port, usually after use by an I/O request.
*
*---------------------------------------------------------------------
ExpungeMsgPort:
		move.l	a6,-(a7)
		move.l	cd_ExecLib(a6),a6
		MOVEQ	#0,D0
		MOVE.B	MP_SIGBIT(A0),D0
		CALLEXE	FreeSignal
		move.l	(a7)+,a6
		RTS

		END
@
