head     36.4;
access   ;
symbols  V36_167:36.4 V36_165:36.4 V36_153:36.4 V36_146:36.4 V36_140:36.4 V36_129:36.4 V36_113:36.3 V36_56:36.2 V36_53:36.2 V36_51:36.2 V36_45:36.2 L36_42:36.1;
locks    ; strict;
comment  @*   @;


36.4
date     89.06.30.12.31.38;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     89.06.28.12.30.21;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     89.01.10.16.45.58;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     88.09.19.10.15.39;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     88.09.06.19.51.38;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.4
log
@take debug.i out of cddata and put in files that use it
@
text
@	TTL	'$Header: dinit.asm,v 36.3 89/06/28 12:30:21 kodiak Exp $'
**********************************************************************
*
*			--------------
*   dinit.asm		CONSOLE DEVICE	init and expunge
*			--------------
*
*   Copyright 1985, 1987 Commodore-Amiga Inc.
*
*   $Log:	dinit.asm,v $
*   Revision 36.3  89/06/28  12:30:21  kodiak
*   support for new features: unit semaphore, cursor ghosting
*   better expunge
*   
*   Revision 36.2  89/01/10  16:45:58  kodiak
*   make use autoinit
*   
*   Revision 36.1  88/09/19  10:15:39  kodiak
*   add character map and pseudo-clipboard support
*   
*   Revision 36.0  88/09/06  19:51:38  kodiak
*   *** empty log message ***
*   
*   Revision 35.1  87/10/26  12:57:28  kodiak
*   Change rendering strategy to use a single shared device RastPort
*   
*   Revision 35.0  87/10/26  11:12:29  kodiak
*   initial from V34, but w/ stripped log
*   
**********************************************************************

	SECTION		rawinput

*------ Included Files -----------------------------------------------

	INCLUDE		"cddata.i"
	INCLUDE		"debug.i"

	INCLUDE		"exec/memory.i"
	INCLUDE		"exec/initializers.i"
	INCLUDE		"devices/input.i"


*------ Imported Functions -------------------------------------------

	XREF_EXE	AddHead
	XREF_EXE	AddResource
	XREF_EXE	AddTask
	XREF_EXE	AllocMem
	XREF_EXE	CloseDevice
	XREF_EXE	CloseLibrary
	XREF_EXE	DoIO
	XREF_EXE	FreeMem
	XREF_EXE	InitSemaphore
	XREF_EXE	OpenDevice
	XREF_EXE	OpenLibrary
	XREF_EXE	OpenResource
	XREF_EXE	RemTask

	XREF_GFX	InitRastPort

	XREF		_LVOCDInputHandler

	XREF		CDName
	XREF		VERSION
	XREF		REVISION

	XREF		USAName
	XREF		USALowMapType
	XREF		USALowMap
	XREF		USALCapsable
	XREF		USALRepeatable
	XREF		USAHighMapType
	XREF		USAHighMap
	XREF		USAHCapsable
	XREF		USAHRepeatable

	XREF		Init
	XREF		CDOpen
	XREF		CDClose
	XREF		DeferredExpunge
	XREF		SuccessfulExpunge
	XREF		ExtFunc
	XREF		BeginIO
	XREF		AbortIO
	XREF		CDInputHandler
	XREF		RawKeyConvert

	XREF		Invalid
	XREF		ResetCmd
	XREF		CDRead
	XREF		CDWrite
	XREF		Update
	XREF		CDClear
	XREF		StopCmd
	XREF		Start
	XREF		Flush

	XREF		CDAskKeyMap
	XREF		CDSetKeyMap
	XREF		CDAskDefaultKeyMap
	XREF		CDSetDefaultKeyMap

	XREF		CBInvalid
	XREF		CBResetCmd
	XREF		CDCBRead
	XREF		CDCBWrite
	XREF		CBUpdate
	XREF		CDCBClear
	XREF		CBStopCmd
	XREF		CBStart
	XREF		CBFlush

	XREF		CDCBAskKeyMap
	XREF		CDCBSetKeyMap
	XREF		CDCBAskDefaultKeyMap
	XREF		CDCBSetDefaultKeyMap

	XREF		CDTaskStart

	XREF		InitMsgPort
	XREF		ExpungeMsgPort


*------ Exported Globals ---------------------------------------------

	XDEF		CDFuncInit
	XDEF		CDStructInit
	XDEF		CDInit
	XDEF		CDExpunge


**********************************************************************
CDInit:
		MOVEM.L	A2-A3/A6,-(SP)
	    ;------ This is called from within MakeDevice, after
	    ;------ all the memory has been allocated

		MOVE.L	D0,A0
		MOVE.L	A6,cd_ExecLib(A0)
		MOVE.L	D0,A6			; library pointer

		DINIT

	    ;------ Get the keymap library
		LEA	KLName(PC),A1
		MOVEQ	#0,D0
		LINKEXE OpenLibrary
		MOVE.L	D0,cd_KeymapLib(A6)
		BEQ	initKLErr

	    ;------ Get the graphics library
		LEA	GLName(PC),A1
		MOVEQ	#0,D0
		LINKEXE OpenLibrary
		MOVE.L	D0,cd_GraphicsLib(A6)
		BEQ	initGLErr

	    ;------ Get the layers library
		LEA	LLName(PC),A1
		MOVEQ	#0,D0
		LINKEXE OpenLibrary
		MOVE.L	D0,cd_LayersLib(A6)
		BEQ	initLLErr

		;------ initialize the Unit semaphore
		lea	cd_USemaphore(a6),a0
		LINKEXE	InitSemaphore

		;------ initialize the RastPort semaphore
		lea	cd_RPSemaphore(a6),a0
		LINKEXE	InitSemaphore

		;------ initialize the shared RastPort
		lea	cd_RastPort(a6),a1
		LINKGFX	InitRastPort

		;------ try to get a TmpRas and AreaPtrn memory
		move.l	#4096,d0		; 1Kx32
		move.l	d0,tr_Size+cd_TmpRas(a6)
		addq	#4,d0			; 2 words for AreaPtrn
		moveq	#MEMF_CHIP,d1
		LINKEXE	AllocMem
		move.l	d0,cd_AreaPtrn(a6)
		beq.s	initUnitList
		move.b	#1,cd_RastPort+rp_AreaPtSz(a6)
		addq	#4,d0
		move.l	d0,tr_RasPtr+cd_TmpRas(a6)
		lea	cd_TmpRas(a6),a0
		move.l	a0,rp_TmpRas+cd_RastPort(a6)

	    ;------ initialize the unit list
initUnitList:
		LEA	cd_UHead(A6),A0
		NEWLIST	A0

	    ;------ initialize console device task
		LEA	cd_TC(A6),A1
		LEA	cd_Stk(A6),A0
		MOVE.L	A0,TC_SPLOWER(A1)
		MOVE.W	#(CD_STKSIZE/2)-1,D0
		MOVE.W	#$09999,D1
pattern0Loop:
		MOVE.W	D1,(A0)+
		DBF	D0,pattern0Loop
	;---	LEA	cd_Stk+CD_STKSIZE(A6),A0
		MOVE.L	A0,TC_SPUPPER(A1)
		MOVE.L	A6,-(A0)		; argument (console device)
		MOVE.L	A0,TC_SPREG(A1)

		LEA	CDTaskStart(PC),A2
		MOVEQ	#0,D0
		MOVE.L	D0,A3
		LINKEXE AddTask
		MOVE.L	A6,D0

	    ;------ find the input.device and point it to the console
		LEA	IDName(PC),A0
		MOVEQ	#0,D0
		LEA	cd_HandlerIOR(A6),A1
		MOVEQ	#0,D1
		LINKEXE	OpenDevice
		TST.L	D0
		BEQ.S	cdIDOK
		CLR.L	cd_HandlerIOR+IO_DEVICE(A6)
		BRA.S	cdInitDone	; cannot initiate input

cdIDOK:
		MOVE.L	A6,A1
		ADD.W	#_LVOCDInputHandler,A1
		MOVE.L	A1,cd_HandlerIS+IS_CODE(A6)
		MOVE.L	A6,cd_HandlerIS+IS_DATA(A6)

		SUB.W	#MP_SIZE,A7
		MOVE.L	A7,A0
		BSR	InitMsgPort
		TST.L	D0
		BMI.S	rpDone
		MOVE.L	A7,cd_HandlerIOR+MN_REPLYPORT(A6)
		MOVE.W	#IND_ADDHANDLER,cd_HandlerIOR+IO_COMMAND(A6)
		LEA	cd_HandlerIS(A6),A1
		MOVE.L	A1,cd_HandlerIOR+IO_DATA(A6)
		LEA	cd_HandlerIOR(A6),A1
		LINKEXE	DoIO
		MOVE.L	A7,A0
		BSR	ExpungeMsgPort
rpDone:
		ADD.W	#MP_SIZE,A7

cdInitDone:
		MOVE.L	A6,D0	    ; return the library

cdInitRts:
		MOVEM.L	(SP)+,A2-A3/A6
		RTS

initLLErr:
		MOVE.L	cd_GraphicsLib(A6),A1
		LINKEXE	CloseLibrary

initGLErr:
		MOVE.L	cd_KeymapLib(A6),A1
		LINKEXE	CloseLibrary

initKLErr:
		MOVEQ	#0,D0
		BRA	cdInitRts


CDStructInit:
*	;------ Initialize the device node
	    INITBYTE	LN_TYPE,NT_DEVICE
	    INITLONG	LN_NAME,CDName
	    INITBYTE	LIB_FLAGS,LIBF_SUMUSED!LIBF_CHANGED
	    INITWORD    LIB_VERSION,VERSION
	    INITWORD    LIB_REVISION,REVISION

	    INITLONG	dd_CmdVectors,cdCmdTable
	    INITLONG	dd_CmdBytes,cdCmdBytes
	    INITWORD	dd_NumCommands,CD_NUMCOMMANDS

	    INITBYTE	cd_HandlerIS+LN_TYPE,NT_INTERRUPT
	    INITBYTE	cd_HandlerIS+LN_PRI,CD_HANDLERPRI
	    INITLONG	cd_HandlerIS+LN_NAME,CDName

	    INITBYTE	cd_TC+LN_TYPE,NT_TASK
	    INITBYTE	cd_TC+LN_PRI,CD_TASKPRI
	    INITLONG	cd_TC+LN_NAME,CDName

		DC.W	0


CDFuncInit:
		DC.W	-1

		DC.W	CDOpen+(*-CDFuncInit)
		DC.W	CDClose+(*-CDFuncInit)
		DC.W	CDExpunge-CDFuncInit
		DC.W	ExtFunc+(*-CDFuncInit)

		DC.W	BeginIO+(*-CDFuncInit)
		DC.W	AbortIO+(*-CDFuncInit)
		DC.W	CDInputHandler+(*-CDFuncInit)
		DC.W	RawKeyConvert+(*-CDFuncInit)

		DC.W	-1

cdCmdTable:
		DC.L	Invalid
		DC.L	ResetCmd
		DC.L	CDRead
		DC.L	CDWrite
		DC.L	Update
		DC.L	CDClear
		DC.L	StopCmd
		DC.L	Start
		DC.L	Flush

		DC.L	CDAskKeyMap
		DC.L	CDSetKeyMap
		DC.L	CDAskDefaultKeyMap
		DC.L	CDSetDefaultKeyMap

cdCmdBytes:
		DC.B	CBInvalid
		DC.B	CBResetCmd
		DC.B	CDCBRead
		DC.B	CDCBWrite
		DC.B	CBUpdate
		DC.B	CDCBClear
		DC.B	CBStopCmd
		DC.B	CBStart
		DC.B	CBFlush

		DC.B	CDCBAskKeyMap
		DC.B	CDCBSetKeyMap
		DC.B	CDCBAskDefaultKeyMap
		DC.B	CDCBSetDefaultKeyMap

CD_NUMCOMMANDS	EQU	(*-cdCmdBytes)


KLName		dc.b	'keymap.library'
		dc.b	0
GLName		DC.B    'graphics.library'
		DC.B	0
LLName		DC.B    'layers.library'
		DC.B	0
IDName		DC.B	'input.device'
		DC.B	0

		DS.W	0


*------ console.device/Expunge ---------------------------------------
*
*   NAME
*	Expunge - indicate a desire to remove the Console device
*
*   SYNOPSIS
*	Result = Expunge(), consoleDev
*			    A6
*
*   FUNCTION
*	The Expunge routine is called when a user issues a RemDevice
*	call.  The existance of any other users of the device, as
*	determined by the library open count being non-zero, will
*	cause the Expunge to be deferred.  When the device is not
*	in use, or no longer in use, the Expunge is actually
*	performed, and the device removed from the system list.
*
*---------------------------------------------------------------------
CDExpunge:
	    ;-- see if any one is using the device
		TST.W	LIB_OPENCNT(A6)
		BNE	DeferredExpunge

	    ;-- this is really it.  Free up all the resources
		move.l	cd_AreaPtrn(a6),d0
		beq.s	exAPOK
		move.l	d0,a1
		move.l	#4100,d0		; 1Kx32 + 4
		LINKEXE	FreeMem

exAPOK:
		TST.L	cd_HandlerIOR+IO_DEVICE(A6)
		BEQ.S	exIDOK
		SUB.W	#MP_SIZE,A7
		MOVE.L	A7,A0
		BSR	InitMsgPort
		TST.L	D0
		BMI	noExpunge
		MOVE.L	A7,cd_HandlerIOR+MN_REPLYPORT(A6)
		MOVE.W	#IND_REMHANDLER,cd_HandlerIOR+IO_COMMAND(A6)
		LEA	cd_HandlerIS(A6),A1
		MOVE.L	A1,cd_HandlerIOR+IO_DATA(A6)
		LEA	cd_HandlerIOR(A6),A1
		LINKEXE	DoIO
		MOVE.L	A7,A0
		BSR	ExpungeMsgPort
		ADD.W	#MP_SIZE,A7
		LEA	cd_HandlerIOR(A6),A1
		LINKEXE	CloseDevice

		LEA	cd_TC(A6),A1
		LINKEXE RemTask

exIDOK:
		MOVE.L	cd_LayersLib(A6),A1
		LINKEXE CloseLibrary
		MOVE.L	cd_IntuitionLib(A6),A1
		LINKEXE CloseLibrary
		MOVE.L	cd_GraphicsLib(A6),A1
		LINKEXE CloseLibrary
		MOVE.L	cd_KeymapLib(A6),A1
		LINKEXE CloseLibrary
		BRA	SuccessfulExpunge

noExpunge:
		ADD.W	MP_SIZE,A7
		BRA	DeferredExpunge

	END
@


36.3
log
@support for new features: unit semaphore, cursor ghosting
better expunge
@
text
@d1 1
a1 1
	TTL	'$Header: dinit.asm,v 36.2 89/01/10 16:45:58 kodiak Exp $'
d11 4
d37 1
d43 1
d58 1
d404 4
@


36.2
log
@make use autoinit
@
text
@d1 1
a1 1
	TTL	'$Header: dinit.asm,v 36.1 88/09/19 10:15:39 kodiak Exp $'
d11 3
d136 2
d159 4
d171 1
a171 1
		;------ try to get a TmpRas
d174 1
d177 4
a181 1
		beq.s	initUnitList
d372 7
d385 1
a385 1
		BMI.S	noExpunge
d398 1
a398 3
		MOVE.L	cd_IntuitionLib(A6),D0
		BEQ.S	exILOK
		MOVE.L	D0,A1
d400 2
a401 1
exILOK:
a403 1
exGLOK:
@


36.1
log
@add character map and pseudo-clipboard support
@
text
@d1 1
a1 1
	TTL	'$Header: open.asm,v 36.0 88/09/06 19:52:03 kodiak Exp $'
d11 3
d117 2
a124 8
		MOVEM.L	A0/A2,-(A7)
		LEA	cdFuncInit(PC),A0
		LEA	cdStructInit(PC),A1
		LEA	cdInit(PC),A2
		MOVE.L	#cd_SIZEOF,D0
		BRA	Init

cdInit:
d250 1
a250 1
cdStructInit:
d273 1
a273 1
cdFuncInit:
d276 4
a279 4
		DC.W	CDOpen+(*-cdFuncInit)
		DC.W	CDClose+(*-cdFuncInit)
		DC.W	CDExpunge-cdFuncInit
		DC.W	ExtFunc+(*-cdFuncInit)
d281 4
a284 4
		DC.W	BeginIO+(*-cdFuncInit)
		DC.W	AbortIO+(*-cdFuncInit)
		DC.W	CDInputHandler+(*-cdFuncInit)
		DC.W	RawKeyConvert+(*-cdFuncInit)
@


36.0
log
@*** empty log message ***
@
text
@d1 1
a1 1
	TTL    '$Header: dinit.asm,v 35.1 87/10/26 12:57:28 kodiak Exp $'
a2 11
*                                                                    *
*   Copyright 1985, Commodore-Amiga Inc.   All rights reserved.      *
*   No part of this program may be reproduced, transmitted,          *
*   transcribed, stored in retrieval system, or translated into      *
*   any language or computer language, in any form or by any         *
*   means, electronic, mechanical, magnetic, optical, chemical,      *
*   manual or otherwise, without the prior written permission of     *
*   Commodore-Amiga Incorporated, 983 University Ave. Building #D,   *
*   Los Gatos, California, 95030                                     *
*                                                                    *
**********************************************************************
d4 3
a6 1
*	Console Device Init and Expunge
d8 1
a8 3
*   Source Control
*   --------------
*   $Header: dinit.asm,v 35.1 87/10/26 12:57:28 kodiak Exp $
a9 2
*   $Locker:  $
*
d11 3
d36 1
d128 1
a128 1
		MOVE.L	A6,-(SP)
d150 7
d166 1
a166 1
		move.l	#(82*16),d0		; for up to 8x15 fonts
a174 7
	    ;------ Get the layers library
		LEA	LLName(PC),A1
		MOVEQ	#0,D0
		LINKEXE OpenLibrary
		MOVE.L	D0,cd_LayersLib(A6)
		BEQ	initLLErr

d180 20
d237 1
a237 1
		MOVE.L	(SP)+,A6
a239 4
initKRErr:
		MOVE.L	cd_LayersLib(A6),A1
		LINKEXE	CloseLibrary

d268 4
@
