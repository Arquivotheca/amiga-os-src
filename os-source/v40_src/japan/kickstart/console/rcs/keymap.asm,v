head     36.8;
branch   ;
access   ;
symbols  V39_4:36.8 V37_157:36.7 V37_149:36.7 V37_136:36.7 V37_133:36.7 V37_110:36.7 V37_98:36.7 V37_85:36.7 V37_63:36.7 V37_36:36.7 V37_15:36.6 V37_10:36.6 V37_7:36.6 V37_2:36.6 V36_558:36.6 V36_554:36.6 V36_552:36.6 V36_549:36.6 V36_548:36.6 V36_547:36.6 V36_546:36.6 V36_545:36.6 V36_544:36.6 V36_543:36.6 V36_542:36.6 V36_540:36.6 V36_539:36.6 V36_538:36.6 V36_537:36.6 V36_536:36.6 V36_529:36.6 V36_527:36.6 V36_525:36.6 V36_524:36.6 V36_523:36.6 V36_522:36.6 V36_521:36.6 V36_520:36.6 V36_519:36.6 V36_518:36.6 V36_495:36.6 V36_491:36.6 V36_486:36.6 V36_482:36.6 V36_476:36.6 V36_471:36.6 V36_465:36.6 V36_463:36.6 V36_461:36.6 V36_460:36.6 V36_453:36.6 V36_447:36.6 V36_442:36.6 V36_429:36.6 V36_423:36.6 V36_413:36.6 V36_394:36.5 V36_387:36.5 V36_382:36.5 V36_381:36.5 V36_379:36.4 V36_373:36.4 V36_367:36.4 V36_361:36.4 V36_359:36.4 V36_357:36.4 V36_353:36.4 V36_346:36.4 V36_343:36.4 V36_338:36.4 V36_332:36.4 V36_327:36.4 V36_321:36.4 V36_319:36.4 V36_318:36.3 V36_316:36.3 V36_313:36.3 V36_311:36.3 V36_310:36.3 V36_300:36.3 V36_299:36.3 V36_297:36.3 V36_295:36.3 V36_278:36.3 V36_274:36.3 V36_221:36.2 V36_205:36.2 V36_171:36.1 V36_167:36.1 V36_165:36.1 V36_153:36.1 V36_146:36.1 V36_140:36.1 V36_129:36.1 V36_113:36.1 V36_56:36.0 V36_53:36.0 V36_51:36.0 V36_45:36.0 L36_42:36.0;
locks    ; strict;
comment  @*   @;


36.8
date     91.11.04.14.57.19;  author darren;  state Exp;
branches ;
next     36.7;

36.7
date     91.02.14.14.55.27;  author darren;  state Exp;
branches ;
next     36.6;

36.6
date     90.04.13.13.32.35;  author kodiak;  state Exp;
branches ;
next     36.5;

36.5
date     90.04.02.10.47.21;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     89.12.19.13.27.36;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     89.12.02.11.36.51;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     89.11.04.09.47.46;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     89.06.28.12.33.48;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     88.09.06.19.51.53;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.8
log
@Autodoc change only.  Note that SETDEFAULTKEYMAP no longer copies the
keymap, but uses it as a ptr.
@
text
@**
**	$Id: keymap.asm,v 36.8 91/11/04 14:03:46 darren Exp $
**
**      console device keymap interface
**
**      (C) Copyright 1989 Commodore-Amiga, Inc.
**          All Rights Reserved
**
	SECTION	console

**	Includes

	INCLUDE	"cddata.i"

	INCLUDE	"exec/errors.i"


**	Exports

	XDEF	CDAskKeyMap
	XDEF	CDSetKeyMap
	XDEF	CDAskDefaultKeyMap
	XDEF	CDSetDefaultKeyMap

	XDEF	CDCBAskKeyMap
	XDEF	CDCBSetKeyMap
	XDEF	CDCBAskDefaultKeyMap
	XDEF	CDCBSetDefaultKeyMap


**	Imports

	XLVO	Forbid			; Exec
	XLVO	Permit			;

	XLVO	AskKeyMapDefault	; Keymap
	XLVO	SetKeyMapDefault	;

	XREF	EndCommand


******* console.device/CD_ASKKEYMAP *********************************
*
*   NAME
*	CD_ASKKEYMAP -- Get the current key map structure for this console.
*
*    FUNCTION
*	Fill the io_Data buffer with the current KeyMap structure in
*	use by this console unit.
*
*    IO REQUEST INPUT
*	io_Message	mn_ReplyPort set if quick I/O is not possible
*	io_Device	preset by the call to OpenDevice
*	io_Unit		preset by the call to OpenDevice
*	io_Command	CD_ASKKEYMAP
*	io_Flags	IOF_QUICK if quick I/O possible, else zero
*	io_Length	sizeof(*keyMap)
*	io_Data		struct KeyMap *keyMap
*			pointer to a structure that describes 
*			the raw keycode to byte stream conversion.
*
*    IO REQUEST RESULT
*	This function sets the io_Error field in the IOStdReq, and fills
*	the structure the structure pointed to by io_Data with the current
*	 key map.
*
*    SEE ALSO
*	exec/io.h, devices/keymap.h, devices/console.h
*
**********************************************************************

CDCBAskKeyMap	EQU	-1		; immediate

CDAskKeyMap:
		MOVE.L	IO_UNIT(A1),d0
		;-- check for fake unit
		btst	#0,d0
		bne.s	CDAskDefaultKeyMap

		MOVE.L	A2,-(A7)

		move.l	d0,a0
		LEA	cu_KeyMapStruct(A0),A0
		MOVE.L	IO_DATA(A1),A2
		BRA.S	transferMap


******* console.device/CD_SETKEYMAP ******************************************
*
*    NAME
*	CD_SETKEYMAP -- set the current key map structure for this console
*
*    FUNCTION
*	Set the current KeyMap structure used by this console unit to
*	the structure pointed to by io_Data.
*
*    IO REQUEST
*	io_Message	mn_ReplyPort set if quick I/O is not possible
*	io_Device	preset by the call to OpenDevice
*	io_Unit		preset by the call to OpenDevice
*	io_Command	CD_SETKEYMAP
*	io_Flags	IOF_QUICK if quick I/O possible, else zero
*	io_Length	sizeof(*keyMap)
*	io_Data		struct KeyMap *keyMap
*			pointer to a structure that describes 
*			the raw keycode to byte stream conversion.
*
*    RESULTS
*	This function sets the io_Error field in the IOStdReq, and fills
*	the current key map from the structure pointed to by io_Data.
*
*    BUGS
*
*    SEE ALSO
*	exec/io.h, devices/keymap.h, devices/console.h
*
********************************************************************************

CDCBSetKeyMap	EQU	-1		; immediate

CDSetKeyMap:
		MOVE.L	IO_UNIT(A1),d0
		;-- check for fake unit
		btst	#0,d0
		bne.s	CDSetDefaultKeyMap

		MOVE.L	A2,-(A7)
		MOVE.L	IO_DATA(A1),A0
		MOVE.L	d0,A2
		LEA	cu_KeyMapStruct(A2),A2
		BRA.S	transferMap


******* console.device/CD_ASKDEFAULTKEYMAP ***********************************
*
*    NAME
*	CD_ASKDEFAULTKEYMAP -- get the current default keymap
*
*    FUNCTION
*	Fill the io_Data buffer with the current console device
*	default keymap, which is used to initialize console unit
*	keymaps when opened, and by RawKeyConvert with a null
*	keyMap parameter.
*
*   IO REQUEST
*	io_Message	mn_ReplyPort set if quick I/O is not possible
*	io_Device	preset by the call to OpenDevice
*	io_Unit		preset by the call to OpenDevice
*	io_Command	CD_ASKDEFAULTKEYMAP
*	io_Flags	IOF_QUICK if quick I/O possible, else zero
*	io_Length	sizeof(*keyMap)
*	io_Data		struct KeyMap *keyMap
*			pointer to a structure that describes 
*			the raw keycode to byte stream conversion.
*
*    RESULTS
*	This function sets the io_Error field in the IOStdReq, and fills
*	the structure pointed to by io_Data with the current device 
*	default key map.
*
*    BUGS
*
*    SEE ALSO
*	exec/io.h, devices/keymap.h, devices/console.h
*
********************************************************************************

CDCBAskDefaultKeyMap	EQU	-1		; immediate

CDAskDefaultKeyMap:
		MOVE.L	A2,-(A7)

cdAskDefaultEntry:
		move.l	a1,-(a7)
		LINKKEY	AskKeyMapDefault
		move.l	(a7)+,a1
		move.l	d0,a0
		MOVE.L	IO_DATA(A1),A2

transferMap:
		;------ check size of buffer
		MOVEQ	#km_SIZEOF,D0
		CMP.L	IO_LENGTH(A1),D0
		BNE.S	adkm3

		;------ set up protected copy
		MOVEQ	#(km_SIZEOF/4)-1,D1
		LINKEXE	Forbid		; doesn't trash D0/D1/A0/A1

		;------ copy table
adkm1:
		MOVE.L  (A0)+,(A2)+
		DBF	D1,adkm1

		;------ allow access to table
		LINKEXE	Permit		; doesn't trash D0/D1/A0/A1

		;------ end command
		MOVE.L	D0,IO_ACTUAL(A1)
		MOVEQ	#0,D0
adkm2:
		MOVE.L	(A7)+,A2
		BRA	EndCommand

		;------ report bad length
adkm3:
		MOVEQ	#IOERR_BADLENGTH,D0
		BRA.S	adkm2


******* console.device/CD_SETDEFAULTKEYMAP ***********************************
*
*    NAME
*	CD_SETDEFAULTKEYMAP -- set the current default keymap
*
*    FUNCTION
*	This console command copies/uses the keyMap structure pointed to
*	by io_Data to the console device default keymap, which is used
*	to initialize console units when opened, and by RawKeyConvert
*	with a null keyMap parameter.
*
*    IO REQUEST
*	io_Message	mn_ReplyPort set if quick I/O is not possible
*	io_Device	preset by the call to OpenDevice
*	io_Unit		preset by the call to OpenDevice
*	io_Command	CD_SETDEFAULTKEYMAP
*	io_Flags	IOF_QUICK if quick I/O possible, else zero
*	io_Length	sizeof(*keyMap)
*	io_Data		struct KeyMap *keyMap
*			pointer to a structure that describes 
*			the raw keycode to byte stream conversion.
*
*    RESULTS
*	This function sets the io_Error field in the IOStdReq, and fills
*	the current device default key map from the structure pointed to
*	by io_Data.
*
*    BUGS
*	As of V36, this command no longer copies the keymap structure,
*	and the keymap must remain in memory until the default key map
*	is changed.  In general there is no reason for applications to
*	use this command.  The default key map will generally be set by
*	the user using a system provided command/tool.
*
*    SEE ALSO
*	exec/io.h, devices/keymap.h, devices/console.h
*
********************************************************************************

CDCBSetDefaultKeyMap	EQU	-1		; immediate

CDSetDefaultKeyMap:
		move.l	a1,-(a7)

cdSetDefaultEntry:
		MOVEQ	#km_SIZEOF,D0
		CMP.L	IO_LENGTH(A1),D0
		BNE.S	badMapLength

		MOVE.L	D0,IO_ACTUAL(A1)
		MOVE.L	IO_DATA(A1),A0

		LINKKEY	SetKeyMapDefault

dmDone:
		move.l	(a7)+,a1
		MOVEQ	#0,D0
		BRA	EndCommand

badMapLength:
		MOVEQ	#IOERR_BADLENGTH,D0
		BRA.S	dmDone

		END
@


36.7
log
@Autodoc stuff
@
text
@d2 1
a2 1
**	$Id: keymap.asm,v 36.6 90/04/13 13:32:35 kodiak Exp Locker: darren $
d217 1
a217 1
*	This console command copies the keyMap structure pointed to
d239 5
@


36.6
log
@use Id instead of Header for 4.x rcs
@
text
@d2 1
a2 1
**	$Id$
d91 1
a91 1
*	SetKeyMap - set the current key map structure for this console
d137 1
a137 1
*	AskDefaultMap - get the current default keymap
d214 1
a214 1
*	SetDefaultMap - set the current default keymap
@


36.5
log
@for 4.x rcs
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/keymap.asm,v 36.4 89/12/19 13:27:36 kodiak Exp Locker: kodiak $
@


36.4
log
@autodoc update
@
text
@d2 1
a2 1
**	$Header: keymap.asm,v 36.3 89/12/02 11:36:51 kodiak Exp $
@


36.3
log
@
@
text
@d2 1
a2 1
**	$Header$
d88 1
a88 1
******* console.device/command/SetKeyMap *************************************
d134 1
a134 1
******* console.device/command/AskDefaultKeyMap ******************************
d211 1
a211 1
******* console.device/command/SetDefaultKeyMap ******************************
@


36.2
log
@use XLVO
revise autodoc
make all labels explicit
@
text
@d1 9
a9 34
	TTL    '$Header: keymap.asm,v 36.1 89/06/28 12:33:48 kodiak Exp $'
**********************************************************************
*                                                                    *
*   Copyright 1985, Commodore-Amiga Inc.   All rights reserved.      *
*   No part of this program may be reproduced, transmitted,          *
*   transcribed, stored in retrieval system, or translated into      *
*   any language or computer language, in any form or by any         *
*   means, electronic, mechanical, magnetic, optical, chemical,      *
*   manual or otherwise, without the prior written permission of     *
*   Commodore-Amiga Incorporated, 983 University Ave. Building #D,   *
*   Los Gatos, California, 95030                                     *
*                                                                    *
**********************************************************************
*
*	Console device keymap interface
*
*   Source Control
*   --------------
*   $Header: keymap.asm,v 36.1 89/06/28 12:33:48 kodiak Exp $
*
*   $Locker: kodiak $
*
*   $Log:	keymap.asm,v $
*   Revision 36.1  89/06/28  12:33:48  kodiak
*   make more robust for use w/ fake units (i.e. -1 units)
*   
*   Revision 36.0  88/09/06  19:51:53  kodiak
*   *** empty log message ***
*   
*   Revision 35.0  87/10/26  11:13:03  kodiak
*   initial from V34, but w/ stripped log
*   
*
**********************************************************************
d11 1
a11 1
	SECTION		rawinput
d13 1
a13 1
*------ Included Files -----------------------------------------------
d15 1
a15 1
	INCLUDE		"cddata.i"
a16 1
	INCLUDE		"exec/errors.i"
d18 1
d20 4
a23 1
*------ Imported Functions -------------------------------------------
d25 8
d39 1
a39 1
	XREF		EndCommand
a40 1
*------ Exported Functions -------------------------------------------
a41 11
	XDEF		CDAskKeyMap
	XDEF		CDSetKeyMap
	XDEF		CDAskDefaultKeyMap
	XDEF		CDSetDefaultKeyMap

	XDEF		CDCBAskKeyMap
	XDEF		CDCBSetKeyMap
	XDEF		CDCBAskDefaultKeyMap
	XDEF		CDCBSetDefaultKeyMap

	
d44 1
a44 1
*    NAME
@


36.1
log
@make more robust for use w/ fake units (i.e. -1 units)
@
text
@d1 1
a1 1
	TTL    '$Header: keymap.asm,v 36.0 88/09/06 19:51:53 kodiak Exp $'
d19 1
a19 1
*   $Header: keymap.asm,v 36.0 88/09/06 19:51:53 kodiak Exp $
d24 3
d47 2
a48 2
	XREF_EXE	Forbid
	XREF_EXE	Permit
d50 2
a51 2
	XREF_KEY	AskKeyMapDefault
	XREF_KEY	SetKeyMapDefault
d68 1
a68 1
******* console.device/command/AskKeyMap *************************************
d71 1
a71 1
*	AskKeyMap - get the current key map structure for this console
d77 1
a77 1
*    IO REQUEST
d88 1
a88 1
*    RESULTS
a92 2
*    BUGS
*
d96 2
a97 2
********************************************************************************

d210 1
a210 1
		BNE.S	3$
d217 1
a217 1
1$
d219 1
a219 1
		DBF	D1,1$
d227 1
a227 1
2$
d232 1
a232 1
3$
d234 1
a234 1
		BRA.S	2$
@


36.0
log
@*** empty log message ***
@
text
@d1 1
a1 1
	TTL    '$Header: keymap.asm,v 35.0 87/10/26 11:13:03 kodiak Exp $'
d19 1
a19 1
*   $Header: keymap.asm,v 35.0 87/10/26 11:13:03 kodiak Exp $
d21 1
a21 1
*   $Locker:  $
d24 3
d100 5
d107 1
a107 1
		MOVE.L	IO_UNIT(A1),A0
d147 5
d154 1
a154 1
		MOVE.L	IO_UNIT(A1),A2
d198 1
d275 1
@
