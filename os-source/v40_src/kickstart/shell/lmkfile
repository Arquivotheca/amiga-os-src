#MYLIBS= LIB:amiga.lib LIB:debug.lib
REMOTE = V:src/kickstart/shell

V = 40
LC = lc
ASM = casm

LRFLAGS= BATCH SMALLCODE SMALLDATA ND
LFLAGS= BATCH SMALLCODE SMALLDATA MAP shell.map F,H,L,O,S,X

OFILES= shell.o variable.o set.o endif.o endcli.o echo.o ask.o else.o \
	failat.o fault.o get.o if.o path.o prompt.o quit.o skip.o stack.o \
	why.o cd.o resident.o newshell.o run.o jumptab.o endcode.o

HDRS=	global.h shell_protos.h libhdr.h fault.h cli_init.h

CFILES1=	shell.c variable.c set.c endif.c endcli.c echo.c ask.c \
		else.c failat.c fault.c get.c if.c path.c prompt.c quit.c \
		skip.c stack.c
CFILES2=	why.c cd.c resident.c newshell.c run.c

AFILES=	jumptab.asm endcode.asm sromtag.asm sramtag.asm

#AFLAGS = -iinclude: -cqr
AFLAGS = -iINCLUDE:

#LCFLAGS = -cimsqf -v -j73 -rr -iV:include -iV:inc.lattice -d1
LCFLAGS = -cimsqf -v -j73 -rr -d1
OPT = -O -ms

shell.ld.strip: shell.ld
	blink from shell.ld to shell.ld.strip ND

shell.ld:	sromtag.o sramtag.o $(OFILES)
	blink from sromtag.o with shell.with \
	LIB LIB:lcr.lib $(MYLIBS) TO shell.ld $(LFLAGS)
         
	blink from sramtag.o with shell.with \
	LIB LIB:lcr.lib $(MYLIBS) TO rshell.ld $(LRFLAGS)
	execute < <
	if "$$username" EQ "andy" ;
	rcp rshell.ld shell.ld minnow=ram: ;
	endif;
	<
.c.o:
	$(LC) $(LCFLAGS)  $(OPT) $*.c

.asm.o:
	$(ASM) -a $*.asm -o $*.o $(AFLAGS) 


shell.o:	shell.c global.h cli_init.h shell_rev.h jumptab.asm

sromtag.o:	sromtag.asm shell_rev.i

sramtag.o:	sramtag.asm shell_rev.i

jumptab.o:	jumptab.asm

variable.o:	variable.c global.h

set.o:		set.c

endcli.o:	endcli.c

endif.o:	endif.c

echo.o:		echo.c

resident.o:	resident.c jumptab.asm

ask.o:		ask.c

else.o:		else.c

failat.o:	failat.c

fault.o:	fault.c

get.o:	get.c

if.o:		if.c

path.o:		path.c

prompt.o:	prompt.c

quit.o:		quit.c

skip.o:		skip.c

stack.o:	stack.c

why.o:		why.c

cd.o:		cd.c

newshell.o:	newshell.c

run.o:		run.c

endcode.o:	endcode.asm


internal:
	@copy (\#?.ld|\#?.rev|\#?_rev.?) $(REMOTE)
	@execute < < 
	failat 21 ;
	cd $(REMOTE) ;
	co $(CFILES1) ;
	co $(CFILES2) $(AFILES) ;
	co $(HDRS) lmkfile Makefile;
	<

version:
	@bumprev $(V) shell_rev

local:
	rcp rshell.ld shell.ld minnow=ram:

clean:
	@delete (\#?.o|\#?.ld\#?)
