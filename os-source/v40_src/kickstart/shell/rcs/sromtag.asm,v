head     1.12;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


1.12
date     92.07.31.22.02.27;  author jesup;  state Exp;
branches ;
next     1.11;

1.11
date     91.05.07.18.10.39;  author andy;  state Exp;
branches ;
next     1.10;

1.10
date     91.01.16.11.28.15;  author andy;  state Exp;
branches ;
next     1.9;

1.9
date     91.01.12.19.24.50;  author andy;  state Exp;
branches ;
next     1.8;

1.8
date     90.12.30.14.25.47;  author andy;  state Exp;
branches ;
next     1.7;

1.7
date     90.03.19.05.32.56;  author andy;  state Exp;
branches ;
next     1.6;

1.6
date     90.03.02.21.10.23;  author andy;  state Exp;
branches ;
next     1.5;

1.5
date     89.12.17.03.46.21;  author andy;  state Exp;
branches ;
next     1.4;

1.4
date     89.12.15.07.57.14;  author andy;  state Exp;
branches ;
next     1.3;

1.3
date     89.12.15.07.50.49;  author andy;  state Exp;
branches ;
next     1.2;

1.2
date     89.12.10.23.24.36;  author andy;  state Exp;
branches ;
next     1.1;

1.1
date     89.12.09.06.50.33;  author andy;  state Exp;
branches ;
next     1.0;

1.0
date     89.12.07.05.25.03;  author andy;  state Exp;
branches ;
next     ;


desc
@Romtag for Shell
@


1.12
log
@@@startup -> _startup
@
text
@* startup code for C shell

        include "exec/types.i"
        include "exec/nodes.i"
        include "exec/lists.i"
        include "exec/libraries.i"
        include "exec/initializers.i"
        include "exec/resident.i"
	

	include "libhdr.i"
	include "shell_rev.i"

	XREF @@startup
	XREF _startup

	XREF @@PktWait
	XREF _PktWait

	SECTION	text,code

* remove the first 0 for ram use

	DC.L	0			; no next segment
start:	DC.L	(end-start)/4

* startup is the C entry point for the C shell

Entry:	movem.l	A0/A1/A6,-(SP)
	lsl.l	#2,D1
	move.l D1,A0
	jsr _startup
	movem.l (SP)+,A0/A1/A6
	jmp (A6)

; now the fun stuff
	
	CNOP 0,4

	DC.l	0
centry:	movem.l	A0/A1/A6,-(SP)
	move.l #1,A0	;signal C startup
	jsr _startup
	movem.l (SP)+,A0/A1/A6
	rts

	CNOP	0,4

	DC.L	0
	DC.L	G_START/4,(Entry-start)
	DC.L	G_CLISTART/4,(Entry-start)
	DC.L	G_GLOBMAX/4

end:


start_tab
          DC.L    start-4                  ; APTR  RT_INIT
	  DC.L	  centry-4

	XREF	_endcode
	
;-----------------------------------------------------------------------
; A romtag structure.  Both "exec" and "ramlib" look for
; this structure to discover magic constants about you
; (such as where to start running you from...).
;-----------------------------------------------------------------------

romtag:                                 ;STRUCTURE RT,0
          DC.W    RTC_MATCHWORD         ; UWORD RT_MATCHWORD
          DC.L    romtag                ; APTR  RT_MATCHTAG
          DC.L    _endcode              ; APTR  RT_ENDSKIP
          DC.B    0  		        ; UBYTE RT_FLAGS
          DC.B    VERSION               ; UBYTE RT_VERSION
          DC.B    NT_UNKNOWN            ; UBYTE RT_TYPE
          DC.B    -122                  ; BYTE  RT_PRI
          DC.L    myName                ; APTR  RT_NAME
          DC.L    idString              ; APTR  RT_IDSTRING
          DC.L    start_tab             ; APTR  RT_INIT
                                        ; LABEL RT_SIZE
	CNOP	0,2
myName: dc.b 'shell',0

        ; this is an identifier tag to help in supporting the library
        ; format is 'name version.revision (dd MON yyyy)',<cr>,<lf>,<null>
	CNOP	0,2
        dc.b '$VER: '
idString:   VSTRING
	ds.w 0	; force word alignment


	section __MERGED,DATA

	CNOP	0,4

x:	DC.L	(y-x)/4
	DC.L	0
	DC.L	0
	DC.L	G_GLOBMAX/4
y:
	END

@


1.11
log
@calls @@ startup
@
text
@d32 1
a32 1
	jsr @@startup
d43 1
a43 1
	jsr @@startup
@


1.10
log
@changed a 36 to a VERSION
@
text
@d32 1
a32 1
	jsr _startup
d43 1
a43 1
	jsr _startup
@


1.9
log
@
fixed version string
@
text
@d74 1
a74 1
          DC.B    36                    ; UBYTE RT_VERSION
@


1.8
log
@added VER header so version command could work on it
@
text
@d87 1
a87 1
	    dc.b '$VER: '
d89 1
a89 1
	    ds.w 0	; force word alignment
@


1.7
log
@*** empty log message ***
@
text
@d87 1
@


1.6
log
@new romtag logic; 2 entry points: 1 for CreateNewProc, one for createtask.
@
text
@@


1.5
log
@*** empty log message ***
@
text
@d17 3
d38 9
d56 5
d79 1
a79 1
          DC.L    start-4                  ; APTR  RT_INIT
@


1.4
log
@fixed id string and priority
@
text
@@


1.3
log
@
@
text
@d12 1
d59 1
a59 1
          DC.B    0                     ; BYTE  RT_PRI
d70 2
a71 2
idString:   dc.b    'shell 36.1 (28 Jul 1989)',13,10,0
        ; force word alignment
@


1.2
log
@modified for rom
@
text
@@


1.1
log
@gv list adjusted for rom
@
text
@d18 2
@


1.0
log
@added to rcs
@
text
@d18 1
a18 1
*	DC.L	0			; no next segment
d31 1
a31 1

d36 1
d62 1
a62 1
myName: dc.b 'shell-seg',0
d67 1
a67 1
idString:   dc.b    'shell-seg 36.1 (28 Jul 1989)',13,10,0
a68 1
	CNOP	0,4
d70 1
d73 2
d76 1
@
