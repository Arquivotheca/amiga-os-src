head     1.7;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


1.7
date     91.04.10.20.06.44;  author andy;  state Exp;
branches ;
next     1.6;

1.6
date     91.01.25.22.39.32;  author andy;  state Exp;
branches ;
next     1.5;

1.5
date     91.01.25.22.18.06;  author andy;  state Exp;
branches ;
next     1.4;

1.4
date     91.01.10.20.35.03;  author andy;  state Exp;
branches ;
next     1.3;

1.3
date     90.06.11.14.51.50;  author andy;  state Exp;
branches ;
next     1.2;

1.2
date     90.04.07.00.11.26;  author andy;  state Exp;
branches ;
next     1.1;

1.1
date     90.03.04.23.16.01;  author andy;  state Exp;
branches ;
next     1.0;

1.0
date     89.12.15.07.43.13;  author andy;  state Exp;
branches ;
next     ;


desc
@builtin Else command
@


1.7
log
@getargs space savings
@
text
@/*
lc -d -j73 -O -o/obj/Else.o -i/include -v -csf Else
blink /obj/Else.o to /bin/Else sc sd nd
protect /bin/Else +p
quit
*/

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
/* |_o_o|\\ Copyright (c) 1989 The Software Distillery.  All Rights Reserved */
/* |. o.| || This program may not be distributed without the permission of   */
/* | .	| || the authors:			      BBS: (919) 382-8265    */
/* | o	| ||   Dave Baker      Alan Beale	  Jim Cooper		     */
/* |  . |//    Jay Denebeim    Bruce Drake	  Gordon Keener 	     */
/* ======      John Mainwaring Andy Mercier	  Jack Rouse		     */
/*	       John Toebes     Mary Ellen Toebes  Doug Walker		     */
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/**	(C) Copyright 1989 Commodore-Amiga, Inc.
 **	    All Rights Reserved
**/

/*---------------------------------------------------------------------------*/
/* Command: Else							     */
/* Author:  Gordon Keener						     */
/* Change History:							     */
/*  Date    Person	  Action					     */
/* -------  ------------- -----------------				     */
/* 19MAR89  John Toebes   Initial Creation				     */
/* 03DEC89  Gordon Keener Final (hopefully) fixes                            */
/* Notes:								     */
/*---------------------------------------------------------------------------*/

#include "internal/commands.h"
/* #include "else_rev.h" */
#include "global.h"

#define SMALL 1

int cmd_else(void)
{
   struct DosLibrary		*DOSBase;
   int				rc = RETURN_ERROR;
   char 			buff[256];
   struct CommandLineInterface	*cli;
   int				nest;
   int                          more;

#ifndef SMALL
      DOSBase = (struct DosLibrary *)OpenLibrary(DOSLIB, DOSVER);
#else
      getargs(&DOSBase,NULL,NULL,NULL,0);
#endif
      if (((cli = Cli()) == NULL) ||
	  (cli->cli_CurrentInput == cli->cli_StandardInput)) {
	 PrintFault(STR_NOT_EXECUTE,NULL);
      }
      else {
	 /* Read lines until we find matching ENDIF */
	 SelectInput( cli->cli_CurrentInput );
	 nest = 0;

	 while (nest >= 0) {
	    if (ReadItem(buff, sizeof(buff), NULL) == ITEM_TOKEN) {
	       switch( FindArg("IF,ENDIF", buff) ) {
		  case 0:
		     /* IF */
		     nest++;
		     break;

		  case 1:
		     /* ENDIF */
		     nest--;
		     break;

		  default:
		     break;
	       }
	    }

            /* eat the rest of the line */
            while ((more = FGetC(Input())) != '\n')
            {
               if (more < 0) goto quitl;
            }
	 }


quitl:
	 /* Did we drop off the world, or discover America?	      */
	 /* NOTE: Else complains about missing ENDIFs, but If doesn't */
	 if (nest >= 0)PrintFault(STR_MISSING_ELSE,NULL);
	 else rc = RETURN_OK;
      }

      CloseLibrary((struct Library *)DOSBase);
#ifdef ram
   }
   else { OPENFAIL; }
#endif
   return(rc);
}
@


1.6
log
@changed return code to match 1.3
@
text
@d37 2
d42 1
a42 4
/*
   struct Library *SysBase = (*((struct Library **) 4));
*/
   int				rc;
d48 1
a48 2
   rc = RETURN_ERROR;
/*   if ((DOSBase = (struct DosLibrary *)OpenLibrary(DOSLIB, DOSVER))) { */
d50 3
d54 1
a54 2
	  (cli->cli_CurrentInput == cli->cli_StandardInput))
      {
d57 1
a57 2
      else
      {
d62 3
a64 6
	 while (nest >= 0)
	 {
	    if (ReadItem(buff, sizeof(buff), NULL) == ITEM_TOKEN)
	    {
	       switch( FindArg("IF,ENDIF", buff) )
	       {
@


1.5
log
@registered parameter switch to save space
@
text
@d49 1
a49 1
   rc = RETURN_FAIL;
@


1.4
log
@moved strings into dos
@
text
@d40 1
d42 1
@


1.3
log
@removed doslibrary open test to save space
@
text
@a36 3
#define MSG_NOEXEC  "ELSE must be in a command file\n"
#define MSG_MISSING "Missing ELSE or ENDIF\n"

d53 1
a53 1
	 Puts(MSG_NOEXEC);
d93 2
a94 4
	 if (nest >= 0)
	    Puts(MSG_MISSING);
	 else
	    rc = RETURN_OK;
@


1.2
log
@*** empty log message ***
@
text
@d51 2
a52 2
   if ((DOSBase = (struct DosLibrary *)OpenLibrary(DOSLIB, DOSVER)))
   {
d103 1
d105 2
a106 5
   else
   {
      OPENFAIL;
   }

@


1.1
log
@removed CMDREV header
@
text
@d43 1
@


1.0
log
@added to rcs
@
text
@d37 1
a37 1
#define MSG_NOEXEC  "ELSE must be in a command file\n" CMDREV
@
