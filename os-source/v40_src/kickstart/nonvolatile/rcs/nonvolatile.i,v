head     40.10;
branch   ;
access   ;
symbols  V40_35:40.9 V40_34:40.9 rel40_10:40.5 rel40_9:40.5 rel40_8:40.5 rel40_7:40.5 rel40_6:40.4 rel40_5:40.3 rel40_4:40.2 rel40_3:40.1 rel40_2:40.0 rel40_1:39.0 rel39_1:39.0;
locks    ; strict;
comment  @* @;


40.10
date     93.08.03.11.46.16;  author vertex;  state Exp;
branches ;
next     40.9;

40.9
date     93.07.30.17.11.07;  author vertex;  state Exp;
branches ;
next     40.8;

40.8
date     93.03.09.13.50.53;  author brummer;  state Exp;
branches ;
next     40.7;

40.7
date     93.03.08.18.04.54;  author brummer;  state Exp;
branches ;
next     40.6;

40.6
date     93.03.05.15.25.01;  author brummer;  state Exp;
branches ;
next     40.5;

40.5
date     93.02.25.08.58.06;  author Jim2;  state Exp;
branches ;
next     40.4;

40.4
date     93.02.23.13.14.16;  author Jim2;  state Exp;
branches ;
next     40.3;

40.3
date     93.02.19.15.18.50;  author Jim2;  state Exp;
branches ;
next     40.2;

40.2
date     93.02.18.11.06.58;  author Jim2;  state Exp;
branches ;
next     40.1;

40.1
date     93.02.16.13.24.53;  author Jim2;  state Exp;
branches ;
next     40.0;

40.0
date     93.02.10.17.26.58;  author Jim2;  state Exp;
branches ;
next     39.0;

39.0
date     93.02.03.11.11.38;  author Jim2;  state Exp;
branches ;
next     ;


desc
@Assember defintions for structures/constants used in interfacing with
the nonvolatile.library.
@


40.10
log
@*** empty log message ***
@
text
@	IFND LIBRARIES_NONVOLATILE_I
LIBRARIES_NONVOLATILE_I SET 1
**
**	$Id: $
**
**	nonvolatile.library interface structures and definitions.
**
**	(C) Copyright 1992,1993 Commodore-Amiga, Inc.
**	All Rights Reserved
**

;---------------------------------------------------------------------------

    IFND EXEC_TYPES_I
    INCLUDE "exec/types.i"
    ENDC

    IFND EXEC_NODES_I
    INCLUDE "exec/nodes.i"
    ENDC

;---------------------------------------------------------------------------

   STRUCTURE NVInfo,0
	ULONG	nvi_MaxStorage
	ULONG	nvi_FreeStorage
   LABEL NVINFO_SIZE

;---------------------------------------------------------------------------

   STRUCTURE NVEntry,0
	STRUCT	nve_Node,MLN_SIZE
	APTR	nve_Name
	ULONG	nve_Size
	ULONG	nve_Protection
   LABEL NVENTRY_SIZE

;---------------------------------------------------------------------------

; Bit definitions for mask in SetNVProtection(). Also used for
; NVEntry.nve_Protection.

	BITDEF	NVE,DELETE,0
	BITDEF	NVE,APPNAME,31

;---------------------------------------------------------------------------

; errors from StoreNV()
NVERR_BADNAME	equ 1
NVERR_WRITEPROT equ 2
NVERR_FAIL	equ 3
NVERR_FATAL	equ 4


;---------------------------------------------------------------------------

; determines the size of data returned by this library
SizeNVData	MACRO	;DataPtr SizeReg
		move.l	-4(/1),/2
		subq.l	#4,/2
		ENDM

;---------------------------------------------------------------------------

	ENDC ; LIBRARIES_NONVOLATILE_I
@


40.9
log
@Autodoc and include cleanup
@
text
@d4 1
a4 1
**	Id: nonvolatile.i,v 40.4 93/02/23 13:14:16 Jim2 Exp Locker: Jim2 $
@


40.8
log
@Move internal definitions of lowlevel.library jsr offsets
and internal macro definition to nonvolatilebase.i
@
text
@a13 1

d15 1
a15 1
    include 'exec/types.i'
d19 1
a19 1
    include 'exec/nodes.i'
d22 3
a24 1
 STRUCTURE NVInfo,0
d27 1
a27 1
	LABEL	NVINFO_SIZE
d29 3
a31 1
 STRUCTURE NVEntry,0
d36 3
a38 1
	LABEL	NVENTRY_SIZE
d40 2
a41 2
* Bit definitions for Mask in SetNVProtection().  Also used for
* NVEntry.nve_Protection.
d46 1
d48 10
a57 21
* Errors from StoreNV().
NVERR_BADNAME	EQU	1
NVERR_WRITEPROT EQU	2
NVERR_FAIL	EQU	3
NVERR_FATAL	EQU	4


******************************************************************************
*
*   Neat Macro
*	SizeNVData - Determine the size of data returned by this library.
*
*   FUNCTION
*	Determines the size of data returned by this library.
*
*	This macro will return incorrect information if called with data not
*	created by this library.
*
*	This function is actually implemented by a macro.
*
******************************************************************************
d63 1
d65 1
a65 1
    ENDC
@


40.7
log
@Remove temp comment to open interface with lowlevel.library.
@
text
@a22 4
    IFND DOS_DOS_I
    include 'dos/dos.i'
    ENDC

a48 5
* Offsets for JSR to lowlevel library
_LVOKillReq	equ	-$78			; kill requesters
_LVORestoreReq	equ	-$7E			; restore requesters


a67 65
******************************************************************************
*
*   Macro
*	ChkKillRequesters - Checks if requesters are to be killed and if so
*				calls lowlevel.library to kill them.
*
*   FUNCTION	This macro should be used with care, it will leave the
*		requester flag on the stack.  It should be paired with the
*		following macro ChkRestoreRequesters.
*
*   INPUTS	a5 = nonvolatile.library base
*		d1 = TRUE if requesters are to be killed
*		     FALSE if requesters are not to be killed
*
*   OUTPUTS	stack is pushed !!!
*
******************************************************************************
ChkKillRequesters	MACRO		;

		ext.l	d1				; are requesters allowed ?
		move.l	d1,-(sp)			; save KillRequesters param
		beq.s	5$				; if yes, j to continue
		movem.l	d0-d1/a0-a1/a6,-(sp)		; save registers
		lea	LLName(pc),a1			; a1 gets ptr to name
		moveq.l	#0,d0				; any version
		move.l	nv_ExecBase(a5),a6
		JSRLIB	OpenLibrary			; open library
		move.l	d0,nv_LowLevelBase(a5)		; did library open ?
		beq.s	3$				; if no, j to skip
		move.l	d0,a6				; a6 gets low level base
;		JSRLIB	KillReq
		jsr	_LVOKillReq(a6)			; kill all requesters
3$:		movem.l	(sp)+,d0-d1/a0-a1/a6		; restore registers
5$:							;
			ENDM

******************************************************************************
*
*   Macro
*	ChkRestoreRequesters - Checks if requesters were previously killed and
*				calls lowlevel.library to restore them.
*
*   FUNCTION	This macro should be used with care, it will pop the
*		requester flag off the stack.  It should be paired with the
*		previous macro ChkKillRequesters.
*
*   INPUTS	(sp)+ = TRUE if requesters are to be killed
*		     	FALSE if requesters are not to be killed
*
*   OUTPUTS	stack is popped !!!!
*
******************************************************************************
ChkRestoreRequesters	MACRO		;

		move.l	(sp)+,d1		; were requesters killed ?
		beq.s	7$			; if no, j to continue
		move.l	nv_LowLevelBase(a5),d1	; d1 gets ll base
		beq.s	7$			; if not opened, j to exit
		movem.l	d0-d1/a0-a1/a6,-(sp)	; save registers
		move.l	d1,a6			; a6 gets lib base
;		JSRLIB	RestoreReq
		jsr	_LVORestoreReq(a6)	; restore all requesters
		movem.l	(sp)+,d0-d1/a0-a1/a6	; restore registrers
7$:						;
			ENDM
@


40.6
log
@Added macro for calling lowlevel.library KillReq and RestoreReq
function.  These are currently commented out until lowlevel is ready
@
text
@d107 2
a108 1
;		jsr	_LVOKillReq(a6)			; kill all requesters
d137 2
a138 1
;		jsr	_LVORestoreReq(a6)	; restore all requesters
@


40.5
log
@Played with header format.
@
text
@d52 6
d76 64
@


40.4
log
@Renamed NVItem NVEntry.  Added nvi_ to all the entries in NVInfo.

Added the node structure to NVEntry so it can be linked into an
ExecList.  Using high order bit of protection to indicated
AppName.
@
text
@d1 12
a12 11
******************************************************************************
*
*	$Id: nonvolatile.i,v 40.3 93/02/19 15:18:50 Jim2 Exp Locker: Jim2 $
*
******************************************************************************
*
*
*	(C) Copyright 1992,1993 Commodore-Amiga, Inc.
*	    All Rights Reserved
*
******************************************************************************
a13 2
    IFND LIBRARIES_NONVOLATILE_I
LIBRARIES_NONVOLATILE_I SET 1
d42 1
a42 3
NVEB_DELETE	EQU	FIBB_DELETE
NVEF_DELETE	EQU	FIBF_DELETE

d68 1
@


40.3
log
@Removed RCS_LOG.  Also changed the EQU to indicate that this
file resides in INCLUDE:libraries.
@
text
@d3 1
a3 1
*	$Id: nonvolatile.i,v 40.2 93/02/18 11:06:58 Jim2 Exp Locker: Jim2 $
d20 4
d29 2
a30 3
	ULONG	MaxStorage
	ULONG	FreeStorage
	STRUCT	Pad,6*4
d33 12
a44 5
 STRUCTURE NVItem,0
	APTR	nvi_Name
	ULONG	nvi_Size
	ULONG	nvi_Protection
	LABEL	NVITEM_SIZE
d46 1
a46 2
NVIB_DELETE	EQU	FIBB_DELETE
NVIF_DELETE	EQU	FIBF_DELETE
d49 1
@


40.2
log
@Added nvi_Protection to NVItem
@
text
@d3 1
a3 1
*	$Id: nonvolatile.i,v 40.1 93/02/16 13:24:53 Jim2 Exp Locker: Jim2 $
a6 3
*	$Log:	nonvolatile.i,v $
* Revision 40.1  93/02/16  13:24:53  Jim2
* Added the structure NVItem.
a7 7
* Revision 40.0  93/02/10  17:26:58  Jim2
* Added macro SizeNVInfo.
*
* Revision 39.0  93/02/03  11:11:38  Jim2
* Initial Release.
*
*
d13 2
a14 2
    IFND NONVOLATILE_NONVOLATILE_I
NONVOLATILE_NONVOLATILE_I SET 1
@


40.1
log
@Added the structure NVItem.
@
text
@d3 1
a3 1
*	$Id: nonvolatile.i,v 40.0 93/02/10 17:26:58 Jim2 Exp Locker: Jim2 $
d8 3
d30 4
d43 1
d45 3
@


40.0
log
@Added macro SizeNVInfo.
@
text
@d3 1
a3 1
*	$Id: nonvolatile.i,v 39.0 93/02/03 11:11:38 Jim2 Exp Locker: Jim2 $
d8 3
d32 5
@


39.0
log
@Initial Release.
@
text
@d3 1
a3 1
*	$Id: $
d7 3
a9 1
*	$Log: $
d11 1
d35 18
@
