head     40.5;
branch   ;
access   ;
symbols  V40_35:40.5 V40_34:40.5 rel40_10:40.2 rel40_9:40.2 rel40_8:40.2 rel40_7:40.2 rel40_6:40.1 rel40_5:40.1 rel40_4:40.1 rel40_3:40.0 rel40_2:39.0 rel40_1:39.0 rel39_1:39.0;
locks    ; strict;
comment  @@;


40.5
date     93.07.30.17.13.06;  author vertex;  state Exp;
branches ;
next     40.4;

40.4
date     93.03.18.10.53.59;  author brummer;  state Exp;
branches ;
next     40.3;

40.3
date     93.03.08.14.11.18;  author brummer;  state Exp;
branches ;
next     40.2;

40.2
date     93.02.25.09.00.37;  author Jim2;  state Exp;
branches ;
next     40.1;

40.1
date     93.02.18.11.10.29;  author Jim2;  state Exp;
branches ;
next     40.0;

40.0
date     93.02.16.13.24.19;  author Jim2;  state Exp;
branches ;
next     39.0;

39.0
date     93.02.03.11.18.17;  author Jim2;  state Exp;
branches ;
next     1.2;

1.2
date     92.10.12.10.44.40;  author jerryh;  state Exp;
branches ;
next     1.1;

1.1
date     92.10.08.13.25.29;  author jerryh;  state Exp;
branches ;
next     ;


desc
@sfd file for nonvolatile.library.
@


40.5
log
@*** empty log message ***
@
text
@==id $Id: nonvolatile_lib.sfd,v 40.4 93/03/18 10:53:59 brummer Exp Locker: vertex $
* "nonvolatile.library"
==base _NVBase
==bias 30
==public
==include <exec/types.h>
==include <exec/lists.h>
==include <libraries/nonvolatile.h>
==version 40
APTR GetCopyNV(STRPTR appName, STRPTR itemName, BOOL killRequesters) (A0,A1,D1)
VOID FreeNVData(APTR data) (A0)
UWORD StoreNV(STRPTR appName, STRPTR itemName, APTR data, ULONG length, BOOL killRequesters) (A0,A1,A2,D0,D1)
BOOL DeleteNV(STRPTR appName, STRPTR itemName, BOOL killRequesters) (A0,A1,D1)
struct NVInfo *GetNVInfo(BOOL killRequesters) (D1)
struct MinList *GetNVList(STRPTR appName, BOOL killRequesters) (a0,D1)
BOOL SetNVProtection (STRPTR appName, STRPTR itemName, LONG mask, BOOL killRequesters) (a0,a1,d2,d1)
==end
@


40.4
log
@replace 'KillRequesters' with 'killRequesters' to avoid warning message about caps.
@
text
@d1 1
a1 1
==id $Id: nonvolatile_lib.sfd,v 40.3 93/03/08 14:11:18 brummer Exp Locker: brummer $
d10 2
a11 2
APTR  GetCopyNV(STRPTR appName, STRPTR itemName, BOOL killRequesters) (A0,A1,D1)
VOID  FreeNVData(APTR data) (A0)
d13 3
a15 3
BOOL  DeleteNV(STRPTR appName, STRPTR itemName, BOOL killRequesters) (A0,A1,D1)
struct NVInfo * GetNVInfo(BOOL killRequesters) (D1)
struct MinList * GetNVList(STRPTR appName, BOOL killRequesters) (a0,D1)
@


40.3
log
@Update per Martin's requests.
Add extra KillRequester parameter to functions.
@
text
@d1 1
a1 1
==id $Id: nonvolatile_lib.sfd,v 40.2 93/02/25 09:00:37 Jim2 Exp Locker: brummer $
d10 1
a10 1
APTR  GetCopyNV(STRPTR appName, STRPTR itemName, BOOL KillRequesters) (A0,A1,D1)
d12 5
a16 5
UWORD StoreNV(STRPTR appName, STRPTR itemName, APTR data, ULONG length, BOOL KillRequesters) (A0,A1,A2,D0,D1)
BOOL  DeleteNV(STRPTR appName, STRPTR itemName, BOOL KillRequesters) (A0,A1,D1)
struct NVInfo * GetNVInfo(BOOL KillRequesters) (D1)
struct MinList * GetNVList(STRPTR appName, BOOL KillRequesters) (a0,D1)
BOOL SetNVProtection (STRPTR appName, STRPTR itemName, LONG mask, BOOL KillRequesters) (a0,a1,d2,d1)
@


40.2
log
@Corrected the character array pointer types to STRPTR.
@
text
@d1 1
a1 1
==id $Id: Nonvolatile_lib.sfd,v 40.1 93/02/18 11:10:29 Jim2 Exp Locker: Jim2 $
d4 2
d9 2
a10 3
==bias 30
==public
APTR  GetCopyNV(STRPTR appName, STRPTR itemName) (A0,A1)
d12 5
a16 5
UWORD StoreNV(STRPTR appName, STRPTR itemName, APTR data, ULONG length) (A0,A1,A2,D0)
BOOL  DeleteNV(STRPTR appName, STRPTR itemName) (A0,A1)
struct NVInfo * GetNVInfo() ()
struct MinList * GetNVList(STRPTR appName) (a0)
BOOL SetNVProtection (STRPTR appName, STRPTR itemName, LONG mask) (a0,a1,d2)
@


40.1
log
@Added LVO SetNVProtection.
@
text
@d1 1
a1 1
==id $Id: Nonvolatile_lib.sfd,v 40.0 93/02/16 13:24:19 Jim2 Exp Locker: Jim2 $
d5 2
a6 1
==include <nonvolatile.h>
d9 1
a9 1
APTR  GetCopyNV(UBYTE *appName, UBYTE *itemName) (A0,A1)
d11 2
a12 2
UWORD StoreNV(UBYTE *appName, UBYTE *itemName, APTR data, ULONG length) (A0,A1,A2,D0)
BOOL  DeleteNV(UBYTE *appName, UBYTE *itemName) (A0,A1)
d14 2
a15 2
struct NVItem * GetNVList(UBYTE *appName) (a0)
BOOL SetNVProtection (UBYTE *appName, UBYTE *itemName, LONG mask) (a0,a1,d2)
@


40.0
log
@Changed the return parameter for GetNVList.
@
text
@d1 1
a1 1
==id $Id: nonvolatile_lib.sfd,v 39.0 93/02/03 11:18:17 Jim2 Exp Locker: Jim2 $
d14 1
@


39.0
log
@Changed the LVOs per January design review.
@
text
@d1 1
a1 1
==id $Id: nonvolatile_lib.sfd,v 1.2 92/10/12 10:44:40 jerryh Exp Locker: Jim2 $
d13 1
a13 1
UBYTE * GetNVList(UBYTE *appName) (a0)
@


1.2
log
@Added GetTypeNV function.
@
text
@d1 1
a1 1
==id $Id: nonvolatile_lib.sfd,v 1.1 92/10/08 13:25:29 jerryh Exp Locker: jerryh $
d5 1
d9 2
a10 2
VOID  FreeCopyNV(APTR data) (A0)
UWORD StoreNV(UBYTE *appName, UBYTE *itemName, APTR data, ULONG length, UWORD options) (A0,A1,A2,D0,D1)
d12 2
a13 1
UWORD GetTypeNV() ()
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
==id $Id: nonvolatile_lib.sfd,v 1.2 92/10/5 13:19:28 jerryh Exp Locker: jerryh $
d11 1
@
