head     40.8;
branch   ;
access   ;
symbols  V40_35:40.8 V40_34:40.8 rel40_10:40.6 rel40_9:40.6 rel40_8:40.5 rel40_7:40.5 rel40_6:40.4 rel40_5:40.3 rel40_4:40.2 rel40_3:40.1 rel40_2:40.0 rel40_1:39.0 rel39_1:39.0;
locks    ; strict;
comment  @ * @;


40.8
date     93.07.30.17.10.28;  author vertex;  state Exp;
branches ;
next     40.7;

40.7
date     93.03.09.13.49.17;  author brummer;  state Exp;
branches ;
next     40.6;

40.6
date     93.02.25.18.57.04;  author brummer;  state Exp;
branches ;
next     40.5;

40.5
date     93.02.25.08.57.41;  author Jim2;  state Exp;
branches ;
next     40.4;

40.4
date     93.02.23.13.15.48;  author Jim2;  state Exp;
branches ;
next     40.3;

40.3
date     93.02.19.15.07.04;  author Jim2;  state Exp;
branches ;
next     40.2;

40.2
date     93.02.18.11.05.44;  author Jim2;  state Exp;
branches ;
next     40.1;

40.1
date     93.02.16.13.47.23;  author Jim2;  state Exp;
branches ;
next     40.0;

40.0
date     93.02.10.17.27.26;  author Jim2;  state Exp;
branches ;
next     39.0;

39.0
date     93.02.03.11.11.01;  author Jim2;  state Exp;
branches ;
next     1.4;

1.4
date     92.10.12.10.44.03;  author jerryh;  state Exp;
branches ;
next     1.3;

1.3
date     92.10.08.15.55.53;  author jerryh;  state Exp;
branches ;
next     1.2;

1.2
date     92.10.08.13.24.09;  author jerryh;  state Exp;
branches ;
next     1.1;

1.1
date     92.10.02.11.35.12;  author jerryh;  state Exp;
branches ;
next     ;


desc
@strucure definitions and defines for nonvolatile.library
@


40.8
log
@Autodoc and include cleanup
@
text
@#ifndef LIBRARIES_NONVOLATILE_H
#define LIBRARIES_NONVOLATILE_H

/*
**	$Id: nonvolatile.h,v 40.7 93/03/09 13:49:17 brummer Exp Locker: vertex $
**
**	nonvolatile.library interface structures and defintions.
**
**	(C) Copyright 1992,1993 Commodore-Amiga, Inc.
**	All Rights Reserved
*/

/*****************************************************************************/


#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif

#ifndef EXEC_NODES_H
#include <exec/nodes.h>
#endif


/*****************************************************************************/


struct NVInfo
{
    ULONG nvi_MaxStorage;
    ULONG nvi_FreeStorage;
};


/*****************************************************************************/


struct NVEntry
{
    struct MinNode nve_Node;
    STRPTR         nve_Name;
    ULONG          nve_Size;
    ULONG          nve_Protection;
};

/* bit definitions for mask in SetNVProtection().  Also used for
 * NVEntry.nve_Protection.
 */
#define NVEB_DELETE  0
#define NVEB_APPNAME 31

#define NVEF_DELETE  (1<<NVEB_DELETE)
#define NVEF_APPNAME (1<<NVEB_APPNAME)


/*****************************************************************************/


/* errors from StoreNV() */
#define NVERR_BADNAME	1
#define NVERR_WRITEPROT 2
#define NVERR_FAIL	3
#define NVERR_FATAL	4


/*****************************************************************************/


/* determine the size of data returned by this library */
#define SizeNVData(DataPtr) ((((ULONG *) DataPtr)[-1]) - 4)


/*****************************************************************************/


#endif /* LIBRARIES_NONVOLATILE_H */
@


40.7
log
@Fix include "exec/notes.h" to "exec/nodes.h".
Remove include of dos/dos.h
@
text
@d5 1
a5 1
**	$Id: nonvolatile.h,v 40.6 93/02/25 18:57:04 brummer Exp Locker: brummer $
d17 1
a17 1
    #include <exec/types.h>
d21 1
a21 1
    #include <exec/nodes.h>
d24 4
d32 1
a32 1
} ;
d34 4
d41 3
a43 3
    STRPTR nve_Name;
    ULONG nve_Size;
    ULONG nve_Protection;
d46 4
a49 3
/* Bit definitions for Mask in SetNVProtection().  Also used for
   NVEntry.nve_Protection.						     */
#define NVEB_DELETE 0
d52 1
a52 1
#define NVEF_DELETE (1<<NVEB_DELETE)
d56 2
a57 1
/* Errors from StoreNV(). */
d59 1
d66 4
a69 14
/*****************************************************************************
*
*   Neat Macro
*	SizeNVData - Determine the size of data returned by this library.
*
*   FUNCTION
*	Determines the size of data returned by this library.
*
*	This macro will return incorrect information if called with data not
*	created by this library.
*
*	This function is actually implemented by a macro.
*
******************************************************************************/
d72 5
a76 1
#endif
@


40.6
log
@fix bit field definition of NVEF_APPNAME
@
text
@d5 1
a5 1
**	$Id: nonvolatile.h,v 40.5 93/02/25 08:57:41 Jim2 Exp Locker: brummer $
d21 1
a21 5
    #include <exec/notes.h>
#endif

#ifndef DOS_DOS_H
    #include <dos/dos.H>
@


40.5
log
@Played with header format.
@
text
@d5 1
a5 1
**	$Id: nonvolatile.h,v 40.4 93/02/23 13:15:48 Jim2 Exp Locker: Jim2 $
d48 1
a48 1
#define NVEF_APPNAME (1<<NVE_APPNAME)
@


40.4
log
@Renamed NVItem NVEntry.  Prepended nvi_ to the field names for NVInfo.
Added a MinNode to NVEntry so they can be linked into an
ExecList.  Highest order bit in protection is used for indicating
an AppName.
@
text
@a0 12
/*****************************************************************************
*
*	$Id: nonvolatile.h,v 40.3 93/02/19 15:07:04 Jim2 Exp Locker: Jim2 $
*
******************************************************************************
*
*
*	(C) Copyright 1992,1993 Commodore-Amiga, Inc.
*	    All Rights Reserved
*
******************************************************************************/

d4 12
d20 4
d37 1
a37 1
    char * nve_Name;
d44 1
a44 1
#define NVEB_DELETE FIBB_DELETE
d47 2
a48 2
#define NVEF_DELETE FIBF_DELETE
#define NVEF_APPNAME (1<<31)
d73 1
a73 1
#define SizeNVData(DataPtr) (((ULONG *) DataPtr)[-1])
@


40.3
log
@Removed RCS_LOG and changed the define statement to indicate
that this file resides in INCLUDE:libraries.
@
text
@d3 1
a3 1
*	$Id: nonvolatile.h,v 40.2 93/02/18 11:05:44 Jim2 Exp Locker: Jim2 $
d26 2
a27 3
    ULONG MaxStorage;
    ULONG FreeStorage;
    ULONG Pad[6];
d30 1
a30 1
struct NVItem
d32 4
a35 3
    char * nvi_Name;
    ULONG nvi_Size;
    ULONG nvi_Protection;
d38 4
a41 1
#define NVIB_DELETE FIBB_DELETE
d43 5
a47 1
#define NVIF_DELETE FIBF_DELETE
@


40.2
log
@Added nvi_Protection to NVItem.
@
text
@d3 1
a3 1
*	$Id: nonvolatile.h,v 40.1 93/02/16 13:47:23 Jim2 Exp Locker: Jim2 $
a6 10
*	$Log:	nonvolatile.h,v $
 * Revision 40.1  93/02/16  13:47:23  Jim2
 * Added data structure NVItem.
 *
 * Revision 40.0  93/02/10  17:27:26  Jim2
 * Added macro SizeNVInfo.
 *
 * Revision 39.0  93/02/03  11:11:01  Jim2
 * Removed structures no longer required at the top level nonvolatile.library.
 *
d13 2
a14 2
#ifndef NONVOLATILE_NONVOLATILE_H
#define NONVOLATILE_NONVOLATILE_H
@


40.1
log
@Added data structure NVItem.
@
text
@d3 1
a3 1
*	$Id: nonvolatile.h,v 40.0 93/02/10 17:27:26 Jim2 Exp Locker: Jim2 $
d8 3
d26 1
a26 1
#ifndef EXEC_TYPES_I
d30 4
d45 1
d47 4
@


40.0
log
@Added macro SizeNVInfo.
@
text
@d3 1
a3 1
*	$Id: nonvolatile.h,v 39.0 93/02/03 11:11:01 Jim2 Exp Locker: Jim2 $
d8 3
d33 6
@


39.0
log
@Removed structures no longer required at the top level nonvolatile.library.
@
text
@d3 1
a3 1
*	$Id: $
d7 4
a10 1
*	$Log: $
d37 17
@


1.4
log
@no effective change.
@
text
@d1 26
d28 4
a31 31

#define NVRAMSIZE 4000

#define NVMAGIC   'NVME'

struct KickTag {

    struct Resident *kt_TagAddr;
    APTR             kt_NextArray;
    };


struct NVResident {

    struct Resident RomTag;
    struct KickTag  KickTag;
    struct KickTag  ResTag;
    struct MemList  KickMem;

    char            ResName[8];
    ULONG           CheckSum;
    char            NVMemory[NVRAMSIZE];
    };


struct NVMemEntry {

    ULONG  Magic;
    void  *DataPtr;
    ULONG  Size;
    };
@


1.3
log
@moved defs.h to here.
@
text
@d2 1
d4 1
d21 1
a21 1
    char            ResName[8];                      /* "NV RAM\0\0" */
@


1.2
log
@more error codes added.
@
text
@d2 2
a3 1
#include <exec/libraries.h>
d5 1
a5 1
#define NONVOLATILELIBRARYNAME "nonvolatile.library"
d7 3
a9 9
#define NVERR_NOTAPROCESS    1
#define NVERR_INSERTFLOPPY   2
#define NVERR_FORMATFLOPPY   3
#define NVERR_DISKFULL       4
#define NVERR_WRITEPROTECTED 5
#define NVERR_NOTAVAILABLE   6
#define NVERR_OUTOFMEMORY    7
#define NVERR_COULDNOTFORMAT 8
#define NVERR_ENTRYTOOBIG    9
d11 20
a30 2
#define SNV_BESTCHOICE       1
#define SNV_FORMATFLOPPY     2
@


1.1
log
@Initial revision
@
text
@d2 5
a6 1
#define NVERR_NOTPROCESS     1
d10 5
a14 4
#define NVERR_FLOPPYFULL     5
#define NVERR_WRITEPROTECTED 6
#define NVERR_NOTAVAILABLE   7
#define NVERR_OUTOFMEMORY    8
a17 11
#define SNV_FORCEFLOPPY      3


struct NVMemItem {

    ULONG Magic;
    ULONG Priority;
    char  Application[32];
    char  ItemName[32];
    ULONG Size;
    };
@
