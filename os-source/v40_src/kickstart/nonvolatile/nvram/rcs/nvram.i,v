head     40.2;
branch   ;
access   ;
symbols  V40_35:40.2 V40_34:40.2;
locks    ; strict;
comment  @* @;


40.2
date     93.03.05.10.27.45;  author brummer;  state Exp;
branches ;
next     40.1;

40.1
date     93.03.01.15.31.42;  author brummer;  state Exp;
branches ;
next     40.0;

40.0
date     93.02.25.12.04.44;  author brummer;  state Exp;
branches ;
next     39.4;

39.4
date     93.02.25.11.30.06;  author brummer;  state Exp;
branches ;
next     39.3;

39.3
date     93.02.03.14.22.29;  author brummer;  state Exp;
branches ;
next     1.3;

1.3
date     93.02.02.18.11.26;  author brummer;  state Exp;
branches ;
next     1.2;

1.2
date     93.02.02.17.26.44;  author brummer;  state Exp;
branches ;
next     1.1;

1.1
date     93.01.29.16.45.26;  author brummer;  state Exp;
branches ;
next     ;


desc
@@


40.2
log
@Add address and ID for idetifying the Arizona Gate array
in the game machine.
@
text
@******************************************************************************
*
*	$Id: nvram.i,v 40.1 93/03/01 15:31:42 brummer Exp Locker: brummer $
*
******************************************************************************
*
*	$Log:	nvram.i,v $
* Revision 40.1  93/03/01  15:31:42  brummer
* Use tst.b of ciaa for delay so push/pop is not required in all
* the timing delay macros for NVRAM device access.
* Use andi and ori instead of move to CCR register in clear/set
* carry macros.
*
* Revision 40.0  93/02/25  12:04:44  brummer
* fix revision to 40.0
*
* Revision 39.4  93/02/25  11:30:06  brummer
* added equate for NVRAM device size (1024 bytes)
*
* Revision 39.3  93/02/03  14:22:29  brummer
* fix revision number
*
* Revision 1.3  93/02/02  18:11:26  brummer
* Shortened up delay macros.  Still within limits on game machine
*
*
*	(C) Copyright 1993 Commodore-Amiga, Inc.
*	    All Rights Reserved
*
******************************************************************************
;
; Nonvolatile device address and interface equates :
;
nvram_device_size	equ	1024		; size in bytes of device
nvram_signal		equ	%10100000	; address signal
nvram_port_map		equ	$B80030		; AMIGA memory mapped address for chip data
nvram_dir_map		equ	$B80032		; AMIGA memory mapped address for chip OE
nvram_delay_count	equ	6		; loop count for device (*3 us)

	BITDEF	READCMD,,24		; read command bit

	BITDEF	CLOCK,HIGH,31		; clock bit
	BITDEF	DATA,HIGH,30		; data bit
	BITDEF	CLOCK,OE,15		; clock output enable bit
	BITDEF	DATA,OE,14		; data output enable bit
;
; Arizona gate array address and ID tags :
;
nvram_arizona_id_adrs	equ	$B80000		; location of long word ID
nvram_arizona_id1	equ	$BEEF		; first ID
nvram_arizona_id2	equ	$CAFE		; second id
;
; Delay macros for nonvolatile device timing :
;
DELAY_SUSTA	macro			; Start Set-Up time is 4.7 us
		NOLIST
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		LIST
                endm

DELAY_HDSTA	macro			; Start Hold time is 4.0 us
		NOLIST
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		LIST
                endm

DELAY_SUSTO	macro			; Stop Set-Up time is 4.7 us
		NOLIST
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		LIST
                endm

DELAY_CLKHIGH	macro			; Clock pulse width high is 4.0 us
		NOLIST
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		LIST
                endm

DELAY_CLKLOW	macro			; Clock pulse width low is 4.7 us
		NOLIST
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		LIST
                endm

DELAY_BUF	macro			; Clock pulse width low is 4.7 us
		NOLIST
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		LIST
                endm

DELAY_AA	macro			; Wait for data to become valid
		NOLIST
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		LIST
                endm

DELAY_WR	macro			; Wait for device write cycle
		NOLIST
		movem.l	d1,-(sp)	;
		move.w	#1000,d1	;
13$:		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		tst.b	_ciaa+ciapra	;
		dbra	d1,13$		;
		movem.l	(sp)+,d1	;
		LIST
                endm
;
; Miscellaneous coding macros :
;
CLEAR_CARRY	macro
		andi	#~1,CCR
		endm

SET_CARRY	macro
		ori	#1,CCR		;
		endm

@


40.1
log
@Use tst.b of ciaa for delay so push/pop is not required in all
the timing delay macros for NVRAM device access.
Use andi and ori instead of move to CCR register in clear/set
carry macros.
@
text
@d3 1
a3 1
*	$Id: nvram.i,v 40.0 93/02/25 12:04:44 brummer Exp Locker: brummer $
d8 6
d46 6
@


40.0
log
@fix revision to 40.0
@
text
@d3 1
a3 1
*	$Id: nvram.i,v 39.4 93/02/25 11:30:06 brummer Exp Locker: brummer $
d8 3
d13 1
a13 1
* 
d45 4
a48 3
		move.l	d0,-(sp)	;
		move.w	_ciaa+ciapra,d0	;
		move.l	(sp)+,d0	;
d54 3
a56 3
		move.l	d0,-(sp)	;
		move.w	_ciaa+ciapra,d0	;
		move.l	(sp)+,d0	;
d62 4
a65 3
		move.l	d0,-(sp)	;
		move.w	_ciaa+ciapra,d0	;
		move.l	(sp)+,d0	;
d71 3
a73 3
		move.l	d0,-(sp)	;
		move.w	_ciaa+ciapra,d0	;
		move.l	(sp)+,d0	;
d79 4
a82 3
		move.l	d0,-(sp)	;
		move.w	_ciaa+ciapra,d0	;
		move.l	(sp)+,d0	;
d88 4
a91 3
		move.l	d0,-(sp)	;
		move.w	_ciaa+ciapra,d0	;
		move.l	(sp)+,d0	;
d97 3
a99 3
		move.l	d0,-(sp)	;
		move.w	_ciaa+ciapra,d0	;
		move.l	(sp)+,d0	;
d105 8
a112 8
		movem.l	d0-d1,-(sp)	;
		move.w	#1000,d1
13$:		move.w	_ciaa+ciapra,d0	;
		move.w	_ciaa+ciapra,d0	;
		move.w	_ciaa+ciapra,d0	;
		move.w	_ciaa+ciapra,d0	;
		move.w	_ciaa+ciapra,d0	;
		move.w	_ciaa+ciapra,d0	;
d114 1
a114 1
		movem.l	(sp)+,d0-d1	;
d118 1
a118 1
; Miscilanious coding macros :
d121 1
a121 1
		move	#0,CCR		;
d125 1
a125 1
		move	#1,CCR		;
@


39.4
log
@added equate for NVRAM device size (1024 bytes)
@
text
@d3 1
a3 1
*	$Id: nvram.i,v 39.3 93/02/03 14:22:29 brummer Exp Locker: brummer $
d8 3
@


39.3
log
@fix revision number
@
text
@d3 1
a3 1
*	$Id: nvram.i,v 1.3 93/02/02 18:11:26 brummer Exp Locker: brummer $
d8 3
d13 1
a13 1
* 
d22 6
a27 4
nvram_signal	equ	%10100000	; address signal
nvram_port_map	equ	$B80030		; AMIGA memory mapped address for chip data
nvram_dir_map	equ	$B80032		; AMIGA memory mapped address for chip OE
nvram_delay_count	equ	6	; loop count for device (*3 us)
d30 4
a33 4
	BITDEF	CLOCK,HIGH,31		;
	BITDEF	DATA,HIGH,30		;
	BITDEF	CLOCK,OE,15		;
	BITDEF	DATA,OE,14		;
@


1.3
log
@Shortened up delay macros.  Still within limits on game machine
@
text
@d3 1
a3 1
*	$Id: nvram.i,v $
d8 3
@


1.2
log
@Fixed lots of stuff and verified to be working.
@
text
@d1 12
a32 1
		move.w	_ciaa+ciapra,d0	;
a40 1
		move.w	_ciaa+ciapra,d0	;
a48 1
		move.w	_ciaa+ciapra,d0	;
a56 1
		move.w	_ciaa+ciapra,d0	;
a72 1
		move.w	_ciaa+ciapra,d0	;
a79 1
		move.w	_ciaa+ciapra,d0	;
@


1.1
log
@Initial revision
@
text
@d5 2
a6 3
nvram_read_bit	equ	%00000001	; read bit
nvram_port_map	equ	$B8002C		; AMIGA memory mapped address for chip data
nvram_dir_map	equ	$B8002E		; AMIGA memory mapped address for chip OE
d8 1
a21 1
		move.w	_ciaa+ciapra,d0	;
a30 1
		move.w	_ciaa+ciapra,d0	;
a39 1
		move.w	_ciaa+ciapra,d0	;
a48 1
		move.w	_ciaa+ciapra,d0	;
a56 2
		move.w	_ciaa+ciapra,d0	;
		move.w	_ciaa+ciapra,d0	;
a65 1
		move.w	_ciaa+ciapra,d0	;
d70 1
a70 1
DELAY_DATAVALID	macro			; Wait for device clock transitions
d76 15
@
