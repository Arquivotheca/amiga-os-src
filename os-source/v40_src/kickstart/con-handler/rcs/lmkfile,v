head     1.13;
branch   ;
access   ;
symbols  V39_3:1.11 V39_2:1.11 V39_1:1.11;
locks    ; strict;
comment  @# @;


1.13
date     93.03.05.17.58.53;  author jesup;  state Exp;
branches ;
next     1.12;

1.12
date     92.06.18.16.32.14;  author jesup;  state Exp;
branches ;
next     1.11;

1.11
date     92.02.13.17.51.26;  author mks;  state Exp;
branches ;
next     1.10;

1.10
date     91.05.09.18.09.54;  author andy;  state Exp;
branches ;
next     1.9;

1.9
date     91.05.08.09.18.37;  author andy;  state Exp;
branches ;
next     1.8;

1.8
date     91.01.03.22.19.37;  author andy;  state Exp;
branches ;
next     1.7;

1.7
date     90.12.26.20.16.27;  author andy;  state Exp;
branches ;
next     1.6;

1.6
date     90.12.26.11.58.24;  author andy;  state Exp;
branches ;
next     1.5;

1.5
date     90.01.30.14.24.30;  author andy;  state Exp;
branches ;
next     1.4;

1.4
date     89.12.11.02.26.37;  author andy;  state Exp;
branches ;
next     1.3;

1.3
date     89.12.11.01.38.42;  author andy;  state Exp;
branches ;
next     1.2;

1.2
date     89.11.29.14.04.04;  author andy;  state Exp;
branches ;
next     1.1;

1.1
date     89.10.13.19.09.56;  author andy;  state Exp;
branches ;
next     ;


desc
@Makefile for Lattice 5.04 Native make
@


1.13
log
@Bumped to ver 40
@
text
@#
# lmkfile for con-handler
#

#
# Server directory for the data...
#
REMOTE = V:src/kickstart/con-handler
VERSION= 40

#
# Name of the module
#
MODNAME	= con-handler

#
# The ".LD" file we want to produce.
#
LD_FILE	= $(MODNAME).ld
LD_STRIP= $(MODNAME).ld.strip

#
# Compiler, assembler, and linker
#
CC = lc
AS = casm -a
LN = blink

#
# Compiler flags...
#
CFLAGS	= -b0 -v -rr -ms -cfistqm -d1 -O -q 
#CFLAGS	= -b0 -v -rr -ms -cfistqm -d1 -q -Dcdebug=1

#
# Assembler flags...  NOTE how they are used below...
#
AFLAGS	= -csyq -i include: -o

#
# Linker flags
#
LFLAGS		= ADDSYM SMALLCODE SMALLDATA MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16
LFLAGS_STRIP	= ND

#
# System libraries
#
LIBS= LIB:amiga.lib LIB:debug.lib LIB:lcr.lib

#
# My headers...
#
MY_HDR	=	con-handler.h

#
# My C source...
#
MY_C	=	con.c \
ansi.c \
window.c \
misc.c \
history.c

#
# My Assebly source...
#
MY_A	=	cromtag.asm

#
# My object files...
#
MY_OBJS	=	cromtag.o \
misc.o \
ansi.o \
window.o \
history.o \
con.o

#
# My library objects...
#
MY_LIB_OBJS = endcode.o

#
# My library files...
#
MY_LIBS	= endcode.lib

#
# Build the stripped LD file...
#
$(LD_STRIP):	$(LD_FILE)
	$(LN) FROM $(LD_FILE) TO $(LD_STRIP) $(LFLAGS_STRIP)

#
# Build the LD file...
#
$(LD_FILE):	$(MY_OBJS) $(MY_LIBS)
	$(LN) <with <
FROM $(MY_OBJS)
TO $(LD_FILE)
LIB $(LIBS) $(MY_LIBS)
$(LFLAGS)
<

#
# build my libraries
#
$(MY_LIBS):	$(MY_LIB_OBJS)
	oml $(MY_LIBS) r $(MY_LIB_OBJS)


#
# Default rules...
#
.c.o:
	$(CC) $(CFLAGS) $*.c

.asm.o:
	$(AS) $*.asm $(AFLAGS) $*.o

#
# Specific dependancies...
#
cromtag.o:	cromtag.asm $(MODNAME)_rev.i

#
# Bump the version...
#
version:
	@@bumprev $(VERSION) $(MODNAME)_rev

$(MODNAME)_rev.i:
	@@bumprev $(VERSION) $(MODNAME)_rev

#
# Release the current build to the server
#
internal:
	@@delete $(REMOTE)/((\#?.(c|h|asm|i|ld|ld.strip|rev|doc|sfd))|makefile|lmkfile)
	@@protect ((\#?.(c|h|asm|i|ld|ld.strip|rev|doc|sfd))|makefile|lmkfile) +r quiet
	@@copy ((\#?.(c|h|asm|i|ld|ld.strip|rev|doc|sfd))|makefile|lmkfile) $(REMOTE)
	@@copy \#?.doc V:doc NOPRO

#
# Blow away all files that would need to be rebuilt
#
clean:
	@@delete \#?.(o|ld|doc|ld.strip|map)

#
# Make the AutoDocs
#
doc:	$(MODNAME).doc

$(MODNAME).doc:	$(MY_C) $(MY_A)
	@@Echo "Making $(MODNAME).doc"
	@@Join $(MY_C) $(MY_A) as T:$(MODNAME).tmp.doc
	@@AutoDoc >$(MODNAME).doc T:$(MODNAME).tmp.doc
	@@Delete T:$(MODNAME).tmp.doc QUIET
	@@Protect $(MODNAME).doc rwd

#
# Make a complete new release (This still is in testing...)
#
release:
	lmk clean
	lmk version
	lmk doc
	lmk $(LD_FILE)
	lmk $(LD_STRIP)
	lmk internal

#
# The following rule is to bring the source down to the local directory
# To do the following you should copy this LMKfile to the local directory
# and make sure it is readable.  Then type MAKE ToLocal to have the
# code copied down...
#
tolocal:
	@@protect \#? rwed QUIET
	@@copy $(REMOTE)/\#? ""
	@@protect \#? +r QUIET
	@@protect \#?_rev\#? rwd QUIET
	@@Echo "Local is updated..."
@


1.12
log
@minor changes
@
text
@d9 1
a9 1
VERSION= 39
@


1.11
log
@New, more standard makefile for Con-Handler!
@
text
@d32 2
a33 1
CFLAGS	= -b0 -v -rr -ms -cfistqm -d1 -O -q -j*e
@


1.10
log
@removed dependencies using special lattice tricks
@
text
@d1 3
a3 3
#MYLIBS= LIB:amiga.lib LIB:debug.lib
MYLCFLAGS = -O -ms
LIBS= LIB LIB:lcr.lib
d5 3
a7 1
HDRS =	con-handler.h
d9 1
d11 100
a110 2
LC = lc
ASM = asm
d113 3
a115 21
OFILES =	cromtag.o misc.o ansi.o window.o history.o con.o 
CFILES	=	con.c ansi.c window.c misc.c history.c
AFILES	=	cromtag.asm

LFLAGS = SMALLDATA SMALLCODE BATCH MAP con-handler.map F,H,L,O,S,X

LCFLAGS = -cfimsq -rr -b0 -v -iV:include -iV:inc.lattice -d1 -dAMIGA -damiga

AFLAGS = -iINCLUDE:

.SUFFIXES:
.SUFFIXES:	.o .c .h .asm .i

con-handler.ld:	$(OFILES)
	blink FROM $(OFILES) $(LIBS) $(MYLIBS) \
	TO con-handler.ld ${LFLAGS}
	execute < <
	IF "$$username" EQ "andy";
	rcp con-handler.ld minnow=ram:con-handler.ld;
	ENDIF;
	<
d117 2
a118 1
	$(LC) $(LCFLAGS) $(MYLCFLAGS) $*.c
d120 1
a120 1
	$(ASM) $(AFLAGS) $*.asm
d122 4
a125 6
con.o:	con.c con-handler.h
misc.o:	misc.c con-handler.h
cromtag.o:	cromtag.asm con-handler_rev.i
ansi.o:	ansi.c con-handler.h
window.o:	window.c con-handler.h
history.o:	history.c con-handler.h
d127 3
d131 1
a131 1
	@@bumprev 37 con-handler_rev
d133 2
a134 8
release:
	@@copy (\#?.ld|\#?_rev.\#?) $(REMOTE)
	@@bumprev 37 con-handler_rev
	@@execute < < 
	failat 21 ;
	cd $(REMOTE) ;
	co $(CFILES) $(AFILES) $(HDRS) lmkfile ;
	<	    
d136 3
d140 10
a149 1
	@@copy (\#?.c|\#?.asm|\#?.h|\#?.i|Makefile|\#?.ld|lmkfile|\#?.rev) $(REMOTE)
d151 11
a161 2
local:
	rcp con-handler.ld minnow=ram:con-handler.ld
d163 23
a185 2
clean:
	@@delete (\#?.o|\#?.ld)
@


1.9
log
@switched to r so need to use different libs.
@
text
@d28 5
a32 3

	rcp con-handler.ld minnow=ram:con-handler.ld

d51 5
a55 1
	@@execute checkout $(REMOTE) $(CFILES) $(AFILES) $(HDRS) lmkfile
@


1.8
log
@b1 switch
@
text
@d3 1
a3 1
LIBS=LIB:lc.lib
d6 1
a6 1
REMOTE = V36:src/kickstart/con-handler
d18 1
a18 1
LCFLAGS = -cimsq -v -b1 -iV36:include -iV36:inc.lattice -d1 -dAMIGA -damiga
d26 1
a26 1
	blink FROM $(OFILES) LIB $(LIBS) $(MYLIBS) \
d44 1
a44 1
	@@bumprev 36 con-handler_rev
d48 1
a48 1
	@@bumprev 36 con-handler_rev
@


1.7
log
@
@
text
@d3 1
d12 2
a13 2
OFILES =	cromtag.o misc.o con.o ansi.o window.o
CFILES	=	con.c ansi.c window.c misc.c
d18 1
a18 1
LCFLAGS = -cimsq -v -b0 -iV36:include -iV36:inc.lattice -d1 -dAMIGA -damiga
d26 1
a26 1
	blink FROM $(OFILES) LIB LIB:lc.lib $(MYLIBS) \
d28 1
d36 2
a37 2
con.o:	con.c 
misc.o:	misc.c
d39 3
a41 3
ansi.o:	ansi.c
window.o:	window.c

@


1.6
log
@changed release case to check out files on the server.
also, moved a few routines around
@
text
@d1 2
a2 2
MYLIBS= LIB:amiga.lib LIB:debug.lib
#MYLCFLAGS = -O -ms
@


1.5
log
@turned debugging off
@
text
@d1 2
a2 1
HDRS = con_rev.i con_rev.rev handler.h
d4 1
a4 3
#MYLIBS= LIB:debug.lib

LOCAL = skipper:V/con
d11 2
a12 2
OFILES =	cromtag.o misc.o con.o 
CFILES	=	con.c misc.c
d15 4
a18 2
LFLAGS = SMALLDATA SMALLCODE BATCH
LCFLAGS = -cimsq -v -b0 -d1 -dAMIGA -damiga
d25 1
a25 1
	blink FROM $(OFILES) LIB LIB:lcnb.lib LIB:amiga.lib $(MYLIBS) \
d27 1
d30 1
a30 1
	$(LC) $(LCFLAGS) $*.c
a33 1

d37 3
d44 4
a47 2
local:
	@@copy \#?.c|\#?.asm|\#?.h|\#?.i|Makefile|\#?.ld|lmkfile|\#?.rev $(LOCAL)
d50 4
a53 1
	@@copy \#?.c|\#?.asm|\#?.h|\#?.i|Makefile|\#?.ld|lmkfile|\#?.rev $(REMOTE)
d56 1
a56 2
	@@delete \#?.o|\#?.ld

@


1.4
log
@changed name of target to con-handler.ld
@
text
@d3 1
a3 1
MYLIBS= LIB:debug.lib
@


1.3
log
@changed dependency for make version
@
text
@d23 1
a23 1
con.ld:	$(OFILES)
d25 1
a25 2
	TO con.ld ${LFLAGS}
	@@blink con.ld TO teststuff/con.ld ND
@


1.2
log
@
@
text
@d6 1
a6 1
REMOTE = V36:src/kickstart/con
d26 1
d36 1
a36 1
cromtag.o:	cromtag.asm
a39 1
	@@delete cromtag.o
d42 1
a42 1
	copy \#?.c|\#?.asm|\#?.h|\#?.i|Makefile|\#?.ld|lmkfile|\#?.rev $(LOCAL)
d45 1
a45 1
	copy \#?.c|\#?.asm|\#?.h|\#?.i|Makefile|\#?.ld|lmkfile|\#?.rev $(REMOTE)
d48 1
a48 1
	delete \#?.o|\#?.ld
@


1.1
log
@Initial revision
@
text
@d1 1
a1 3
#HDRS = blib_protos.h klib_protos.h cli_protos.h libhdr.h cli_init.h
#AHDRS = libhdr.i
#MYLIBS= LIB:debug.lib
d3 1
a3 2
LOCAL = skipper:V/dos/con
REMOTE = ghost:commodore/amiga/V36/src/kickstart/dos/con
d5 3
a10 1
LFLAGS= SMALLDATA SMALLCODE BATCH ND
d12 6
a17 2
#optimise, use pc-relative addressing
#AFLAGS = -iinclude: -cqr
d20 2
a21 3
# add -ml option to below?
#LCFLAGS = -cims -v -b0 -O -ms
LCFLAGS = -cims -v -b0
d23 3
a25 2
con.ld:	con.o misc.o cromtag.o
	blink FROM con.o+misc.o+cromtag.o LIB LIB:lcnb.lib LIB:amiga.lib $(MYLIBS) TO con.ld ${LFLAGS}
a28 1

d33 2
a34 3
con.o:		con.c $(HDRS)
misc.o:		misc.c

d37 4
d42 1
a42 1
	copy \#?.c|\#?.asm|\#?.h|\#?.i|Makefile|\#?.ld|lmkfile $(LOCAL)
d45 1
a45 1
	copy \#?.c|\#?.asm|\#?.h|\#?.i|Makefile|\#?.ld|lmkfile $(REMOTE)
d49 1
@
