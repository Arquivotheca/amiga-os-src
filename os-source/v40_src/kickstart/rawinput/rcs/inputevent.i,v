head     36.8;
branch   ;
access   ;
symbols  V40_1:36.8 V37_12:36.6 V37_11:36.6 V37_8:36.6 V37_7:36.6 V37_1:36.5 V36_58:36.5 V36_56:36.5 V36_53:36.3 V36_52:36.3 V36_51:36.3 V36_49:36.3 V36_47:36.3 V36_46:36.3 V36_45:36.2 V36_44:36.2 V36_42:36.2 V36_41:36.1 V36_40:35.3 V36_39:35.3 V36_37:35.3 V36_35:35.3 V36_33:35.3 V36_32:35.3 V36_31:35.3 V36_29:35.3 V36_28:35.2 V36_25:35.2 V36_23:35.2 V36_21:35.2 V36_14:35.2 V36_13:35.1 V36_11:35.1 L36_5:35.1;
locks    ; strict;
comment  @*   @;


36.8
date     92.04.22.14.52.08;  author darren;  state Exp;
branches ;
next     36.7;

36.7
date     92.04.14.14.14.40;  author darren;  state Exp;
branches ;
next     36.6;

36.6
date     91.01.22.13.30.42;  author darren;  state Exp;
branches ;
next     36.5;

36.5
date     90.11.05.18.25.34;  author darren;  state Exp;
branches ;
next     36.4;

36.4
date     90.06.11.13.37.27;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     90.04.13.12.46.31;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     90.04.02.12.58.38;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     90.02.17.09.57.59;  author kodiak;  state Exp;
branches ;
next     35.3;

35.3
date     89.09.05.16.10.52;  author kodiak;  state Exp;
branches ;
next     35.2;

35.2
date     89.05.01.18.48.12;  author kodiak;  state Exp;
branches ;
next     35.1;

35.1
date     88.08.02.12.33.12;  author kodiak;  state Exp;
branches ;
next     35.0;

35.0
date     87.10.26.11.33.46;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.8
log
@Change comment
@
text
@	IFND	DEVICES_INPUTEVENT_I
DEVICES_INPUTEVENT_I	SET	1
**
**	$Id: inputevent.i,v 36.7 92/04/14 14:14:40 darren Exp Locker: darren $
**
**	input event definitions	 
**
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

	IFND	 DEVICES_TIMER_I
	INCLUDE  "devices/timer.i"
	ENDC

	IFND	 UTILITY_HOOKS_I
	INCLUDE	"utility/hooks.i"
	ENDC

	IFND	 UTILITY_TAGITEM_I
	INCLUDE	"utility/tagitem.i"
	ENDC

;------ constants ----------------------------------------------------
  
;   --- InputEvent.ie_Class ---
; A NOP input event
IECLASS_NULL			EQU	$00
; A raw keycode from the keyboard device
IECLASS_RAWKEY			EQU	$01
; A raw mouse report from the game port device
IECLASS_RAWMOUSE		EQU	$02
; A private console event
IECLASS_EVENT			EQU	$03
; A Pointer Position report
IECLASS_POINTERPOS		EQU	$04
; A timer event
IECLASS_TIMER			EQU	$06
; select button pressed down over a Gadget (address in ie_EventAddress)
IECLASS_GADGETDOWN		EQU	$07
; select button released over the same Gadget (address in ie_EventAddress)
IECLASS_GADGETUP		EQU	$08
; some Requester activity has taken place.  See Codes REQCLEAR and REQSET
IECLASS_REQUESTER		EQU	$09
; this is a Menu Number transmission (Menu number is in ie_Code)
IECLASS_MENULIST		EQU	$0A
; User has selected the active Window's Close Gadget
IECLASS_CLOSEWINDOW		EQU	$0B
; this Window has a new size
IECLASS_SIZEWINDOW		EQU	$0C
; the Window pointed to by ie_EventAddress needs to be refreshed
IECLASS_REFRESHWINDOW		EQU	$0D
; new preferences are available
IECLASS_NEWPREFS		EQU	$0E
; the disk has been removed
IECLASS_DISKREMOVED		EQU	$0F
; the disk has been inserted
IECLASS_DISKINSERTED		EQU	$10
; the window is about to be been made active
IECLASS_ACTIVEWINDOW		EQU	$11
; the window is about to be made inactive
IECLASS_INACTIVEWINDOW		EQU	$12
; extended-function pointer position report (V36)
IECLASS_NEWPOINTERPOS		EQU	$13
; Help key report during Menu session (V36)
IECLASS_MENUHELP		EQU	$14
; the Window has been modified with move, size, zoom, or change (V36)
IECLASS_CHANGEWINDOW		EQU	$15

; the last class
IECLASS_MAX			EQU	$15


;   --- InputEvent.ie_SubClass ---
;  IECLASS_NEWPOINTERPOS
;	like IECLASS_POINTERPOS
IESUBCLASS_COMPATIBLE		EQU	$00
;	ie_EventAddress points to struct IEPointerPixel
IESUBCLASS_PIXEL		EQU	$01
;	ie_EventAddress points to struct IEPointerTablet
IESUBCLASS_TABLET		EQU	$02
;       ie_EventAddress points to struct IENewTablet
IESUBCLASS_NEWTABLET		EQU	$03

; pointed to by ie_EventAddress for IECLASS_NEWPOINTERPOS,
; and IESUBCLASS_PIXEL.
;
; You specify a screen and pixel coordinates in that screen
; at which you'd like the mouse to be positioned.
; Intuition will try to oblige, but there will be restrictions
; to positioning the pointer over offscreen pixels.
;
; IEQUALIFIER_RELATIVEMOUSE is supported for IESUBCLASS_PIXEL.

 STRUCTURE	IEPointerPixel,0
    APTR    iepp_Screen		; pointer to an open screen
    LABEL   iepp_Position	; pixel coordinates in iepp_Screen
    WORD    iepp_PositionX
    WORD    iepp_PositionY
    LABEL   IEPointerPixel_SIZEOF

; pointed to by ie_EventAddress for IECLASS_NEWPOINTERPOS,
; and IESUBCLASS_TABLET.
;
; You specify a range of values and a value within the range 
; independently for each of X and Y (the minimum value of
; the ranges is always normalized to 0).
;
; Intuition will position the mouse proportionally within its
; natural mouse position rectangle limits.
;
; IEQUALIFIER_RELATIVEMOUSE is not supported for IESUBCLASS_TABLET.

 STRUCTURE	IEPointerTablet,0
    LABEL   iept_Range		; 0 is min, these are max
    UWORD   iept_RangeX
    UWORD   iept_RangeY
    LABEL   iept_Value		; between 0 and iept_Range
    UWORD   iept_ValueX
    UWORD   iept_ValueY
    WORD    iept_Pressure	; -128 to 127 (unused, set to 0)
    LABEL   IEPointerTablet_SIZEOF


; The ie_EventAddress of an IECLASS_NEWPOINTERPOS event of subclass
; IESUBCLASS_NEWTABLET points at an IENewTablet structure.
;
;
; IEQUALIFIER_RELATIVEMOUSE is not supported for IESUBCLASS_NEWTABLET.
;
; See inputevent.h for comments

 STRUCTURE	IENewTablet,0
	APTR	ient_CallBack
	UWORD	ient_ScaledX
	UWORD	ient_ScaledY
	UWORD	ient_ScaledXFraction
	UWORD	ient_ScaledYFraction
	ULONG	ient_TabletX
	ULONG	ient_TabletY
	ULONG	ient_RangeX
	ULONG	ient_RangeY
	APTR	ient_TagList
	LABEL	IENewTablet_SIZEOF


;   --- InputEvent.ie_Code --- 
;   IECLASS_RAWKEY
IECODE_UP_PREFIX		EQU	$80
IECODEB_UP_PREFIX		EQU	7
IECODE_KEY_CODE_FIRST		EQU	$00
IECODE_KEY_CODE_LAST		EQU	$77
IECODE_COMM_CODE_FIRST		EQU	$78
IECODE_COMM_CODE_LAST		EQU	$7F
  
;   IECLASS_ANSI
IECODE_C0_FIRST			EQU	$00
IECODE_C0_LAST			EQU	$1F
IECODE_ASCII_FIRST		EQU	$20
IECODE_ASCII_LAST		EQU	$7E
IECODE_ASCII_DEL		EQU	$7F
IECODE_C1_FIRST			EQU	$80
IECODE_C1_LAST			EQU	$9F
IECODE_LATIN1_FIRST		EQU	$A0
IECODE_LATIN1_LAST		EQU	$FF
  
;   IECLASS_RAWMOUSE
IECODE_LBUTTON			EQU	$68	; also uses IECODE_UP_PREFIX
IECODE_RBUTTON			EQU	$69	;
IECODE_MBUTTON			EQU	$6A	;
IECODE_NOBUTTON			EQU	$FF
  
;   IECLASS_EVENT (V36)
IECODE_NEWACTIVE		EQU	$01	; new active input window
IECODE_NEWSIZE			EQU	$02	; resize of specified window
IECODE_REFRESH			EQU	$03	; refresh of specified window

;   IECLASS_REQUESTER Codes
;	broadcast when the first Requester (not subsequent ones) opens in
;	the Window
IECODE_REQSET			EQU	$01
;	broadcast when the last Requester clears out of the Window
IECODE_REQCLEAR			EQU	$00


*   --- InputEvent.ie_Qualifier ---
IEQUALIFIER_LSHIFT		EQU	$0001
IEQUALIFIER_RSHIFT		EQU	$0002
IEQUALIFIER_CAPSLOCK		EQU	$0004
IEQUALIFIER_CONTROL		EQU	$0008
IEQUALIFIER_LALT		EQU	$0010
IEQUALIFIER_RALT		EQU	$0020
IEQUALIFIER_LCOMMAND		EQU	$0040
IEQUALIFIER_RCOMMAND		EQU	$0080
IEQUALIFIER_NUMERICPAD		EQU	$0100
IEQUALIFIER_REPEAT		EQU	$0200
IEQUALIFIER_INTERRUPT		EQU	$0400
IEQUALIFIER_MULTIBROADCAST	EQU	$0800
IEQUALIFIER_MIDBUTTON		EQU	$1000
IEQUALIFIER_RBUTTON		EQU	$2000
IEQUALIFIER_LEFTBUTTON		EQU	$4000
IEQUALIFIER_RELATIVEMOUSE	EQU	$8000

IEQUALIFIERB_LSHIFT		EQU	0
IEQUALIFIERB_RSHIFT		EQU	1
IEQUALIFIERB_CAPSLOCK		EQU	2
IEQUALIFIERB_CONTROL		EQU	3
IEQUALIFIERB_LALT		EQU	4
IEQUALIFIERB_RALT		EQU	5
IEQUALIFIERB_LCOMMAND		EQU	6
IEQUALIFIERB_RCOMMAND		EQU	7
IEQUALIFIERB_NUMERICPAD		EQU	8
IEQUALIFIERB_REPEAT		EQU	9
IEQUALIFIERB_INTERRUPT		EQU	10
IEQUALIFIERB_MULTIBROADCAST	EQU	11
IEQUALIFIERB_MIDBUTTON		EQU	12
IEQUALIFIERB_RBUTTON		EQU	13
IEQUALIFIERB_LEFTBUTTON		EQU	14
IEQUALIFIERB_RELATIVEMOUSE	EQU	15


;------ InputEvent ---------------------------------------------------
  
 STRUCTURE	InputEvent,0
    APTR    ie_NextEvent	; the chronologically next event
    UBYTE   ie_Class		; the input event class 
    UBYTE   ie_SubClass		; optional subclass of the class
    UWORD   ie_Code		; the input event code
    UWORD   ie_Qualifier	; qualifiers in effect for the event
    LABEL   ie_EventAddress	; the event address
    LABEL   ie_X		; the pointer position for the event
    UBYTE   ie_Prev1DownCode	; previous down keys for dead key translation
    UBYTE   ie_Prev1DownQual
    LABEL   ie_Y
    UBYTE   ie_Prev2DownCode
    UBYTE   ie_Prev2DownQual
    STRUCT  ie_TimeStamp,TV_SIZE ; the system tick at the event
    LABEL   ie_SIZEOF

	ENDC	; DEVICES_INPUTEVENT_I
@


36.7
log
@New tablet driver structure
@
text
@d4 1
a4 1
**	$Id: inputevent.i,v 36.6 91/01/22 13:30:42 darren Exp Locker: darren $
d82 1
a82 1
;       ie_EventAddress points to struct IEPointerNewTablet
@


36.6
log
@Change reference of IECLASS_RELATIVEMOUSE to IEQUALIFIER_RELATIVEMOUSE.
@
text
@d4 1
a4 1
**	$Id: inputevent.i,v 36.5 90/11/05 18:25:34 darren Exp Locker: darren $
d16 8
d82 2
d123 22
@


36.5
log
@*** empty log message ***
@
text
@d4 1
a4 1
**	$Id: inputevent.i,v 36.4 90/06/11 13:37:27 kodiak Exp Locker: darren $
d83 1
a83 1
; IECLASS_RELATIVEMOUSE is supported for IESUBCLASS_PIXEL.
d102 1
a102 1
; IECLASS_RELATIVEMOUSE is not supported for IESUBCLASS_TABLET.
@


36.4
log
@add two new classes MENUHELP and CHANGEWINDOW
@
text
@d4 1
a4 1
**	$Id: inputevent.i,v 36.3 90/04/13 12:46:31 kodiak Exp Locker: kodiak $
@


36.3
log
@use Id instead of Header for 4.x rcs
@
text
@d4 1
a4 1
**	$Id$
d57 4
d63 2
a64 1
IECLASS_MAX			EQU	$13
@


36.2
log
@for rcs 4.x header change
@
text
@d4 1
a4 1
**	$Header: /usr2/kodiak/src/KS/rawinput/RCS/inputevent.i,v 36.1 90/02/17 09:57:59 kodiak Exp Locker: kodiak $
@


36.1
log
@first cut at IECLASS_NEWPOINTERPOS
@
text
@d4 1
a4 1
**	$Header: inputevent.i,v 35.3 89/09/05 16:10:52 kodiak Exp $
@


35.3
log
@added IECODE_NEWSIZE & IECODE_REFRESH
reformatted
@
text
@d4 1
a4 1
**	$Header$
d55 2
d59 1
a59 1
IECLASS_MAX			EQU	$12
d61 49
d136 1
a136 1
;   IECLASS_EVENT
d142 2
a143 1
; broadcast when the first Requester (not subsequent ones) opens in the Window
d145 1
a145 1
; broadcast when the last Requester clears out of the Window
@


35.2
log
@define ie_Prev.Down Code & Qual
@
text
@d4 1
a4 2
**	$Filename: devices/inputevent.i $
**	$Release: 1.3 $
d12 3
a14 3
   IFND	 DEVICES_TIMER_I
   INCLUDE  "devices/timer.i"
   ENDC
d16 1
a16 1
*------ constants ----------------------------------------------------
d18 37
a54 37
*   --- InputEvent.ie_Class ---
* A NOP input event
IECLASS_NULL		EQU   $00
* A raw keycode from the keyboard device
IECLASS_RAWKEY		EQU   $01
* A raw mouse report from the game port device
IECLASS_RAWMOUSE	EQU   $02
* A private console event
IECLASS_EVENT		EQU   $03
* A Pointer Position report
IECLASS_POINTERPOS	EQU   $04
* A timer event
IECLASS_TIMER		EQU   $06
* select button pressed down over a Gadget (address in ie_EventAddress)
IECLASS_GADGETDOWN	EQU $07
* select button released over the same Gadget (address in ie_EventAddress)
IECLASS_GADGETUP	EQU   $08
* some Requester activity has taken place.  See Codes REQCLEAR and REQSET
IECLASS_REQUESTER	EQU   $09
* this is a Menu Number transmission (Menu number is in ie_Code)
IECLASS_MENULIST	EQU   $0A
* User has selected the active Window's Close Gadget
IECLASS_CLOSEWINDOW	EQU   $0B
* this Window has a new size
IECLASS_SIZEWINDOW	EQU   $0C
* the Window pointed to by ie_EventAddress needs to be refreshed
IECLASS_REFRESHWINDOW	EQU   $0D
* new preferences are available
IECLASS_NEWPREFS	EQU   $0E
* the disk has been removed
IECLASS_DISKREMOVED	EQU   $0F
* the disk has been inserted
IECLASS_DISKINSERTED	EQU   $10
* the window is about to be been made active
IECLASS_ACTIVEWINDOW	EQU   $11
* the window is about to be made inactive
IECLASS_INACTIVEWINDOW	EQU   $12
d56 2
a57 2
* the last class
IECLASS_MAX		EQU   $12
d59 8
a66 8
*   --- InputEvent.ie_Code --- 
*  IECLASS_RAWKEY
IECODE_UP_PREFIX	EQU   $80
IECODEB_UP_PREFIX	EQU   7
IECODE_KEY_CODE_FIRST	EQU   $00
IECODE_KEY_CODE_LAST	EQU   $77
IECODE_COMM_CODE_FIRST	EQU   $78
IECODE_COMM_CODE_LAST	EQU   $7F
d68 10
a77 10
*  IECLASS_ANSI
IECODE_C0_FIRST		EQU   $00
IECODE_C0_LAST		EQU   $1F
IECODE_ASCII_FIRST	EQU   $20
IECODE_ASCII_LAST	EQU   $7E
IECODE_ASCII_DEL	EQU   $7F
IECODE_C1_FIRST		EQU   $80
IECODE_C1_LAST		EQU   $9F
IECODE_LATIN1_FIRST	EQU   $A0
IECODE_LATIN1_LAST	EQU   $FF
d79 5
a83 5
*  IECLASS_RAWMOUSE
IECODE_LBUTTON		EQU   $68  ; also uses IECODE_UP_PREFIX
IECODE_RBUTTON		EQU   $69  ;
IECODE_MBUTTON		EQU   $6A  ;
IECODE_NOBUTTON		EQU   $FF
d85 4
a88 2
*  IECLASS_EVENT
IECODE_NEWACTIVE	EQU   $01  ; active input window changed
d90 5
a94 6
*  IECLASS_REQUESTER Codes
* REQSET is broadcast when the first Requester (not subsequent ones) opens
* in the Window
IECODE_REQSET		EQU   $01
* REQCLEAR is broadcast when the last Requester clears out of the Window
IECODE_REQCLEAR		EQU   $00
d96 1
a96 1
  
d98 36
a133 34
IEQUALIFIER_LSHIFT	EQU   $0001
IEQUALIFIERB_LSHIFT	EQU   0
IEQUALIFIER_RSHIFT	EQU   $0002
IEQUALIFIERB_RSHIFT	EQU   1
IEQUALIFIER_CAPSLOCK	EQU   $0004
IEQUALIFIERB_CAPSLOCK	EQU   2
IEQUALIFIER_CONTROL	EQU   $0008
IEQUALIFIERB_CONTROL	EQU   3
IEQUALIFIER_LALT	EQU   $0010
IEQUALIFIERB_LALT	EQU   4
IEQUALIFIER_RALT	EQU   $0020
IEQUALIFIERB_RALT	EQU   5
IEQUALIFIER_LCOMMAND	EQU   $0040
IEQUALIFIERB_LCOMMAND	EQU   6
IEQUALIFIER_RCOMMAND	EQU   $0080
IEQUALIFIERB_RCOMMAND	EQU   7
IEQUALIFIER_NUMERICPAD	EQU   $0100
IEQUALIFIERB_NUMERICPAD EQU   8
IEQUALIFIER_REPEAT	EQU   $0200
IEQUALIFIERB_REPEAT	EQU   9
IEQUALIFIER_INTERRUPT	EQU   $0400
IEQUALIFIERB_INTERRUPT	EQU   10
IEQUALIFIER_MULTIBROADCAST    EQU   $0800
IEQUALIFIERB_MULTIBROADCAST   EQU   11
IEQUALIFIER_MIDBUTTON	EQU   $1000
IEQUALIFIERB_MIDBUTTON	EQU   12
IEQUALIFIER_RBUTTON	EQU   $2000
IEQUALIFIERB_RBUTTON	EQU   13
IEQUALIFIER_LEFTBUTTON	EQU   $4000
IEQUALIFIERB_LEFTBUTTON EQU   14
IEQUALIFIER_RELATIVEMOUSE     EQU   $8000
IEQUALIFIERB_RELATIVEMOUSE    EQU   15
  
*------ InputEvent ---------------------------------------------------
@


35.1
log
@updated to standard 1.3 format
@
text
@d133 15
a147 11
 STRUCTURE  InputEvent,0
   APTR	 ie_NextEvent	      ; the chronologically next event
   UBYTE   ie_Class	      ; the input event class 
   UBYTE   ie_SubClass	      ; optional subclass of the class
   UWORD   ie_Code	      ; the input event code
   UWORD   ie_Qualifier	      ; qualifiers in effect for the event
   LABEL ie_EventAddress      ; a pointer parameter for an event
   WORD	   ie_X		      ; the pointer position for the event,
   WORD	   ie_Y		      ;	  usually in canvas relative coords 
   STRUCT  ie_TimeStamp,TV_SIZE	 ; the system tick at the event
   LABEL   ie_SIZEOF
@


35.0
log
@initial from V34
@
text
@d1 11
a11 11
   IFND  DEVICES_INPUTEVENT_I
DEVICES_INPUTEVENT_I SET   1
********************************************************************
*               Commodore-Amiga, Inc.                              *
*               inputevent.i                                       *
********************************************************************
********************************************************************
*
*  input event definitions
*
********************************************************************
d13 1
a13 1
   IFND  DEVICES_TIMER_I
d21 1
a21 1
IECLASS_NULL            EQU   $00
d23 1
a23 1
IECLASS_RAWKEY          EQU   $01
d25 1
a25 1
IECLASS_RAWMOUSE        EQU   $02
d27 1
a27 1
IECLASS_EVENT           EQU   $03
d29 1
a29 1
IECLASS_POINTERPOS      EQU   $04
d31 1
a31 1
IECLASS_TIMER           EQU   $06
d33 1
a33 1
IECLASS_GADGETDOWN      EQU $07
d35 1
a35 1
IECLASS_GADGETUP        EQU   $08
d37 1
a37 1
IECLASS_REQUESTER       EQU   $09
d39 1
a39 1
IECLASS_MENULIST        EQU   $0A
d41 1
a41 1
IECLASS_CLOSEWINDOW     EQU   $0B
d43 1
a43 1
IECLASS_SIZEWINDOW      EQU   $0C
d45 1
a45 1
IECLASS_REFRESHWINDOW   EQU   $0D
d47 1
a47 1
IECLASS_NEWPREFS        EQU   $0E
d49 1
a49 1
IECLASS_DISKREMOVED     EQU   $0F
d51 1
a51 1
IECLASS_DISKINSERTED    EQU   $10
d53 1
a53 1
IECLASS_ACTIVEWINDOW    EQU   $11
d55 1
a55 1
IECLASS_INACTIVEWINDOW  EQU   $12
d58 1
a58 1
IECLASS_MAX             EQU   $12
d62 6
a67 6
IECODE_UP_PREFIX        EQU   $80
IECODEB_UP_PREFIX       EQU   7
IECODE_KEY_CODE_FIRST   EQU   $00
IECODE_KEY_CODE_LAST    EQU   $77
IECODE_COMM_CODE_FIRST  EQU   $78
IECODE_COMM_CODE_LAST   EQU   $7F
d70 9
a78 9
IECODE_C0_FIRST         EQU   $00
IECODE_C0_LAST          EQU   $1F
IECODE_ASCII_FIRST      EQU   $20
IECODE_ASCII_LAST       EQU   $7E
IECODE_ASCII_DEL        EQU   $7F
IECODE_C1_FIRST         EQU   $80
IECODE_C1_LAST          EQU   $9F
IECODE_LATIN1_FIRST     EQU   $A0
IECODE_LATIN1_LAST      EQU   $FF
d81 4
a84 4
IECODE_LBUTTON          EQU   $68  ; also uses IECODE_UP_PREFIX
IECODE_RBUTTON          EQU   $69  ;
IECODE_MBUTTON          EQU   $6A  ;
IECODE_NOBUTTON         EQU   $FF
d87 1
a87 1
IECODE_NEWACTIVE        EQU   $01  ; active input window changed
d92 1
a92 1
IECODE_REQSET           EQU   $01
d94 1
a94 1
IECODE_REQCLEAR         EQU   $00
d98 17
a114 17
IEQUALIFIER_LSHIFT      EQU   $0001
IEQUALIFIERB_LSHIFT     EQU   0
IEQUALIFIER_RSHIFT      EQU   $0002
IEQUALIFIERB_RSHIFT     EQU   1
IEQUALIFIER_CAPSLOCK    EQU   $0004
IEQUALIFIERB_CAPSLOCK   EQU   2
IEQUALIFIER_CONTROL     EQU   $0008
IEQUALIFIERB_CONTROL    EQU   3
IEQUALIFIER_LALT        EQU   $0010
IEQUALIFIERB_LALT       EQU   4
IEQUALIFIER_RALT        EQU   $0020
IEQUALIFIERB_RALT       EQU   5
IEQUALIFIER_LCOMMAND    EQU   $0040
IEQUALIFIERB_LCOMMAND   EQU   6
IEQUALIFIER_RCOMMAND    EQU   $0080
IEQUALIFIERB_RCOMMAND   EQU   7
IEQUALIFIER_NUMERICPAD  EQU   $0100
d116 4
a119 4
IEQUALIFIER_REPEAT      EQU   $0200
IEQUALIFIERB_REPEAT     EQU   9
IEQUALIFIER_INTERRUPT   EQU   $0400
IEQUALIFIERB_INTERRUPT  EQU   10
d122 5
a126 5
IEQUALIFIER_MIDBUTTON   EQU   $1000
IEQUALIFIERB_MIDBUTTON  EQU   12
IEQUALIFIER_RBUTTON     EQU   $2000
IEQUALIFIERB_RBUTTON    EQU   13
IEQUALIFIER_LEFTBUTTON  EQU   $4000
d134 5
a138 5
   APTR  ie_NextEvent         ; the chronologically next event
   UBYTE   ie_Class           ; the input event class 
   UBYTE   ie_SubClass        ; optional subclass of the class
   UWORD   ie_Code            ; the input event code
   UWORD   ie_Qualifier       ; qualifiers in effect for the event
d140 3
a142 3
   WORD    ie_X               ; the pointer position for the event,
   WORD    ie_Y               ;   usually in canvas relative coords 
   STRUCT  ie_TimeStamp,TV_SIZE  ; the system tick at the event
d145 1
a145 1
   ENDC
@
