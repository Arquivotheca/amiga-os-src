head     38.16;
branch   ;
access   ;
symbols  V40_1:38.16 V39_62:38.15 V39_61:38.15 V39_60:38.15 V39_58:38.15 V39_56:38.15 V39_55:38.15 V39_54:38.14 V39_53:38.14 V39_52:38.13 V39_51:38.12 V39_50:38.11 V39_49:38.11 V39_48:38.11 V39_46:38.11 V39_45:38.11 V39_44:38.10 V39_42:38.10 V39_41:38.9 V39_40:38.9 V39_39:38.9 V39_38:38.9 V39_37:38.9 V39_36:38.9 V39_35:38.8 V39_34:38.8 V39_33:38.8 V39_32:38.8 V39_30:38.8 V39_28:38.6 V39_27:38.6 V39_26:38.6 V39_25:38.6 V39_24:38.6 V39_23:38.6 V39_22:38.6 V39_21:38.5 V39_20:38.4 V39_18:38.4 V39_16:38.4 V39_15:38.4 V39_14:38.4 V39_12:38.4 V39_10:38.4 V38_7:38.4 V38_6:38.3 First_Native_Build:38.2;
locks    ; strict;
comment  @@;


38.16
date     93.02.15.16.14.04;  author mks;  state Exp;
branches ;
next     38.15;

38.15
date     92.04.13.17.14.32;  author mks;  state Exp;
branches ;
next     38.14;

38.14
date     92.04.07.17.09.31;  author mks;  state Exp;
branches ;
next     38.13;

38.13
date     92.03.27.09.11.38;  author mks;  state Exp;
branches ;
next     38.12;

38.12
date     92.03.26.18.03.18;  author mks;  state Exp;
branches ;
next     38.11;

38.11
date     92.03.03.16.05.09;  author mks;  state Exp;
branches ;
next     38.10;

38.10
date     92.02.12.13.56.13;  author mks;  state Exp;
branches ;
next     38.9;

38.9
date     91.12.31.19.13.46;  author mks;  state Exp;
branches ;
next     38.8;

38.8
date     91.11.18.13.29.53;  author mks;  state Exp;
branches ;
next     38.7;

38.7
date     91.11.15.20.19.06;  author mks;  state Exp;
branches ;
next     38.6;

38.6
date     91.11.04.11.58.49;  author mks;  state Exp;
branches ;
next     38.5;

38.5
date     91.11.01.19.56.00;  author mks;  state Exp;
branches ;
next     38.4;

38.4
date     91.08.28.18.46.30;  author mks;  state Exp;
branches ;
next     38.3;

38.3
date     91.08.05.18.48.26;  author mks;  state Exp;
branches ;
next     38.2;

38.2
date     91.08.02.10.18.00;  author mks;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.25.09.55.09;  author bart;  state Exp;
branches ;
next     ;


desc
@@


38.16
log
@Removed the alerts from Layers...
@
text
@*******************************************************************************
*
*	$Id: layerface.asm,v 38.15 92/04/13 17:14:32 mks Exp Locker: mks $
*
*******************************************************************************
* layer asm to c interface file

	include 'exec/types.i'
	include 'exec/nodes.i'
	include 'exec/lists.i'
	include 'exec/libraries.i'
	include 'exec/initializers.i'
	include	'exec/resident.i'
	include 'exec/alerts.i'
	include	'exec/execbase.i'

	include	'internal/librarytags.i'

	include	'graphics/gfxbase.i'

	include	"layers_rev.i"

	include "layersbase.i"
*
*******************************************************************************
*
* ROMTAG is now in assembly...
*
	xref	EndCode
initDDescrip:					;STRUCTURE RT,0
	dc.w	RTC_MATCHWORD			; UWORD RT_MATCHWORD
	dc.l	initDDescrip			; APTR  RT_MATCHTAG
	dc.l	EndCode				; APTR  RT_ENDSKIP
	dc.b	RTW_COLDSTART!RTF_AUTOINIT	; UBYTE RT_FLAGS
	dc.b	VERSION				; UBYTE RT_VERSION
	dc.b	NT_LIBRARY			; UBYTE RT_TYPE
	dc.b	64				; BYTE  RT_PRI
	dc.l	subsysName			; APTR  RT_NAME
	dc.l	VERSTRING			; APTR  RT_IDSTRING
	dc.l	Init				; APTR  RT_INIT

Init:
	dc.l	lb_SIZEOF
	dc.l	funcTable
	dc.l	dataTable
	dc.l	initRoutine

dataTable:
	INITBYTE	LN_TYPE,NT_LIBRARY
	INITLONG	LN_NAME,subsysName
	INITBYTE	LIB_FLAGS,LIBF_SUMUSED!LIBF_CHANGED
	INITWORD	LIB_VERSION,VERNUM
	INITWORD	LIB_REVISION,REVNUM
	INITLONG	LIB_IDSTRING,VERSTRING
	dc.l		0
*
*******************************************************************************
*
	xref	LockLayer
	xref	UnlockLayer
	xref	LockLayerInfo
	xref	UnlockLayerInfo
	xref	WhichLayer
	xref	SortLayerCR
	xref	DoHookClipRects
*
* Build the function table (short size)
*
V_DEF		MACRO
		dc.W	\1+(*-funcTable)
		ENDM

funcTable:
	dc.w	-1		* means interpret as relative offsets
	V_DEF	OpenLayerLib
	V_DEF	CloseLayerLib
	V_DEF	ExpungeLayerLib
	V_DEF	ExtFuncLayerLib
	V_DEF	InitLayers
	V_DEF	CreateUpfrontLayer
	V_DEF	CreateBehindLayer
	V_DEF	UpfrontLayer
	V_DEF	BehindLayer
	V_DEF	MoveLayer
	V_DEF	SizeLayer
	V_DEF	ScrollLayer
	V_DEF	BeginUpdate
	V_DEF	EndUpdate
	V_DEF	DeleteLayer
	V_DEF	LockLayer
	V_DEF	UnlockLayer
	V_DEF	LockLayers
	V_DEF	UnlockLayers
	V_DEF	LockLayerInfo
	V_DEF	SwapBitsRastPortClipRect
	V_DEF	WhichLayer
	V_DEF	UnlockLayerInfo
	V_DEF	NewLayerInfo
	V_DEF	DisposeLayerInfo
	V_DEF	FattenLayerInfo
	V_DEF	ThinLayerInfo
	V_DEF	MoveLayerInFrontOf
	V_DEF	InstallClipRegion
	V_DEF	MoveSizeLayer
	V_DEF	CreateUpfrontHookLayer
	V_DEF	CreateBehindHookLayer
	V_DEF	InstallLayerHook
	V_DEF	InstallLayerInfoHook
	V_DEF	SortLayerCR
	V_DEF	DoHookClipRects
	dc.w	-1
*
*******************************************************************************
*
* The required library calls.  They don't do much...
*
OpenLayerLib:	move.l	a6,d0		; Return the library base
		rts
CloseLayerLib:
ExpungeLayerLib:
ExtFuncLayerLib:
		moveq.l	#0,d0		; Return NULL
		rts
*
*******************************************************************************
*
* The library init routine.
*
		xref	_LVOAlert
initRoutine:	move.l	a2,-(sp)		; We will need this...
		move.l	d0,a2			; Set up layersbase in a2...
		move.w	#1,LIB_OPENCNT(a2)	; We are always open...
		move.l	a6,lb_ExecBase(a2)	; Store ExecBase
		lea	gfxName(pc),a1		; Get name of graphics...
		lea	LibList(a6),a0		; Library list
		CALLSYS	FindName		; Fine it...
		move.l	d0,lb_GfxBase(a2)	; Store the vector...
		beq.s	bad_init		; We did not get it???!!!
		move.l	d0,a0			; Get graphicsbase...
		move.l	a2,gb_LayersBase(a0)	; Store my base into GfxBase...

		moveq.l	#OLTAG_UTILITY,d0	; Get tag...
		CALLSYS	TaggedOpenLibrary	; Open it up...
		move.l	d0,lb_UtilityBase(a2)	; Store the vector...
		beq.s	bad_util		; We did not get it????!!!!
;
; All initialized!
;
end_init:	move.l	a2,d0			; Return library base
		move.l	(sp)+,a2		; restore a2
		rts
*
* Clear the library base and return.  We are dead at this point!
*
bad_util:	;ALERT	AN_LayersLib!AG_OpenLib!AO_UtilityLib
		;bra.s	bad_init
bad_gfx:	;ALERT	AN_LayersLib!AG_OpenLib!AO_GraphicsLib
bad_init:	sub.l	a2,a2			; Clear a2
		bra.s	end_init
*
*******************************************************************************
*
* __CXD33 replacement that uses utility.library
*
;		XDEF	__CXD33			; Signed divide
;__CXD33:	move.l	a6,-(sp)		; Save your base pointer
;		move.l	lb_UtilityBase(a6),a6	; Get utility base pointer
;		CALLSYS	SDivMod32		; Do the divide
;		bra.s	RestoreReturn		; Restore a6 and return...
*
*******************************************************************************
*
* __CXD22 replacement that uses utility.library
*
;		XDEF	__CXD22			; Unsigned divide
;__CXD22:	move.l	a6,-(sp)		; Save your base pointer
;		move.l	lb_UtilityBase(a6),a6	; Get utility base pointer
;		CALLSYS	UDivMod32		; Do the divide
;		bra.s	RestoreReturn		; Restore a6 and return...
*
*******************************************************************************
*
* __CXM33 replacement that uses utility.library
*
		XDEF	__CXM33			; Signed multiply
__CXM33:	move.l	a6,-(sp)		; Save your base pointer
		move.l	lb_UtilityBase(a6),a6	; Get utility base pointer
		CALLSYS	SMult32			; Do the multiply
RestoreReturn:	move.l	(sp)+,a6		; Restore LayersBase
		rts
*
*******************************************************************************
*
* __CXM22 replacement that uses utility.library
*
;		XDEF	__CXM22			; Unsigned multiply
;__CXM22:	move.l	a6,-(sp)		; Save your base pointer
;		move.l	lb_UtilityBase(a6),a6	; Get utility base pointer
;		CALLSYS	UMult32			; Do the multply
;		bra.s	RestoreReturn		; Restore a6 and return...
*
*******************************************************************************
*
		xdef	_NewList
_NewList:	NEWLIST	a1
		rts
*
*******************************************************************************
*
*
*******************************************************************************
*
			xref	_createbehindlayer
CreateBehindHookLayer:
	move.l	a3,-(sp)		; client-specified hook
cb_no:	move.l	a2,-(sp)		; bm2
	move.l	d4,-(sp)		; flags
	movem.w	d0/d1/d2/d3,-(sp)	; struct Rectangle
	movem.l	a0/a1,-(sp)
	bsr	_createbehindlayer
	lea	7*4(sp),sp
	rts
CreateBehindLayer:
	move.l	#0,-(sp)		; default hook
	bra.s	cb_no
*
*******************************************************************************
*
			xref	_createupfrontlayer
CreateUpfrontHookLayer:
	move.l	a3,-(sp)		; client-specified hook
cu_no:	move.l	a2,-(sp)		; bm2
	move.l	d4,-(sp)		; flags
	movem.w	d0/d1/d2/d3,-(sp)	; struct Rectangle
	movem.l	a0/a1,-(sp)
	bsr	_createupfrontlayer
	lea	7*4(sp),sp
	rts
CreateUpfrontLayer:
	move.l	#0,-(sp)		; default hook
	bra.s	cu_no
*
*******************************************************************************
*
		xref	_initlayers
InitLayers:	equ	_initlayers
*
*******************************************************************************
*
		xref	_NewLayerInfo
NewLayerInfo:	equ	_NewLayerInfo
*
*******************************************************************************
*
		xref	_upfront
UpfrontLayer:	equ	_upfront
*
*******************************************************************************
*
		xref	_behind
BehindLayer:	equ	_behind
*
*******************************************************************************
*
MoveLayer:
	move.l	a1,a0		; Move layer pointer to a0
	clr.l	-(sp)		; dx/dy
	move.w	d1,-(sp)	; y
	move.w	d0,-(sp)	; x
	bra.s	do_movesize
*
*******************************************************************************
*
SizeLayer:
	move.l	a1,a0		; Move layer pointer to a0
	move.w	d1,-(sp)	; dy
	move.w	d0,-(sp)	; dx
	clr.l	-(sp)		; x/y
	bra.s	do_movesize
*
*******************************************************************************
*
* We have this here so we can pass in the structure pointer...
*
MoveSizeLayer:	xref	_movesizelayer
	movem.w	d0/d1/d2/d3,-(sp)	; struct Rectangle
do_movesize:
	move.l	sp,a1
	bsr	_movesizelayer
	addq.l	#8,sp			; adjust stack...
	rts
*
*******************************************************************************
*
		xref	_scrolllayer
ScrollLayer:	equ	_scrolllayer
*
*******************************************************************************
*
		xref	_beginupdate
BeginUpdate:	equ	_beginupdate
*
*******************************************************************************
*
		xref	_endupdate
EndUpdate:	equ	_endupdate
*
*******************************************************************************
*
			xref	_installclipregion
InstallClipRegion:	equ	_installclipregion
*
*******************************************************************************
*
		xref	_deletelayer
DeleteLayer:	equ	_deletelayer
*
*******************************************************************************
*
		xref	_unlocklayers
UnlockLayers:	equ	_unlocklayers
*
*******************************************************************************
*
		xref	_locklayers
LockLayers:	equ	_locklayers
*
*******************************************************************************
*
				xref	_screenswap
SwapBitsRastPortClipRect:	equ	_screenswap
*
*******************************************************************************
*
			xref	_disposelayerinfo
DisposeLayerInfo:	equ	_disposelayerinfo
*
*******************************************************************************
*
			xref	_extern_fattenlayerinfo
FattenLayerInfo:	equ	_extern_fattenlayerinfo
*
*******************************************************************************
*
		xref	_extern_thinlayerinfo
ThinLayerInfo:	equ	_extern_thinlayerinfo
*
*******************************************************************************
*
			xref	_extern_movelayerinfrontof
MoveLayerInFrontOf:	equ	_extern_movelayerinfrontof
*
*******************************************************************************
*
			xref	_install_backfill_hook
InstallLayerHook:	equ	_install_backfill_hook
*
*******************************************************************************
*
			xref	_InstallLayerInfoHook
InstallLayerInfoHook:	equ	_InstallLayerInfoHook
*
*******************************************************************************
*
* The library name and version strings...
*
subsysName:	dc.b	'layers.library',0
VERSTRING:	VSTRING
gfxName:	dc.b	'graphics.library',0
VERNUM:		EQU	VERSION
REVNUM:		EQU	REVISION
*
*******************************************************************************
	end

@


38.15
log
@Now uses TaggedOpenLibrary()
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.14 92/04/07 17:09:31 mks Exp Locker: mks $
d155 3
a157 3
bad_util:	ALERT	AN_LayersLib!AG_OpenLib!AO_UtilityLib
		bra.s	bad_init
bad_gfx:	ALERT	AN_LayersLib!AG_OpenLib!AO_GraphicsLib
@


38.14
log
@Changed layers to init right after graphics
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.13 92/03/27 09:11:38 mks Exp Locker: mks $
d17 2
d141 3
a143 3
		lea	utilName(pc),a1		; Get name of utility
		moveq.l	#37,d0			; V37 minimum
		CALLSYS	OpenLibrary		; Open it up...
a369 1
utilName:	dc.b	'utility.library',0
@


38.13
log
@Layers now does not OpenLibrary() graphics but just FindNames() it.
Layers also now pokes LayersBase into GfxBase
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.12 92/03/26 18:03:18 mks Exp Locker: mks $
d35 1
a35 1
	dc.b	31				; BYTE  RT_PRI
@


38.12
log
@Changed to use CALLSYS macro...
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.11 92/03/03 16:05:09 mks Exp Locker: mks $
d15 1
d133 2
a134 2
		moveq.l	#39,d0			; V39 minimum...
		CALLSYS	OpenLibrary		; Open it up...
d137 2
@


38.11
log
@Added the DoHookClipRects function
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.10 92/02/12 13:56:13 mks Exp Locker: mks $
a125 1
		xref	_LVOOpenLibrary
d133 1
a133 1
		jsr	_LVOOpenLibrary(a6)	; Open it up...
d138 1
a138 1
		jsr	_LVOOpenLibrary(a6)	; Open it up...
a159 1
;		XREF	_LVOSDivMod32
d163 1
a163 1
;		jsr	_LVOSDivMod32(a6)	; Do the divide
a169 1
;		XREF	_LVOUDivMod32
d173 1
a173 1
;		jsr	_LVOUDivMod32(a6)	; Do the divide
a179 1
		XREF	_LVOSMult32
d183 1
a183 1
		jsr	_LVOSMult32(a6)		; Do the multiply
a190 1
;		XREF	_LVOUMult32
d194 1
a194 1
;		jsr	_LVOUMult32(a6)		; Do the multply
@


38.10
log
@Now checks for V39 graphics (since it needs it...)
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.9 91/12/31 19:13:46 mks Exp Locker: mks $
d62 1
d107 1
@


38.9
log
@Removed the rebuild count stuff
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.8 91/11/18 13:29:53 mks Exp Locker: mks $
d131 1
a131 1
		moveq.l	#37,d0			; V37 minimum...
@


38.8
log
@Removed the initialization of the global hook
Set the rebuild count to be 12
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.7 91/11/15 20:19:06 mks Exp Locker: mks $
a23 6
* This is the number of times between complete cliprect rebuilding...
*
REBUILD_OCCASIONALLY	equ	12
*
*******************************************************************************
*
a139 3
;
; Store the rebuild value count flag...
		move.w	#REBUILD_OCCASIONALLY,lb_RebuildIncrement(a2)
@


38.7
log
@New rebuild parameter and new LVO.  Removed old LVO
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.6 91/11/04 11:58:49 mks Exp Locker: mks $
d26 1
a26 1
REBUILD_OCCASIONALLY	equ	8
a131 2
		xref	_hookEntry
		xref	_HookFill
a148 5
;
; Set up the initial hook...
		move.l	#_hookEntry,lb_BackFillHook+h_Entry(a2)
		move.l	#_HookFill,lb_BackFillHook+h_SubEntry(a2)
		move.l	a2,lb_BackFillHook+h_Data(a2)
@


38.6
log
@No longer pokes GfxBase
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.5 91/11/01 19:56:00 mks Exp Locker: mks $
d110 1
a110 1
	V_DEF	LayerObscured
d150 1
a150 1
		move.l	#REBUILD_OCCASIONALLY,lb_RebuildIncrement(a2)
d374 2
a375 2
		xref	_LayerObscured
LayerObscured:	equ	_LayerObscured
@


38.5
log
@Added the LVO for the SortLayerCR routine
Added the code that pokes the layers library base into GfxBase
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.4 91/08/28 18:46:30 mks Exp Locker: mks $
a142 6
*
* Now, poke our library base into GfxBase...
*
		move.l	d0,a1			; Set into pointer...
		move.l	a2,gb_nreserved(a1)	; Set LayersBase into GfxBase
*
@


38.4
log
@Added the LayerObscured() function to the function table.
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.3 91/08/05 18:48:26 mks Exp Locker: mks $
d16 2
d67 1
d111 1
d143 6
@


38.3
log
@Removed the ugly debugging macro...
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.2 91/08/02 10:18:00 mks Exp Locker: mks $
d107 1
d367 5
@


38.2
log
@Native build version checkin...
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 38.1 91/07/25 09:55:09 bart Exp $
a24 72
*
*******************************************************************************
*
DEBUGGING	SET	1
*
* A macro for PRINTF that does not touch the registers
* Also, it only produces code when DEBUGGING is defined above
*
		IFND	PRINTF
PRINTF		MACRO	; <string>,...
		IFNE	DEBUGGING
		XREF	KPrintF
PUSHCOUNT	SET	0

		IFNC	'\9',''
		move.l	\9,-(a7)
PUSHCOUNT	SET	PUSHCOUNT+4
		ENDC

		IFNC	'\8',''
		move.l	\8,-(a7)
PUSHCOUNT	SET	PUSHCOUNT+4
		ENDC

		IFNC	'\7',''
		move.l	\7,-(a7)
PUSHCOUNT	SET	PUSHCOUNT+4
		ENDC

		IFNC	'\6',''
		move.l	\6,-(a7)
PUSHCOUNT	SET	PUSHCOUNT+4
		ENDC

		IFNC	'\5',''
		move.l	\5,-(a7)
PUSHCOUNT	SET	PUSHCOUNT+4
		ENDC

		IFNC	'\4',''
		move.l	\4,-(a7)
PUSHCOUNT	SET	PUSHCOUNT+4
		ENDC

		IFNC	'\3',''
		move.l	\3,-(a7)
PUSHCOUNT	SET	PUSHCOUNT+4
		ENDC

		IFNC	'\2',''
		move.l	\2,-(a7)
PUSHCOUNT	SET	PUSHCOUNT+4
		ENDC

		movem.l a0/a1/d0/d1,-(a7)
		lea.l	PSS\@@(pc),a0
		lea.l	16(a7),a1
		jsr	KPrintF
		movem.l (a7)+,a0/a1/d0/d1
		bra.s	PSE\@@

PSS\@@		dc.b	\1
		dc.b	10
		dc.b	0
		cnop	0,2
PSE\@@
		IFNE	PUSHCOUNT
		lea.l	PUSHCOUNT(a7),a7
		ENDC	;IFNE	PUSHCOUNT
		ENDC	;IFNE	DEBUGGING
		ENDM	;PRINTF	MACRO
		ENDC	;IFND	PRINTF
@


38.1
log
@begin_v38_development
@
text
@d3 1
a3 1
*	$Id: layerface.asm,v 1.12 90/10/11 15:16:01 rsbx Exp $
d6 1
d8 7
d16 1
a16 1
* layer asm to c interface file
a17 2
	include "exec/types.i"
	include "exec/libraries.i"
d19 124
d144 152
a295 25
	xdef	_newmain
	xref	_main

_newmain:
*	have to cobble up first LayersBase
	move.l	a6,-(sp)
	sub.l	#lb_SIZEOF,sp	* get some space for layersbase
	move.l	sp,a6		* pointer to layersbase
	move.l	4,lb_ExecBase(a6)
	bsr	_main
	add.l	#lb_SIZEOF,sp
	move.l	(sp)+,a6
	rts

	xdef	_InitLayers
	xref	_initlayers
_InitLayers:
	move.l	a0,-(sp)
	bsr		_initlayers
	addq	#4,sp
	rts

	xdef	_CreateBehindHookLayer
	xref	_createbehindlayer
_CreateBehindHookLayer:
d297 1
a297 1
	move.l	a2,-(sp)		; bm2
d301 2
a302 2
	bsr		_createbehindlayer
	lea		7*4(sp),sp
d304 1
a304 3

	xdef	_CreateBehindLayer
_CreateBehindLayer:
d306 6
a311 11
	move.l	a2,-(sp)		; bm2
	move.l	d4,-(sp)		; flags
	movem.w	d0/d1/d2/d3,-(sp)	; struct Rectangle
	movem.l	a0/a1,-(sp)
	bsr		_createbehindlayer
	lea		7*4(sp),sp
	rts

	xdef	_CreateUpfrontHookLayer
	xref	_createupfrontlayer
_CreateUpfrontHookLayer:
d313 1
a313 1
	move.l	a2,-(sp)		; bm2
d317 2
a318 2
	bsr		_createupfrontlayer
	lea		7*4(sp),sp
d320 1
a320 3

	xdef	_CreateUpfrontLayer
_CreateUpfrontLayer:
d322 45
a366 2
	move.l	a2,-(sp)		; bm2
	move.l	d4,-(sp)		; flags
d368 4
a371 3
	movem.l	a0/a1,-(sp)
	bsr		_createupfrontlayer
	lea		7*4(sp),sp
d373 78
a450 167

	xdef	_UpfrontLayer
	xref	_upfront
_UpfrontLayer:
	move.l	a1,-(sp)
	bsr		_upfront
	addq.l	#4,sp
	rts

	xdef	_BehindLayer
	xref	_behind
_BehindLayer:
	move.l	a1,-(sp)
	bsr		_behind
	addq.l	#4,sp
	rts

	xdef	_MoveLayer
	xref	_movelayer
_MoveLayer:
	movem.l	d0/d1,-(sp)
	move.l	a1,-(sp)
	bsr		_movelayer
	lea		12(sp),sp
	rts

	xdef	_SizeLayer
	xref	_sizelayer
_SizeLayer:
	movem.l	d0/d1,-(sp)
	move.l	a1,-(sp)
	bsr		_sizelayer
	lea		12(sp),sp
	rts

	xdef	_MoveSizeLayer
	xref	_emovesizelayer
_MoveSizeLayer:
	movem.w	d0/d1/d2/d3,-(sp)	; struct Rectangle
	move.l	a0,-(sp)
	bsr		_emovesizelayer
	lea		12(sp),sp
	rts

	xdef	_ScrollLayer
	xref	_scrolllayer
_ScrollLayer:
	movem.l	d0/d1,-(sp)
	move.l	a1,-(sp)
	bsr		_scrolllayer
	lea		12(sp),sp
	rts

	xdef	_BeginUpdate
	xref	_beginupdate
_BeginUpdate:
	move.l	a0,-(sp)
	bsr		_beginupdate
	addq.l	#4,sp
	rts

	xdef	_EndUpdate
	xref	_endupdate
_EndUpdate:
	move.l	d0,-(sp)
	move.l	a0,-(sp)
	bsr		_endupdate
	addq.l	#8,sp
	rts

	xdef	_InstallClipRegion
	xref	_installclipregion
_InstallClipRegion:
	movem.l	a0/a1,-(sp)
	bsr		_installclipregion
	addq.l	#8,sp
	rts

	xdef	_DeleteLayer
	xref	_deletelayer
_DeleteLayer:
	move.l	a1,-(sp)
	bsr		_deletelayer
	addq.l	#4,sp
	rts

	xdef	_UnlockLayers
	xref	_unlocklayers
_UnlockLayers:
	move.l	a0,-(sp)
	bsr		_unlocklayers
	addq.l	#4,sp
	rts

	xdef	_LockLayers
	xref	_locklayers
_LockLayers:
	move.l	a0,-(sp)
	bsr		_locklayers
	addq.l	#4,sp
	rts

	xdef	_LockLayerInfo
	xref	_locklayerinfo
_LockLayerInfo:
	move.l	a0,-(sp)
	bsr		_locklayerinfo
	addq.l	#4,sp
	rts

	xdef	_UnlockLayerInfo
	xref	_unlocklayerinfo
_UnlockLayerInfo:
	move.l	a0,-(sp)
	bsr		_unlocklayerinfo
	addq.l	#4,sp
	rts

	xdef	_SwapBitsRastPortClipRect
	xref	_screenswap
_SwapBitsRastPortClipRect:
	move.l	a1,-(sp)
	move.l	a0,-(sp)
	bsr		_screenswap
	addq.l	#8,sp
	rts

	xdef	_DisposeLayerInfo
	xref	_disposelayerinfo
_DisposeLayerInfo:
	move.l	a0,-(sp)
	bsr		_disposelayerinfo
	addq	#4,sp
	rts

	xdef	_FattenLayerInfo
	xref	_extern_fattenlayerinfo
_FattenLayerInfo:
	move.l	a0,-(sp)
	bsr		_extern_fattenlayerinfo
	addq	#4,sp
	rts

	xdef	_ThinLayerInfo
	xref	_extern_thinlayerinfo
_ThinLayerInfo:
	move.l	a0,-(sp)
	bsr		_extern_thinlayerinfo
	addq	#4,sp
	rts

	xdef	_MoveLayerInFrontOf
	xref	_extern_movelayerinfrontof
_MoveLayerInFrontOf:
	movem.l	a0/a1,-(sp)
	bsr		_extern_movelayerinfrontof
	addq	#8,sp
	rts

	xdef	_InstallLayerHook
	xref	_install_backfill_hook
_InstallLayerHook:
	movem.l	a0/a1,-(sp)
	bsr		_install_backfill_hook
	addq	#8,sp
	rts

@
