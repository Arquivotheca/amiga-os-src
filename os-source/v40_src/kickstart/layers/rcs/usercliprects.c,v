head     38.2;
branch   ;
access   ;
symbols  V40_1:38.2 V39_62:38.2 V39_61:38.2 V39_60:38.2 V39_58:38.2 V39_56:38.2 V39_55:38.2 V39_54:38.2 V39_53:38.2 V39_52:38.2 V39_51:38.2 V39_50:38.2 V39_49:38.2 V39_48:38.2 V39_46:38.2 V39_45:38.2 V39_44:38.2 V39_42:38.2 V39_41:38.2 V39_40:38.2 V39_39:38.2 V39_38:38.2 V39_37:38.2 V39_36:38.2 V39_35:38.2 V39_34:38.2 V39_33:38.2 V39_32:38.2 V39_30:38.2 V39_28:38.2 V39_27:38.2 V39_26:38.2 V39_25:38.2 V39_24:38.2 V39_23:38.2 V39_22:38.2 V39_21:38.2 V39_20:38.2 V39_18:38.2 V39_16:38.2 V39_15:38.2 V39_14:38.2 V39_12:38.2 V39_10:38.2 V38_7:38.2 V38_6:38.2 First_Native_Build:38.2;
locks    ; strict;
comment  @ * @;


38.2
date     91.08.02.10.23.00;  author mks;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.25.09.56.33;  author bart;  state Exp;
branches ;
next     ;


desc
@@


38.2
log
@Native build version checkin...
@
text
@/******************************************************************************
*
*	$Id: usercliprects.c,v 38.1 91/07/25 09:56:33 bart Exp $
*
******************************************************************************/

#define	NEWCLIPRECTS_1_1

#include <exec/types.h>
#include <exec/nodes.h>
#include <exec/lists.h>
#include <exec/ports.h>
#include <graphics/gfx.h>
#include <graphics/clip.h>
#include <graphics/layers.h>
#include <graphics/regions.h>

#include "layersbase.h"

void pushusercliprects(struct Layer_Info *li)
{
struct Layer *l;

	for (l = li->top_layer; l ; l = l->back)
	{
		l->saveClipRects = 0;
		if (l->ClipRegion)	/* is there a ClipRegion? */
		{	/* swap em back */
			/* cw->ClipRects has the programmers clip region */
			/* must transfer contents to global ClipRects */
			internal_endupdate(l);
		}
	}
	/* cliprects have all been syncronized now */
}

void popusercliprects(struct Layer_Info *li)
{
struct Layer *l;

	for (l = li->top_layer; l ; l = l->back)
	{
		if (l->ClipRegion)
		{
			/* have to do an effective 'BeginUpdate' */
			internal_beginupdate(l);
		}
	}
}


/****** layers.library/InstallClipRegion ***************************************
*
*    NAME
*	InstallClipRegion -- Install clip region in layer
*
*    SYNOPSIS
*	oldclipregion = InstallClipRegion( l,  region )
*	d0                                 a0  a1
*
*	struct Region *InstallClipRegion( struct Layer *, struct Region *);
*
*    FUNCTION
*	Installs a transparent Clip region in the layer. All
*	subsequent graphics calls will be clipped to this region.
*	You MUST remember to call InstallClipRegion(l,NULL) before
*	calling DeleteLayer(l) or the Intuition function CloseWindow()
* 	if you have installed a non-NULL ClipRegion in l.
*
*    INPUTS
*	l - pointer to a layer
*	region - pointer to a region
*
*    RESULTS
*	oldclipregion - The pointer to the previous ClipRegion that
*	    was installed. Returns NULL if no previous ClipRegion installed.
*
*	    Note: If the system runs out of memory while computing the
*	        resulting ClipRects the LAYERS_CLIPRECTS_LOST bit will
*	        be set in l->Flags.
*
*    BUGS
*	If the system runs out of memory during normal layer operations,
*	the ClipRect list may get swept away and not restored.
*	As soon as there is enough memory and the layer library
*	gets called again the ClipRect list will be rebuilt.
*
*    SEE ALSO
*	BeginUpdate EndUpdate,
*	graphics/layers.h, graphics/clip.h, graphics/regions.h
*
*******************************************************************************/

struct Region * __stdargs __asm installclipregion(register __a0 struct Layer *l,register __a1 struct Region *r)
{
	struct Region *oldregion;
	LockLayerRom(l);

	/* is there a current clipregion being used? */
	if (oldregion = l->ClipRegion)
		internal_endupdate(l);	/* remove it */
	l->ClipRegion = r;	/* install new one */
	if (r)	internal_beginupdate(l);

	UnlockLayerRom(l);
	return(oldregion);
}
@


38.1
log
@begin_v38_development
@
text
@d3 1
a3 1
*	$Id: usercliprects.c,v 1.5 90/10/11 15:17:25 rsbx Exp $
d7 2
d18 1
a18 1
/*#define DEBUG*/
d20 3
a22 2
struct ClipRect *AllocCR();
struct Region *ClipRectsToRegion();
a23 6
pushusercliprects(li)
struct Layer_Info *li;
{
	struct Layer *l;
	struct Region *r;
	struct ClipRect *cr,*crt,*crp;
d37 1
a37 2
popusercliprects(li)
struct Layer_Info *li;
d39 2
a40 3
	struct Layer *l;
	struct Region *r;
	struct ClipRect *cr;
d64 1
a64 1
*	Installs a transparent Clip region in the layer. All 
d85 1
a85 1
*	As soon as there is enough memory and the layer library 
d94 1
a94 3
struct Region *installclipregion(l,r)
struct Layer  *l;
struct Region *r;
d98 1
a98 3
#ifdef DEBUG
	printf("installclipregion(%lx,%lx) old=%lx",l,r,l->ClipRegion);
#endif
d104 1
a104 1
	
a107 1

@
