head     38.4;
branch   ;
access   ;
symbols  V40_1:38.4 V39_62:38.4 V39_61:38.4 V39_60:38.3 V39_58:38.3 V39_56:38.3 V39_55:38.3 V39_54:38.3 V39_53:38.3 V39_52:38.3 V39_51:38.3 V39_50:38.3 V39_49:38.3 V39_48:38.3 V39_46:38.3 V39_45:38.3 V39_44:38.3 V39_42:38.3 V39_41:38.3 V39_40:38.3 V39_39:38.3 V39_38:38.3 V39_37:38.3 V39_36:38.3 V39_35:38.3 V39_34:38.3 V39_33:38.3 V39_32:38.3 V39_30:38.3 V39_28:38.3 V39_27:38.3 V39_26:38.3 V39_25:38.3 V39_24:38.3 V39_23:38.3 V39_22:38.3 V39_21:38.3 V39_20:38.3 V39_18:38.3 V39_16:38.3 V39_15:38.3 V39_14:38.3 V39_12:38.3 V39_10:38.3 V38_7:38.2 V38_6:38.2 First_Native_Build:38.2;
locks    ; strict;
comment  @ * @;


38.4
date     92.07.01.19.47.43;  author mks;  state Exp;
branches ;
next     38.3;

38.3
date     91.10.04.15.49.25;  author bart;  state Exp;
branches ;
next     38.2;

38.2
date     91.08.02.10.22.32;  author mks;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.25.09.56.16;  author bart;  state Exp;
branches ;
next     ;


desc
@@


38.4
log
@Autodoc spelling error fix
@
text
@/******************************************************************************
*
*	$Id: scrolllayer.c,v 38.3 91/10/04 15:49:25 bart Exp Locker: mks $
*
******************************************************************************/

#define	NEWCLIPRECTS_1_1

#include <exec/types.h>
#include <exec/nodes.h>
#include <exec/lists.h>
#include <exec/ports.h>
#include <graphics/gfx.h>
#include <graphics/clip.h>
#include <graphics/rastport.h>
#include <graphics/layers.h>

#include "layersbase.h"

/****** layers.library/ScrollLayer *********************************************
*
*    NAME
*	ScrollLayer -- Scroll around in a superbitmap, translate coordinates
*                      in non-superbitmap layer.
*
*    SYNOPSIS
*	ScrollLayer( dummy, l, dx, dy )
*	             a0     a1 d0  d1
*
*	void ScrollLayer( LONG, struct Layer *, LONG, LONG);
*
*    FUNCTION
*	For a SuperBitMap Layer:
*	Update the SuperBitMap from the layer display, then copy bits
*	between Layer and SuperBitMap to reposition layer over different
*	portion of SuperBitMap.
*	For nonSuperBitMap layers, all (x,y) pairs are adjusted by
*	the scroll(x,y) value in the layer.  To cause (0,0) to actually
*	be drawn at (3,10) use ScrollLayer(-3,-10). This can be useful
*	along with InstallClipRegion to simulate Intuition GZZWindows
*	without the overhead of an extra layer.
*
*    INPUTS
*	dummy - unused
*	l - pointer to a layer
*	dx - delta to add to current x scroll value
*	dy - delta to add to current y scroll value
*
*    BUGS
*	May not handle (dx,dy) which attempts to move the layer outside the
*	layer's SuperBitMap bounds.
*
*    SEE ALSO
*	graphics/layers.h
*
*******************************************************************************/

void __stdargs __asm scrolllayer(register __a1 struct Layer *l,register __d0 long dx,register __d1 long dy)
{
	/* transfer all raster from l to nl */

	LockLayerRom(l);

	if (l->SuperBitMap)
	{
		SyncSBitMap(l); /* copy stuff from screen to superbitmap */
	}

	l->Scroll_X += dx;
	l->Scroll_Y += dy;

	if (l->SuperBitMap)
	{
		CopySBitMap(l); /* copy stuff from superbitmap to screen */
		gen_sbitmap_cr(l);
	}

	UnlockLayerRom(l);
}
@


38.3
log
@minor byte savings
@
text
@d3 1
a3 1
*	$Id: scrolllayer.c,v 38.2 91/08/02 10:22:32 mks Exp Locker: bart $
d50 1
a50 1
*	May not handle (dx,dy) which attempts to move the layer ouside the
@


38.2
log
@Native build version checkin...
@
text
@d3 1
a3 1
*	$Id: scrolllayer.c,v 38.1 91/07/25 09:56:16 bart Exp $
d61 1
d63 9
d74 1
a74 5
		/* copy all stuff from screen to super bitmap */
		SyncSBitMap(l);
		l->Scroll_X += dx;
		l->Scroll_Y += dy;
		CopySBitMap(l);
a76 2
	else	/* usefull for non super layers as well */
	{
a77 3
		l->Scroll_X += dx;
		l->Scroll_Y += dy;
	}
@


38.1
log
@begin_v38_development
@
text
@d3 1
a3 1
*	$Id: scrolllayer.c,v 1.5 90/10/11 15:17:04 rsbx Exp $
d7 2
d18 1
a18 1
/*#define DEBUG*/
d21 1
a21 1
*    
d25 5
a29 5
*    
*    SYNOPSIS    
*	ScrollLayer( dummy, l, dx, dy )   
*	             a0     a1 d0  d1  
* 
d42 1
a42 1
* 
d45 1
a45 1
*	l - pointer to a layer   
d58 1
a58 3
int scrolllayer(l,dx,dy)
struct Layer *l;
int dx,dy;
d60 4
a63 4
    /* transfer all raster from l to nl */
    LockLayerRom(l);
    if (l->SuperBitMap)
    {
a64 4
#ifdef DEBUG
    	printf("sync sbitmap(%lx)\n",l);
    	Debug();
#endif
d70 1
a70 1
    }
d73 1
a73 1
		
d77 1
a77 1
    UnlockLayerRom(l);
@
