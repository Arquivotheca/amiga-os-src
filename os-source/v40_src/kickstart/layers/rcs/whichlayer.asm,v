head     38.2;
branch   ;
access   ;
symbols  V40_1:38.2 V39_62:38.2 V39_61:38.2 V39_60:38.2 V39_58:38.2 V39_56:38.2 V39_55:38.2 V39_54:38.2 V39_53:38.2 V39_52:38.2 V39_51:38.2 V39_50:38.2 V39_49:38.2 V39_48:38.2 V39_46:38.2 V39_45:38.2 V39_44:38.2 V39_42:38.2 V39_41:38.2 V39_40:38.2 V39_39:38.2 V39_38:38.2 V39_37:38.2 V39_36:38.2 V39_35:38.2 V39_34:38.2 V39_33:38.2 V39_32:38.2 V39_30:38.2 V39_28:38.2 V39_27:38.2 V39_26:38.2 V39_25:38.2 V39_24:38.2 V39_23:38.2 V39_22:38.2 V39_21:38.2 V39_20:38.2 V39_18:38.2 V39_16:38.2 V39_15:38.2 V39_14:38.2 V39_12:38.2 V39_10:38.2 V38_7:38.2 V38_6:38.2 First_Native_Build:38.2;
locks    ; strict;
comment  @@;


38.2
date     91.08.02.10.17.50;  author mks;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.25.09.54.38;  author bart;  state Exp;
branches ;
next     ;


desc
@@


38.2
log
@Native build version checkin...
@
text
@*******************************************************************************
*
*	$Id: WhichLayer.asm,v 38.1 91/07/25 09:54:38 bart Exp $
*
*******************************************************************************


******* layers.library/WhichLayer *********************************************
*
*    NAME
*	WhichLayer -- Which Layer is this point in?
*
*    SYNOPSIS
*	layer = WhichLayer( li, x, y )
*	d0                  a0  d0 d1
*
*	struct Layer *WhichLayer(struct Layer_Info*, WORD, WORD);
*
*    FUNCTION
*	Starting at the topmost layer check to see if this point (x,y)
*	    occurs in this layer.  If it does return the pointer to this
*	    layer. Return NULL if there is no layer at this point.
*
*    INPUTS
*	li  = pointer to LayerInfo structure
*	(x,y) = coordinate in the BitMap
*
*    RESULTS
*	layer - pointer to the topmost layer that this point is in
*	        NULL if this point is not in a layer
*
*    SEE ALSO
*	graphics/layers.h
*
*******************************************************************************

*struct Layer *whichlayer(wi,x,y)
*struct Layer_Info *wi;
*SHORT x,y;
*{
*    struct Layer *nl;
*	/* search through layers and get first one that contains (x,y) */
*	for (nl = wi->top_layer; nl ; nl = nl->back)
*		if ( (nl->bounds.MinX <= x) &&
*			 (nl->bounds.MaxX >= x) &&
*			 (nl->bounds.MinY <= y) &&
*			 (nl->bounds.MaxY >= y) )	break;
*#ifdef DEBUG
*	printf("whichlayer(%lx,%ld,%ld)=%lx\n",wi,x,y,nl);
*#endif
*	return(nl);
*}
	include "exec/types.i"
	include "graphics/layers.i"
	include "graphics/clip.i"

	xdef	WhichLayer
WhichLayer:
	move.l	li_top_layer(a0),a0		* get first layer
	sub.l	a1,a1					* stupid motorola 68k
;
	bra.s	test
loop:	cmp.w	lr_MinX(a0),d0
	blt.s	next
	cmp.w	lr_MaxX(a0),d0
	bgt.s	next
	cmp.w	lr_MinY(a0),d1
	blt.s	next
	cmp.w	lr_MaxY(a0),d1
	ble.s	found
next:	move.l	lr_back(a0),a0
test:	cmp.l	a0,a1			; (Use a1 as NULL for test)
	bne.s	loop
found:	move.l	a0,d0
	rts

	end
@


38.1
log
@begin_v38_development
@
text
@d3 1
a3 1
*	$Id: WhichLayer.asm,v 1.6 90/10/11 15:15:29 rsbx Exp $
d57 2
a58 2
	xdef	_WhichLayer
_WhichLayer:
d61 14
a74 14
	while a0<>a1.l
		if lr_MinX(a0)<=d0.w
			if lr_MaxX(a0)>=d0.w
				if lr_MinY(a0)<=d1.w
					if lr_MaxY(a0)>=d1.w
						bra.s	wl_exit	* found the layer that (x,y) is in
					endif
				endif
			endif
		endif
		move.l	lr_back(a0),a0
	whend
wl_exit:
	move.l	a0,d0
@
