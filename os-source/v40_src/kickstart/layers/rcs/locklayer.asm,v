head     38.4;
branch   ;
access   ;
symbols  V40_1:38.4 V39_62:38.4 V39_61:38.4 V39_60:38.4 V39_58:38.4 V39_56:38.4 V39_55:38.4 V39_54:38.4 V39_53:38.4 V39_52:38.4 V39_51:38.4 V39_50:38.2 V39_49:38.2 V39_48:38.2 V39_46:38.2 V39_45:38.2 V39_44:38.2 V39_42:38.2 V39_41:38.2 V39_40:38.2 V39_39:38.2 V39_38:38.2 V39_37:38.2 V39_36:38.2 V39_35:38.2 V39_34:38.2 V39_33:38.2 V39_32:38.2 V39_30:38.2 V39_28:38.2 V39_27:38.2 V39_26:38.2 V39_25:38.2 V39_24:38.2 V39_23:38.2 V39_22:38.2 V39_21:38.2 V39_20:38.2 V39_18:38.2 V39_16:38.2 V39_15:38.2 V39_14:38.2 V39_12:38.2 V39_10:38.2 V38_7:38.2 V38_6:38.2 First_Native_Build:38.2;
locks    ; strict;
comment  @@;


38.4
date     92.03.26.18.04.33;  author mks;  state Exp;
branches ;
next     38.3;

38.3
date     92.03.26.18.00.39;  author mks;  state Exp;
branches ;
next     38.2;

38.2
date     91.08.02.10.17.45;  author mks;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.25.09.54.31;  author bart;  state Exp;
branches ;
next     ;


desc
@@


38.4
log
@Needed one more include file
@
text
@*******************************************************************************
*
*	$Id: locklayer.asm,v 38.3 92/03/26 18:00:39 mks Exp Locker: mks $
*
*******************************************************************************
*
	include "exec/types.i"
	include	"graphics/clip.i"
	include	"graphics/layers.i"
	include "layersbase.i"
*
*******************************************************************************
*
LockLayer:	xdef	LockLayer
		move.l	a6,-(sp)		; Save LayersBase
		lea	lr_Lock(a1),a0		; Get semaphore
		move.l	lb_ExecBase(a6),a6	; Get execbase...
		CALLSYS	ObtainSemaphore		; Get the semaphore
		move.l	(sp)+,a6		; Restore LayersBase
		rts
*
*******************************************************************************
*
UnlockLayer:	xdef	UnlockLayer
		move.l	a6,-(sp)		; Save LayersBase
		lea	lr_Lock(a0),a0		; Get semaphore...
		move.l	lb_ExecBase(a6),a6	; Get ExecBase
		CALLSYS	ReleaseSemaphore	; Release the semaphore
		move.l	(sp)+,a6
		rts
*
*******************************************************************************
*
LockLayerInfo:	xdef	LockLayerInfo
_LockLayerInfo:	xdef	_LockLayerInfo
		move.l	a6,-(sp)
		lea	li_Lock(a0),a0
		move.l	lb_ExecBase(a6),a6
		CALLSYS	ObtainSemaphore
		move.l	(sp)+,a6
		rts
*
*******************************************************************************
*
UnlockLayerInfo:	xdef	UnlockLayerInfo
_UnlockLayerInfo:	xdef	_UnlockLayerInfo
			move.l	a6,-(sp)
			lea	li_Lock(a0),a0
			move.l	lb_ExecBase(a6),a6
			jsr	_LVOReleaseSemaphore(a6)
			move.l	(sp)+,a6
			rts
*
*******************************************************************************
*
		end
@


38.3
log
@Cleaned up the code a bit (made it faster and smaller)
@
text
@d3 1
a3 1
*	$Id: locklayer.asm,v 38.2 91/08/02 10:17:45 mks Exp Locker: mks $
d8 1
@


38.2
log
@Native build version checkin...
@
text
@d3 1
a3 1
*	$Id: LockLayer.asm,v 38.1 91/07/25 09:54:31 bart Exp $
d6 1
a6 1

d10 46
a55 46

	xdef	LockLayer
	xref	_LVOLockLayerRom
LockLayer:
	movem.l	a5/a6,-(sp)
	move.l	a1,a5
	move.l	lb_GfxBase(a6),a6
	jsr	_LVOLockLayerRom(a6)
	movem.l	(sp)+,a5/a6
	rts

	xdef	UnlockLayer
	xref	_LVOUnlockLayerRom
UnlockLayer:
	movem.l	a5/a6,-(sp)
	move.l	a0,a5
	move.l	lb_GfxBase(a6),a6
	jsr	_LVOUnlockLayerRom(a6)
	movem.l	(sp)+,a5/a6
	rts

	xdef	LockLayerInfo
	xdef	_LockLayerInfo
	xref	_LVOObtainSemaphore
LockLayerInfo:
_LockLayerInfo:
	lea	li_Lock(a0),a0
	move.l	a6,-(sp)
	move.l	lb_ExecBase(a6),a6
	jsr	_LVOObtainSemaphore(a6)
	move.l	(sp)+,a6
	rts

	xdef	UnlockLayerInfo
	xdef	_UnlockLayerInfo
	xref	_LVOReleaseSemaphore
UnlockLayerInfo:
_UnlockLayerInfo:
	lea	li_Lock(a0),a0
	move.l	a6,-(sp)
	move.l	lb_ExecBase(a6),a6
	jsr	_LVOReleaseSemaphore(a6)
	move.l	(sp)+,a6
	rts

	end
@


38.1
log
@begin_v38_development
@
text
@d3 1
a3 1
*	$Id: LockLayer.asm,v 1.3 90/10/11 15:15:26 rsbx Exp $
d7 3
d11 9
d21 9
a29 2
	include "exec/types.i"
	include "layersbase.i"
d31 10
a40 6
	xdef	_LockLayer
	xref	_LockLayerRom
_LockLayer:
	move.l	a1,-(sp)
	bsr		_LockLayerRom	* call c interface
	addq.l	#4,sp
d43 10
a52 6
	xdef	_UnlockLayer
	xref	_UnlockLayerRom
_UnlockLayer:
	move.l	a0,-(sp)
	bsr		_UnlockLayerRom	* call C code
	addq.l	#4,sp
@
