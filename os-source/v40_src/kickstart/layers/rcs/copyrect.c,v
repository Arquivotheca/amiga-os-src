head     38.4;
branch   ;
access   ;
symbols  V40_1:38.4 V39_62:38.4 V39_61:38.4 V39_60:38.4 V39_58:38.4 V39_56:38.4 V39_55:38.4 V39_54:38.4 V39_53:38.4 V39_52:38.4 V39_51:38.4 V39_50:38.4 V39_49:38.4 V39_48:38.4 V39_46:38.4 V39_45:38.4 V39_44:38.4 V39_42:38.4 V39_41:38.4 V39_40:38.4 V39_39:38.4 V39_38:38.3 V39_37:38.3 V39_36:38.2 V39_35:38.2 V39_34:38.2 V39_33:38.2 V39_32:38.2 V39_30:38.2 V39_28:38.2 V39_27:38.2 V39_26:38.2 V39_25:38.2 V39_24:38.2 V39_23:38.2 V39_22:38.2 V39_21:38.2 V39_20:38.2 V39_18:38.2 V39_16:38.2 V39_15:38.2 V39_14:38.2 V39_12:38.2 V39_10:38.2 V38_7:38.2 V38_6:38.2 First_Native_Build:38.2;
locks    ; strict;
comment  @ * @;


38.4
date     92.01.10.18.21.02;  author mks;  state Exp;
branches ;
next     38.3;

38.3
date     92.01.10.08.38.47;  author mks;  state Exp;
branches ;
next     38.2;

38.2
date     91.08.02.10.19.27;  author mks;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.25.09.54.55;  author bart;  state Exp;
branches ;
next     ;


desc
@@


38.4
log
@Changed to be assembly callable...
@
text
@/******************************************************************************
*
*	$Id: copyrect.c,v 38.3 92/01/10 08:38:47 mks Exp Locker: mks $
*
******************************************************************************/

#define	NEWCLIPRECTS_1_1

#include <exec/types.h>
#include <exec/nodes.h>
#include <exec/lists.h>
#include <exec/ports.h>
#include <graphics/gfx.h>
#include <graphics/clip.h>
#include <graphics/rastport.h>
#include <graphics/layers.h>
#include <hardware/blit.h>

#include "layersbase.h"

void __stdargs __asm copyrect(register __a0 struct ClipRect *src,register __a1 struct ClipRect *dst)
{
	struct BitMap *sbm,*dbm;
	sbm = src->BitMap;
	dbm = dst->BitMap;
	if ((sbm != 0) && (dbm != 0)) if (rectXrect(&src->bounds,&dst->bounds))
	{
	struct Rectangle r;
	short srcX,dstX;

		intersect(&src->bounds,&dst->bounds,&r);
		srcX = r.MinX - (src->bounds.MinX & 0xfff0);
		dstX = r.MinX - (dst->bounds.MinX & 0xfff0);
		BltBitMap(sbm,	srcX,
				r.MinY-src->bounds.MinY,
				dbm,
				dstX,
				r.MinY-dst->bounds.MinY,
				r.MaxX-r.MinX+1,
				r.MaxY-r.MinY+1,
				NANBC|NABC|ABNC|ABC,
				-1,
				NULL);
	}
}
@


38.3
log
@Added feature to copyrect() such that non-intersecting areas
are just ignored...  (Needed for the new dedice)
@
text
@d3 1
a3 1
*	$Id: copyrect.c,v 38.2 91/08/02 10:19:27 mks Exp Locker: mks $
d21 1
a21 1
void copyrect(struct ClipRect *src,struct ClipRect *dst)
@


38.2
log
@Native build version checkin...
@
text
@d3 1
a3 1
*	$Id: copyrect.c,v 38.1 91/07/25 09:54:55 bart Exp $
d26 1
a26 1
	if ( (sbm != 0) && (dbm != 0) )
d28 3
a30 2
		struct Rectangle r;
		short srcX,dstX;
@


38.1
log
@begin_v38_development
@
text
@d3 1
a3 1
*	$Id: copyrect.c,v 1.4 90/10/11 15:15:50 rsbx Exp $
d7 2
d19 1
a19 9
/*#define DEBUG*/

#define COPY    NANBC|NABC|ABNC|ABC

#ifdef OLDCLOPYRECT
copyrect(sb,db)
struct ClipRect *sb,*db;
{
	struct BitMap *sbm,*dbm;
d21 1
a21 51
	sbm = sb->BitMap;
	dbm = db->BitMap;
	if ( (sbm != 0) && (dbm != 0) )
		BltBitMap(sbm,db->bounds.MinX - (sb->bounds.MinX&(~15)),
					  db->bounds.MinY - sb->bounds.MinY,
				  dbm,db->bounds.MinX&15,0,
					db->bounds.MaxX - db->bounds.MinX + 1,
					db->bounds.MaxY - db->bounds.MinY + 1,
					COPY,-1);	/* mask = -1 */
}
copyrect3(src,dst)
struct ClipRect *src,*dst;
{
	struct Rectangle r;
	short srcX,dstX;
	intersect(&src->bounds,&dst->bounds,&r);
	srcX = r.MinX - (src->bounds.MinX & 0xfff0);
	dstX = r.MinX - (dst->bounds.MinX & 0xfff0);
	BltBitMap(src->BitMap,srcX,r.MinY-src->bounds.MinY,
		dst->BitMap,dstX,r.MinY-dst->bounds.MinY,
		r.MaxX-r.MinX+1,r.MaxY-r.MinY+1,
		NANBC|NABC|ABNC|ABC,-1);
}
copyrect2(s,d)
struct ClipRect *s,*d;
{
#ifdef DEBUG
	printf("BltBitMap(%lx,%lx,%lx,%lx,%lx,%lx,%lx,%lx,%lx,%lx)\n",
			 s->BitMap,s->bounds.MinX&15,0,
		d->BitMap,s->bounds.MinX-(d->bounds.MinX&(~15)),
				s->bounds.MinY-d->bounds.MinY,
		s->bounds.MaxX-s->bounds.MinX+1,
		s->bounds.MaxY-s->bounds.MinY+1,
		NANBC|NABC|ABNC|ABC,-1);
#ifdef DEBUGDEBUG
	Debug();
#endif
#endif
	BltBitMap(s->BitMap,s->bounds.MinX&15,0,
		d->BitMap,s->bounds.MinX-(d->bounds.MinX&(~15)),
				s->bounds.MinY-d->bounds.MinY,
		s->bounds.MaxX-s->bounds.MinX+1,
		s->bounds.MaxY-s->bounds.MinY+1,
		NANBC|NABC|ABNC|ABC,-1);
#ifdef DEBUGDEBUG
	Debug();
#endif
}
#else
copyrect(src,dst)
struct ClipRect *src,*dst;
d33 10
a42 4
		BltBitMap(sbm,srcX,r.MinY-src->bounds.MinY,
			dbm,dstX,r.MinY-dst->bounds.MinY,
			r.MaxX-r.MinX+1,r.MaxY-r.MinY+1,
			NANBC|NABC|ABNC|ABC,-1);
a44 1
#endif
@
