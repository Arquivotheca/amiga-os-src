head     38.4;
branch   ;
access   ;
symbols  V40_1:38.4 V39_62:38.4 V39_61:38.4 V39_60:38.4 V39_58:38.4 V39_56:38.4 V39_55:38.4 V39_54:38.4 V39_53:38.4 V39_52:38.4 V39_51:38.4 V39_50:38.4 V39_49:38.4 V39_48:38.4 V39_46:38.4 V39_45:38.4 V39_44:38.4 V39_42:38.4 V39_41:38.4 V39_40:38.4 V39_39:38.4 V39_38:38.4 V39_37:38.4 V39_36:38.4 V39_35:38.4 V39_34:38.4 V39_33:38.4 V39_32:38.4 V39_30:38.4 V39_28:38.4 V39_27:38.4 V39_26:38.4 V39_25:38.4 V39_24:38.4 V39_23:38.4 V39_22:38.4 V39_21:38.4 V39_20:38.4 V39_18:38.4 V39_16:38.4 V39_15:38.4 V39_14:38.4 V39_12:38.4 V39_10:38.4 V38_7:38.3 V38_6:38.3 First_Native_Build:38.3;
locks    ; strict;
comment  @ * @;


38.4
date     91.10.04.15.48.24;  author bart;  state Exp;
branches ;
next     38.3;

38.3
date     91.08.02.10.19.01;  author mks;  state Exp;
branches ;
next     38.2;

38.2
date     91.07.25.16.49.36;  author bart;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.25.09.54.43;  author bart;  state Exp;
branches ;
next     ;


desc
@@


38.4
log
@minor byte savings
@
text
@/******************************************************************************
*
*	$Id: addobs.c,v 38.3 91/08/02 10:19:01 mks Exp Locker: bart $
*
******************************************************************************/

#define	NEWCLIPRECTS_1_1

#include <exec/types.h>
#include <graphics/gfx.h>
#include <graphics/clip.h>

#include "layersbase.h"

void addit(struct ClipRect *op,struct Rectangle *argr,struct Layer *lp)
{
struct ClipRect *newop = AllocCR(lp->LayerInfo);
struct ClipRect *cr;

	newop->bounds = *argr;

	if (op->BitMap)
	{
		get_concealed_rasters(lp,newop);
		copyrect(op,newop);
	}

	newop->lobs = op->lobs;

	cr = lp->ClipRect;
	while (cr->Next)    cr = cr->Next;
	newop->Next = 0;
	cr->Next = newop;
}

BOOL addobs(struct ClipRect *op,struct Rectangle *argr,struct Rectangle *newr,struct Layer *lp)
{
	struct Rectangle r;

    r = *argr;

    if(rectXrect(&r,newr))
    {
		struct Rectangle temp;
		if (r.MinY < newr->MinY)
		{
		    temp = r;
		    r.MinY = temp.MaxY = newr->MinY;
		    temp.MaxY -= 1;
		    addit(op,&temp,lp);
		}
		if (r.MaxY > newr->MaxY)
		{
		    temp = r;
		    r.MaxY =  temp.MinY = newr->MaxY;
			temp.MinY += 1;
		    addit(op,&temp,lp);
		}
		if (r.MinX < newr->MinX)
		{
		    temp = r;
		    r.MinX =  temp.MaxX = newr->MinX;
		    temp.MaxX -= 1;
		    addit(op,&temp,lp);
		}
		if (r.MaxX > newr->MaxX)
		{
		    temp = r;
		    r.MaxX = temp.MinX = newr->MaxX;
		    temp.MinX += 1;
		    addit(op,&temp,lp);
		}

		/* r is now inside rectangle of new layer */

		if ( (*(ULONG *)(&r.MinX) == *(ULONG *)(&argr->MinX)) &&
			 (*(ULONG *)(&r.MaxX) == *(ULONG *)(&argr->MaxX)) )
		{
		    addrect(&r,op->lobs);
		    return(FALSE); /* if this happens no addits were called */
		}

		addrect(&r,op->lobs);
    }

    addit(op,&r,lp);

    return(TRUE);
}
@


38.3
log
@Native build version checkin...
@
text
@d3 1
a3 1
*	$Id: addobs.c,v 38.1 91/07/25 09:54:43 bart Exp $
d38 1
a38 1
struct Rectangle r;
d44 38
a81 39
	struct Rectangle temp;
	if (r.MinY < newr->MinY)
	{
	    temp = r;
	    temp.MaxY = newr->MinY - 1;
	    r.MinY = newr->MinY;
	    addit(op,&temp,lp);
	}
	if (r.MaxY > newr->MaxY)
	{
	    temp = r;
	    temp.MinY = newr->MaxY + 1;
	    r.MaxY = newr->MaxY;
	    addit(op,&temp,lp);
	}
	if (r.MinX < newr->MinX)
	{
	    temp = r;
	    temp.MaxX = newr->MinX - 1;
	    r.MinX = newr->MinX;
	    addit(op,&temp,lp);
	}
	if (r.MaxX > newr->MaxX)
	{
	    temp = r;
	    temp.MinX = newr->MaxX + 1;
	    r.MaxX = newr->MaxX;
	    addit(op,&temp,lp);
	}
	/* r is now inside rectangle of new layer */

	if ((r.MinX == argr->MinX)  &&
	    (r.MaxX == argr->MaxX)  &&
	    (r.MinY == argr->MinY)  &&
	    (r.MaxY == argr->MaxY))
	{
	    addrect(&r,op->lobs);
	    return(FALSE); /* if this happens no addits were called */
	}
d83 1
a83 1
	addrect(&r,op->lobs);
@


38.2
log
@modified addobs and addrect to work with createlayerinfrontof
@
text
@d3 1
a3 1
*	$Id: addobs.c,v 38.1 91/07/25 09:54:43 bart Exp Locker: bart $
d7 2
d13 1
a13 3
/*#define DEBUG*/

struct ClipRect *AllocCR();
d15 1
a15 10
/*#define PROFILE*/
#ifdef PROFILE
short addobs_metric;
#endif
#define METRIC(x)	/* x++; */

int addit(op,argr,lp)
struct ClipRect *op;
struct Rectangle *argr;
struct Layer *lp;
d17 2
a18 1
    struct ClipRect *newop = AllocCR(lp->LayerInfo);
d20 1
a20 1
    newop->bounds = *argr;
d22 5
a26 5
    if (op->BitMap)
    {
    	get_concealed_rasters(lp,newop);
    	copyrect(op,newop);
    }
d28 1
a28 1
    newop->lobs = op->lobs;
a29 3
    /* link at end */
    {
	struct ClipRect *cr;
a33 1
    }
d36 1
a36 4
int addobs(op,argr,newr,lp)
struct ClipRect *op;
struct Rectangle *argr,*newr;
struct Layer *lp;
d38 1
a38 3
    struct ClipRect *newop;
    struct Rectangle r;
    struct Layer *l = op->lobs;
a41 6
#ifdef DEBUG
    printf("addobs(%lx,%lx,%lx,%lx,%lx)\n",op,*argr,newr,lp);
#endif

    METRIC(addobs_metric);

d50 1
a50 1
	    if(l) addit(op,&temp,lp);
d57 1
a57 1
	    if(l) addit(op,&temp,lp);
d64 1
a64 1
	    if(l) addit(op,&temp,lp);
d71 1
a71 1
	    if(l) addit(op,&temp,lp);
a72 1

d75 4
a78 1
	if ((l) && (r == *argr))
d80 1
a80 1
	    addrect(&r,l);
d84 1
a84 1
	addrect(&r, l ? l : lp );
d87 1
a87 1
    if(l) addit(op,&r,lp);
a90 1

@


38.1
log
@begin_v38_development
@
text
@d3 1
a3 1
*	$Id: addobs.c,v 1.7 90/10/11 15:15:36 rsbx Exp $
d55 1
d73 1
a73 1
	    addit(op,&temp,lp);
d80 1
a80 1
	    addit(op,&temp,lp);
d87 1
a87 1
	    addit(op,&temp,lp);
d94 1
a94 1
	    addit(op,&temp,lp);
d96 1
d99 1
a99 1
	if (r == *argr)
d101 1
a101 1
	    addrect(&r,op->lobs);
d105 1
a105 1
	addrect(&r,op->lobs);
d108 1
a108 1
    addit(op,&r,lp);
@
