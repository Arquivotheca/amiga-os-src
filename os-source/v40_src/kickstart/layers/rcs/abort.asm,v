head     39.1;
branch   ;
access   ;
symbols  V40_1:39.1 V39_62:39.1 V39_61:39.1 V39_60:39.1 V39_58:38.4 V39_56:38.4 V39_55:38.4 V39_54:38.4 V39_53:38.4 V39_52:38.4 V39_51:38.4 V39_50:38.4 V39_49:38.4 V39_48:38.4 V39_46:38.4 V39_45:38.4 V39_44:38.4 V39_42:38.4 V39_41:38.4 V39_40:38.4 V39_39:38.4 V39_38:38.4 V39_37:38.4 V39_36:38.4 V39_35:38.4 V39_34:38.4 V39_33:38.4 V39_32:38.4 V39_30:38.3 V39_28:38.3 V39_27:38.2 V39_26:38.2 V39_25:38.2 V39_24:38.2 V39_23:38.2 V39_22:38.2 V39_21:38.2 V39_20:38.2 V39_18:38.2 V39_16:38.2 V39_15:38.2 V39_14:38.2 V39_12:38.2 V39_10:38.2 V38_7:38.2 V38_6:38.2 First_Native_Build:38.2;
locks    ; strict;
comment  @@;


39.1
date     92.06.05.11.46.58;  author mks;  state Exp;
branches ;
next     38.4;

38.4
date     91.11.19.12.49.34;  author mks;  state Exp;
branches ;
next     38.3;

38.3
date     91.11.14.07.23.37;  author mks;  state Exp;
branches ;
next     38.2;

38.2
date     91.08.02.10.17.54;  author mks;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.25.09.54.40;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.1
log
@Completely removed the LayerInfoExtra Buffered Cliprects list...
It was not used anymore and thus will save some code and help
the speed a bit.
@
text
@*******************************************************************************
*
*	$Id: abort.asm,v 38.4 91/11/19 12:49:34 mks Exp Locker: mks $
*
*******************************************************************************


	include "exec/types.i"
	include	"exec/lists.i"
	include "graphics/layers.i"
	include "layersbase.i"

	section layers
	xdef	_aborted

*
*   setjmp( jmpvec ) -- marks a place in the calling stack than may be
*	later longjmp'ed to.  Will return 0 if it is the initial setjmp,
*	and the longjmp code if it is longjmp'ed to.
*
*   longjmp( jmpvec, code ) -- jumps to the saved jmpvec, passing the
*	code along.
*
*   jmpvec should be an array of 13 longs.  The first element is the
*	saved return pc.  The others are the saved registers.
*
	xref	LockLayerInfo
	xref	UnlockLayerInfo
	xref	_common_cleanup
	xref	_NewList

_aborted:
	move.l	4(sp),a0
	bsr	LockLayerInfo

	move.l	4(sp),a0		* get layerinfo *
	move.l	li_LayerInfo_extra(a0),a0
	lea	lie_mem(a0),a1
	bsr	_NewList

	movem.l	d2-d7/a2-a7,4(a0)
	move.l	(a7),(a0)
	moveq	#0,d0
	rts

	xdef	abort
abort:
	move.l	a0,-(sp)	; Save it
	subq.l	#4,sp		; Give one more word...
	;drop into _abort
;
	xdef	_abort
_abort:
	moveq.l	#1,d0		* TRUE
	move.l	4(sp),a0	* get LayerInfo *
	bsr	_common_cleanup
	move.l	4(sp),a0	* get layerinfo *
	move.l	a0,a1
	move.l	li_LayerInfo_extra(a0),a0
	movem.l	4(a0),d2-d7/a2-a7	* restore registers
	move.l	(a0),(a7)	* restore pc
	move.l	a1,a0
	bsr	UnlockLayerInfo
	moveq	#1,d0		* return to abort
	rts


	END
@


38.4
log
@Changed the way cliprect buffering works
@
text
@d3 1
a3 1
*	$Id: abort.asm,v 38.3 91/11/14 07:23:37 mks Exp Locker: mks $
a39 2

	clr.l	lie_buffered_cliprects(a0)
@


38.3
log
@Added assembly call support to abort
@
text
@d3 1
a3 1
*	$Id: abort.asm,v 38.2 91/08/02 10:17:54 mks Exp Locker: mks $
d41 1
a41 2
	lea	lie_buffered_cliprects(a0),a1
	bsr	_NewList
@


38.2
log
@Native build version checkin...
@
text
@d3 1
a3 1
*	$Id: abort.asm,v 38.1 91/07/25 09:54:40 bart Exp $
d49 6
@


38.1
log
@begin_v38_development
@
text
@d3 1
a3 1
*	$Id: abort.asm,v 1.4 90/10/11 15:15:32 rsbx Exp $
d9 1
d27 2
a28 2
	xref	_locklayerinfo
	xref	_unlocklayerinfo
d33 2
a34 3
	move.l	4(sp),-(sp)		* get layerinfo *
	bsr	_locklayerinfo
	addq.l	#4,sp
d38 2
a39 3
	pea	lie_mem(a0)		* pointer to list head
	bsr	_NewList		* initialize allocated memory list
	addq.l	#4,sp
d41 1
a41 3
	move.l	4(sp),a0
	move.l	li_LayerInfo_extra(a0),a0
	pea	lie_buffered_cliprects(a0)
a42 1
	addq.l	#4,sp
a43 2
	move.l	4(sp),a0		* get layerinfo *
	move.l	li_LayerInfo_extra(a0),a0
d50 3
a52 4
_abort
	moveq.l	#1,d0
	move.l	d0,-(sp)	* TRUE
	move.l	8(sp),-(sp)	* get LayerInfo *
a53 1
	addq.l	#8,sp
d59 2
a60 3
	move.l	a1,-(sp)
	bsr		_unlocklayerinfo
	addq.l	#4,sp
@
