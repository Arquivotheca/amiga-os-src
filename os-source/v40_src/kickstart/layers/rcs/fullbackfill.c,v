head     38.5;
branch   ;
access   ;
symbols  V40_1:38.5 V39_62:38.5 V39_61:38.5 V39_60:38.5 V39_58:38.5 V39_56:38.5 V39_55:38.5 V39_54:38.5 V39_53:38.5 V39_52:38.5 V39_51:38.5 V39_50:38.5 V39_49:38.5 V39_48:38.5 V39_46:38.5 V39_45:38.5 V39_44:38.5 V39_42:38.5 V39_41:38.5 V39_40:38.5 V39_39:38.5 V39_38:38.5 V39_37:38.5 V39_36:38.5 V39_35:38.5 V39_34:38.5 V39_33:38.5 V39_32:38.5 V39_30:38.5 V39_28:38.5 V39_27:38.5 V39_26:38.5 V39_25:38.5 V39_24:38.5 V39_23:38.5 V39_22:38.5 V39_21:38.5 V39_20:38.5 V39_18:38.5 V39_16:38.5 V39_15:38.5 V39_14:38.5 V39_12:38.5 V39_10:38.5 V38_7:38.2 V38_6:38.2 First_Native_Build:38.2;
locks    ; strict;
comment  @ * @;


38.5
date     91.10.04.15.48.54;  author bart;  state Exp;
branches ;
next     38.4;

38.4
date     91.10.03.14.48.55;  author bart;  state Exp;
branches ;
next     38.3;

38.3
date     91.10.03.12.53.51;  author bart;  state Exp;
branches ;
next     38.2;

38.2
date     91.08.02.10.20.01;  author mks;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.25.09.55.04;  author bart;  state Exp;
branches ;
next     ;


desc
@@


38.5
log
@minor byte savings
@
text
@/******************************************************************************
*
*	$Id: fullbackfill.c,v 38.4 91/10/03 14:48:55 bart Exp Locker: bart $
*
******************************************************************************/

#define	NEWCLIPRECTS_1_1

#include <exec/types.h>
#include <graphics/gfx.h>
#include <graphics/clip.h>
#include <graphics/rastport.h>

#include "layersbase.h"

/* only done when layer is created */
void FullBackFill(struct Layer *l)
{
struct ClipRect *cr;
struct RastPort *rp = l->rp;
struct BitMap *sbm = rp->BitMap;	 /* shared bitmap */

	/* go through all the ClipRects calling BackFill for each */

	for (cr = l->ClipRect; cr; cr = cr->Next)
	{
	    if(cr->lobs)
	    {
			if(cr->BitMap)
			{
				struct Rectangle clip;

				rp->BitMap = cr->BitMap;
				rp->Layer  = NULL;

				/* re-align for offscreen bitmaps */

				clip.MinX  =  clip.MaxX = (cr->bounds.MinX & 0xF);
				clip.MaxX +=  cr->bounds.MaxX - cr->bounds.MinX;
				clip.MinY  =  0;
				clip.MaxY  =  cr->bounds.MaxY - cr->bounds.MinY;

				CallBackFillHook(l->BackFill,
						 rp,
						 l,
						 clip,
						 cr->bounds.MinX,
						 cr->bounds.MinY);

				rp->BitMap = sbm;
				rp->Layer  = l;
			}
	    }
	    else
	    {
			CallBackFillHook(l->BackFill,
					 rp,
					 l,
					 cr->bounds,
					 cr->bounds.MinX,
					 cr->bounds.MinY);
	    }
	}
}
@


38.4
log
@squeezed bytes, removed uneccesary assignments to rp->BitMap
@
text
@d3 1
a3 1
*	$Id: fullbackfill.c,v 38.3 91/10/03 12:53:51 bart Exp Locker: bart $
d36 1
a36 3
				clip.MinX = clip.MinY = 0;
				clip.MaxX = cr->bounds.MaxX - cr->bounds.MinX;
				clip.MaxY = cr->bounds.MaxY - cr->bounds.MinY;
d38 4
a41 4
				/* re-align for off-screen bitmaps */

				clip.MinX += (cr->bounds.MinX & 0xF);
				clip.MaxX += (cr->bounds.MinX & 0xF);
@


38.3
log
@optimise clip rectangle initialization
@
text
@d3 1
a3 1
*	$Id: fullbackfill.c,v 38.2 91/08/02 10:20:01 mks Exp Locker: bart $
a19 1
struct BitMap *bm;
d29 3
a31 3
		if(bm = cr->BitMap)
		{
			struct Rectangle clip;
d33 18
a50 8
			rp->BitMap = bm;
			rp->Layer  = NULL;

			clip.MinX = clip.MinY = 0;
			clip.MaxX = cr->bounds.MaxX - cr->bounds.MinX;
			clip.MaxY = cr->bounds.MaxY - cr->bounds.MinY;

			/* re-align for off-screen bitmaps */
d52 6
a57 3
			clip.MinX += (cr->bounds.MinX & 0xF);
			clip.MaxX += (cr->bounds.MinX & 0xF);

d61 1
a61 1
					 clip,
a63 14

			rp->BitMap = sbm;
			rp->Layer  = l;
		}
	    }
	    else
	    {
		rp->BitMap = sbm;
		CallBackFillHook(l->BackFill,
				 rp,
				 l,
				 cr->bounds,
				 cr->bounds.MinX,
				 cr->bounds.MinY);
a65 1
	rp->BitMap = sbm;
@


38.2
log
@Native build version checkin...
@
text
@d3 1
a3 1
*	$Id$
d37 3
a39 6
			clip = cr->bounds;

			clip.MinX -= cr->bounds.MinX;
			clip.MaxX -= cr->bounds.MinX;
			clip.MinY -= cr->bounds.MinY;
			clip.MaxY -= cr->bounds.MinY;
@


38.1
log
@begin_v38_development
@
text
@d1 8
d14 2
d17 1
a17 2
FullBackFill(l)
struct Layer *l;
d19 5
a23 4
	struct ClipRect *cr;
	struct BitMap *bm;
	struct RastPort *rp = l->rp;
	struct BitMap *sbm = rp->BitMap;	 /* shared bitmap */
@
