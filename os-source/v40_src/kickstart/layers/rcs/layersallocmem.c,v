head     38.2;
branch   ;
access   ;
symbols  V40_1:38.2 V39_62:38.2 V39_61:38.2 V39_60:38.2 V39_58:38.2 V39_56:38.2 V39_55:38.2 V39_54:38.2 V39_53:38.2 V39_52:38.2 V39_51:38.2 V39_50:38.2 V39_49:38.2 V39_48:38.2 V39_46:38.2 V39_45:38.2 V39_44:38.2 V39_42:38.2 V39_41:38.2 V39_40:38.2 V39_39:38.2 V39_38:38.2 V39_37:38.2 V39_36:38.2 V39_35:38.2 V39_34:38.2 V39_33:38.2 V39_32:38.2 V39_30:38.2 V39_28:38.2 V39_27:38.2 V39_26:38.2 V39_25:38.2 V39_24:38.2 V39_23:38.2 V39_22:38.2 V39_21:38.2 V39_20:38.2 V39_18:38.2 V39_16:38.2 V39_15:38.2 V39_14:38.2 V39_12:38.2 V39_10:38.2 V38_7:38.2 V38_6:38.2 First_Native_Build:38.2;
locks    ; strict;
comment  @ * @;


38.2
date     91.08.02.10.20.32;  author mks;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.25.09.55.22;  author bart;  state Exp;
branches ;
next     ;


desc
@@


38.2
log
@Native build version checkin...
@
text
@/******************************************************************************
*
*	$Id: layersallocmem.c,v 38.1 91/07/25 09:55:22 bart Exp $
*
******************************************************************************/

#define	NEWCLIPRECTS_1_1

/* LayersAllocMem - bart ( barry a. whitebook ) 08.12.85 */
/* !!! this function is for Layers Internal Use ONLY !!! */
/* call AllocMem() ... if allocation sucessful return a pointer to the memory */
/* allocated... if unsucessful call Alert() to display No Memory message    */

#include <exec/types.h>
#include <graphics/layers.h>

#include "layersbase.h"

APTR LayersAllocMem(ULONG numbytes,ULONG flags,struct LayerInfo *li)
{
APTR memoryptr;

	if ( (memoryptr = (APTR)AllocMem(numbytes,flags) ) == NULL )
	{
		if (li == 0)	return(0);
		abort(li);	/* this never returns */
	}

	/* now put on list to be later freed */
	if  (!remember_to_free(li,memoryptr,numbytes))
	{
		FreeMem(memoryptr,numbytes);
		abort(li);
	}

	return(memoryptr);
}
@


38.1
log
@begin_v38_development
@
text
@d3 1
a3 1
*	$Id: layersallocmem.c,v 1.3 90/10/11 15:16:09 rsbx Exp $
d7 2
d17 1
a17 1
/*#define DEBUG*/
d19 1
a19 4
APTR LayersAllocMem(numbytes,flags,li)
ULONG numbytes;
ULONG flags;
struct LayerInfo *li;
d21 1
a21 1
	APTR memoryptr = NULL;
a25 3
#ifdef DEBUG
	printf("CALLING ABORT(mem needed=%lx,flags=%lx)\n",numbytes,flags);
#endif
d28 1
a28 3
#ifdef DEBUG
    printf("LayAllMem(%lx,%lx,%lx)",numbytes,flags,memoryptr);
#endif
d35 2
a36 1
    return(memoryptr);
@
