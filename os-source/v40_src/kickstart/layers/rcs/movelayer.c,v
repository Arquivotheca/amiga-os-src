head     38.1;
branch   ;
access   ;
symbols  V40_1:38.1 V39_62:38.1 V39_61:38.1 V39_60:38.1 V39_58:38.1 V39_56:38.1 V39_55:38.1 V39_54:38.1 V39_53:38.1 V39_52:38.1 V39_51:38.1 V39_50:38.1 V39_49:38.1 V39_48:38.1 V39_46:38.1 V39_45:38.1 V39_44:38.1 V39_42:38.1 V39_41:38.1 V39_40:38.1 V39_39:38.1 V39_38:38.1 V39_37:38.1 V39_36:38.1 V39_35:38.1 V39_34:38.1 V39_33:38.1 V39_32:38.1 V39_30:38.1 V39_28:38.1 V39_27:38.1 V39_26:38.1 V39_25:38.1 V39_24:38.1 V39_23:38.1 V39_22:38.1 V39_21:38.1 V39_20:38.1 V39_18:38.1 V39_16:38.1 V39_15:38.1 V39_14:38.1 V39_12:38.1 V39_10:38.1 V38_7:38.1 V38_6:38.1 First_Native_Build:38.1;
locks    ; strict;
comment  @ * @;


38.1
date     91.07.25.09.55.52;  author bart;  state Exp;
branches ;
next     ;


desc
@@



38.1
log
@begin_v38_development
@
text
@/******************************************************************************
*
*	$Id: movelayer.c,v 1.9 90/10/11 15:16:41 rsbx Exp $
*
******************************************************************************/

#include <exec/types.h>
#include <exec/nodes.h>
#include <exec/lists.h>
#include <exec/ports.h>
#include <graphics/gfx.h>
#include <graphics/clip.h>
#include <graphics/rastport.h>
#include <graphics/layers.h>

/*#define DEBUG
#define DEBUGDEBUG1
#define DEBUGDEBUG
#define DEBUGMOVE*/

/****** layers.library/MoveLayer ***********************************************
*  
*    NAME
*	MoveLayer -- Move layer to new position in BitMap.
*  
*    SYNOPSIS
*	result = MoveLayer( dummy, l, dx, dy ) 
*	d0                  a0     a1 d0  d1
*
*	LONG MoveLayer( LONG, struct Layer *, LONG, LONG);
*
*    FUNCTION
*	Move this layer to new position in shared BitMap.
*	If any refresh layers become revealed, collect damage and
*	set REFRESH bit in layer Flags.
*
*    INPUTS  
*	dummy - unused
*	l - pointer to a nonbackdrop layer 
*	dx - delta to add to current x position
*	dy - delta to add to current y position
*
*    RETURNS
*	result - TRUE if operation successful
*	         FALSE if failed (out of memory)
*
*    BUGS
*	May not handle (dx,dy) which attempts to move the layer ouside the
*	layer's RastPort->BitMap bounds .
*
*    SEE ALSO
*	graphics/layers.h, graphics/clip.h 
*
*******************************************************************************/

movelayer(l,dx,dy)
struct Layer *l;
short dx,dy;
{
	struct Rectangle r;
	r.MinX = dx;
	r.MaxX = 0;
	r.MinY = dy;
	r.MaxY = 0;
	return (movesizelayer(l,&r,FALSE));
}
@
