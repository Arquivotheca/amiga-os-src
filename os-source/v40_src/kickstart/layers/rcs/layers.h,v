head     39.4;
branch   ;
access   ;
symbols  V40_1:39.4 V39_62:39.4 V39_61:39.4 V39_60:39.4 V39_58:39.4 V39_56:39.4 V39_55:39.3 V39_54:39.3 V39_53:39.3 V39_52:39.3 V39_51:39.3 V39_50:39.3 V39_49:39.3 V39_48:39.3 V39_46:39.3 V39_45:39.3 V39_44:39.3 V39_42:39.3 V39_41:39.2 V39_40:39.2 V39_39:39.2 V39_38:39.2 V39_37:39.2 V39_36:39.2 V39_35:39.1 V39_34:39.1 V39_33:39.1 V39_32:39.1 V39_30:39.0;
locks    ; strict;
comment  @ * @;


39.4
date     92.04.14.16.37.39;  author mks;  state Exp;
branches ;
next     39.3;

39.3
date     92.02.12.13.55.32;  author mks;  state Exp;
branches ;
next     39.2;

39.2
date     91.12.31.19.14.36;  author mks;  state Exp;
branches ;
next     39.1;

39.1
date     91.11.18.18.29.29;  author mks;  state Exp;
branches ;
next     39.0;

39.0
date     91.11.15.20.17.10;  author mks;  state Exp;
branches ;
next     ;


desc
@This public include is now under the direct control of layer.library
@


39.4
log
@Added two bits for intuition...
@
text
@#ifndef	GRAPHICS_LAYERS_H
#define	GRAPHICS_LAYERS_H
/*
**	$Id: layers.h,v 39.3 92/02/12 13:55:32 mks Exp Locker: mks $
**
**	(C) Copyright 1985,1986,1987,1988,1989 Commodore-Amiga, Inc.
**	    All Rights Reserved
*/

#ifndef EXEC_LISTS_H
#include <exec/lists.h>
#endif

#ifndef EXEC_SEMAPHORES_H
#include <exec/semaphores.h>
#endif

#define LAYERSIMPLE		1
#define LAYERSMART		2
#define LAYERSUPER		4
#define LAYERUPDATING		0x10
#define LAYERBACKDROP		0x40
#define LAYERREFRESH		0x80
#define	LAYERIREFRESH		0x200
#define	LAYERIREFRESH2		0x400
#define LAYER_CLIPRECTS_LOST	0x100	/* during BeginUpdate */
					/* or during layerop */
					/* this happens if out of memory */

struct Layer_Info
{
struct	Layer		*top_layer;
struct	Layer		*check_lp;		/* !! Private !! */
struct	ClipRect	*obs;
struct	ClipRect	*FreeClipRects;		/* !! Private !! */
	LONG		PrivateReserve1;	/* !! Private !! */
	LONG		PrivateReserve2;	/* !! Private !! */
struct	SignalSemaphore	Lock;			/* !! Private !! */
struct	MinList		gs_Head;		/* !! Private !! */
	WORD		PrivateReserve3;	/* !! Private !! */
	VOID		*PrivateReserve4;	/* !! Private !! */
	UWORD		Flags;
	BYTE		fatten_count;		/* !! Private !! */
	BYTE		LockLayersCount;	/* !! Private !! */
	WORD		PrivateReserve5;	/* !! Private !! */
	VOID		*BlankHook;		/* !! Private !! */
	VOID		*LayerInfo_extra;	/* !! Private !! */
};

#define NEWLAYERINFO_CALLED 1

/*
 * LAYERS_NOBACKFILL is the value needed to get no backfill hook
 * LAYERS_BACKFILL is the value needed to get the default backfill hook
 */
#define	LAYERS_NOBACKFILL	((struct Hook *)1)
#define	LAYERS_BACKFILL		((struct Hook *)0)

#endif	/* GRAPHICS_LAYERS_H */
@


39.3
log
@Removed the public definition of the private allocation unit define
@
text
@d4 1
a4 1
**	$Id: layers.h,v 39.2 91/12/31 19:14:36 mks Exp Locker: mks $
d24 2
@


39.2
log
@Removed the rebuild counting stuff...
@
text
@d4 1
a4 1
**	$Id: layers.h,v 39.1 91/11/18 18:29:29 mks Exp Locker: mks $
a27 2
#define LMN_REGION      -1

a48 1
#define ALERTLAYERSNOMEM 0x83010000
@


39.1
log
@Simplified free cliprect list
@
text
@d4 1
a4 1
**	$Id: layers.h,v 39.0 91/11/15 20:17:10 mks Exp Locker: mks $
d45 1
a45 1
	WORD		RebuildCount;		/* !! Private !! */
@


39.0
log
@Initial layers.library release
@
text
@d4 1
a4 1
**	$Id$
d35 3
a37 1
struct	MinList		FreeClipRects;		/* !! Private !! */
d40 2
a41 2
	WORD		reserved;		/* !! Private !! */
	VOID		*PrivateReserve;	/* !! Private !! */
d52 7
@
