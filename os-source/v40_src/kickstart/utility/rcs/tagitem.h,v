head     40.1;
branch   ;
access   ;
symbols  V39_11:39.1 V39_10:39.1 V39_9:39.1 V39_8:39.1 V39_7:39.1 V39_5:39.1;
locks    ; strict;
comment  @*   @;


40.1
date     93.07.19.10.19.25;  author vertex;  state Exp;
branches ;
next     39.2;

39.2
date     93.02.10.14.54.52;  author vertex;  state Exp;
branches ;
next     39.1;

39.1
date     92.01.20.11.23.27;  author vertex;  state Exp;
branches ;
next     36.1;

36.1
date     90.07.12.15.49.09;  author rsbx;  state Exp;
branches ;
next     36.0;

36.0
date     90.05.11.22.11.26;  author jimm;  state Exp;
branches ;
next     ;


desc
@TagItem data structure and constants
@


40.1
log
@Removed references to MergeTagItems()
@
text
@#ifndef UTILITY_TAGITEM_H
#define UTILITY_TAGITEM_H
/*
**	$Id: tagitem.h,v 39.2 93/02/10 14:54:52 vertex Exp Locker: vertex $
**
**	Extended specification mechanism
**
**	(C) Copyright 1989-1992 Commodore-Amiga Inc.
**	All Rights Reserved
*/

/*****************************************************************************/


#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif


/*****************************************************************************/


/* Tags are a general mechanism of extensible data arrays for parameter
 * specification and property inquiry. In practice, tags are used in arrays,
 * or chain of arrays.
 *
 */

typedef ULONG Tag;

struct TagItem
{
    Tag	  ti_Tag;  	/* identifies the type of data */
    ULONG ti_Data;	/* type-specific data          */
};

/* constants for Tag.ti_Tag, control tag values */
#define TAG_DONE   (0L)	  /* terminates array of TagItems. ti_Data unused */
#define TAG_END	   (0L)   /* synonym for TAG_DONE                         */
#define	TAG_IGNORE (1L)	  /* ignore this item, not end of array		  */
#define	TAG_MORE   (2L)	  /* ti_Data is pointer to another array of TagItems
			   * note that this tag terminates the current array
			   */
#define	TAG_SKIP   (3L)	  /* skip this and the next ti_Data items	  */

/* differentiates user tags from control tags */
#define TAG_USER   ((ULONG)(1L<<31))

/* If the TAG_USER bit is set in a tag number, it tells utility.library that
 * the tag is not a control tag (like TAG_DONE, TAG_IGNORE, TAG_MORE) and is
 * instead an application tag. "USER" means a client of utility.library in
 * general, including system code like Intuition or ASL, it has nothing to do
 * with user code.
 */


/*****************************************************************************/


/* Tag filter logic specifiers for use with FilterTagItems() */
#define TAGFILTER_AND 0		/* exclude everything but filter hits	*/
#define TAGFILTER_NOT 1		/* exclude only filter hits		*/


/*****************************************************************************/


/* Mapping types for use with MapTags() */
#define MAP_REMOVE_NOT_FOUND 0	/* remove tags that aren't in mapList */
#define MAP_KEEP_NOT_FOUND   1	/* keep tags that aren't in mapList   */


/*****************************************************************************/


#endif /* UTILITY_TAGITEM_H */
@


39.2
log
@Cleared up comment on TAG_USER
@
text
@d4 1
a4 1
**	$Id: tagitem.h,v 39.1 92/01/20 11:23:27 vertex Exp Locker: vertex $
a70 13


/*****************************************************************************/


/* Merging types for use with MergeTagItems() */
#define MERGE_OR_LIST_1   0	/* list 1's item is preferred        */
#define MERGE_OR_LIST_2   1	/* list 2's item is preferred        */
#define MERGE_AND_LIST_1  2	/* item must appear in both lists    */
#define MERGE_AND_LIST_2  3	/* item must appear in both lists    */
#define MERGE_NOT_LIST_1  4	/* item must not appear in list 1    */
#define MERGE_NOT_LIST_2  5	/* item must not appear in list 2    */
#define MERGE_XOR         6	/* item must appear in only one list */
@


39.1
log
@V39 cleanup
@
text
@d4 1
a4 1
**	$Id: tagitem.h,v 36.1 90/07/12 15:49:09 rsbx Exp $
d37 1
a37 1
/* constants for Tag.ti_Tag, system tag values */
d46 2
a47 2
/* Indication of user tag, OR this in with user tag values */
#define TAG_USER   (1L<<31)  /* differentiates user tags from system tags */
d49 5
a53 2
/* NOTE: Until further notice, tag bits 16-30 are RESERVED and should be zero.
 *       Also, the value (TAG_USER | 0) should never be used as a tag value.
@


36.1
log
@Made to conform to include style guide.
@
text
@d2 1
a2 1
#define UTILITY_TAGITEM_H TRUE
d4 1
a4 1
**	$Id$
d6 1
a6 1
**	extended specification mechanism
d8 2
a9 2
**	(C) Copyright 1989,1990 Commodore-Amiga Inc.
**		All Rights Reserved
d12 3
d19 7
a25 7
/* ======================================================================= */
/* ====	TagItem	========================================================== */
/* ======================================================================= */
/* This data type may propagate through the system for more general use.
 * In the meantime, it is used as a general mechanism of extensible data
 * arrays for parameter specification and property inquiry (coming soon
 * to a display controller near you).
a26 1
 * In practice, an array (or chain of arrays) of TagItems is used.
d29 1
a29 1
typedef ULONG	Tag;
d31 4
a34 3
struct TagItem	{
    Tag		ti_Tag;
    ULONG	ti_Data;
d37 11
a47 11
/* ----	system tag values -----------------------------	*/
#define TAG_DONE   (0L)	/* terminates array of TagItems. ti_Data unused	*/
#define TAG_END	TAG_DONE
#define	TAG_IGNORE (1L)	/* ignore this item, not end of array		*/
#define	TAG_MORE   (2L)	/* ti_Data is pointer to another array of TagItems
			 * note that this tag terminates the current array
			 */
#define	TAG_SKIP   (3L)	/* skip this and the next ti_Data items		*/

/* ----	user tag identification -----------------------	*/
#define TAG_USER  (1L<<31)    /* differentiates user tags from system tags*/
d49 2
a50 2
/* until further notice, tag bits 16-30 are RESERVED and should be zero.
 * Also, the value (TAG_USER | 0) should never be used as a tag value.
d53 2
a54 3
/* ---- Tag filter logic specifiers ---- */
#define TAGFILTER_AND	0	/* exclude everything but filter hits	*/
#define TAGFILTER_NOT	1	/* exclude only filter hits		*/
d56 31
a86 1
#endif
@


36.0
log
@Initial RCS check-in.
@
text
@a0 1

d3 8
a14 16

/*** tagitem.h ****************************************************************
 *
 *  tagitem.h	extended specification mechanism
 *
 *  $Header: tagitem.h,v 1.5 89/08/17 18:54:45 jimm Exp $
 *
 *  Confidential Information: Commodore-Amiga Computer, Inc.
 *  Copyright (c) Commodore-Amiga Computer, Inc.
 *
 ****************************************************************************
 * CONFIDENTIAL and PROPRIETARY
 * Copyright (C) 1989, COMMODORE-AMIGA, INC.
 * All Rights Reserved
 ****************************************************************************/

@
