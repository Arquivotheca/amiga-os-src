head     39.12;
branch   ;
access   ;
symbols  V39_11:39.11 V39_10:39.11 V39_9:39.10 V39_8:39.8 V39_7:39.8 V39_5:39.7;
locks    ; strict;
comment  @*   @;


39.12
date     93.02.10.14.56.36;  author vertex;  state Exp;
branches ;
next     39.11;

39.11
date     92.06.03.17.16.31;  author mks;  state Exp;
branches ;
next     39.10;

39.10
date     92.04.13.16.19.23;  author mks;  state Exp;
branches ;
next     39.9;

39.9
date     92.04.13.16.00.32;  author mks;  state Exp;
branches ;
next     39.8;

39.8
date     92.04.08.23.19.16;  author mks;  state Exp;
branches ;
next     39.7;

39.7
date     92.04.07.08.19.11;  author mks;  state Exp;
branches ;
next     39.6;

39.6
date     92.04.04.16.25.07;  author mks;  state Exp;
branches ;
next     39.5;

39.5
date     92.01.24.10.44.47;  author vertex;  state Exp;
branches ;
next     39.4;

39.4
date     92.01.22.10.30.32;  author vertex;  state Exp;
branches ;
next     39.3;

39.3
date     92.01.21.10.41.47;  author vertex;  state Exp;
branches ;
next     39.2;

39.2
date     92.01.20.12.23.56;  author vertex;  state Exp;
branches ;
next     39.1;

39.1
date     92.01.20.11.26.05;  author vertex;  state Exp;
branches ;
next     36.6;

36.6
date     91.02.13.06.19.29;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     90.12.01.15.10.39;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     90.12.01.05.11.02;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     90.12.01.05.07.06;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     90.11.30.05.17.10;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     90.07.19.13.20.40;  author rsbx;  state Exp;
branches ;
next     36.0;

36.0
date     90.05.11.22.13.23;  author jimm;  state Exp;
branches ;
next     ;


desc
@the sfd file
@


39.12
log
@Clean up
@
text
@==id $Id: utility_lib.sfd,v 39.11 92/06/03 17:16:31 mks Exp Locker: vertex $
* "utility.library"
==base _UtilityBase
==include <exec/types.h>
==include <exec/ports.h>
==include <utility/tagitem.h>
==include <utility/date.h>
==include <utility/hooks.h>
==include <utility/name.h>
==bias 30
==public
==version 36
*
* Tag item functions
*
struct TagItem *FindTagItem(Tag tagVal, struct TagItem *tagList) (D0,A0)
ULONG GetTagData(Tag tagValue, ULONG defaultVal, struct TagItem *tagList) (D0,D1,A0)
ULONG PackBoolTags(ULONG initialFlags, struct TagItem *tagList, struct TagItem *boolMap) (D0,A0,A1)
struct TagItem *NextTagItem(struct TagItem **tagListPtr) (A0)
VOID FilterTagChanges(struct TagItem *changeList, struct TagItem *originalList, ULONG apply) (A0,A1,D0)
VOID MapTags(struct TagItem *tagList, struct TagItem *mapList, ULONG mapType) (A0,A1,D0)
struct TagItem *AllocateTagItems(ULONG numTags) (D0)
struct TagItem *CloneTagItems(struct TagItem *tagList) (A0)
VOID FreeTagItems(struct TagItem *tagList) (A0)
VOID RefreshTagItemClones(struct TagItem *clone, struct TagItem *original) (A0,A1)
BOOL TagInArray(Tag tagValue, Tag *tagArray) (D0,A0)
ULONG FilterTagItems(struct TagItem *tagList, Tag *filterArray, ULONG logic) (A0,A1,D0)
*
* Hook functions
*
ULONG CallHookPkt(struct Hook *hook, APTR object, APTR paramPacket) (A0,A2,A1)
==reserve 1
*
* Date functions
*
==reserve 1
VOID Amiga2Date(ULONG seconds, struct ClockData *result) (D0,A0)
ULONG Date2Amiga(struct ClockData *date) (A0)
ULONG CheckDate(struct ClockData *date) (A0)
*
* 32 bit integer muliply functions
*
LONG SMult32(LONG arg1, LONG arg2) (D0,D1)
ULONG UMult32(ULONG arg1, ULONG arg2) (D0,D1)
*
* 32 bit integer division funtions. The quotient and the remainder are
* returned respectively in d0 and d1
*
LONG SDivMod32(LONG dividend, LONG divisor) (D0,D1)
ULONG UDivMod32(ULONG dividend, ULONG divisor) (D0,D1)
==version 37
*
* International string routines
*
LONG Stricmp(STRPTR string1, STRPTR string2) (A0,A1)
LONG Strnicmp(STRPTR string1, STRPTR string2, LONG length) (A0,A1,D0)
UBYTE ToUpper(UBYTE character) (D0)
UBYTE ToLower(UBYTE character) (D0)
==version 39
*
* More tag Item functions
*
VOID ApplyTagChanges(struct TagItem *list, struct TagItem *changeList) (A0,A1)
==reserve 1
*
* 64 bit integer muliply functions. The results are 64 bit quantities
* returned in D0 and D1
*
LONG SMult64(LONG arg1, LONG arg2) (D0,D1)
ULONG UMult64(ULONG arg1, ULONG arg2) (D0,D1)
*
* Structure to Tag and Tag to Structure support routines
*
ULONG PackStructureTags(APTR pack,ULONG *packTable,struct TagItem *tagList) (A0,A1,A2)
ULONG UnpackStructureTags(APTR pack,ULONG *packTable,struct TagItem *tagList) (A0,A1,A2)
*
* New, object-oriented NameSpaces
*
BOOL AddNamedObject(struct NamedObject *nameSpace, struct NamedObject *object) (a0,a1)
struct NamedObject *AllocNamedObjectA(STRPTR name, struct TagItem *tagList) (a0,a1)
==varargs
struct NamedObject *AllocNamedObject(STRPTR name, Tag tag1, ...) (a0,a1)
LONG AttemptRemNamedObject(struct NamedObject *object) (a0)
struct NamedObject *FindNamedObject(struct NamedObject *nameSpace, STRPTR name, struct NamedObject *lastObject) (a0,a1,a2)
VOID FreeNamedObject(struct NamedObject *object) (a0)
STRPTR NamedObjectName(struct NamedObject *object) (a0)
VOID ReleaseNamedObject(struct NamedObject *object) (a0)
VOID RemNamedObject(struct NamedObject *object, struct Message *message) (a0,a1)
*
* Unique ID generator
*
ULONG GetUniqueID() ()
*
==reserve 4
*
==end
@


39.11
log
@Added the GetUniqueID() routine...
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 39.10 92/04/13 16:19:23 mks Exp Locker: mks $
d74 2
a75 2
ULONG PackStructureTags(APTR pack,ULONG *packtable,struct TagItem *tagList) (A0,A1,A2)
ULONG UnpackStructureTags(APTR pack,ULONG *packtable,struct TagItem *tagList) (A0,A1,A2)
d79 2
a80 3
BOOL AddNamedObject(struct NamedObject *namespace, struct NamedObject *object) (a0,a1)

struct NamedObject *AllocNamedObjectA(STRPTR name, struct TagItem *tags) (a0,a1)
a82 1

d84 1
a84 1
struct NamedObject *FindNamedObject(struct NamedObject *namespace, STRPTR name,struct NamedObject *lastobject) (a0,a1,a2)
a88 1

d93 1
a93 1

d95 1
a95 1

@


39.10
log
@Some more fixes
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 39.9 92/04/13 16:00:32 mks Exp Locker: mks $
d91 7
@


39.9
log
@Added the including of types.h
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 39.8 92/04/08 23:19:16 mks Exp Locker: mks $
d83 1
a83 1
struct NamedObject *AllocNamedObject(STRPTR, Tag tag1, ...) (a0,a1)
d86 1
a86 1
struct NamedObject *FindNamedObject(struct NamedObject *namespace, char *name,struct NamedObject *lastobject) (a0,a1,a2)
d88 1
a88 1
STRPTR *NamedObjectName(struct NamedObject *object) (a0)
@


39.8
log
@New NameSpace stuff added to utility
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 39.7 92/04/07 08:19:11 mks Exp Locker: mks $
d4 1
@


39.7
log
@Changed VOID * to APTR
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 39.6 92/04/04 16:25:07 mks Exp Locker: mks $
d4 1
d8 1
d75 16
@


39.6
log
@Added pack/unpack structure tags LVOs
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 39.5 92/01/24 10:44:47 vertex Exp Locker: mks $
d71 2
a72 2
ULONG PackStructureTags(void *pack,ULONG *packtable,struct TagItem *tagList) (A0,A1,A2)
ULONG UnpackStructureTags(void *pack,ULONG *packtable,struct TagItem *tagList) (A0,A1,A2)
@


39.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 39.4 92/01/22 10:30:32 vertex Exp Locker: vertex $
d68 5
@


39.4
log
@Removed return value from MapTags()
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 39.3 92/01/21 10:41:47 vertex Exp Locker: vertex $
d11 1
a11 1
* Tag items functions
d56 12
@


39.3
log
@Removed non-existant functions
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 39.2 92/01/20 12:23:56 vertex Exp Locker: vertex $
d18 1
a18 1
ULONG MapTags(struct TagItem *tagList, struct TagItem *mapList, ULONG mapType) (A0,A1,D0)
@


39.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 39.1 92/01/20 11:26:05 vertex Exp Locker: vertex $
a55 6
==version 39
*
* More tag functions
*
VOID ApplyTagChanges(struct TagItem *list, struct TagItem *changeList) (A0,A1)
struct TagItem *MergeTagItems(struct TagItem *list1, struct TagItem *list2, struct TagItem *mergeControl) (A0,A1,D0)
@


39.1
log
@V39 cleanup
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 39.1 91/02/13 06:19:29 vertex Exp $
d14 1
a14 1
ULONG GetTagData(Tag tagValue, ULONG default, struct TagItem *tagList) (D0,D1,A0)
@


36.6
log
@CHanged BOOL params to LONG
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 36.5 90/12/01 15:10:39 jesup Exp $
d9 1
a9 19
* *** TagItem FUNCTIONS ***
struct TagItem *FindTagItem( Tag tagVal, struct TagItem *tagList ) (d0,a0)
ULONG GetTagData( Tag tagVal, ULONG defaultVal, struct TagItem *tagList )
	(d0,d1,a0)
ULONG PackBoolTags( ULONG initialFlags, struct TagItem *tagList,
	struct TagItem *boolMap ) (d0,a0,a1)
struct TagItem *NextTagItem( struct TagItem **tagListPtr ) (a0)
VOID FilterTagChanges( struct TagItem *newTagList, struct TagItem *oldTagList,
	LONG apply ) (a0,a1,d0)
VOID MapTags( struct TagItem *tagList, struct TagItem *mapList,
	LONG includeMiss ) (a0,a1,d0)
struct TagItem *AllocateTagItems( ULONG numItems ) (d0)
struct TagItem *CloneTagItems( struct TagItem *tagList ) (a0)
VOID FreeTagItems( struct TagItem *tagList ) (a0)
VOID RefreshTagItemClones( struct TagItem *cloneList,
	struct TagItem *origList ) (a0,a1)
BOOL TagInArray( Tag tagVal, Tag *tagArray ) (d0,a0)
LONG FilterTagItems( struct TagItem *tagList, Tag *filterArray, LONG logic )
	(a0,a1,d0)
d11 18
a28 3
* *** HOOK FUNCTIONS *** *
ULONG CallHookPkt( struct Hook *hook, APTR object, APTR paramPacket )
	(a0,a2,a1)
d31 2
a32 1
* *** DATE FUNCTIONS *** *
d34 25
a58 3
VOID Amiga2Date( ULONG amigaTime, struct ClockData *date ) (d0,a0)
ULONG Date2Amiga( struct ClockData *date ) (a0)
ULONG CheckDate( struct ClockData *date ) (a0)
d60 2
a61 12
* *** 32 BIT MATH FUNCTIONS *** *
LONG SMult32( LONG factor1, LONG factor2 ) (d0,d1)
ULONG UMult32( ULONG factor1, ULONG factor2 ) (d0,d1)
* NOTE: Quotient:Remainder returned in d0:d1
LONG SDivMod32( LONG dividend, LONG divisor ) (d0,d1)
ULONG UDivMod32( ULONG dividend, ULONG divisor ) (d0,d1)
*
* *** International string routines ***
LONG Stricmp(UBYTE *string1, UBYTE *string2) (a0,a1)
LONG Strnicmp(UBYTE *string1, UBYTE *string2, LONG length) (a0,a1,d0)
UBYTE ToUpper(UBYTE character) (d0)
UBYTE ToLower(UBYTE character) (d0)
@


36.5
log
@Fixed it again (must not use char)
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 36.4 90/12/01 05:11:02 jesup Exp Locker: jesup $
d17 1
a17 1
	BOOL apply ) (a0,a1,d0)
d19 1
a19 1
	BOOL includeMiss ) (a0,a1,d0)
@


36.4
log
@Changed name of toupper/tolower
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 36.3 90/12/01 05:07:06 jesup Exp Locker: jesup $
d48 2
a49 2
LONG Stricmp(char *string1, char *string2) (a0,a1)
LONG Strnicmp(char *string1, char *string2, LONG length) (a0,a1,d0)
@


36.3
log
@Fixed strnicmp def
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 36.2 90/11/30 05:17:10 jesup Exp Locker: jesup $
d50 2
a51 2
UBYTE Toupper(UBYTE character) (d0)
UBYTE Tolower(UBYTE character) (d0)
@


36.2
log
@Added new functions
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 36.1 90/07/19 13:20:40 rsbx Exp $
d49 1
a49 1
LONG Stricmp(char *string1, char *string2, LONG length) (a0,a1,d0)
@


36.1
log
@Added includes to make -ct option happy with the protos.
@
text
@d1 1
a1 1
==id $Id: utility_lib.sfd,v 36.0 90/05/11 22:13:23 jimm Exp Locker: rsbx $
d46 6
@


36.0
log
@Initial RCS check-in.
@
text
@d1 1
a1 1
==id $Id: dummy,v 0.0 90/05/07 16:03:31 kodiak Exp $
d5 2
@
