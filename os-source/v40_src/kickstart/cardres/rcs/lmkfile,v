head     39.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


39.2
date     93.02.16.13.02.51;  author darren;  state Exp;
branches ;
next     39.1;

39.1
date     93.02.12.13.01.09;  author darren;  state Exp;
branches ;
next     39.0;

39.0
date     92.12.02.11.21.58;  author darren;  state Exp;
branches ;
next     1.4;

1.4
date     92.09.04.09.16.33;  author darren;  state Exp;
branches ;
next     1.3;

1.3
date     92.06.01.17.05.37;  author darren;  state Exp;
branches ;
next     1.2;

1.2
date     91.10.18.16.13.40;  author darren;  state Exp;
branches ;
next     1.1;

1.1
date     91.10.11.09.40.07;  author darren;  state Exp;
branches ;
next     ;


desc
@Initial check-in Alpha 1 credit card resource.
Amiga native makefile; to be updated soon.
@


39.2
log
@V40 build
@
text
@VERSION=	40
RELVERSION=	40
SOURCE=		V40:
SUBSYSNAME=	cardres
MAKEFILE=	lmkfile

SRCDIR=		src/kickstart/cardres/
FULLPATH=	$(SOURCE)$(SRCDIR)

LOCAL=		work:card/

LIBDIR=		lib:
INCLUDE=	$(SOURCE)include
INCDIR=		$(SOURCE)include/
STRIP=		BLINK QUIET NODEBUG FROM

AFILES=		resource.asm tuples.asm sysmem.asm debug.asm endmodule.asm

EXTERNIFILE=	card.i
EXTERNHFILE=	card.h

MYIFILES=       carddata.i gayle.i debug.i tuples.i $(EXTERNIFILE)

SFDFILE=	cardres_lib.sfd

BINFILES=	cardres.ld cardres.ld.strip

AFLAGS=		-cfvqrsy
LFLAGS=		BATCH BUFSIZE 1024 SMALLCODE SMALLDATA MAP cardres.map,f,l,h,s,x

MYLIBS=		lib:debug.lib lib:amiga.lib

FIRSTO=		resource.o 
OFILES=		tuples.o sysmem.o debug.o endmodule.o

.asm.o:	
	@@echo "assembling $*.asm"
	casm -a $*.asm -o $*.o -i $(INCLUDE) $(AFLAGS)

all:	$(SUBSYSNAME).ld

$(SUBSYSNAME).ld:	$(FIRSTO) $(OFILES)
	BLINK <with <
	$(LFLAGS)
	FROM $(FIRSTO) $(OFILES)
	TO $(SUBSYSNAME).ld
	LIB $(LIBDIR)debug.lib $(LIBDIR)amiga.lib
	VERBOSE
	<
	$(STRIP) $(SUBSYSNAME).ld TO $(SUBSYSNAME).ld.strip

bumprev:
	bumprev $(RELVERSION) $(SUBSYSNAME)_rev

release:
	@@delete \#?.o
	@@delete \#?.ld
	@@copy $(FULLPATH)$(SUBSYSNAME)_rev.rev $(SUBSYSNAME)_rev.rev
	@@lmk bumprev
	@@lmk docs
	@@lmk

internal:
	@@echo "Copying .ld files to source"
	@@copy $(BINFILES) $(FULLPATH)
	
	@@echo "Copying .asm files to source"
	@@protect $(FULLPATH)\#?.asm +wd
	@@copy $(AFILES) $(FULLPATH)

	@@echo "Copying include files to source"
	@@protect $(FULLPATH)\#?.i +wd
	@@protect $(FULLPATH)\#?.h +wd
	@@copy $(MYIFILES) $(FULLPATH)
	@@copy $(EXTERNHFILE) $(FULLPATH)

	@@echo "Copying public includes"
	@@protect $(INCDIR)resources/$(EXTERNIFILE) +wd
	@@protect $(INCDIR)resources/$(EXTERNHFILE) +wd
	@@protect $(SOURCE)include/internal/$(EXTERNIFILE) +wd
	@@copy $(EXTERNIFILE) $(INCDIR)resources/
	@@copy $(EXTERNHFILE) $(INCDIR)resources/
	@@copy $(EXTERNIFILE) $(SOURCE)include/internal/

	@@echo "Copying _rev files to source"
	@@copy $(SUBSYSNAME)_rev.rev $(FULLPATH)
	@@copy $(SUBSYSNAME)_rev.i $(FULLPATH)
	@@copy $(SUBSYSNAME)_rev.h $(FULLPATH)

	@@echo "Copying lmkfile to source"
	@@protect $(FULLPATH)$(MAKEFILE) +wd
	@@copy $(MAKEFILE) $(FULLPATH)

	@@echo "Copying doc to public docs"
	@@copy $(SUBSYSNAME).doc $(SOURCE)doc

	@@echo "Copying sfd to public sfds"
	@@copy $(SFDFILE) $(SOURCE)lib/sfd

	@@echo "Done"


docs:
	@@echo "Making docs"
	@@delete $(SUBSYSNAME).doc
	@@delete $(SUBSYSNAME).cat
	@@join $(AFILES) TO $(SUBSYSNAME).cat
	@@autodoc > $(SUBSYSNAME).doc -a -C -s -l78 $(SUBSYSNAME).cat


pragmas:
	@@echo "Making pragmas/protos"
	@@execute < <
	failat 21 ;
	makedir ram:sfd ;
	copy $(SFDFILE) ram:sfd ;
	cd ram:sfd ;
	sfd $(SFDFILE) ;
	copy PROTOS/\#? TO $(LOCAL) QUIET;
	copy PRAGMAS/\#? TO $(LOCAL) QUIET;
	copy FD/\#? TO $(LOCAL) QUIET;
	cd ram: ;
	delete ram:sfd/\#? ALL FORCE QUIET;
	delete ram:sfd QUIET ;
	<

resource.o:	resource.asm $(SUBSYSNAME)_rev.i $(MYIFILES)

tuples.o:	tuples.asm $(MYIFILES)

sysmem.o:	sysmem.asm $(MYIFILES)

#bootcard.o:	bootcard.asm $(MYIFILES)

debug.o:	debug.asm debug.i

endmodule.o:	endmodule.asm $(MYIFILES)

	@


39.1
log
@Make version/revision independent of build dir
@
text
@d1 1
a1 1
VERSION=	39
d3 1
a3 1
SOURCE=		V39:
@


39.0
log
@Make in V39
@
text
@d2 1
d53 1
a53 1
	bumprev $(VERSION) $(SUBSYSNAME)_rev
@


1.4
log
@minor change
@
text
@d1 2
a2 2
VERSION=	37
SOURCE=		V37:
@


1.3
log
@Some changes to release docs, sfd, and includes.  Also make
fd from sfd, etc
@
text
@d12 1
d37 1
a37 1
	casm -a $*.asm -o $*.o -i $(INCDIR) $(AFLAGS)
@


1.2
log
@Now has make release (does an auto-clean of .o files, rebuilds),
and internal, which copies stuff off.
@
text
@d9 2
d12 1
a12 1
INCDIR=		include:
d22 1
a22 1
FDFILE=		card_lib.fd
d55 1
d58 1
d92 6
d109 15
a123 3
card_pragmas.h:	$(FDFILE)
	@@echo "Remaking card_pragmas.h"
	fd2pragma $(FDFILE) card_pragmas.h
@


1.1
log
@Initial revision
@
text
@d6 2
a7 2
#LIBDIR=		$(SOURCE)lib/
#INCDIR=		$(SOURCE)include
d15 2
a16 2
EXTERNIFILES=	card.i
EXTERNHFILES=	card.h
d18 1
a18 1
MYIFILES=       carddata.i gayle.i debug.i tuples.i $(EXTERNIFILES)
d51 38
a88 25
backup:
	assign backup: df0:
	@@copy \#?.asm backup:
	@@copy \#?.i backup:
	@@copy \#?.h backup:
	@@copy \#?.txt backup:
	@@copy \#?.fd backup:
	@@copy lmkfile backup:
	@@copy loadc/\#?.asm backup:loadc
	@@copy loadc/\#?.c backup:loadc
	@@copy loadc/\#?.asm backup:loadc
	@@copy loadc/\#?.h backup:loadc
	@@copy loadc/lmkfile backup:loadc
	@@copy strap/\#?.asm backup:strap
	@@copy strap/\#?.c backup:strap
	@@copy strap/\#?.h backup:strap
	@@copy strap/lmkfile backup:strap
	@@copy dev/\#?.asm backup:dev
	@@copy dev/\#?.asm backup:dev
	@@copy dev/\#?.h backup:dev
	@@copy dev/lmkfile backup:dev
	@@copy simulators/\#?.asm backup:simulators
	@@copy simulators/\#?.c backup:simulators
	@@copy simulators/\#?.h backup:simulators
	@@copy simulators/lmkfile backup:simulators
@
