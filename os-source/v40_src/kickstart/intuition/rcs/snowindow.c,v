head     38.8;
branch   ;
access   ;
symbols  V40_85:38.8 V40_71:38.8 V40_68:38.8 V40_65:38.8 V40_47:38.8 V40_45:38.8 V40_37:38.8 V40_34:38.8 V40_29:38.8 V39_2415:38.8 V39_2369:38.7 V39_2339:38.7 V39_2332:38.7 V39_2275:38.7 V39_2256:38.7 V39_2210:38.7 V39_2192:38.7 V39_2084:38.7 V39_2082:38.7 V39_2076:38.7 V39_2073:38.7 V39_2058:38.7 V39_2051:38.7 V39_2031:38.7 V39_2017:38.7 V39_2012:38.7 V39_1985:38.7 V39_1933:38.7 V39_1819:38.7 V39_1805:38.7 V39_1783:38.7 V39_1695:38.7 V39_1621:38.6 V39_1620:38.6 V39_1508:38.6 V39_1485:38.6 V39_1461:38.6 V39_1458:38.6 V39_1456:38.6 V39_1405:38.6 V39_1368:38.6 V39_1360:38.6 V39_1324:38.6 V39_1147:38.6 V39_1143:38.6 V39_1141:38.6 V39_1120:38.6 V39_1116:38.6 V39_1104:38.6 V39_1100:38.6 V39_1078:38.6 V39_1073:38.6 V39_757:38.5 V39_702:38.5 V39_557:38.2 V39_553:38.2 V39_551:38.2 V39_510:38.2 V39_495:38.2 V39_416:38.0 V39_383:38.0 V39_371:38.0 V39_336:38.0 V39_323:38.0 V39_295:38.0 V39_277:38.0 V39_254:38.0 V39_222:38.0 V39_185:38.0 V39_171:38.0 V39_161:38.0 V38_159:38.0 V38_116:38.0 V38_59:38.0;
locks    ; strict;
comment  @*   @;


38.8
date     93.01.14.14.25.33;  author peter;  state Exp;
branches ;
next     38.7;

38.7
date     92.07.07.15.24.26;  author peter;  state Exp;
branches ;
next     38.6;

38.6
date     92.04.07.17.58.45;  author peter;  state Exp;
branches ;
next     38.5;

38.5
date     92.03.21.14.55.08;  author peter;  state Exp;
branches ;
next     38.4;

38.4
date     92.03.19.15.55.34;  author peter;  state Exp;
branches ;
next     38.3;

38.3
date     92.03.19.10.54.47;  author peter;  state Exp;
branches ;
next     38.2;

38.2
date     92.02.20.12.18.07;  author peter;  state Exp;
branches ;
next     38.1;

38.1
date     92.02.17.17.18.10;  author peter;  state Exp;
branches ;
next     38.0;

38.0
date     91.06.12.14.32.41;  author peter;  state Exp;
branches ;
next     ;


desc
@@


38.8
log
@Added itMODIFYPROP.
@
text
@/*** snowindow.c ********************************************************
 *
 *  sNoWindow state processing
 *
 *  $Id: snowindow.c,v 38.7 92/07/07 15:24:26 peter Exp Locker: peter $
 *
 *  Confidential Information: Commodore-Amiga, Inc.
 *  Copyright (C) 1989, Commodore-Amiga, Inc.
 *  All Rights Reserved
 *
 ****************************************************************************/


#include "intuall.h"

#define D(x)	;
#define DSTUB(x)	;

/* state sNoWindow
 *
 * global data used:
 *	none
 *
 * local state data:
 *	none
 */

/* transition startNoWindow()
 * called by:
 *	sIdleWindow	- itCLOSEWIN
 *	used as returnNoWindow in sIdleWindow
 * with state data:
 * description:
 */
startNoWindow()
{
    struct IntuitionBase	*IBase = fetchIBase();

    D( printf("transition function startNoWindow, cstate: %ld\n", 
	IBase->CurrentState ));

    IBase->ActiveWindow = NULL;
    IBase->CurrentState = sNoWindow;
}

/*
 * passed to:
 *	startScreenDrag
 */
returnNoWindow()
{
    D( printf("returnNoWindow\n") );
    fetchIBase()->CurrentState = sNoWindow;
}

/*
 * state dispatcher
 * state transitions called:
 *  startIdleWindow()
 *  startScreenDrag()
 */
dNoWindow()
{
    struct IntuitionBase	*IBase = fetchIBase();

    switch ( IT->it_Command )
    {
    case itACTIVATEWIN:	/* start idlewindow */
    case itSELECTDOWN:	/* start idlewindow */
	startIdleWindow();
	return;

    case itMETADRAG:	/* do it */
	startScreenDrag( returnNoWindow );
	return;

	/* default processing	*/
#if 0
    case itMENUDOWN:	/* do default */
    case itMENUUP:	/* do default */
    case itSELECTUP:	/* do default */
    case itMOUSEMOVE:	/* do default */
    case itRAWKEY:	/* do default */
    case itTIMER:	/* do default */
    case itDISKCHANGE:	/* do default */

    case itOPENSCREEN:	/* do default */
    case itACTIVATEGAD:	/* do default */
    case itSETREQ:	/* do default */
    case itCLEARREQ:	/* do default */
    case itOPENWIN:	/* do default */
    case itCLOSEWIN:	/* do default */
    case itVERIFY:	/* do default */
    case itREMOVEGAD:	/* do default */
    case itSETMENU:	/* do default */
    case itCLEARMENU:	/* do default */
    case itCHANGEWIN:	/* do default */
    case itZOOMWIN:	/* do default */
    case itDEPTHWIN:	/* do default */
    case itMOVESCREEN:	/* do default */
    case itDEPTHSCREEN:	/* do default */
    case itCLOSESCREEN:	/* do default */
    case itNEWPREFS:	/* do default */
    case itMODIFYIDCMP:	/* do default */
    case itCHANGESCBUF:	/* do default */
    case itCOPYSCBUF:	/* do default */
    case itSETPOINTER:	/* do default */
    case itGADGETMETHOD:/* do default */
    case itMODIFYPROP:	/* do default */
#endif
    default:		/* itDEFAULT: do default */
	doDefault();

    }
}

@


38.7
log
@itGADGETMETHOD does default.
@
text
@d5 1
a5 1
 *  $Id: snowindow.c,v 38.6 92/04/07 17:58:45 peter Exp Locker: peter $
d109 1
@


38.6
log
@Handles itSETPOINTER token.
@
text
@d5 1
a5 1
 *  $Id: snowindow.c,v 38.5 92/03/21 14:55:08 peter Exp Locker: peter $
d108 1
@


38.5
log
@Deleted itATTACHSCREEN token.
@
text
@d5 1
a5 1
 *  $Id: snowindow.c,v 38.4 92/03/19 15:55:34 peter Exp Locker: peter $
d107 1
@


38.4
log
@Now handle itATTACHSCREEN token.
@
text
@d5 1
a5 1
 *  $Id: snowindow.c,v 38.3 92/03/19 10:54:47 peter Exp Locker: peter $
a100 1
    case itATTACHSCREEN:	/* do default */
@


38.3
log
@Added itDEFAULT comment.
@
text
@d5 1
a5 1
 *  $Id: snowindow.c,v 38.2 92/02/20 12:18:07 peter Exp Locker: peter $
d101 1
@


38.2
log
@Defaults new itCOPYSCBUF token.
@
text
@d5 1
a5 1
 *  $Id: snowindow.c,v 38.1 92/02/17 17:18:10 peter Exp Locker: peter $
d108 1
a108 1
    default:
@


38.1
log
@Clarified what each token does.  Removed references to unused itBORDERPATROL.
Double-buffer token does default.
@
text
@d5 1
a5 1
 *  $Id: snowindow.c,v 38.0 91/06/12 14:32:41 peter Exp Locker: peter $
d106 1
@


38.0
log
@Initial V38 check-in (matches V37 release).
@
text
@d5 1
a5 1
 *  $Id: snowindow.c,v 1.5 90/04/19 15:50:28 jimm Exp $
d68 2
a69 2
    case itACTIVATEWIN:
    case itSELECTDOWN:
d73 1
a73 1
    case itMETADRAG:
d79 27
a105 27
    case itMENUDOWN:
    case itMENUUP:
    case itSELECTUP:
    case itMOUSEMOVE:
    case itRAWKEY:
    case itTIMER:
    case itDISKCHANGE:

    case itOPENSCREEN:
    case itACTIVATEGAD:
    case itSETREQ:
    case itCLEARREQ:
    case itOPENWIN:
    case itCLOSEWIN:
    case itVERIFY:
    case itREMOVEGAD:
    case itSETMENU:
    case itCLEARMENU:
    case itCHANGEWIN:
    case itZOOMWIN:
    case itDEPTHWIN:
    case itMOVESCREEN:
    case itDEPTHSCREEN:
    case itBORDERPATROL:
    case itCLOSESCREEN:
    case itNEWPREFS:
    case itMODIFYIDCMP:
@
