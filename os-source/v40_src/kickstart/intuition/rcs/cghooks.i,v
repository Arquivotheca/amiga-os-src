head     38.1;
branch   ;
access   ;
symbols  V40_85:38.1 V40_71:38.1 V40_68:38.1 V40_65:38.1 V40_47:38.1 V40_45:38.1 V40_37:38.1 V40_34:38.1 V40_29:38.1 V39_2415:38.1 V39_2369:38.1 V39_2339:38.1 V39_2332:38.1 V39_2275:38.1 V39_2256:38.1 V39_2210:38.1 V39_2192:38.1 V39_2084:38.1 V39_2082:38.1 V39_2076:38.1 V39_2073:38.1 V39_2058:38.1 V39_2051:38.1 V39_2031:38.1 V39_2017:38.1 V39_2012:38.1 V39_1985:38.1 V39_1933:38.1 V39_1819:38.1 V39_1805:38.1 V39_1783:38.1 V39_1695:38.1 V39_1621:38.1 V39_1620:38.1 V39_1508:38.1 V39_1485:38.1 V39_1461:38.1 V39_1458:38.1 V39_1456:38.1 V39_1405:38.1 V39_1368:38.1 V39_1360:38.1 V39_1324:38.1 V39_1147:38.1 V39_1143:38.1 V39_1141:38.1 V39_1120:38.1 V39_1116:38.1 V39_1104:38.1 V39_1100:38.1 V39_1078:38.1 V39_1073:38.1 V39_757:38.1 V39_702:38.1 V39_557:38.1 V39_553:38.1 V39_551:38.1 V39_510:38.1 V39_495:38.1 V39_416:38.1 V39_383:38.1 V39_371:38.1 V39_336:38.1 V39_323:38.1 V39_295:38.1 V39_277:38.1 V39_254:38.1 V39_222:38.1 V39_185:38.0 V39_171:38.0 V39_161:38.0 V38_159:38.0 V38_116:38.0 V38_59:38.0;
locks    ; strict;
comment  @*   @;


38.1
date     91.11.11.13.43.34;  author peter;  state Exp;
branches ;
next     38.0;

38.0
date     91.06.12.14.14.21;  author peter;  state Exp;
branches ;
next     ;


desc
@@


38.1
log
@Copyright now starts at 1988.
@
text
@    IFND INTUITION_CGHOOKS_I
INTUITION_CGHOOKS_I SET 1
**
** $Id: cghooks.i,v 38.0 91/06/12 14:14:21 peter Exp Locker: peter $
**
**  Custom gadget processing
**
**  (C) Copyright 1988,1989,1990 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

    IFND EXEC_TYPES_I
    INCLUDE "exec/types.i"
    ENDC

    IFND INTUITION_INTUITION_I
    INCLUDE "intuition/intuition.i"
    ENDC

; ========================================================================
; === Gadget Info =========================================================
; ========================================================================

; Package of information passed to custom and 'boopsi'
; gadget "hook" functions.  This structure is READ ONLY.

 STRUCTURE GadgetInfo,0
;    APTR ggi_Gadget

    APTR ggi_Screen
    APTR ggi_Window	 ; null for screen gadgets
    APTR ggi_Requester	 ; null if not GTYP_REQGADGET
    
    ; rendering information:
    ; don't use these without cloning/locking.
    ; Official way is to call ObtainRPort()
    APTR ggi_RastPort
    APTR ggi_Layer

    ; copy of dimensions of screen/window/g00/req/group
    ; that gadget resides in.  Left/Top of this box is
    ; offset from window mouse coordinates to gadget coordinates
    ; 	screen gadgets:			0,0 (from screen coords)
    ;	window gadgets (no g00):  	0,0
    ;  GZZGADGETs (borderlayer): 	0,0
    ;  GZZ innerlayer gadget:  	borderleft, bordertop
    ;  Requester gadgets: 		reqleft, reqtop
    STRUCT 	ggi_Domain,ibox_SIZEOF

    ; these are the pens for the window or screen
    STRUCT	ggi_Pens,2	; detail and block pen UBYTE's

    ; the Detail and Block pens in ggi_DrInfo->dri_Pens[] are
    ; for the screen. Use the above for window-sensitive
    ; colors.
    APTR ggi_DrInfo

    ; the size of this struct is not defined, since it is allocated
    ; ONLY by Intuition.
    ;    LABEL ggi_SIZEOF


    ENDC
@


38.0
log
@Initial V38 check-in (matches V37 release).
@
text
@d4 1
a4 1
** $Id: cghooks.i,v 36.3 91/02/05 19:01:16 peter Exp $
d8 1
a8 1
**  (C) Copyright 1985,1986,1987,1988,1989,1990 Commodore-Amiga, Inc.
@
