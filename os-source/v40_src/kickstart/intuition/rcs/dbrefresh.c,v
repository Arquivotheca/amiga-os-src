head     38.1;
branch   ;
access   ;
symbols  V40_85:38.1 V40_71:38.1 V40_68:38.1 V40_65:38.1 V40_47:38.1 V40_45:38.1 V40_37:38.1 V40_34:38.1 V40_29:38.1 V39_2415:38.1 V39_2369:38.1 V39_2339:38.1 V39_2332:38.1 V39_2275:38.1 V39_2256:38.1 V39_2210:38.1 V39_2192:38.1 V39_2084:38.1 V39_2082:38.1 V39_2076:38.1 V39_2073:38.1 V39_2058:38.1 V39_2051:38.1 V39_2031:38.1 V39_2017:38.1 V39_2012:38.1 V39_1985:38.1 V39_1933:38.1 V39_1819:38.1 V39_1805:38.1 V39_1783:38.1 V39_1695:38.1 V39_1621:38.1 V39_1620:38.1 V39_1508:38.1 V39_1485:38.1 V39_1461:38.1 V39_1458:38.1 V39_1456:38.1 V39_1405:38.1 V39_1368:38.1 V39_1360:38.1 V39_1324:38.1 V39_1147:38.1 V39_1143:38.1 V39_1141:38.1 V39_1120:38.1 V39_1116:38.1 V39_1104:38.1 V39_1100:38.1 V39_1078:38.1 V39_1073:38.1 V39_757:38.1 V39_702:38.1 V39_557:38.1 V39_553:38.1 V39_551:38.1 V39_510:38.1 V39_495:38.1 V39_416:38.1 V39_383:38.0 V39_371:38.0 V39_336:38.0 V39_323:38.0 V39_295:38.0 V39_277:38.0 V39_254:38.0 V39_222:38.0 V39_185:38.0 V39_171:38.0 V39_161:38.0 V38_159:38.0 V38_116:38.0 V38_59:38.0;
locks    ; strict;
comment  @*   @;


38.1
date     92.02.11.13.35.15;  author peter;  state Exp;
branches ;
next     38.0;

38.0
date     91.06.12.14.15.30;  author peter;  state Exp;
branches ;
next     ;


desc
@@


38.1
log
@BPattern is now of "size" 1.
@
text
@/*** dbrefresh.c *************************************************************
 *
 *  debug code for BorderPatrol refresh window stuff
 *	part of intuition debug.lib
 *
 *  $Id: dbrefresh.c,v 38.0 91/06/12 14:15:30 peter Exp Locker: peter $
 *
 *  Confidential Information: Commodore-Amiga, Inc.
 *  Copyright (C) 1989, Commodore-Amiga, Inc.
 *  All Rights Reserved
 *
 ****************************************************************************/

#include "intuall.h"

#define REFRESHDELAY	( 300000L )
#define QREFRESHDELAY	( 500000L/4 )


debugRefresh( rp, width, height )
struct RastPort	*rp;
{
    extern USHORT	BPattern[];
    struct IntuitionBase	*IBase = fetchIBase();

    /* just turn the sucker on, OK?	*/
    IBase->DebugFlag =  IDF_BPATTERN | IDF_BPAUSE;

    if ( TESTFLAG( IBase->DebugFlag, IDF_BPATTERN|IDF_BPAUSE ) )
    {

	BlastPattern( rp, 0, 0, width - 1, height - 1,
		BPattern, 1, 3, 0, JAM1);

	if ( TESTFLAG(IBase->DebugFlag, IDF_BPAUSE ) )
	{
	    if (!kquery("keep asking?"))
		    CLEARFLAG(IBase->DebugFlag, IDF_BPAUSE);
	}
	else if ( TESTFLAG(IBase->DebugFlag, IDF_BPATTERN ) )
	{
	    spinDelay( QREFRESHDELAY );
	    BlastPattern( rp, 0, 0, width - 1, height - 1,
		    BPattern, 1, 1, 0, JAM1);
	    spinDelay( QREFRESHDELAY );
	    BlastPattern( rp, 0, 0, width - 1, height - 1,
		    BPattern, 1, 2, 0, JAM1);
	    spinDelay( QREFRESHDELAY );
	    BlastPattern( rp, 0, 0, width - 1, height - 1,
		    BPattern, 1, 3, 0, JAM1);
	    spinDelay( QREFRESHDELAY );
	}

	SetRast( rp, 0 );
    }
}

spinDelay( delay )
LONG	delay;
{
    LONG	delaycnt;
    delaycnt = delay;
    while ( delaycnt-- );
}

waitFrames( numframes )
{
    while ( numframes-- ) WaitTOF();
}
@


38.0
log
@Initial V38 check-in (matches V37 release).
@
text
@d6 1
a6 1
 *  $Id: dbrefresh.c,v 1.5 90/04/19 15:57:47 jimm Exp $
d33 1
a33 1
		BPattern, 2, 3, 0, JAM1);
d44 1
a44 1
		    BPattern, 2, 1, 0, JAM1);
d47 1
a47 1
		    BPattern, 2, 2, 0, JAM1);
d50 1
a50 1
		    BPattern, 2, 3, 0, JAM1);
@
