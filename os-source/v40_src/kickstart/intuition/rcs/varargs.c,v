head     38.0;
branch   ;
access   ;
symbols  V40_85:38.0 V40_71:38.0 V40_68:38.0 V40_65:38.0 V40_47:38.0 V40_45:38.0 V40_37:38.0 V40_34:38.0 V40_29:38.0 V39_2415:38.0 V39_2369:38.0 V39_2339:38.0 V39_2332:38.0 V39_2275:38.0 V39_2256:38.0 V39_2210:38.0 V39_2192:38.0 V39_2084:38.0 V39_2082:38.0 V39_2076:38.0 V39_2073:38.0 V39_2058:38.0 V39_2051:38.0 V39_2031:38.0 V39_2017:38.0 V39_2012:38.0 V39_1985:38.0 V39_1933:38.0 V39_1819:38.0 V39_1805:38.0 V39_1783:38.0 V39_1695:38.0 V39_1621:38.0 V39_1620:38.0 V39_1508:38.0 V39_1485:38.0 V39_1461:38.0 V39_1458:38.0 V39_1456:38.0 V39_1405:38.0 V39_1368:38.0 V39_1360:38.0 V39_1324:38.0 V39_1147:38.0 V39_1143:38.0 V39_1141:38.0 V39_1120:38.0 V39_1116:38.0 V39_1104:38.0 V39_1100:38.0 V39_1078:38.0 V39_1073:38.0 V39_757:38.0 V39_702:38.0 V39_557:38.0 V39_553:38.0 V39_551:38.0 V39_510:38.0 V39_495:38.0 V39_416:38.0 V39_383:38.0 V39_371:38.0 V39_336:38.0 V39_323:38.0 V39_295:38.0 V39_277:38.0 V39_254:38.0 V39_222:38.0 V39_185:38.0 V39_171:38.0 V39_161:38.0 V38_159:38.0 V38_116:38.0 V38_59:38.0;
locks    ; strict;
comment  @*   @;


38.0
date     91.06.12.14.34.25;  author peter;  state Exp;
branches ;
next     ;


desc
@@


38.0
log
@Initial V38 check-in (matches V37 release).
@
text
@/*** varargs.c *****************************************************************
 *
 * varargs.c -- converts variable arguments to array pointers, mostly
 *
 *  $Id: varargs.c,v 1.9 90/04/30 22:56:19 jimm Exp $
 *
 *  Confidential Information: Commodore-Amiga, Inc.
 *  Copyright (C) 1989, Commodore-Amiga, Inc.
 *  All Rights Reserved
 *
 ****************************************************************************/


#include "intuall.h"
#include "classusr.h"
#include "classes.h"

SetGadgetAttrs( g, w, req, tag1 )
struct Gadget	*g;
struct Window	*w;
struct Requester	*req;
ULONG		tag1;
{
    return ( SetGadgetAttrsA( g, w, req, &tag1 ) );
}

SetAttrs( o, tag1 )
Object	*o;
ULONG	tag1;
{
    return ( SetAttrsA( o, &tag1 ) );
}

Object   *
NewObject( cl, classid, tag1, data1 )
Class	*cl;
ClassID classid;
ULONG	tag1;
{
    Object   *NewObjectA();

    return( NewObjectA( cl, classid, &tag1 ) );
}

NotifyAttrChanges( o, ginfo, flags, tag1 )
Object	*o;
void	*ginfo;
ULONG	flags;
ULONG	tag1;
{
    return ( SendMessage( o, OM_NOTIFY, &tag1, ginfo, flags ) );
}

/* passed a varargs attribute taglist */
SetSuperAttrs( cl, o, t1, d1, t2, d2 )
Class		*cl;
Object		*o;
ULONG		t1;
{
    return ( SendSuperMessage( cl, o, OM_SET, &t1, NULL ) );
}

@
