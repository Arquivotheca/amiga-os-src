head     38.2;
branch   ;
access   ;
symbols  V40_85:38.2 V40_71:38.2 V40_68:38.2 V40_65:38.2 V40_47:38.2 V40_45:38.2 V40_37:38.2 V40_34:38.2 V40_29:38.2 V39_2415:38.2 V39_2369:38.2 V39_2339:38.2 V39_2332:38.2 V39_2275:38.2 V39_2256:38.2 V39_2210:38.2 V39_2192:38.2 V39_2084:38.2 V39_2082:38.2 V39_2076:38.2 V39_2073:38.2 V39_2058:38.2 V39_2051:38.2 V39_2031:38.2 V39_2017:38.2 V39_2012:38.2 V39_1985:38.2 V39_1933:38.2 V39_1819:38.2 V39_1805:38.2 V39_1783:38.2 V39_1695:38.2 V39_1621:38.2 V39_1620:38.2 V39_1508:38.2 V39_1485:38.2 V39_1461:38.2 V39_1458:38.2 V39_1456:38.2 V39_1405:38.1 V39_1368:38.1 V39_1360:38.1 V39_1324:38.1 V39_1147:38.1 V39_1143:38.1 V39_1141:38.1 V39_1120:38.1 V39_1116:38.1 V39_1104:38.1 V39_1100:38.1 V39_1078:38.1 V39_1073:38.1 V39_757:38.1 V39_702:38.1 V39_557:38.0 V39_553:38.0 V39_551:38.0 V39_510:38.0 V39_495:38.0 V39_416:38.0 V39_383:38.0 V39_371:38.0 V39_336:38.0 V39_323:38.0 V39_295:38.0 V39_277:38.0 V39_254:38.0 V39_222:38.0 V39_185:38.0 V39_171:38.0 V39_161:38.0 V38_159:38.0 V38_116:38.0 V38_59:38.0;
locks    ; strict;
comment  @*   @;


38.2
date     92.06.03.17.27.10;  author peter;  state Exp;
branches ;
next     38.1;

38.1
date     92.03.19.10.52.43;  author peter;  state Exp;
branches ;
next     38.0;

38.0
date     91.06.12.14.19.35;  author peter;  state Exp;
branches ;
next     ;


desc
@@


38.2
log
@Added new VIEWCPRLOCK.
@
text
@	IFND  INTUITION_INTUITIONBASE_I
INTUITION_INTUITIONBASE_I SET  1
**
** $Id: ibase.i,v 38.1 92/03/19 10:52:43 peter Exp Locker: peter $
**
** The INTERNAL PRIVATE part of  IntuitionBase structure
** and supporting structures
**
**  (C) Copyright 1985,1986,1987,1988,1989,1990 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

	IFND EXEC_TYPES_I
	INCLUDE "exec/types.i"
	ENDC

	IFND EXEC_LIBRARIES_I
	INCLUDE "exec/libraries.i"
	ENDC

	IFND	GRAPHICS_VIEW_I
	INCLUDE	"graphics/view.i"
	ENDC

* jimm: 1/10/86: Intuition Locking
* Let me say it again: don't even think about using this information
* in a program.

ISTATELOCK	equ	0	; Intuition() not re-entrant
LAYERINFOLOCK	equ	1	; dummy lock used to check protocol
GADGETSLOCK	equ	2	; gadget lists, refresh, flags
LAYERROMLOCK	equ	3	; (dummy) for lock layerrom
IBASELOCK	equ	4	; protexts IBase pointers and lists
VIEWLOCK	equ	5	; access to ViewLord
VIEWCPRLOCK	equ	6	; Dummy for GfxBase ActiViewCprSemaphore
RPLOCK		equ	7	; use of IBase->RP
NUMILOCKS	equ	8

* Be sure to protect yourself against someone modifying these data as
* you look at them.  This is done by calling:
*
* lock = LockIBase(0), which returns a ULONG.  When done call
*  D0             D0
* UnlockIBase(lock) where lock is what LockIBase() returned.
*              A0
* NOTE: these library functions are simply stubs now, but should be called
* to be compatible with future releases.

* ======================================================================== *
* === IntuitionBase ====================================================== *
* ======================================================================== *
 STRUCTURE IntuitionBase,0

	STRUCT	ib_LibNode,LIB_SIZE
	STRUCT	ib_ViewLord,v_SIZEOF
	APTR	ib_ActiveWindow
	APTR	ib_ActiveScreen

* the FirstScreen variable points to the frontmost Screen.  Screens are
* then maintained in a front to back order using Screen.NextScreen

	APTR	ib_FirstScreen
	ULONG	ib_Flags	; private meaning
	WORD	ib_MouseY	; these are supposed to be backwards, 
	WORD	ib_MouseX	;  but weren't, recently

	ULONG	ib_Seconds
	ULONG	ib_Micros

* there is not 'sizeof' here because...
*
*

***** ***** ***** ***** ***** ***** ***** ***** *****/
***** ***** ***** PRIVATE DATA HERE ***** ***** *****/
***** ***** ***** ***** ***** ***** ***** ***** *****/
	STRUCT	ib_Private,1300

* --------------- base vectors -----------------------------------
* DO MOVE THESE OFFSETS WITHOUT ADJUSTING EQUATES IN IWORK.ASM 
* this is automatically handled by standalone program offsets.c
*
    APTR		ib_SysBase
    APTR		ib_GfxBase
    APTR		ib_LayersBase
    APTR		ib_UtilityBase
    APTR		ib_KeymapBase
    APTR		ib_InputDeviceTask

	ENDC


@


38.1
log
@Added IntuitionBase lock definitions.
@
text
@d4 1
a4 1
** $Id: ibase.i,v 38.0 91/06/12 14:19:35 peter Exp Locker: peter $
d35 3
a37 2
RPLOCK		equ	6	; use of IBase->RP
NUMILOCKS	equ	7
@


38.0
log
@Initial V38 check-in (matches V37 release).
@
text
@d4 1
a4 1
** $Id: ibase.i,v 36.1 90/12/02 22:29:35 peter Exp $
d24 13
@
