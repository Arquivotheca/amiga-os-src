head     38.5;
branch   ;
access   ;
symbols  V40_85:38.5 V40_71:38.5 V40_68:38.5 V40_65:38.5 V40_47:38.5 V40_45:38.5 V40_37:38.5 V40_34:38.5 V40_29:38.5 V39_2415:38.5 V39_2369:38.5 V39_2339:38.5 V39_2332:38.5 V39_2275:38.5 V39_2256:38.5 V39_2210:38.5 V39_2192:38.5 V39_2084:38.5 V39_2082:38.5 V39_2076:38.5 V39_2073:38.5 V39_2058:38.5 V39_2051:38.5 V39_2031:38.5 V39_2017:38.5 V39_2012:38.5 V39_1985:38.5 V39_1933:38.5 V39_1819:38.5 V39_1805:38.5 V39_1783:38.5 V39_1695:38.5 V39_1621:38.5 V39_1620:38.5 V39_1508:38.5 V39_1485:38.5 V39_1461:38.5 V39_1458:38.5 V39_1456:38.4 V39_1405:38.3 V39_1368:38.3 V39_1360:38.3 V39_1324:38.3 V39_1147:38.2 V39_1143:38.2 V39_1141:38.2 V39_1120:38.2 V39_1116:38.2 V39_1104:38.2 V39_1100:38.2 V39_1078:38.2 V39_1073:38.2 V39_757:38.1 V39_702:38.1 V39_557:38.1 V39_553:38.1 V39_551:38.1 V39_510:38.1 V39_495:38.1 V39_416:38.1 V39_383:38.1 V39_371:38.1 V39_336:38.1 V39_323:38.1 V39_295:38.1 V39_277:38.1 V39_254:38.1 V39_222:38.1 V39_185:38.1 V39_171:38.1 V39_161:38.1 V38_159:38.1 V38_116:38.1 V38_59:38.1;
locks    ; strict;
comment  @*   @;


38.5
date     92.06.04.16.17.25;  author peter;  state Exp;
branches ;
next     38.4;

38.4
date     92.06.02.14.54.34;  author peter;  state Exp;
branches ;
next     38.3;

38.3
date     92.05.21.17.41.18;  author peter;  state Exp;
branches ;
next     38.2;

38.2
date     92.04.07.17.52.17;  author peter;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.10.17.57.24;  author peter;  state Exp;
branches ;
next     38.0;

38.0
date     91.06.12.14.24.32;  author peter;  state Exp;
branches ;
next     ;


desc
@@


38.5
log
@IPPens structure has a type and reserved field.
@
text
@#ifndef INTUITION_IPREFS_H
#define INTUITION_IPREFS_H

/*** iprefs.h ****************************************************************
 *
 *  private version of data structures for new Intuition prefs
 *
 *  $Id: iprefs.h,v 38.4 92/06/02 14:54:34 peter Exp Locker: peter $
 *
 ****************************************************************************
 * CONFIDENTIAL and PROPRIETARY
 * Copyright (C) 1989, COMMODORE-AMIGA, INC.
 * All Rights Reserved
 ****************************************************************************/

#ifndef LIBRARIES_DISKFONT_H
#include <libraries/diskfont.h>
#endif

#ifndef INTUITION_SCREENS_H
#include <intuition/screens.h>
#endif

/* Different new preferences chunks recognized by Intuition	*/
#define IP_SCREENMODE	(1)
#define IP_FONT		(2)
#define IP_OVERSCAN	(3)
#define IP_ICONTROL	(4)
#define IP_POINTER	(5)
#define IP_PALETTE	(6)
#define IP_NEWPOINTER	(7)
#define IP_NEWPALETTE	(8)
#define IP_PENS		(9)

/* different Intuition system fonts	*/
#define IPF_SYSFONT	(0)
#define IPF_SCREENFONT	(1)

/* interface data */
/* same as internal format, for now	*/


/* Data for IP_SCREENMODE: */

struct IScreenModePrefs
{
    ULONG			ism_DisplayID;
    UWORD			ism_Width;
    UWORD			ism_Height;
    UWORD			ism_Depth;
    UWORD			ism_Control;
};

/* ism_Control flags	*/
#define WBAUTOSCROLL	(0x0001)
#define WBINTERLEAVED	(0x0002)


/* Data for IP_FONT: */
struct TAttrBuff
{
    struct TextAttr	tab_TAttr;
    UBYTE		tab_NameBuff[ MAXFONTNAME ];
};

struct IFontPrefs
{
    struct TAttrBuff	ifp_TABuff;
    struct TextFont	*ifp_Font;		/* result of MY open	*/
    UWORD		ifp_SysFontType;	/* this font is this?	*/
};


/* Data for IP_OVERSCAN: */
/* stored in graphics database: no IBase copy	*/
struct IOverscanPrefs
{
    ULONG			ios_DisplayID;	/* display id	*/
    Point			ios_ViewPos;	/* View origin in ViewRes */
    Point			ios_Text;	/* TxtOScan in DisplayID-res */
    struct Rectangle		ios_Standard;   /* StdOScan in DisplayID-res */
};


/* Data for IP_ICONTROL: */

struct IIControlPrefs
{
    UWORD iic_TimeOut;			/* Verify timeout */
    WORD  iic_MetaDrag;			/* Meta drag mouse event */
    ULONG iic_ICFlags;			/* IControl flags (see above) */
    UBYTE iic_WBtoFront;		/* CKey: WB to front */
    UBYTE iic_FrontToBack;		/* CKey: front screen to back */
    UBYTE iic_ReqTrue;			/* CKey: Requester TRUE */
    UBYTE iic_ReqFalse;			/* CKey: Requester FALSE */
};

/* Data for IP_POINTER: */

struct IPointerPrefs
{
    UWORD	*ipp_PointerData;
    UWORD	ipp_Height;	
    /* size of the *active* part of the pointer; the
     * data that must be presented is actually += 2 rows
     */

    WORD	ipp_HotSpotX;
    WORD	ipp_HotSpotY;
    UWORD	*ipp_AttachedData;	/* if non-NULL, attach sprites */
    ULONG	ipp_Reserved[4];
};

/* Data for IP_NEWPOINTER: */

struct INewPointerPrefs
{
    struct BitMap *inp_BitMap;
    WORD	inp_HotSpotX;
    WORD	inp_HotSpotY;
    WORD	inp_WordWidth;
    WORD	inp_XResolution;
    WORD	inp_YResolution;
    WORD	inp_Type;
    LONG	inp_Flags;	/* None currently defined */

#define NPT_DEFAULT	0
#define NPT_BUSY	1
};

struct IPenPrefs
{
    UWORD	ipn_NumPens;	/* How many pens are being passed, including ~0 */
    UWORD	ipn_PenType;	/* See PENTYPE_ defines below */
    ULONG	ipn_Reserved;	/* For future use */
    UWORD	ipn_FirstPen;
#define PENTYPE_FOURCOLORPENS	0	/* Pen array to use for four color screens */
#define PENTYPE_EIGHTCOLORPENS	1	/* Pen array to use for eight+ color screens */
};

#endif /* INTUITION_IPREFS_H */
@


38.4
log
@INewPointer now has a Y-res parameter.
@
text
@d8 1
a8 1
 *  $Id: iprefs.h,v 38.3 92/05/21 17:41:18 peter Exp Locker: peter $
d134 2
d137 2
@


38.3
log
@Added WBINTERLEAVED.
@
text
@d8 1
a8 1
 *  $Id: iprefs.h,v 38.2 92/04/07 17:52:17 peter Exp Locker: peter $
d122 2
a123 1
    WORD	inp_Resolution;
d125 1
@


38.2
log
@New pointer structure stuff.
@
text
@d8 1
a8 1
 *  $Id: iprefs.h,v 38.1 91/07/10 17:57:24 peter Exp Locker: peter $
d20 4
d32 2
d56 1
d127 6
@


38.1
log
@Cleanup of Preferences-related names to improve legibility.
@
text
@d1 3
d8 1
a8 1
 *  $Id: iprefs.h,v 38.0 91/06/12 14:24:32 peter Exp Locker: peter $
a15 2
#ifndef INTUITION_IPREFS_H

d27 1
d107 14
a120 1
#define INTUITION_IPREFS_H
d122 1
a122 1
#endif
@


38.0
log
@Initial V38 check-in (matches V37 release).
@
text
@d5 1
a5 1
 *  $Id: iprefs.h,v 36.1 90/11/01 16:07:02 peter Exp $
d20 6
a25 6
#define I_WBPREFS	(1)
#define I_FONTPREFS	(2)
#define I_MNTRPREFS	(3)
#define I_CONTROL	(4)
#define I_POINTER	(5)
#define I_PALETTE	(6)
d29 1
a29 1
#define IPF_WBFONT	(1)
d34 10
a43 5
struct IWBPrefs {
    ULONG		iwb_DisplayID;
    struct {WORD X; WORD Y;}	iwb_Dimensions;
    UWORD		iwb_Depth;
    UWORD		iwb_Control;
d46 1
a46 1
/* iwb_Control flags	*/
d49 4
a52 1
struct TAttrBuff {
d57 2
a58 1
struct IFontPrefs {
d64 2
d67 20
a86 5
struct IMonitorPrefs {
    ULONG			imp_MonitorID;		/* display id?	*/
    struct {WORD X; WORD Y;}	imp_ViewPosition;	/* units?	*/
    struct {WORD X; WORD Y;}	imp_TextOSDims;		/* units?	*/
    struct Rectangle		imp_StdOScan;		/* units?	*/
d89 4
a92 2
/* data for I_POINTER	*/
struct IPrefsPointer {
a103 1

@
