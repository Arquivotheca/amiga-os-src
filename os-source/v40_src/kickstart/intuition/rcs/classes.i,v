head     38.1;
branch   ;
access   ;
symbols  V40_85:38.1 V40_71:38.1 V40_68:38.1 V40_65:38.1 V40_47:38.1 V40_45:38.1 V40_37:38.1 V40_34:38.1 V40_29:38.1 V39_2415:38.1 V39_2369:38.1 V39_2339:38.1 V39_2332:38.1 V39_2275:38.1 V39_2256:38.1 V39_2210:38.1 V39_2192:38.1 V39_2084:38.1 V39_2082:38.1 V39_2076:38.1 V39_2073:38.1 V39_2058:38.1 V39_2051:38.1 V39_2031:38.1 V39_2017:38.1 V39_2012:38.1 V39_1985:38.1 V39_1933:38.1 V39_1819:38.1 V39_1805:38.1 V39_1783:38.1 V39_1695:38.1 V39_1621:38.1 V39_1620:38.1 V39_1508:38.1 V39_1485:38.1 V39_1461:38.1 V39_1458:38.1 V39_1456:38.1 V39_1405:38.1 V39_1368:38.1 V39_1360:38.1 V39_1324:38.1 V39_1147:38.1 V39_1143:38.1 V39_1141:38.1 V39_1120:38.1 V39_1116:38.1 V39_1104:38.1 V39_1100:38.1 V39_1078:38.1 V39_1073:38.1 V39_757:38.1 V39_702:38.1 V39_557:38.1 V39_553:38.1 V39_551:38.1 V39_510:38.1 V39_495:38.1 V39_416:38.1 V39_383:38.1 V39_371:38.1 V39_336:38.1 V39_323:38.1 V39_295:38.1 V39_277:38.1 V39_254:38.1 V39_222:38.1 V39_185:38.0 V39_171:38.0 V39_161:38.0 V38_159:38.0 V38_116:38.0 V38_59:38.0;
locks    ; strict;
comment  @*   @;


38.1
date     91.11.11.13.44.17;  author peter;  state Exp;
branches ;
next     38.0;

38.0
date     91.06.12.14.14.47;  author peter;  state Exp;
branches ;
next     ;


desc
@@


38.1
log
@Copyright now starts at 1989.
@
text
@	IFND INTUITION_CLASSES_I
INTUITION_CLASSES_I SET 1
**
**  $Id: classes.i,v 38.0 91/06/12 14:14:47 peter Exp Locker: peter $
**
**  Only used by class implementors
**
**  (C) Copyright 1989,1990 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

	IFND UTILITY_HOOKS_I
	INCLUDE "utility/hooks.i"
	ENDC

	IFND	INTUITION_CLASSUSR_I
	INCLUDE "intuition/classusr.i"
	ENDC

;*******************************************
;*** "White box" access to struct IClass ***
;*******************************************

 STRUCTURE ICLASS,0
    STRUCT cl_Dispatcher,h_SIZEOF
    ULONG  cl_Reserved		; must be 0

    APTR   cl_Super
    APTR   cl_ID		; pointer to null-terminated string

    ; where within an object is the instance data for this class?
    UWORD  cl_InstOffset
    UWORD  cl_InstSize

    ULONG  cl_UserData		; per-class data of your choice
    ULONG  cl_SubclassCount	; how many direct subclasses?
    ULONG  cl_ObjectCount	; how many objects created of this class?
    ULONG  cl_Flags
    ; no iclass_SIZEOF because only Intuition allocates these

; defined values of cl_Flags
CLB_INLIST EQU 0
CLF_INLIST EQU $00000001	; class in in public class list

; see classes.h for common calculations (sorry, no macros yet)

;**************************************************
;*** "White box" access to struct _Object	***
;**************************************************

* We have this, the instance data of the root class, PRECEDING
* the "object".  This is so that Gadget objects are Gadget pointers,
* and so on.  If this structure grows, it will always have o_Class
* at the end, so the you can always get it by subtracting #4 from
* the pointer returned from NewObject().
*
* This data structure is subject to change.  Do not use the o_Node
* embedded structure.


 STRUCTURE _Object,0
    STRUCT o_Node,MLN_SIZE
    APTR   o_Class

    ; this value may change but difference between it and offset of o_Class
    ; will remain constant
    LABEL  _object_SIZEOF

    ENDC
@


38.0
log
@Initial V38 check-in (matches V37 release).
@
text
@d4 1
a4 1
**  $Id: classes.i,v 36.2 90/11/02 17:01:59 peter Exp $
d8 1
a8 1
**  (C) Copyright 1985,1986,1987,1988,1989,1990 Commodore-Amiga, Inc.
@
