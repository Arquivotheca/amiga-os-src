** Non-draggable screens (lost in 2.0).

A standard "Next PubScreen" window gadget.

** Blinking cursor for string gadgets.

** Some way to get in the loop when there's a screen depth
re-arrangement.  The idea is three-fold:  First, for commodities that
want to activate the topmost (or under-mouse) window when the screen
depth is re-arranged.  Second, so that non-Intuition screens can
somehow join the rotation (the specific example in mind would be a
hypothetical VGA-card for the bridgeboard that has a video-switch.
It'd be nice if it appeared to be a non-draggable screen.)  Third,
so that tablet-drivers that are wise to the front screen can learn
of changes to rescale their stuff.

** A window compatibility flag asking for IAddress=Gadget for MOUSEMOVEs.

Draggable-glyph image class, which could serve as bobs or knobs.

** Tim Holloway wants a USERMESSAGE Class for IntuiMessages.
See amiga.com/suggestions 532 and that thread.

Analyze the proper use of the 3-button mouse.
We may use the middle button as the equivalent of our shift-click
shortcut.  The effect on middle-mouse commodities and other stuff must
be studied.

Allow applications to be able to register as willing and able to
close/reopen across a reset of Workbench (or any other PubScreen?).

** Get Layers to set a second bit along with LAYERREFRESH.  Then I could
clear that bit when I send REFRESHWINDOW to a window.  This would
prevent duplicate REFRESHWINDOW messages if a window sat damaged when
it wasn't damaged by the most recent layers operation.  The bit might
be called NEWDAMAGE.  It would be set by layers in the exact place
LAYERREFRESH is set.  It would be cleared in BorderPatrol().

** Ken suggests a way for a PubSc manager to register with Intuition for
notification that the PubScreen list has changed (additions, deletions,
privates?)

Peabody (DCTV) wants attached screens that slide together (so control
panels slide with the canvas).

** Screen-centered autorequests.  Window-relative autorequests.  Also,
successive ones could be offset from each-other.

** E5914 - Default busy pointer
Here's a good idea:  How about
	SetBusyPointer(win, ticks)
After ticks INTUITICKS, the busy pointer will come up unless a
SetPointer() or ClearPointer() has occurred.  The idea is to
give a way to not pop busy for really short delays.  Hmm.

** E11584 4-color short pointer for getprefs

** B10457, E11658 - Better MrgCop() recovery.

** B11322 - DisplayBeep() shouldn't restore color zero if it changed

** B9837, E9859 AllocMem frags memory.  Should use pools.  Internal use
should be changed.

** E10273 DitherPen for DCTV

   I can think of several possibilities. One would be the ability to
open an intuition screen on an already-created viewport. With this
I could have intuition buttons, and do interleaved bit-planes, double-
buffering, etc, and it would be much easier to make multitasking games.
OTOH, this sort of subverts the DIG concept, since "viewport" isn't a
DIG concept.
   Another thing that would be useful is a window that can never be
activated. This could be useful for status displays, or popup menus,
in other words things that don't have "normal" forms of input. Since
Windows under Intuition are a concatenation of Layer + input port,
this would be a layer without an input port, but still on the same
functional level as a window.
   Another idea that's kind of hard, but interesting is screens with
.More..
"bottoms". (I have some code that does this and it's not exactly
strightforward -- it takes two viewports per screen). What this means
is that after the video beam passes below the screen, the underlying
screen shows through. This would be useful for the control panels
you mentioned, like Spectra Color uses.
   Of course, I personally am much more interested in the boopsi stuff
than in fancy screen stuff :-)
--Talin
