   As we've discussed, floating toolboxes are a neat thing -- but are they
neccessary? I've just come up with a UI situation where a floating toolbox is
really the only good approach to a particular application function.
   Suppose we have a music editing program. This program allows multiple
documents, each in it's own resizeable, depth-arrangeable window. Now,
we also want a "player" window, it looks like the remote control for a VCR,
which can be used to start and stop the music. Ah, but which of the open
documents do we play?
    One idea would be to have a seperate "player" window for each document,
like the way turbotext's find window works. Unlike TTX, however, only one
document can play at a time, so it makes sense to only have one player window.
Also, unlike a "find" requester, we'll sometimes want to keep the player window
open for long periods of time, so there may be several player windows open
at once -- which means a confusing mess as we try to depth-arrange and figure
out which player window is associated with each document.
    Another idea is to embed the player controls in the border of the document
window itself, each window having it's own controls. But the player window is
large and complex, and has a number of control buttons, a time counter, a
tempo and volume setting, etc. This takes up a rather large border, which
detracts from our ability to edit the document.
    The obvious solution is to have a single player window, and play whichever
document is active. But when we click on the player window itself, it deselectes
the document window, and now it's no longer clear which document we should
play.
    Of course, we can fake it like DesignWorks does, but then there's that
ugly window flash.
    The ideal solutions would be a non-selectable window, that always depth-
arranges just in front of the front-most window for that application (I.e.
we want to send all the windows for that application to the back so that
our word processor can come to front, but we also want to have the player
window in front of the frontmost document).
    We've discussed various ideas for non-selectable windows (I.e. let
the application do all the work of handling the gadgets in the floating
window -- never activate it and don't have any real gadgets in it). Anyway,
these are some additional issues to think about.
    -- Talin
