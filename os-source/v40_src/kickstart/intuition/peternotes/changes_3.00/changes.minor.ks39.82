SCREENS

ScreenToFront(), ScreenToBack(), and EasyRequest-screen-popping now
call ScreenDepth() through the LVO.  Amiga-M/N processing and screen
depth-gadget also go through ScreenDepth().

Oversize parent screens can now be pulled up and the child screen
moves correctly.

Non-draggable child screens no longer autoscroll independently of the
parent.

Intuition no longer does spurious border and gadget refresh and sends
a spurious IDCMP_REFRESHWINDOW event.  Formerly, if an application had
not cleared its window's damage, and any other damage-causing
operation (eg.  menus, window sizing/movement) occurred on the same
screen, another round of refresh was performed.  Intuition now can
tell if the window's layer had been damaged since the last
IDCMP_REFRESHWINDOW message went out.

Screen depth is always validated.  Making a request for a screen too
deep causes failure with OSERR_TOODEEP.


WINDOWS / REQUESTERS

AutoRequest and EasyRequest windows are now RMBTrap.  They used to
behave that way because there used to be a requester in those windows.

Fixed the bug where a window could open with the gadgets not drawn if
autopoint or the user activated the window after it was opened but
before Intuition activated the window.

When a window border is redrawn, we used to draw the fill, the edges,
the gadgets, and the edges again.  I removed the first drawing of the
edges in an earlier release, but it looks ugly that way.  So now I put
it back, but this time it happens before the fill.

Alert viewports now have colormaps.  This should fix the problem where
recoverable alerts sometimes came up in red.  This was one of the
deepest (though not the most severe) mysteries we never figured out
for 2.04...

The alert flash speed is now even more constant across different
machines, and the timeout value is now defined in video frames.

The window drag/resize rubber band is now limited to the first two
planes, for speed.

Fixed a bug in ScrollWindowRaster() where the application was always
getting a refresh message, whether or not there was damage.


GADGETS/IMAGERY

Boopsi gadgets are now marked as GFLG_EXTENDED.  (They were extended
but not marked as such in the last release).

All system gadgets (eg. close, drag, size, depth) have GMORE_GADGETHELP
set, so GadgetHelp-aware applications can (almost must) provide help
on them too.  You can check the gadget->GadgetType & 0xF0 field for
GTYP_CLOSE, etc.

GM_HITTEST is supposed to return zero or a specific non-zero value
(GMR_GADGETHIT).  gadgetclass and frbuttonclass used the wrong value
when returning a non-zero result.

NewLook props in the borders of an active window have their knobs
rendered in FILLPEN instead of SHINEPEN.  When you click on the knob,
they become SHINEPEN as before.  This looks a lot better, is more
consistent with inactive windows, and finally restores that
all-important feedback to these prop gadgets.



SPRITE

When Intuition calls SetWindowPointerA() itself, it goes through the
LVO.  (The caller is OpenWindowTagList()).

Fixed deadlock case in pointer code.

The scaling of the horizontal position of the mouse-pointer hot-spot
is now correct.  (Note that there is a fixed error in some modes,
which I believe is a graphics bug).

Pointerclass now recognizes a tag to control the y-size of the
pointer.  Intuition now handles vertical mouse size correctly,
including correctly scaling the hotspot.  Graphics still needs to
support scan-doubled sprites, but Intuition is fully ready to use that
when it becomes available.


GRAPHICS-LEVEL ISSUES

Intuition now holds the GfxBase->ActiViewCprSemaphore across
MakeVPort() through to MrgCop().  This is true in all internal cases.
Intuition cannot do this for applications calling MakeScreen() then
RethinkDisplay().

Graphics wants me to denote the last viewport with a VPExtra flag
(VPXF_LAST).

Intuition no longer (ab)uses VP_HIDE as an internal signal that a
viewport needs remaking.  A private screen flag is used instead.



PREFERENCES

Intuition now handles Preferences colors in 8 bits-per-gun.  A new
IPrefs is required, or else color preferences won't come through.
(The interface to IPrefs now allows for higher color resolution in the
future).  A side-effect of these changes is that GetPrefs() no longer
returns up-to-date colors.  (SetPrefs() of colors continues to work
until colors come in from IPrefs, at which point that part of
SetPrefs() is disabled).

Preferences is now able to change the DrawInfo pens for the Workbench
screen.  There are two sets of pens, one for use on four color
screens, one for use on eight or more color screens.

Preferences will now be able to control the SA_Interleaved property of
the Workbench screen.




MISCELLANEOUS

Intuition functions that go synchronously through the state machine
(in the style of quick-IO) were unsafe to call from within the
input-device task.  It is now made safer, though it's still illegal.

OpenScreenTagList(), OpenScreen(), OpenWindowTagList(), OpenWindow(),
and the internal BorderPatrol() routine now go through stack-swapping.
This protects applications from increased stack usage in these calls.

DisplayBeep(~0) is treated the same as DisplayBeep(0).  This
has some useful properties for future disk-based features.

Begin/EndRefresh() now handles failure of the BeginUpdate() function.


