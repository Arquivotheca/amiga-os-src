Overview of Intuition changes for V39:

* New Graphics Modes

Intuition directly supports the new graphics modes.

* New Sprite Features

Intuition supports the new sprite-resolutions and sizes.  This gives
the user a fine-grain pointer, which looks a lot better.  As well,
Intuition goes to great lengths to remain compatible with users of
other sprites.

Intuition now has a default busy pointer.

* NewLook Menus and TitleBar

By adding three additional pens to the DrawInfo pen-array, Intuition
now allows control over the colors used in rendering menus.  This will
allow the black on white menus with black trim that the Style Guide
recommends.  As well, the screen title bar is rendered to match.

In addition, the Amiga-key and checkmark symbols that appear in the
menus are colored accordingly, and are scaled by default to the
screen's font.  It is possible to use a custom font in a window's
menus, and have the checkmark and Amiga-key symbols for that window
scaled to that font.

It is trivial to write compatible applications that come up optimally
under all conditions (including V37).

GadTools recognizes and supports NewLook Menus.

* Double-Buffering in Screens

Intuition now supports double-buffering in screens, via the new
double-buffering calls in graphics.library.  It is possible to have
both gadgets and menus (in a borderless backdrop window) on a
double-buffered screen.

* Attached Screens

Intuition now supports the concept of attached screens.  The
{SA_Attach,parent} tag is used for this purpose.  First open the
parent screen.  Then open one or more child screens with this tag.
Child screens can be dragged independently of each other and their
parent (though never above their parent).  Pulling down the parent
below its natural top causes the child screens to move as well.

Attached screens also depth-arrange as a group, whenever the user does
the depth-arranging.  Programmatic depth arrangement of the parent
does the same.  Programmatic depth arrangement of a child moves it
alone, but only with respect to the group.

* Gadget Help and Special Gadget Relativity

The gadget structure now has an additional rectangle, which is the
bounding box.  If a window is opened with {WA_GadgetHelp,TRUE}, then
pressing the help key while the mouse is over the bounding box of a
gadget having the GMORE_GADGETHELP property causes an IDCMP_GADGETHELP
message to be sent.  There is a GM_HELPTEST method which boopsi
gadgets can use to refine their sensitivity area or to delegate the
test to member gadgets.

Also, GRELxxx gadgets now use the bounding box to erase themselves, so
you can now have GREL gadgets whose imagery extends outside of the
gadget select box.  As well, there is a GM_LAYOUT method which boopsi
gadgets can use to do any arbitrary layout within their window.

* New Tablet Support

Intuition defines a new subclass of input-event which should solve
tablet handling quite nicely.  Tablet drivers now have an easy time
knowing what they should be scaling to.  In addition, it is now
possible for applications to receive extended IntuiMessages that can
contain such information as pressure, sub-pixel position, etc.  The
extra information is extensible to cover things we cannot yet forsee.

* Custom Image Disable-Rendering

For a disabled gadget under V37, Intuition always rendered the dot
pattern itself.  Under V39, an image can set the IA_SupportsDisable
attribute to TRUE, and then Intuition will let it do its own disabled
rendering, through the IDS_DISABLED or the (new) IDS_SELECTEDDISABLED
image drawing states.  This is transparently compatible with V37.

* Promotion

Crudely speaking, promotion is flicker-fixing in software for new
chipset machines.  Intuition is now capable of displaying the front
screen in a mode other than the one the programmer requested, based on
Preferences Promotion settings and the CoerceMode() call in graphics.

Currently, IControl supports a single on/off promotion option.  If
this option is on (and the double-NTSC monitor is available), then
NTSC modes will be shown as their double-NTSC (i.e.  de-interlaced)
equivalents.

Some work still is required to round out the promotion options.

* Pen-Sharing

Under V39, Graphics supports sharing pens (ObtainPen(), etc.).
Intuition now uses and supports the graphics.library pen-sharing
scheme.  For all screens, pens found in the DrawInfo->dri_Pens are
obtained as sharable.  For existing public screens, all other pens are
allocated as exclusive.  For custom screens and aware public screens
(those that set the new SA_SharePens tag), all other pens are left
unallocated.  On the Workbench screen, pens 0-3 are guaranteed to be
sharable.

* Interleaved Screens

As graphics.library now supports interleaved bitmaps, Intuition makes
this feature available to screen openers via the SA_Interleaved tag.
Currently, the Workbench is interleaved by default.

* Coercion and Inter-Screen-Gap

Intuition now relies on graphics.library to figure out coerced screen
modes, and the required inter-screen-gap.  This allows greater
inter-mode compatibility, better coercion results, and compatibility
with future monitors.

* Miscellaneous Window Features

If a window is not frontmost, but nevertheless is unobscured, then
clicking on its depth gadget used to bring it to front, which had no
visual effect.  It now depth-arranges correctly (i.e.  to back).

It is now possible to receive an IDCMP_CHANGEWINDOW message when a
window is depth-arranged.

Size-only zooming (where the window top-left corner is preserved) is
now supported.

* Miscellaneous Screen Features

Screens may now be made non-draggable.  Screens can be designated as
exclusive, meaning they will never share the display with another
screen.  The SA_BackFill tag can be used to specify a backfill hook
for the screen's LayerInfo.  Is it now possible to control the SA_Pens
or other previously unavailable attributes of the Workbench screen.
This will allow things such as light-on-dark text.  Screens can have
interleaved bitmaps.  There are new universal screen movement and
depth-arrangement functions.  Intuition now supports scrollable
2024/Moniterm screens.

* Miscellaneous

The DoGadgetMethodA() function allows you to invoke a method on a
gadget, which will then receive a valid GadgetInfo pointer.

The boopsi image class "frameiclass" supports the standard border
types (eg.  bevelled box, string-gadget ridge, "moat", AppWindow icon
drop-box).

And more...

* Speed Improvements

When a window opens active, its border is rendered only once, not
twice.  This looks better and is faster.

EasyRequests and AutoRequests now put their imagery and gadgets
directly in their window, instead of also using a requester.  This
saves memory, and is faster.

The rubber-band frame when moving or dragging windows is now drawn
faster.

Several other speed optimizations were taken.

