head     38.2;
branch   ;
access   ;
symbols  ;
locks    vertex:38.2; strict;
comment  @ * @;


38.2
date     92.01.28.08.27.55;  author peter;  state Exp;
branches ;
next     38.1;

38.1
date     91.11.27.13.17.16;  author peter;  state Exp;
branches ;
next     38.0;

38.0
date     91.07.11.12.33.50;  author peter;  state Exp;
branches ;
next     ;


desc
@@


38.2
log
@No longer using magic library stuff.  File retired.
@
text
@/* customlib.c
 *
 * No longer using Lattice magic library stuff.
 * 
 * File retired 23-Jan-92 by Peter.
 *
 */
@


38.1
log
@Init's PaletteGHook.
@
text
@d1 3
a3 11
/*** customlib.c **********************************************************
*
*   customlib.c	- Custom library initialization
*
*   Copyright 1989, 1990, Commodore-Amiga, Inc.
*
*   $Id: customlib.c,v 38.0 91/07/11 12:33:50 peter Exp Locker: peter $
*
*   $Log:	customlib.c,v $
 * Revision 38.0  91/07/11  12:33:50  peter
 *  Initial V38 check-in (matches V37 release).
d5 3
a7 120
*   Revision 36.5  91/02/02  00:42:58  peter
*   Spoofed declarations of CustomLibInit and CustomLibExpunge so that
*   the functions would get stack-style names (i.e. '_', not '@@').
*   
*   Revision 36.4  90/11/07  19:41:50  peter
*   Initializes and frees the BorderCompIClass.
*   
*   Revision 36.3  90/04/10  18:11:17  peter
*   CustomLibExpunge() now sets library bases to NULL after closing them.
*   
*   Revision 36.2  90/04/02  16:03:05  peter
*   Now sets up SysBase (since new exec_pragmas.h refers to SysBase instead
*   of using syscall).
*   
*   Revision 36.1  90/03/16  14:04:00  peter
*   RCS Clean up.
*   
*
**************************************************************************/

/*
#define DEVELOPMENT
*/

#include <exec/types.h>
#include <exec/alerts.h>

#include <dos.h>

#include "gtinclude.h"

struct Library *SysBase = NULL;
struct Library *UtilityBase = NULL;
struct GfxBase *GfxBase = NULL;
struct IntuitionBase *IntuitionBase = NULL;
Class *BorderCompIClass = NULL;
struct Hook PaletteGHook;

BOOL __asm __saveds __stdargs
CustomLibInit(register __a6 struct Library *libbase)

    {
    /*  Get the libraries we rely on */
    DP(("libinit:  library base at $%lx\n", libbase));
    DP(("libinit:  A6 at $%lx\n", getreg(REG_A6)));
    DP(("libinit:  A4 at $%lx\n", getreg(REG_A4)));

    SysBase = (struct Library *) (* ((ULONG *)4) );
    UtilityBase = OpenLibrary("utility.library", 36);
    DP(("libinit:  UtilityBase at $%lx\n", UtilityBase));
    DP(("libinit:  UtilityBase stored at $%lx\n", &UtilityBase));
#ifdef DEVELOPMENT
    if (!UtilityBase)
	{
	Alert(AN_GadTools|AG_OpenLib|AO_UtilityLib);
	/* !!! Bryce says nobody frees libbase ! */
	return ( FALSE );
	}
#endif

    GfxBase = (struct GfxBase *)OpenLibrary("graphics.library", 36);
    DP(("libinit:  GfxBase at $%lx\n", GfxBase));
    DP(("libinit:  GfxBase stored at $%lx\n", &GfxBase));
#ifdef DEVELOPMENT
    if (!GfxBase)
	{
	Alert(AN_GadTools|AG_OpenLib|AO_GraphicsLib);
	/* !!! Bryce says nobody frees libbase ! */
	return ( FALSE );
	}
#endif

    IntuitionBase = (struct IntuitionBase *)
	OpenLibrary("intuition.library", 36);
    DP(("libinit:  IntuitionBase at $%lx\n", IntuitionBase));
    DP(("libinit:  IntuitionBase stored at $%lx\n", &IntuitionBase));
#ifdef DEVELOPMENT
    if (!IntuitionBase)
	{
	Alert(AN_GadTools|AG_OpenLib|AO_Intuition);
	/* !!! Bryce says nobody frees libbase ! */
	/* !!! I'm not closing GfxBase, unless expunge is called! */
	return ( FALSE );
	}
#endif

    if (! (BorderCompIClass = initBorderCompIClass()) )
	{
	Alert(AN_GadTools|AG_NoMemory|AO_Intuition);
	return(FALSE);
	}

    initPaletteGHook( &PaletteGHook );

    return ( TRUE );
    }

void __saveds __asm __stdargs
CustomLibExpunge(register __a6 struct Library *libbase)

    {
    /* Close the libraries it uses: */

    FreeClass( BorderCompIClass );
    if (IntuitionBase)
	{
	CloseLibrary((struct Library *)IntuitionBase);
	IntuitionBase = NULL;
	}
    if (GfxBase)
    	{
	CloseLibrary((struct Library *)GfxBase);
	GfxBase = NULL;
	}
    if (UtilityBase)
	{
	CloseLibrary(UtilityBase);
	UtilityBase = NULL;
	}
    }
@


38.0
log
@ Initial V38 check-in (matches V37 release).
@
text
@d7 1
a7 1
*   $Id: customlib.c,v 36.5 91/02/02 00:42:58 peter Exp $
d10 3
d49 1
d104 3
@
