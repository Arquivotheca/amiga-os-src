head     1.12;
branch   ;
access   ;
symbols  ;
locks    jerryh:1.12; strict;
comment  @* @;


1.12
date     93.08.12.13.47.38;  author jerryh;  state Exp;
branches ;
next     1.11;

1.11
date     93.08.12.13.45.31;  author jerryh;  state Exp;
branches ;
next     1.10;

1.10
date     93.08.03.09.51.11;  author jerryh;  state Exp;
branches ;
next     1.9;

1.9
date     93.03.01.14.53.16;  author jerryh;  state Exp;
branches ;
next     1.8;

1.8
date     93.01.15.15.39.14;  author jerryh;  state Exp;
branches ;
next     1.7;

1.7
date     93.01.07.09.35.08;  author jerryh;  state Exp;
branches ;
next     1.6;

1.6
date     92.12.12.17.43.26;  author jerryh;  state Exp;
branches ;
next     1.5;

1.5
date     92.12.11.13.33.29;  author jerryh;  state Exp;
branches ;
next     1.4;

1.4
date     92.12.04.10.17.16;  author jerryh;  state Exp;
branches ;
next     1.3;

1.3
date     92.11.23.09.20.10;  author jerryh;  state Exp;
branches ;
next     1.2;

1.2
date     92.11.02.13.30.22;  author jerryh;  state Exp;
branches ;
next     1.1;

1.1
date     92.10.21.15.00.20;  author jerryh;  state Exp;
branches ;
next     ;


desc
@public include file for cd.device
<devices/cd.i>
@


1.12
log
@Removed page feeds.
@
text
@

        IFND    DEVICES_CD_I
DEVICES_CD_I SET        1
**
**      $Id: cd.i,v 1.11 93/08/12 13:45:31 jerryh Exp $
**
**      cd.device include file
**
**      (C) Copyright 1992 Commodore-Amiga, Inc.
**          All Rights Reserved
**

        INCLUDE "exec/types.i"
        INCLUDE "exec/nodes.i"

************************************************************************
*                                                                      *
*   CD Commands                                                        *
*                                                                      *
************************************************************************

CD_RESET            equ  1
CD_READ             equ  2
CD_WRITE            equ  3
CD_UPDATE           equ  4
CD_CLEAR            equ  5
CD_STOP             equ  6
CD_START            equ  7
CD_FLUSH            equ  8
CD_MOTOR            equ  9
CD_SEEK             equ 10
CD_FORMAT           equ 11
CD_REMOVE           equ 12
CD_CHANGENUM        equ 13
CD_CHANGESTATE      equ 14
CD_PROTSTATUS       equ 15

CD_GETDRIVETYPE     equ 18
CD_GETNUMTRACKS     equ 19
CD_ADDCHANGEINT     equ 20
CD_REMCHANGEINT     equ 21
CD_GETGEOMETRY      equ 22
CD_EJECT            equ 23


CD_INFO             equ 32
CD_CONFIG           equ 33
CD_TOCMSF           equ 34
CD_TOCLSN           equ 35

CD_READXL           equ 36

CD_PLAYTRACK        equ 37
CD_PLAYMSF          equ 38
CD_PLAYLSN          equ 39
CD_PAUSE            equ 40
CD_SEARCH           equ 41

CD_QCODEMSF         equ 42
CD_QCODELSN         equ 43
CD_ATTENUATE        equ 44

CD_ADDFRAMEINT      equ 45
CD_REMFRAMEINT      equ 46

************************************************************************
*                                                                      *
*   Device Driver Error Codes                                          *
*                                                                      *
************************************************************************

CDERR_OPENFAIL          equ -1      ; device/unit failed to open          
CDERR_ABORTED           equ -2      ; request terminated early            
CDERR_NOCMD             equ -3      ; command not supported by device     
CDERR_BADLENGTH         equ -4      ; invalid length (IO_LENGTH/IO_OFFSET)
CDERR_BADADDRESS        equ -5      ; invalid address (IO_DATA misaligned)
CDERR_UNITBUSY          equ -6      ; device opens ok, but unit is busy   
CDERR_SELFTEST          equ -7      ; hardware failed self-test           
                                                                          
CDERR_NotSpecified      equ 20      ; general catchall                    
CDERR_NoSecHdr          equ 21      ; couldn't even find a sector         
CDERR_BadSecPreamble    equ 22      ; sector looked wrong                 
CDERR_BadSecID          equ 23      ; ditto                               
CDERR_BadHdrSum         equ 24      ; header had incorrect checksum       
CDERR_BadSecSum         equ 25      ; data had incorrect checksum         
CDERR_TooFewSecs        equ 26      ; couldn't find enough sectors        
CDERR_BadSecHdr         equ 27      ; another "sector looked wrong"       
CDERR_WriteProt         equ 28      ; can't write to a protected disk     
CDERR_NoDisk            equ 29      ; no disk in the drive                
CDERR_SeekError         equ 30      ; couldn't find track 0               
CDERR_NoMem             equ 31      ; ran out of memory                   
CDERR_BadUnitNum        equ 32      ; asked for a unit > NUMUNITS         
CDERR_BadDriveType      equ 33      ; not a drive cd.device understands   
CDERR_DriveInUse        equ 34      ; someone else allocated the drive    
CDERR_PostReset         equ 35      ; user hit reset; awaiting doom       
CDERR_BadDataType       equ 36      ; data on disk is wrong type          
CDERR_InvalidState      equ 37      ; invalid cmd under current conditions
                                                                          
CDERR_Phase             equ 42      ; illegal or unexpected SCSI phase    
CDERR_NoBoard           equ 50      ; open failed for non-existant board  



************************************************************************
*                                                                      *
* Configuration                                                        *
*                                                                      *
*       The drive is configured by TagList items defined as follows:   *
*                                                                      *
************************************************************************

TAGCD_PLAYSPEED         equ     $0001
TAGCD_READSPEED         equ     $0002
TAGCD_READXLSPEED       equ     $0003
TAGCD_SECTORSIZE        equ     $0004
TAGCD_XLECC             equ     $0005
TAGCD_EJECTRESET        equ     $0006

************************************************************************
*                                                                      *
* Information                                                          *
*                                                                      *
*      Information/Status structure describes current speed settings   *
*      for read and play commands, sector size, audio attenuation      *
*      precision, and drive status.                                    *
*                                                                      *
************************************************************************

 STRUCTURE CDINFO,0
                                 ;                                Default  
    UWORD  CDINFO_PlaySpeed      ; Audio play speed               (75)        
    UWORD  CDINFO_ReadSpeed      ; Data-rate of CD_READ command   (Max)       
    UWORD  CDINFO_ReadXLSpeed    ; Data-rate of CD_READXL command (75)        
    UWORD  CDINFO_SectorSize     ; Number of bytes per sector     (2048)   
    UWORD  CDINFO_XLECC          ; CDXL ECC enabled/disabled               
    UWORD  CDINFO_EjectReset     ; Reset on eject enabled/disabled         
    STRUCT CDINFO_Reserved1,8    ; Reserved for future expansion           
                                                                           
    UWORD  CDINFO_MaxSpeed       ; Maximum speed drive can handle (75, 150)
    UWORD  CDINFO_AudioPrecision ; 0 = no attenuator, 1 = mute only,       
                                 ; other = (# levels - 1)                  
    UWORD  CDINFO_Status         ; See flags below                         
    STRUCT CDINFO_Reserved2,8    ; Reserved for future expansion           
                                          
    LABEL  CDINFO_SIZE


; Flags for Status

CDSTSB_CLOSED       equ 0        ; Drive door is closed                       
CDSTSB_DISK         equ 1        ; A disk has been detected                   
CDSTSB_SPIN         equ 2        ; Disk is spinning (motor is on)             
CDSTSB_TOC          equ 3        ; Table of contents read.  Disk is valid.    
CDSTSB_CDROM        equ 4        ; Track 1 contains CD-ROM data               
CDSTSB_PLAYING      equ 5        ; Audio is playing                           
CDSTSB_PAUSED       equ 6        ; Pause mode (pauses on play command)        
CDSTSB_SEARCH       equ 7        ; Search mode (Fast Forward/Fast Reverse)    
CDSTSB_DIRECTION    equ 8        ; Search direction (0 = Forward, 1 = Reverse)

CDSTSF_CLOSED       equ $0001
CDSTSF_DISK         equ $0002
CDSTSF_SPIN         equ $0004
CDSTSF_TOC          equ $0008
CDSTSF_CDROM        equ $0010
CDSTSF_PLAYING      equ $0020
CDSTSF_PAUSED       equ $0040
CDSTSF_SEARCH       equ $0080
CDSTSF_DIRECTION    equ $0100

; Modes for CD_SEARCH

CDMODE_NORMAL   equ 0       ; Normal play at current play speed   
CDMODE_FFWD     equ 1       ; Fast forward play (skip-play forward
CDMODE_FREV     equ 2       ; Fast reverse play (skip-play reverse


************************************************************************
*                                                                      *
* Position Information                                                 *
*                                                                      *
*      Position information can be described in two forms: MSF and LSN *
*      form.  MSF (Minutes, Seconds, Frames) form is a time encoding.  *
*      LSN (Logical Sector Number) form is frame (sector) count.       *
*      The desired form is selected using the io_Flags field of the    *
*      IOStdReq structure.  The flags and the union are described      *
*      below.                                                          *
*                                                                      *
************************************************************************

 STRUCTURE RMSF,0

    UBYTE   Reserved        ; Reserved (always zero)
    UBYTE   Minute          ; Minutes (0-72ish)     
    UBYTE   Second          ; Seconds (0-59)        
    UBYTE   Frame           ; Frame   (0-74)        
    LABEL   RMSF_SIZE

;UNION

LSNMSF_SIZE     equ RMSF_SIZE


************************************************************************
*                                                                      *
* CD Transfer Lists                                                    *
*                                                                      *
*      A CDXL node is a double link node; however only single linkage  *
*      is used by the device driver.  If you wish to construct a       *
*      transfer list manually, it is only neccessary to define the     *
*      mln_Succ pointer of the MinNode.  You may also use the Exec     *
*      list functions by defining a List or MinList structure and by   *
*      using the AddHead/AddTail functions to create the list.  This   *
*      will create a double-linked list.  Although a double-linked     *
*      list is not required by the device driver, you may wish use it  *
*      for your own purposes.  Don't forget to initialize the          *
*      the List/MinList before using it!                               *
*                                                                      *
************************************************************************

 STRUCTURE CDXL,0

    STRUCT  CDXL_Node,MLN_SIZE      ; double linkage      
    APTR    CDXL_Buffer             ; data destination (word aligned) 
    LONG    CDXL_Length             ; must be even # bytes
    LONG    CDXL_Actual             ; bytes transferred   
    APTR    CDXL_IntData            ; interrupt server data segment
    APTR    CDXL_IntCode            ; interrupt server code entry
    LABEL   CDXL_SIZE


************************************************************************
*                                                                      *
* CD Table of Contents                                                 *
*                                                                      *
*      The CD_TOC command returns an array of CDTOC entries.           *
*      Entry zero contains summary information describing how many     *
*      tracks the disk has and the play-time of the disk.              *
*      Entries 1 through N (N = Number of tracks on disk) contain      *
*      information about the track.                                    *
*                                                                      *
************************************************************************

 STRUCTURE TOCSummary,0

    UBYTE   TOCS_FirstTrack          ; First track on disk (always 1)         
    UBYTE   TOCS_LastTrack           ; Last track on disk                     
    STRUCT  TOCS_LeadOut,LSNMSF_SIZE ; Beginning of lead-out (end of disk)
    LABEL   TOCSummary_SIZE


 STRUCTURE TOCEntry,0

    UBYTE   TOCE_CtlAdr                 ; Q-Code info                 
    UBYTE   TOCE_Track                  ; Track number                
    STRUCT  TOCE_Position,LSNMSF_SIZE   ; Start position of this track
    LABEL   TOCEntry_SIZE


;UNION

CDTOC_SIZE      equ TOCEntry_SIZE


************************************************************************
*                                                                      *
* Q-Code Packets                                                       *
*                                                                      *
*      Q-Code packets are only returned when audio is playing.         *
*      Currently, only position packets are returned (ADR_POSITION)    *
*      The other ADR_ types are almost never encoded on the disk       *
*      and are of little use anyway.  To avoid making the QCode        *
*      structure a union, these other ADR_ structures are not defined. *
*                                                                      *
************************************************************************

 STRUCTURE QCODE,0

    UBYTE   QCODE_CtlAdr                    ; Data type / QCode type          
    UBYTE   QCODE_Track                     ; Track number                    
    UBYTE   QCODE_Index                     ; Track subindex number           
    UBYTE   QCODE_Zero                      ; The "Zero" byte of Q-Code packet
    STRUCT  QCODE_TrackPosition,LSNMSF_SIZE ; Position from start of track    
    STRUCT  QCODE_DiskPosition,LSNMSF_SIZE  ; Position from start of disk     
    LABEL   QCODE_SIZE


CTLADR_CTLMASK  equ $F0     ; Control field

CTL_CTLMASK     equ $D0     ; To be ANDed with CtlAdr before compared

CTL_2AUD        equ $00     ; 2 audio channels without preemphasis            
CTL_2AUDEMPH    equ $10     ; 2 audio channels with preemphasis               
CTL_4AUD        equ $80     ; 4 audio channels without preemphasis            
CTL_4AUDEMPH    equ $90     ; 4 audio channels with preemphasis               
CTL_DATA        equ $40     ; CD-ROM Data                                     

CTL_COPYMASK    equ $20     ; To be ANDed with CtlAdr before compared

CTL_COPY        equ $20     ; When true, this audio/data can be copied        

CTLADR_ADRMASK  equ $0F     ; Address field

ADR_POSITION    equ $01     ; Q-Code is position information                  
ADR_UPC         equ $02     ; Q-Code is UPC information (not used)   
ADR_ISRC        equ $03     ; Q-Code is ISRC (not used)
ADR_HYBRID      equ $05     ; This disk is a hybrid disk


        ENDC
@


1.11
log
@Includes proper .h files now.
@
text
@d6 1
a6 1
**      $Id: cd.i,v 1.10 93/08/03 09:51:11 jerryh Exp Locker: jerryh $
a66 1
*
a119 1
*
a177 1
*
d231 1
a231 1
*
a264 1
*
@


1.10
log
@added proper header.
@
text
@d6 1
a6 1
**      $Id: $
d14 2
a15 1
        INCLUDE "include:utility/tagitem.i"
@


1.9
log
@modified to be 80 columns.
@
text
@d3 10
a12 2
        IFND    CD_I
CD_I    SET     1
@


1.8
log
@Check for HYBRID disks made now.
@
text
@d65 4
a68 4
CDERR_OPENFAIL          equ -1      ; device/unit failed to open
CDERR_ABORTED           equ -2      ; request terminated early [after AbortIO()]
CDERR_NOCMD             equ -3      ; command not supported by device
CDERR_BADLENGTH         equ -4      ; not a valid length (IO_LENGTH or IO_OFFSET)
d70 24
a93 2
CDERR_UNITBUSY          equ -6      ; requested unit is busy
CDERR_SELFTEST          equ -7      ; hardware failed self-test
a94 21
CDERR_NotSpecified      equ 20      ; general catchall
CDERR_NoSecHdr          equ 21      ; couldn't even find a sector
CDERR_BadSecPreamble    equ 22      ; sector looked wrong
CDERR_BadSecID          equ 23      ; ditto
CDERR_BadHdrSum         equ 24      ; header had incorrect checksum
CDERR_BadSecSum         equ 25      ; data had incorrect checksum
CDERR_TooFewSecs        equ 26      ; couldn't find enough sectors
CDERR_BadSecHdr         equ 27      ; another "sector looked wrong"
CDERR_WriteProt         equ 28      ; can't write to a protected disk
CDERR_NoDisk            equ 29      ; no disk in the drive
CDERR_SeekError         equ 30      ; couldn't find track 0
CDERR_NoMem             equ 31      ; ran out of memory
CDERR_BadUnitNum        equ 32      ; asked for a unit > NUMUNITS
CDERR_BadDriveType      equ 33      ; not a drive that cd.device understands
CDERR_DriveInUse        equ 34      ; someone else allocated the drive
CDERR_PostReset         equ 35      ; user hit reset; awaiting doom
CDERR_BadDataType       equ 36      ; data on disk is wrong type
CDERR_InvalidState      equ 37      ; command not valid under current conditions

CDERR_Phase             equ 42      ; illegal or unexpected SCSI phase      
CDERR_NoBoard           equ 50      ; open failed for non-existant board    
a96 1

d124 15
a138 14

    UWORD  CDINFO_PlaySpeed             ; Audio play speed                      (Default = 75)           
    UWORD  CDINFO_ReadSpeed             ; Data-rate of CD_READ command          (Default = MaxSpeed)     
    UWORD  CDINFO_ReadXLSpeed           ; Data-rate of CD_READXL command        (Default = 75)           
    UWORD  CDINFO_SectorSize            ; Number of bytes per sector            (Default = 2048)
    UWORD  CDINFO_XLECC                 ; CDXL ECC enabled/disabled
    UWORD  CDINFO_EjectReset            ; Reset on eject enabled/disabled
    STRUCT CDINFO_Reserved1,8           ; Reserved for future expansion

    UWORD  CDINFO_MaxSpeed              ; Maximum speed drive can handle (Blocks/second - 75, 150)
    UWORD  CDINFO_AudioPrecision        ; 0 = no attenuator, 1 = mute only, other = (# levels - 1)
    UWORD  CDINFO_Status                ; See flags below                                         
    STRUCT CDINFO_Reserved2,8           ; Reserved for future expansion

d144 9
a152 9
CDSTSB_CLOSED       equ 0           ; Drive door is closed        
CDSTSB_DISK         equ 1           ; A disk has been detected    
CDSTSB_SPIN         equ 2           ; Disk is spinning (motor on)
CDSTSB_TOC          equ 3           ; Table of contents has been read.  Disk is valid.
CDSTSB_CDROM        equ 4           ; Track 1 contains CD-ROM data (only valid if TOC is valid)
CDSTSB_PLAYING      equ 5           ; Audio is playing
CDSTSB_PAUSED       equ 6           ; Pause mode (is paused/will pause on play command)
CDSTSB_SEARCH       equ 7           ; Search mode (Fast Forward/Fast Reverse)
CDSTSB_DIRECTION    equ 8           ; Search direction (0 = Forward, 1 = Reverse)
d240 3
a242 3
    UBYTE   TOCS_FirstTrack             ; First track on disk (always 1)                
    UBYTE   TOCS_LastTrack              ; Last track on disk                            
    STRUCT  TOCS_LeadOut,LSNMSF_SIZE    ; Beginning of lead-out track (i.e. end of disk)
d274 6
a279 6
    UBYTE   QCODE_CtlAdr                      ; Data type / QCode type              
    UBYTE   QCODE_Track                       ; Track number                        
    UBYTE   QCODE_Index                       ; Track subindex number               
    UBYTE   QCODE_Zero                        ; The "Zero" byte of Q-Code packet
    STRUCT  QCODE_TrackPosition,LSNMSF_SIZE   ; Position from start of track        
    STRUCT  QCODE_DiskPosition,LSNMSF_SIZE    ; Position from start of disk         
d285 1
a285 1
CTL_CTLMASK     equ $D0     ; To be ANDed with CtlAdr before compared with the following
d287 5
a291 5
CTL_2AUD        equ $00     ; 2 audio channels without preemphasis                      
CTL_2AUDEMPH    equ $10     ; 2 audio channels with preemphasis                         
CTL_4AUD        equ $80     ; 4 audio channels without preemphasis                      
CTL_4AUDEMPH    equ $90     ; 4 audio channels with preemphasis                         
CTL_DATA        equ $40     ; CD-ROM Data                                               
d293 1
a293 1
CTL_COPYMASK    equ $20     ; To be ANDed with CtlAdr before compared with the following
d295 1
a295 1
CTL_COPY        equ $20     ; When true, this audio/data can be copied                  
d299 4
a302 4
ADR_POSITION    equ $01     ; Q-Code is position information                            
ADR_UPC         equ $02     ; Q-Code is Universal Product Code information (not used)   
ADR_ISRC        equ $03     ; Q-Code is International Standard Recording Code (not used)
ADR_HYBRID      equ $05     ; This disk is a hybrid disk (for multi-session support)
@


1.7
log
@Changed value of some tag items.
@
text
@d301 1
a301 1

@


1.6
log
@Added fields to CDINFO structure.
@
text
@d6 1
a6 1
        INCLUDE "utility/tagitem.i"
d105 6
a110 6
TAGCD_PLAYSPEED         equ     (TAG_USER|$0001)
TAGCD_READSPEED         equ     (TAG_USER|$0002)
TAGCD_READXLSPEED       equ     (TAG_USER|$0003)
TAGCD_SECTORSIZE        equ     (TAG_USER|$0004)
TAGCD_XLECC             equ     (TAG_USER|$0005)
TAGCD_EJECTRESET        equ     (TAG_USER|$0006)
d277 1
a278 1
    STRUCT  QCODE_TrackPosition,LSNMSF_SIZE   ; Position from start of track        
@


1.5
log
@no effective change.
@
text
@d129 2
@


1.4
log
@removed some fields in CDINFO
@
text
@@


1.3
log
@Added TagList defines.
@
text
@d40 2
a41 1
CD_TOC              equ 34
d43 1
a43 1
CD_READXL           equ 35
d45 9
a53 7
CD_PLAYTRACK        equ 36
CD_PLAY             equ 37
CD_PAUSE            equ 38
CD_SEARCH           equ 39

CD_QCODE            equ 40
CD_ATTENUATE        equ 41
d55 2
a56 2
CD_ADDFRAMEINT      equ 42
CD_REMFRAMEINT      equ 43
a128 2
    UWORD  CDINFO_XLECC                 ; ECC configuration of ReadXL command   (Default = 1)
    UWORD  CDINFO_EjectReset            ; Reset computer on CD eject            (Default = 0)
a181 3
IOB_LSNFORM     equ 6       ; Select LSN format for time encoding (used in IOStdReq.io_Flags)
IOF_LSNFORM     equ $20

d192 1
a192 1
LSNMSF_SIZE     equ 4
@


1.2
log
@all kinds of new stuff.
@
text
@d6 2
d98 1
a98 3
*       The configuration structure is used to set or report drive     *
*       speeds and/or sector sizes.  Configurations are set using      *
*       the CD_CONFIG command and are read using the CD_INFO command.  *
d102 6
a107 8
 STRUCTURE CDConfig,0

    UWORD  CONFIG_PlaySpeed         ; Audio play speed               (Default = 75)           
    UWORD  CONFIG_ReadSpeed         ; Data-rate of CD_READ command   (Default = MaxSpeed)     
    UWORD  CONFIG_ReadXLSpeed       ; Data-rate of CD_READXL command (Default = 75)           
    UWORD  CONFIG_SectorSize        ; Number of bytes per sector

    LABEL  CDConfig_SIZE
d122 7
a128 1
    STRUCT CDINFO_Config,CDConfig_SIZE  ; Current drive speeds and sector size
d133 1
@


1.1
log
@Initial revision
@
text
@a1 1
; CD Commands
d3 9
d37 12
a48 1
CD_TOC              equ 33
d50 2
a51 1
CD_READXL           equ 34
d53 5
a57 20
CD_PLAYTRACK        equ 35
CD_PLAY             equ 36
CD_PAUSE            equ 37
CD_PLAYMODE         equ 38

CD_QCODE            equ 39
CD_ATTENUATE        equ 40

CD_PLAYSPEED        equ 41
CD_READSPEED        equ 42
CD_READXLSPEED      equ 43

CD_ADDFRAMEINT      equ 44
CD_REMFRAMEINT      equ 45


************************************************************************
***
***  Device Driver Error Codes
***
d91 20
d117 2
a118 2
*      for read and play commands, play mode and state, and drive      *
*      status.                                                         *
d124 1
a124 8
    UWORD  CDINFO_MaxSpeed          ; Maximum speed drive can handle (Blocks/second - 75, 150)
    UWORD  CDINFO_PlaySpeed         ; Audio play speed               (Default = 75)           
    UWORD  CDINFO_ReadSpeed         ; Data-rate of CD_READ command   (Default = MaxSpeed)     
    UWORD  CDINFO_ReadXLSpeed       ; Data-rate of CD_READXL command (Default = 75)           

    UWORD  CDINFO_AudioPrecision    ; Number of attenuation levels - 1.  0 = no attenuator
                                    ; 1 = mute only, other = precision.
    UWORD  CDINFO_Status            ; See flags below                                         
d126 3
a128 1
    STRUCT CDINFO_Reserved,5*4      ; Reserved for future use                                 
d135 9
a143 10
CDSTSB_CLOSED       equ 0   ; Drive door is closed        
CDSTSB_DISK         equ 1   ; A disk has been detected    
CDSTSB_SPIN         equ 2   ; Disk is spinning (motor on)
CDSTSB_TOC          equ 3   ; Table of contents has been read.  Disk is valid.
CDSTSB_CDROM        equ 4   ; Track 1 contains CD-ROM data
CDSTSB_READING      equ 5   ; Data is being read
CDSTSB_PLAYING      equ 6   ; Audio is playing
CDSTSB_PAUSED       equ 7   ; Pause mode (is paused/will pause on play command)
CDSTSB_SEARCH       equ 8   ; Search mode (Fast Forward/Fast Reverse)
CDSTSB_DIRECTION    equ 9   ; Search direction (0 = Forward, 1 = Reverse)
d150 4
a153 5
CDSTSF_READING      equ $0020
CDSTSF_PLAYING      equ $0040
CDSTSF_PAUSED       equ $0080
CDSTSF_SEARCH       equ $0100
CDSTSF_DIRECTION    equ $0200
d155 1
a155 1
; Modes for PlayMode
d196 10
a205 3
*      To create transfer lists, use an Exec List or MinList structure *
*      and AddHead/AddTail nodes of the transfer structure below.      *
*      Don't forget to initialize the List/MinList before using it!    *
d212 1
a212 1
    APTR    CDXL_Buffer             ; data (word aligned) 
a213 1
    APTR    CDXL_DoneFunc           ; called when done    
d215 2
d279 1
a279 1
CTL_DATAMASK    equ $D0     ; To be ANDed with CtlAdr before compared with the following
d299 1
@
