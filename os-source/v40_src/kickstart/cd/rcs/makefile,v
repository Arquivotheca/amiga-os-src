head     1.21;
branch   ;
access   ;
symbols  ;
locks    jerryh:1.21; strict;
comment  @# @;


1.21
date     94.02.14.09.46.55;  author jerryh;  state Exp;
branches ;
next     1.20;

1.20
date     93.09.10.11.33.02;  author jerryh;  state Exp;
branches ;
next     1.19;

1.19
date     93.08.03.09.58.39;  author jerryh;  state Exp;
branches ;
next     1.18;

1.18
date     93.08.02.17.03.44;  author jerryh;  state Exp;
branches ;
next     1.17;

1.17
date     93.08.02.15.02.46;  author jerryh;  state Exp;
branches ;
next     1.16;

1.16
date     93.04.27.15.56.57;  author jerryh;  state Exp;
branches ;
next     1.15;

1.15
date     93.04.08.10.17.01;  author jerryh;  state Exp;
branches ;
next     1.14;

1.14
date     93.04.02.10.29.23;  author jerryh;  state Exp;
branches ;
next     1.13;

1.13
date     93.03.24.16.55.35;  author jerryh;  state Exp;
branches ;
next     1.12;

1.12
date     93.03.24.14.15.34;  author jerryh;  state Exp;
branches ;
next     1.11;

1.11
date     93.02.26.14.24.54;  author jerryh;  state Exp;
branches ;
next     1.10;

1.10
date     93.02.17.15.49.11;  author jerryh;  state Exp;
branches ;
next     1.9;

1.9
date     93.02.17.15.40.54;  author jerryh;  state Exp;
branches ;
next     1.8;

1.8
date     93.02.11.13.49.46;  author jerryh;  state Exp;
branches ;
next     1.7;

1.7
date     93.02.03.12.08.37;  author jerryh;  state Exp;
branches ;
next     1.6;

1.6
date     93.01.15.15.38.12;  author jerryh;  state Exp;
branches ;
next     1.5;

1.5
date     92.12.11.13.32.35;  author jerryh;  state Exp;
branches ;
next     1.4;

1.4
date     92.12.04.10.04.11;  author jerryh;  state Exp;
branches ;
next     1.3;

1.3
date     92.11.23.09.19.30;  author jerryh;  state Exp;
branches ;
next     1.2;

1.2
date     92.11.02.13.23.44;  author jerryh;  state Exp;
branches ;
next     1.1;

1.1
date     92.10.21.14.59.35;  author jerryh;  state Exp;
branches ;
next     ;


desc
@makefile for cd.device.
@


1.21
log
@now makefile makes an a1200 version of cd.device as well.
@
text
@
# makefile for smake

#
# Server directory for the data...
#
REMOTE = V:src/kickstart/cd

INCLDS =  cdprivate.i cd_rev.i cd.i cdgs_hw.i
FLAGS  =  -s -i include:
OBJ = obj/
LST = lst/

cd.ld: $(OBJ)main.o $(OBJ)task.o $(OBJ)functions.o $(OBJ)drive.o $(OBJ)interrupt.o $(OBJ)read.o $(OBJ)ecc.o $(OBJ)print.o
       blink obj/main.o obj/task.o obj/drive.o obj/interrupt.o obj/read.o obj/ecc.o obj/functions.o obj/print.o \
             LIBRARY lib:amiga.lib TO cd.ld VERBOSE SMALLCODE SMALLDATA addsym
       blink obj/main.o.a1200 obj/task.o.a1200 obj/drive.o.a1200 obj/interrupt.o.a1200 obj/read.o.a1200 obj/ecc.o.a1200 obj/functions.o.a1200 obj/print.o.a1200 \
             LIBRARY lib:amiga.lib TO cd.ld.a1200 VERBOSE SMALLCODE SMALLDATA addsym
       blink cd.ld to cd.ld.strip ND quiet
       
       copy cd.ld.strip cd.device


autodoc:
        autodoc >cd.doc main.asm task.asm

#
# Release the current build to the server
#
internal:
    @@delete $(REMOTE)/((\#?.(c|h|asm|i|ld|ld.strip|rev|doc|sfd))|makefile|lmkfile)
    @@protect ((\#?.(c|h|asm|i|ld|ld.strip|rev|doc|sfd))|makefile|lmkfile) +r quiet
    @@copy ((\#?.(c|h|asm|i|ld|ld.strip|rev|doc|sfd))|makefile|lmkfile) $(REMOTE)
    @@copy \#?.doc V:doc NOPRO
    @@copy \#?.sfd V:lib/sfd NOPRO
    @@copy cd.? v:include/devices NOPRO
    @@copy cdprivate.i v:include/internal NOPRO

.asm.o:
        hx68 -a $*.asm -o $(OBJ)$*.o.a1200     $(FLAGS)
        hx68 -a $*.asm -o $(OBJ)$*.o -D CDGS=1 $(FLAGS)

bumprev:
         bumprev 40 cd_rev

release:
         smake bumprev
         smake
         smake autodoc



$(OBJ)main.o: main.asm                                         $(INCLDS)

$(OBJ)task.o: task.asm                                         $(INCLDS)

$(OBJ)functions.o: functions.asm                               $(INCLDS)

$(OBJ)drive.o: drive.asm                                       $(INCLDS)

$(OBJ)interrupt.o: interrupt.asm                               $(INCLDS)

$(OBJ)read.o: read.asm                                         $(INCLDS)

$(OBJ)ecc.o: ecc.asm                                           $(INCLDS)

$(OBJ)print.o: print.asm                                       $(INCLDS)


@


1.20
log
@copy cdprivate.i to include:internal on smake internal.
@
text
@d17 2
d20 1
d40 2
a41 1
        hx68 -a $*.asm -o $(OBJ)$*.o $(FLAGS)
@


1.19
log
@added NOPRO to copy of cd.h/i files.
@
text
@d34 1
@


1.18
log
@removed copy to devs: of cd.device.
@
text
@d33 1
a33 1
    @@copy cd.? v:include/devices
@


1.17
log
@Added internal release sequence.
@
text
@a18 1
       copy cd.ld.strip devs:cd.device
@


1.16
log
@removed debug version.
@
text
@d4 5
a19 2
       copy cd.ld.strip df0:devs/cd.device
       copy cd.ld.strip df0:modules/cd.ld
d24 11
@


1.15
log
@debug version of main.c was not included.
@
text
@a11 2
       blink obj/main.db.o obj/task.db.o obj/drive.db.o obj/interrupt.db.o obj/read.db.o obj/ecc.db.o obj/functions.db.o obj/print.db.o \
             LIBRARY lib:amiga.lib TO cd.ld.db VERBOSE SMALLCODE SMALLDATA addsym
a12 1
       blink cd.ld.db to cd.ld.db.strip ND quiet
d15 2
a16 2
       copy cd.ld.db.strip df0:devs/cd.device
       copy cd.ld.db.strip df0:modules/cd.ld
a23 1
        hx68 -a $*.asm -o $(OBJ)$*.db.o -dDVL=1 $(FLAGS)
@


1.14
log
@creates a standard and a debug version of the device driver now.
@
text
@d12 1
a12 1
       blink obj/main.o obj/task.db.o obj/drive.db.o obj/interrupt.db.o obj/read.db.o obj/ecc.db.o obj/functions.db.o obj/print.db.o \
@


1.13
log
@addsym must be used.
@
text
@d12 2
d15 1
d18 2
a19 2
       copy cd.ld.strip df0:devs/cd.device
       copy cd.ld.strip df0:modules/cd.ld
d27 1
a27 1

@


1.12
log
@Makefile now makes a .ld and a .ld.strip
@
text
@d11 1
a11 1
             LIBRARY lib:amiga.lib TO cd.ld VERBOSE SMALLCODE SMALLDATA
@


1.11
log
@reworked for sas 6.2
@
text
@d11 6
a16 5
             LIBRARY lib:amiga.lib TO cd.ld VERBOSE SMALLCODE SMALLDATA addsym ND
       copy cd.ld cd.device
       copy cd.ld devs:cd.device
       copy cd.ld df0:devs/cd.device
       copy cd.ld df0:modules/cd.ld
@


1.10
log
@autodoc changed from .auto to .doc.
@
text
@d2 1
a2 1
# makefile for lmk
d10 2
a11 1
       blink with cd.lnk ND
d29 3
a31 3
         lmk bumprev
         lmk
         lmk autodoc
@


1.9
log
@no automatic checkin on release.
@
text
@d18 1
a18 1
        autodoc >cd.auto main.asm task.asm
@


1.8
log
@ecc now incorporated.
@
text
@d4 1
a4 1
INCLDS =  cdprivate.i version.i cd.i cdgs_hw.i
d9 1
a9 1
cd:   $(OBJ)main.o $(OBJ)task.o $(OBJ)functions.o $(OBJ)drive.o $(OBJ)interrupt.o $(OBJ)read.o $(OBJ)ecc.o $(OBJ)print.o
d16 1
d20 14
a34 1
        hx68 -a main.asm -o $(OBJ)main.o $(FLAGS)
a36 1
        hx68 -a task.asm -o $(OBJ)task.o $(FLAGS)
a38 1
        hx68 -a functions.asm -o $(OBJ)functions.o $(FLAGS)
a40 1
        hx68 -a drive.asm -o $(OBJ)drive.o $(FLAGS)
a42 1
        hx68 -a interrupt.asm -o $(OBJ)interrupt.o $(FLAGS)
a44 1
        hx68 -a read.asm -o $(OBJ)read.o $(FLAGS)
a46 1
        hx68 -a ecc.asm -o $(OBJ)ecc.o $(FLAGS)
a48 1
        hx68 -a print.asm -o $(OBJ)print.o $(FLAGS)
@


1.7
log
@internal.i is now cdprivate.i
@
text
@d9 1
a9 1
cd:   $(OBJ)main.o $(OBJ)task.o $(OBJ)functions.o $(OBJ)drive.o $(OBJ)interrupt.o $(OBJ)read.o $(OBJ)readecc.o $(OBJ)print.o
d37 2
a38 2
$(OBJ)readecc.o: readecc.asm                                   $(INCLDS)
        hx68 -a readecc.asm -o $(OBJ)readecc.o $(FLAGS)
@


1.6
log
@temporarily added readecc.asm.
@
text
@d4 1
a4 1
INCLDS =  internal.i version.i cd.i cdgs_hw.i
@


1.5
log
@uses hx68 instead of casm now.
@
text
@d9 1
a9 1
cd:   $(OBJ)main.o $(OBJ)task.o $(OBJ)functions.o $(OBJ)drive.o $(OBJ)interrupt.o $(OBJ)read.o $(OBJ)ecc.o $(OBJ)print.o
d37 2
a38 2
$(OBJ)ecc.o: ecc.asm                                           $(INCLDS)
        hx68 -a ecc.asm -o $(OBJ)ecc.o $(FLAGS)
@


1.4
log
@insignificant changes.
@
text
@d14 1
d20 1
a20 1
        casm -a main.asm -o $(OBJ)main.o $(FLAGS)
d23 1
a23 1
        casm -a task.asm -o $(OBJ)task.o $(FLAGS)
d26 1
a26 1
        casm -a functions.asm -o $(OBJ)functions.o $(FLAGS)
d29 1
a29 1
        casm -a drive.asm -o $(OBJ)drive.o $(FLAGS)
d32 1
a32 1
        casm -a interrupt.asm -o $(OBJ)interrupt.o $(FLAGS)
d35 1
a35 1
        casm -a read.asm -o $(OBJ)read.o $(FLAGS)
d38 1
a38 1
        casm -a ecc.asm -o $(OBJ)ecc.o $(FLAGS)
d41 1
a41 1
        casm -a print.asm -o $(OBJ)print.o $(FLAGS)
@


1.3
log
@no effective change.
@
text
@d12 2
@


1.2
log
@more modules.
@
text
@d5 1
d14 1
a14 1
         autodoc >cd.auto main.asm task.asm
d17 1
a17 1
        casm -a main.asm -o $(OBJ)main.o -s
d20 1
a20 1
        casm -a task.asm -o $(OBJ)task.o -s
d23 1
a23 1
        casm -a functions.asm -o $(OBJ)functions.o -s
d26 1
a26 1
        casm -a drive.asm -o $(OBJ)drive.o -s
d29 1
a29 1
        casm -a interrupt.asm -o $(OBJ)interrupt.o -s
d32 1
a32 1
        casm -a read.asm -o $(OBJ)read.o -s
d35 1
a35 1
        casm -a ecc.asm -o $(OBJ)ecc.o -s
d38 1
a38 1
        casm -a print.asm -o $(OBJ)print.o -s
@


1.1
log
@Initial revision
@
text
@d8 1
a8 1
cd:   $(OBJ)main.o $(OBJ)task.o $(OBJ)functions.o $(OBJ)interrupt.o $(OBJ)print.o
d24 3
d29 6
@
