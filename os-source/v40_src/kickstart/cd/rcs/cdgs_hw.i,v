head     1.7;
branch   ;
access   ;
symbols  ;
locks    jerryh:1.7; strict;
comment  @* @;


1.7
date     93.04.13.17.06.23;  author jerryh;  state Exp;
branches ;
next     1.6;

1.6
date     93.02.02.17.06.47;  author jerryh;  state Exp;
branches ;
next     1.5;

1.5
date     93.01.07.09.36.16;  author jerryh;  state Exp;
branches ;
next     1.4;

1.4
date     92.12.09.15.19.40;  author jerryh;  state Exp;
branches ;
next     1.3;

1.3
date     92.12.04.10.18.30;  author jerryh;  state Exp;
branches ;
next     1.2;

1.2
date     92.11.02.13.30.57;  author jerryh;  state Exp;
branches ;
next     1.1;

1.1
date     92.10.21.15.00.59;  author jerryh;  state Exp;
branches ;
next     ;


desc
@private include file for cd hardware definitions for cd.device.
@


1.7
log
@Added PALNTSC to CDCONFIG.
@
text
@************************************************************************
*                                                                      *
*   CD-ROM Hardware Include File                                       *
*                                                                      *
*       CDGS Hardware register definitions                             *
*                                                                      *
************************************************************************


CDHARDWARE      equ     $B80000         ; Hardware base offset

CDCHIPVERSION   equ     $0000           ; LONG  Revision register
CDSTATUS        equ     $0004           ; LONG  Interrupt status register
CDINT2ENABLE    equ     $0008           ; LONG  Int 2 interrupt enable register
INTB_SUBCODE        equ 31              ;       Frame interrupt
INTB_DRIVEXMIT      equ 30              ;       Drive command transmit
INTB_DRIVERECV      equ 29              ;       Drive command receive
INTB_RXDMADONE      equ 28              ;       Receive DMA complete
INTB_TXDMADONE      equ 27              ;       Transmit DMA complete
INTB_PBX            equ 26              ;       CD-ROM data available
INTB_OVERFLOW       equ 25              ;       No free buffers available
INTF_SUBCODE        equ $80000000
INTF_DRIVEXMIT      equ $40000000
INTF_DRIVERECV      equ $20000000
INTF_RXDMADONE      equ $10000000
INTF_TXDMADONE      equ $08000000
INTF_PBX            equ $04000000
INTF_OVERFLOW       equ $02000000


CDROMHIGH       equ     $0010           ; LONG  CD-ROM data high DMA address bits 
CDCOMHIGH       equ     $0014           ; LONG  Drive communications data high address bits
CDSUBINX        equ     $0018           ; BYTE  Drive subcode page index
CDCOMTXINX      equ     $0019           ; BYTE  Drive communications receive page index
CDCOMRXINX      equ     $001A           ; BYTE  Drive communications transmit page index
CDCOMTXCMP      equ     $001D           ; BYTE  Drive communications transmit compare register
CDCOMRXCMP      equ     $001F           ; BYTE  Drive communications receive compare register

CDPBX           equ     $0020           ; LONG  bits identifying used/unused buffers
CDCONFIG        equ     $0024           ; LONG  Drive configuration
CB_SUBCODE          equ 31              ;       Subcode DMA enable
CB_CDCOMTX          equ 30
CB_CDCOMRX          equ 29
CB_DBLCAS           equ 28
CB_PBX              equ 27              ;       PBX enable
CB_CDROM            equ 26              ;       CDROM data path enable
CB_DATA             equ 25              ;       RAW data mode enable
CB_2500Q            equ 24              ;       2500Q mode
CB_PALNTSC          equ 23              ;       PAL/NTSC config
CF_SUBCODE          equ $80000000
CF_CDCOMTX          equ $40000000
CF_CDCOMRX          equ $20000000
CF_DBLCAS           equ $10000000
CF_PBX              equ $08000000
CF_CDROM            equ $04000000
CF_DATA             equ $02000000
CF_2500Q            equ $01000000
CF_PALNTSC          equ $00800000
CDCOMPORT       equ     $0028           ; BYTE  Write a command byte to the Drive
CDPORTDAT       equ     $002C           ; BYTE  Twiddle the bits, or read the bits
CDPORTDIR       equ     $002E           ; BYTE  Port direction

CIAAPRA         equ     $BFE001         ; Address to find mute signal
MUTEB           equ     0               ; Mute bit
MUTEF           equ     $01
@


1.6
log
@no effective change.
@
text
@d49 1
d58 1
@


1.5
log
@Added hardware defines for mute signal.
@
text
@d5 1
a5 1
*       4510 Hardware register definitions                             *
@


1.4
log
@CDCOM?XINX pointers were transposed.
@
text
@d58 6
@


1.3
log
@made consistant with hardware, not documentation.
@
text
@d34 2
a35 2
CDCOMRXINX      equ     $0019           ; BYTE  Drive communications receive page index
CDCOMTXINX      equ     $001A           ; BYTE  Drive communications transmit page index
@


1.2
log
@All kinds of new stuff.
@
text
@d2 5
a6 5
***
***  CD-ROM Hardware Include File
***
***     4510 Hardware register definitions
***
a14 1
CDINT6ENABLE    equ     $000C           ; LONG  Int 6 interrupt enable register
d18 4
a21 3
INTB_DRIVECMP       equ 28              ;       Drive compare receive
INTB_PBX            equ 25              ;       CD-ROM data available
INTB_OVERFLOW       equ 24              ;       No free buffers available
d25 4
a28 3
INTF_DRIVECMP       equ $10000000
INTF_PBX            equ $02000000
INTF_OVERFLOW       equ $01000000
d34 4
a37 2
CDCOMINX        equ     $0019           ; BYTE  Drive communications page index
CDCOMCMP        equ     $001C           ; BYTE  Drive communications compare register
d42 7
a48 6
CB_PBX              equ 29              ;       PBX enable
CB_CDROM            equ 28              ;       CDROM data path enable
CB_DRIVECOM         equ 25              ;       Drive communications DMA enable
CB_DATA             equ 24              ;       RAW data mode enable
CB_2500Q            equ 23              ;       2500Q mode
CB_ROMCLK           equ 22              ;       CD-ROM data clock
d50 8
a57 7
CF_PBX              equ $20000000
CF_CDROM            equ $10000000
CF_DRIVECOM         equ $02000000
CF_DATA             equ $01000000
CF_2500Q            equ $00800000
CF_ROMCLK           equ $00400000
CDCOMSEND       equ     $0028           ; BYTE  Write a command byte to the Drive
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
CDHARDWARE      equ     $B80000     ; Hardware base offset
d12 41
a52 107

CDROMHIGH       equ     $0a10       ; CD-ROM data high DMA address bits 
CDCOMHIGH       equ     $0a14       ; Drive communications data high address bits


************************************************************************
***
***  CD Commands
***
************************************************************************


CDCMD_OPEN              equ $0          ;     Open drive door                      


CDCMD_CLOSE             equ $1          ;     Close drive door


CDCMD_SPIN              equ $2          ;     Spin motor


CDCMD_STOP              equ $3          ;     Stop motor


CDCMD_READTOC           equ $4          ;     Read Table of Contents


CDCMD_SEEK              equ $5          ;     Seek to position on disk
                                        ;     <POSH><POSM><POSL>

CDCMD_PLAY              equ $6          ; (M) Play from start, stop before end
                                        ;     <SMIN><SSEC><SFRM> <EMIN><ESEC><EFRM> <MODE>

CDCMD_PLAYTRACK         equ $7          ; (M) Play from start Track|Index to end Track|Index
                                        ;     <STRK><SINX> <ETRK><EINX>

CDCMD_READ              equ $8          ;     Read bytes starting at POS and read LEN bytes. Transfer to ADR, handshake after XLCNT bytes
                                        ;     <POSH><POSM><POSL> <LENH><LENM><LENL> <ADRH><ADRMH><ADRML><ADRL> <XLCNTH><XLCNTM><XLCNTL>

CDCMD_PAUSE             equ $9          ; (m) Pause Play                           


CDCMD_RESUME            equ $A          ; (m) Resume Play                          


CDCMD_STOPPLAY          equ $B          ; (m) Stop Playing (do not stop motor)


CDCMD_SETPLAYMODE       equ $C          ; (m) Set Speed/Direction of Play
                                        ;     <MODE>

                                        ;     76543210
                                        ;     000000--      Must be zero
                                        ;     ------00      Standard play
                                        ;     ------01      Fast Forward
                                        ;     ------10      Fast Reverse
                                        ;     ------11      Double speed play

CDCMD_QCODE             equ $D          ;     Retrieve Q-Code packet from drive


************************************************************************
***
***  Error definitions
***
************************************************************************


CD_ERR_INVALIDCOMMAND   equ     1       ; invalid command                                                               
CD_ERR_CMDINCOMPLETE    equ     2       ; you tried to send a command before previous command was complete              
                                        ;   ... and you probably just royally screwed things up.                        
                                        ;   I'd recommend doing a RESET at this point.                                  
CD_ERR_CHINON           equ     3       ; chinon chip reported an unexpected error                                      
CD_ERR_CXD1186Q         equ     4       ; CXD1186Q reported an unexpected error                                         
CD_ERR_DECTIMEOUT       equ     5       ; 1186 decoder timeout                                                          
CD_ERR_NOTFOUND         equ     6       ; Could not read information                                                    
CD_ERR_NOTOC            equ     7       ; Table of contents not read, can't do a PLAYTRACK                              
CD_ERR_INVALIDTRACK     equ     8       ; The track(s) you specified are invalid                                        
CD_ERR_SEEKERROR        equ     9       ; Seek past end of disk                                                         
CD_ERR_REVERSEINDEX     equ     10      ; Play track with a subindex greater than 1 cannot be initiated in reverse mode 
CD_ERR_EJECTABORT       equ     11      ; Eject button was pressed while command was in progress                        
CD_ERR_DRIVELOST        equ     12      ; Drive seems confused as to where it should be                                 
                                                                                                                        
CD_ERR_INVALIDPHASE     equ     13      ; phase error (should be impossible as well)                                    
CD_ERR_INVALIDSTATE     equ     14      ; Drive is not in proper state to execute this command                          
CD_ERR_INTERRUPTPHASE   equ     15      ; interrupt occured at an unexpected time                                       
CD_ERR_BADPACKET        equ     16      ; Bad CheckSum in packet from chinon                                            


***  Errors returned by Chinon drive

CH_ERR_BADCOMMAND       equ     %10000000
CH_ERR_CHECKSUM         equ     %10001000
CH_ERR_DRAWERSTUCK      equ     %10010000
CH_ERR_DISKUNREADABLE   equ     %10011000
CH_ERR_INVALIDADDRESS   equ     %10100000
CH_ERR_WRONGDATA        equ     %10101000
CH_ERR_FOCUSERROR       equ     %11001000
CH_ERR_SPINDLEERROR     equ     %11010000
CH_ERR_TRACKINGERROR    equ     %11011000
CH_ERR_SLEDERROR        equ     %11100000
CH_ERR_TRACKJUMP        equ     %11101000
CH_ERR_ABNORMALSEEK     equ     %11110000
CH_ERR_UNDEFINED        equ     %11111000



@
