head     36.28;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @@;


36.28
date     92.06.19.14.42.34;  author jesup;  state Exp;
branches ;
next     36.27;

36.27
date     92.04.05.23.53.42;  author jesup;  state Exp;
branches ;
next     36.26;

36.26
date     92.03.11.20.49.19;  author jesup;  state Exp;
branches ;
next     36.25;

36.25
date     92.01.29.15.43.18;  author jesup;  state Exp;
branches ;
next     36.24;

36.24
date     91.05.16.15.57.29;  author jesup;  state Exp;
branches ;
next     36.23;

36.23
date     91.05.16.14.30.42;  author jesup;  state Exp;
branches ;
next     36.22;

36.22
date     91.05.16.13.47.55;  author jesup;  state Exp;
branches ;
next     36.21;

36.21
date     91.03.12.22.16.05;  author jesup;  state Exp;
branches ;
next     36.20;

36.20
date     91.02.13.05.43.36;  author jesup;  state Exp;
branches ;
next     36.19;

36.19
date     91.01.29.00.06.25;  author jesup;  state Exp;
branches ;
next     36.18;

36.18
date     90.11.07.16.25.06;  author jesup;  state Exp;
branches ;
next     36.17;

36.17
date     90.11.02.03.48.37;  author jesup;  state Exp;
branches ;
next     36.16;

36.16
date     90.11.02.03.45.19;  author jesup;  state Exp;
branches ;
next     36.15;

36.15
date     90.11.02.03.33.12;  author jesup;  state Exp;
branches ;
next     36.14;

36.14
date     90.09.25.16.17.56;  author jesup;  state Exp;
branches ;
next     36.13;

36.13
date     90.07.12.03.28.29;  author jesup;  state Exp;
branches ;
next     36.12;

36.12
date     90.05.31.07.12.40;  author jesup;  state Exp;
branches ;
next     36.11;

36.11
date     90.05.09.02.33.34;  author jesup;  state Exp;
branches ;
next     36.10;

36.10
date     90.04.03.05.20.01;  author jesup;  state Exp;
branches ;
next     36.9;

36.9
date     90.04.03.04.49.13;  author jesup;  state Exp;
branches ;
next     36.8;

36.8
date     90.01.17.22.07.04;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     89.12.15.00.17.30;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     89.12.12.00.02.57;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     89.12.09.02.19.04;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     89.11.14.01.55.08;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.10.24.19.06.22;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.10.18.04.46.09;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.20.17.00.41;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.28
log
@Added reserved error numbers for networking
@
text
@	IFND	DOS_DOS_I
DOS_DOS_I SET	1
**	$Id: dos.i,v 36.27 92/04/05 23:53:42 jesup Exp Locker: jesup $
**
**	Standard asm header for AmigaDOS 
**
**	(C) Copyright 1985,1986,1987,1988,1989,1990 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

	IFND	EXEC_TYPES_I
	INCLUDE	"exec/types.i"
	ENDC

DOSNAME	    MACRO
      DC.B  'dos.library',0
      ENDM

* Predefined Amiga DOS global constants 

DOSTRUE	      EQU     -1
DOSFALSE      EQU      0

* Mode parameter to Open() 
MODE_OLDFILE	     EQU   1005	  * Open existing file read/write 
*				  * positioned at beginning of file. 
MODE_NEWFILE	     EQU   1006	  * Open freshly created file (delete 
*				  * old file) read/write	    
MODE_READWRITE	     EQU   1004	  * Open old file w/shared lock,
*				  * creates file if doesn't exist.

* Relative position to Seek() 
OFFSET_BEGINNING     EQU   -1	  * relative to Beginning Of File 
OFFSET_CURRENT	     EQU    0	  * relative to Current file position 
OFFSET_END	     EQU    1	  * relative to End Of File    

OFFSET_BEGINING	    EQU	  OFFSET_BEGINNING     * Ancient compatibility

BITSPERBYTE	     EQU   8
BYTESPERLONG	     EQU   4
BITSPERLONG	     EQU   32
MAXINT		     EQU   $7FFFFFFF
MININT		     EQU   $80000000

* Passed as type to Lock() 
SHARED_LOCK	     EQU   -2	; File is readable by others 
ACCESS_READ	     EQU   -2	; Synonym
EXCLUSIVE_LOCK	     EQU   -1	; No other access allowed    
ACCESS_WRITE	     EQU   -1	; Synonym


 STRUCTURE DateStamp,0 
   LONG	 ds_Days		; Number of days since Jan. 1, 1978
   LONG	 ds_Minute		; Number of minutes past midnight 
   LONG	 ds_Tick		; Number of ticks past minute 
   LABEL ds_SIZEOF		; DateStamp 

TICKS_PER_SECOND EQU 50		; Number of ticks in one second 

* Returned by Examine() and ExInfo() 
 STRUCTURE FileInfoBlock,0
   LONG	  fib_DiskKey
   LONG	  fib_DirEntryType	; Type of Directory. If < 0, then a plain file.
				; If > 0 a directory 
   STRUCT fib_FileName,108	; Null terminated. Max 30 chars used for now 
   LONG	  fib_Protection	; bit mask of protection, rwxd are 3-0.	     
   LONG	  fib_EntryType
   LONG	  fib_Size		; Number of bytes in file 
   LONG	  fib_NumBlocks		; Number of blocks in file 
   STRUCT fib_DateStamp,ds_SIZEOF ; Date file last changed.
   STRUCT fib_Comment,80	; Null terminated. Comment associated with file 

   ; Note: the following fields are not supported by all filesystems.
   ; They should be initialized to 0 sending an ACTION_EXAMINE packet.
   ; When Examine() is called, these are set to 0 for you.
   ; AllocDosObject() also initializes them to 0.
   UWORD  fib_OwnerUID		; owner's UID 
   UWORD  fib_OwnerGID		; owner's GID

   STRUCT fib_Reserved,32
   LABEL  fib_SIZEOF		; FileInfoBlock 

* FIB stands for FileInfoBlock 
* FIBB are bit definitions, FIBF are field definitions 
* Regular RWED bits are 0 == allowed.
* NOTE: GRP and OTR RWED permissions are 0 == not allowed!
* Group and Other permissions are not directly handled by the filesystem
   BITDEF   FIB,OTR_READ,15	; Other: file is readable
   BITDEF   FIB,OTR_WRITE,14	; Other: file is writable
   BITDEF   FIB,OTR_EXECUTE,13	; Other: file is executable
   BITDEF   FIB,OTR_DELETE,12	; Other: prevent file from being deleted
   BITDEF   FIB,GRP_READ,11	; Group: file is readable
   BITDEF   FIB,GRP_WRITE,10	; Group: file is writable
   BITDEF   FIB,GRP_EXECUTE,9	; Group: file is executable
   BITDEF   FIB,GRP_DELETE,8	; Group: prevent file from being deleted

   BITDEF   FIB,SCRIPT,6	; program is an execute script
   BITDEF   FIB,PURE,5		; program is reentrant and reexecutable
   BITDEF   FIB,ARCHIVE,4	; cleared whenever file is changed
   BITDEF   FIB,READ,3		; ignored by old filesystem
   BITDEF   FIB,WRITE,2		; ignored by old filesystem
   BITDEF   FIB,EXECUTE,1	; ignored by system, used by Shell
   BITDEF   FIB,DELETE,0	; prevent file from being deleted

* Standard maximum length for an error string from fault.  However, most
* error strings should be kept under 60 characters if possible.  Don't
* forget space for the header you pass in.
FAULT_MAX	EQU	82

* All BCPL data must be long word aligned.  BCPL pointers are the long word
* address (i.e byte address divided by 4 (>>2))

* Macro to indicate BCPL pointers
BPTR	 MACRO			    * Long word pointer
	 LONG	  \1
	 ENDM
BSTR	 MACRO			    * Long word pointer to BCPL string.
	 LONG	  \1
	 ENDM

* #define BADDR( bptr ) (bptr << 2) * Convert BPTR to byte addressed pointer

* BCPL strings have a length in the first byte and then the characters.
* For example:	s[0]=3 s[1]=S s[2]=Y s[3]=S

* returned by Info() 
 STRUCTURE InfoData,0
   LONG id_NumSoftErrors	* number of soft errors on disk 
   LONG id_UnitNumber		* Which unit disk is (was) mounted on 
   LONG id_DiskState		* See defines below 
   LONG id_NumBlocks		* Number of blocks on disk 
   LONG id_NumBlocksUsed	* Number of block in use 
   LONG id_BytesPerBlock   
   LONG id_DiskType		* Disk Type code
   BPTR id_VolumeNode		* BCPL pointer to volume node
   LONG id_InUse		* Flag, zero if not in use
   LABEL id_SIZEOF		* InfoData 

* ID stands for InfoData 
*	     Disk states
ID_WRITE_PROTECTED	EQU	80	* Disk is write protected 
ID_VALIDATING		EQU	81	* Disk is currently being validated 
ID_VALIDATED		EQU	82	* Disk is consistent and writeable 

*	   Disk types 
* ID_INTER_* use international case comparison routines for hashing
* Any other new filesystems should also use it, if possible
ID_NO_DISK_PRESENT	EQU -1
ID_UNREADABLE_DISK	EQU  ('B'<<24)!('A'<<16)!('D'<<8)
ID_NOT_REALLY_DOS	EQU  ('N'<<24)!('D'<<16)!('O'<<8)!('S')
ID_DOS_DISK		EQU  ('D'<<24)!('O'<<16)!('S'<<8)
ID_FFS_DISK		EQU  ('D'<<24)!('O'<<16)!('S'<<8)!(1)
ID_INTER_DOS_DISK	EQU  ('D'<<24)!('O'<<16)!('S'<<8)!(2)
ID_INTER_FFS_DISK	EQU  ('D'<<24)!('O'<<16)!('S'<<8)!(3)
ID_FASTDIR_DOS_DISK	EQU  ('D'<<24)!('O'<<16)!('S'<<8)!(4)
ID_FASTDIR_FFS_DISK	EQU  ('D'<<24)!('O'<<16)!('S'<<8)!(5)
ID_KICKSTART_DISK	EQU  ('K'<<24)!('I'<<16)!('C'<<8)!('K')
ID_MSDOS_DISK		EQU  ('M'<<24)!('S'<<16)!('D'<<8)

* Errors from IoErr(), etc. 
ERROR_NO_FREE_STORE		  EQU  103
ERROR_TASK_TABLE_FULL		  EQU  105
ERROR_BAD_TEMPLATE		  EQU  114
ERROR_BAD_NUMBER		  EQU  115
ERROR_REQUIRED_ARG_MISSING	  EQU  116
ERROR_KEY_NEEDS_ARG		  EQU  117
ERROR_TOO_MANY_ARGS		  EQU  118
ERROR_UNMATCHED_QUOTES		  EQU  119
ERROR_LINE_TOO_LONG		  EQU  120
ERROR_FILE_NOT_OBJECT		  EQU  121
ERROR_INVALID_RESIDENT_LIBRARY	  EQU  122
ERROR_NO_DEFAULT_DIR		  EQU  201
ERROR_OBJECT_IN_USE		  EQU  202
ERROR_OBJECT_EXISTS		  EQU  203
ERROR_DIR_NOT_FOUND		  EQU  204
ERROR_OBJECT_NOT_FOUND		  EQU  205
ERROR_BAD_STREAM_NAME		  EQU  206
ERROR_OBJECT_TOO_LARGE		  EQU  207
ERROR_ACTION_NOT_KNOWN		  EQU  209
ERROR_INVALID_COMPONENT_NAME	  EQU  210
ERROR_INVALID_LOCK		  EQU  211
ERROR_OBJECT_WRONG_TYPE		  EQU  212
ERROR_DISK_NOT_VALIDATED	  EQU  213
ERROR_DISK_WRITE_PROTECTED	  EQU  214
ERROR_RENAME_ACROSS_DEVICES	  EQU  215
ERROR_DIRECTORY_NOT_EMPTY	  EQU  216
ERROR_TOO_MANY_LEVELS		  EQU  217
ERROR_DEVICE_NOT_MOUNTED	  EQU  218
ERROR_SEEK_ERROR		  EQU  219
ERROR_COMMENT_TOO_BIG		  EQU  220   
ERROR_DISK_FULL			  EQU  221
ERROR_DELETE_PROTECTED		  EQU  222
ERROR_WRITE_PROTECTED		  EQU  223 
ERROR_READ_PROTECTED		  EQU  224
ERROR_NOT_A_DOS_DISK		  EQU  225
ERROR_NO_DISK			  EQU  226
ERROR_NO_MORE_ENTRIES		  EQU  232
* added for 1.4
ERROR_IS_SOFT_LINK		  EQU  233
ERROR_OBJECT_LINKED		  EQU  234
ERROR_BAD_HUNK			  EQU  235
ERROR_NOT_IMPLEMENTED		  EQU  236
ERROR_RECORD_NOT_LOCKED		  EQU  240
ERROR_LOCK_COLLISION		  EQU  241
ERROR_LOCK_TIMEOUT		  EQU  242
ERROR_UNLOCK_ERROR		  EQU  243

* error codes 303-305 are defined in dosasl.i
* error codes 500-599 reserved for Commodore Networking
* error codes 1000-1099 reserved for Commodore Networking applications,
* and may be reused by different client-server pairs

* These are the return codes used by convention by AmigaDOS commands 
* See FAILAT and IF for relvance to EXECUTE files		     
RETURN_OK			  EQU	 0  * No problems, success 
RETURN_WARN			  EQU	 5  * A warning only 
RETURN_ERROR			  EQU	10  * Something wrong 
RETURN_FAIL			  EQU	20  * Complete or severe failure

* Bit numbers that signal you that a user has issued a break
* for example: if (SetSignal(0,0) & SIGBREAKF_CTRL_C) cleanup_and_exit();
	BITDEF	SIGBREAK,CTRL_C,12
	BITDEF	SIGBREAK,CTRL_D,13
	BITDEF	SIGBREAK,CTRL_E,14
	BITDEF	SIGBREAK,CTRL_F,15

* Values returned by SameLock()
LOCK_DIFFERENT		EQU	-1
LOCK_SAME		EQU	0
LOCK_SAME_VOLUME	EQU	1	; locks are on same volume
LOCK_SAME_HANDLER	EQU	LOCK_SAME_VOLUME
* LOCK_SAME_HANDLER was a misleading name, def kept for src compatibility

* types for ChangeMode()
CHANGE_LOCK	EQU	0
CHANGE_FH	EQU	1

* Values for MakeLink()
LINK_HARD	EQU	0
LINK_SOFT	EQU	1		; softlinks are not fully supported yet

* values returned by ReadItem
ITEM_EQUAL	EQU	-2		; "=" Symbol
ITEM_ERROR	EQU	-1		; error
ITEM_NOTHING	EQU	0		; *N, ;, endstreamch
ITEM_UNQUOTED	EQU	1		; unquoted item
ITEM_QUOTED	EQU	2		; quoted item

* types for AllocDosObject/FreeDosObject
DOS_FILEHANDLE		EQU	0	; few people should use this
DOS_EXALLCONTROL	EQU	1	; Must be used to allocate this!
DOS_FIB			EQU	2	; useful
DOS_STDPKT		EQU	3	; for doing packet-level I/O
DOS_CLI			EQU	4	; for shell-writers, etc
DOS_RDARGS		EQU	5	; for ReadArgs if you pass it in

	ENDC	; DOS_DOS_I
@


36.27
log
@Added fib_OwnerXXX
@
text
@d3 1
a3 1
**	$Id: dos.i,v 36.26 92/03/11 20:49:19 jesup Exp Locker: jesup $
d209 3
@


36.26
log
@Oops, forgot to andd ID_FASTDIR_*
@
text
@d3 1
a3 1
**	$Id: dos.i,v 36.25 92/01/29 15:43:18 jesup Exp Locker: jesup $
d72 9
a80 1
   STRUCT fib_Reserved,36
@


36.25
log
@Added group and other RWED bits.
@
text
@d3 1
a3 1
**	$Id: dos.i,v 36.24 91/05/16 15:57:29 jesup Exp Locker: jesup $
d139 1
d147 2
@


36.24
log
@putzing today.  forgot to add the LOCK_SAME_HANDLER equ LOCK_SAME_VOLUME
define to the .i file
@
text
@d3 1
a3 1
**	$Id: dos.i,v 36.23 91/05/16 14:30:42 jesup Exp Locker: jesup $
d77 12
d92 3
a94 3
   BITDEF   FIB,READ,3		; ignored by the system
   BITDEF   FIB,WRITE,2		; ignored by the system
   BITDEF   FIB,EXECUTE,1	; ignored by the system
@


36.23
log
@Oops.  Apparently the comment was right, the code, autodoc, and defines
were wrong or misleading.
@
text
@d3 1
a3 1
**	$Id: dos.i,v 36.22 91/05/16 13:47:55 jesup Exp Locker: jesup $
d204 2
a205 1
LOCK_SAME_HANDLER	EQU	1	; locks are on same volume
@


36.22
log
@Added some comments to LOCK_xxxx defs
@
text
@d3 1
a3 1
**	$Id: dos.i,v 36.21 91/03/12 22:16:05 jesup Exp Locker: jesup $
d204 2
a205 2
LOCK_SAME_HANDLER	EQU	1	; locks are on same handler -
* not necessarily the same volume.  Compare fl_Volume ptrs to check that.
@


36.21
log
@Added dos\2 and dos\3 ids
@
text
@d3 1
a3 1
**	$Id: dos.i,v 36.20 91/02/13 05:43:36 jesup Exp Locker: jesup $
d202 1
d204 2
a205 2
LOCK_SAME_HANDLER	EQU	1
LOCK_DIFFERENT		EQU	-1
@


36.20
log
@Added DOS_RDARGS to AllocDosObject
@
text
@d3 1
a3 1
**	$Id: dos.i,v 36.19 91/01/29 00:06:25 jesup Exp Locker: jesup $
d124 1
d126 1
d132 2
@


36.19
log
@Added ID_MSDOS_DISK to match kodiak's ID_PC_DISK
@
text
@d3 1
a3 1
**	$Id: dos.i,v 36.18 90/11/07 16:25:06 jesup Exp Locker: jesup $
d223 1
@


36.18
log
@Added exec/types.i
@
text
@d3 1
a3 1
**	$Id: dos.i,v 36.13 90/07/12 03:28:29 jesup Exp $
d131 1
@


36.17
log
@Added *
@
text
@d11 4
@


36.16
log
@COmment change
@
text
@d26 1
a26 1
				  * creates file if doesn't exist.
@


36.15
log
@comment changes
@
text
@d26 1
a26 1
				  * creates file if doesn't exist. */
@


36.14
log
@added erro_not_implemented
@
text
@d25 3
a27 1
MODE_READWRITE	     EQU   1004	  * Open old file w/exclusive lock
d53 1
d203 1
a203 1
LINK_SOFT	EQU	1
@


36.13
log
@$id
@
text
@d3 1
a3 1
**	$Id: $
d167 1
@


36.12
log
@added comments
@
text
@d3 1
d5 1
a5 2
**	$Filename: dos/dos.i $
**	$Release: 1.3 $
d7 1
a7 3
**	Standard assembler header for AmigaDOS 
**
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
d171 2
@


36.11
log
@removed exec/.types, added DOS_CLI
@
text
@d182 1
a182 1
* for example: if (SetSignal(0,0) & SIGBREAKF_CTRL_CF) cleanup_and_exit();
@


36.10
log
@Fixed SetSignal comment
@
text
@a12 5
*      IFND EXEC_TYPES_I
*      INCLUDE "exec/types.i"
*      ENDC


d213 1
@


36.9
log
@for rcs 4.x header change
@
text
@d187 1
@


36.8
log
@Added defines for AllocDosObject
@
text
@@


36.7
log
@added ID_FFS_DISK, moved stuff from dosextens
@
text
@d212 6
@


36.6
log
@Added SameLock returns
@
text
@d129 1
d196 15
@


36.5
log
@*** empty log message ***
@
text
@d191 5
@


36.4
log
@new error codes
@
text
@d1 2
a2 2
	IFND	LIBRARIES_DOS_I
LIBRARIES_DOS_I SET	1
d4 1
a4 1
**	$Filename: libraries/dos.i $
d191 1
a191 1
	ENDC	; LIBRARIES_DOS_I
@


36.3
log
@Added fault define
@
text
@d134 6
d172 5
@


36.2
log
@Added link errors.
@
text
@d85 4
@


36.1
log
@*** empty log message ***
@
text
@d133 1
d136 1
d138 2
d148 1
d159 3
@
