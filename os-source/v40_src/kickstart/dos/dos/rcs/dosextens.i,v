head     36.42;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @@;


36.42
date     94.02.01.14.16.19;  author jesup;  state Exp;
branches ;
next     36.41;

36.41
date     92.06.02.23.40.42;  author jesup;  state Exp;
branches ;
next     36.40;

36.40
date     92.06.02.22.49.58;  author jesup;  state Exp;
branches ;
next     36.39;

36.39
date     92.05.14.14.44.38;  author jesup;  state Exp;
branches ;
next     36.38;

36.38
date     92.04.07.01.50.28;  author jesup;  state Exp;
branches ;
next     36.37;

36.37
date     91.11.08.14.29.16;  author jesup;  state Exp;
branches ;
next     36.36;

36.36
date     91.04.12.22.01.53;  author jesup;  state Exp;
branches ;
next     36.35;

36.35
date     91.03.17.20.03.24;  author jesup;  state Exp;
branches ;
next     36.34;

36.34
date     91.02.25.16.20.05;  author jesup;  state Exp;
branches ;
next     36.33;

36.33
date     91.02.13.06.40.49;  author jesup;  state Exp;
branches ;
next     36.32;

36.32
date     91.02.10.04.44.15;  author jesup;  state Exp;
branches ;
next     36.31;

36.31
date     91.02.08.17.04.38;  author jesup;  state Exp;
branches ;
next     36.30;

36.30
date     91.01.27.03.03.26;  author jesup;  state Exp;
branches ;
next     36.29;

36.29
date     91.01.17.14.22.54;  author jesup;  state Exp;
branches ;
next     36.28;

36.28
date     90.11.02.23.23.40;  author jesup;  state Exp;
branches ;
next     36.27;

36.27
date     90.08.28.02.05.11;  author jesup;  state Exp;
branches ;
next     36.26;

36.26
date     90.07.30.13.45.34;  author jesup;  state Exp;
branches ;
next     36.25;

36.25
date     90.07.12.03.30.09;  author jesup;  state Exp;
branches ;
next     36.24;

36.24
date     90.05.31.07.13.12;  author jesup;  state Exp;
branches ;
next     36.23;

36.23
date     90.05.09.02.34.24;  author jesup;  state Exp;
branches ;
next     36.22;

36.22
date     90.04.09.17.15.19;  author jesup;  state Exp;
branches ;
next     36.21;

36.21
date     90.04.03.05.20.35;  author jesup;  state Exp;
branches ;
next     36.20;

36.20
date     90.04.03.04.49.41;  author jesup;  state Exp;
branches ;
next     36.19;

36.19
date     90.03.18.15.31.51;  author jesup;  state Exp;
branches ;
next     36.18;

36.18
date     90.03.03.02.40.04;  author jesup;  state Exp;
branches ;
next     36.17;

36.17
date     90.01.17.22.07.44;  author jesup;  state Exp;
branches ;
next     36.16;

36.16
date     89.12.15.05.26.25;  author jesup;  state Exp;
branches ;
next     36.15;

36.15
date     89.12.15.00.18.27;  author jesup;  state Exp;
branches ;
next     36.14;

36.14
date     89.12.10.22.50.57;  author jesup;  state Exp;
branches ;
next     36.13;

36.13
date     89.12.09.02.20.00;  author jesup;  state Exp;
branches ;
next     36.12;

36.12
date     89.12.08.07.54.24;  author jesup;  state Exp;
branches ;
next     36.11;

36.11
date     89.12.03.14.58.01;  author jesup;  state Exp;
branches ;
next     36.10;

36.10
date     89.12.01.08.34.07;  author jesup;  state Exp;
branches ;
next     36.9;

36.9
date     89.11.22.03.43.30;  author jesup;  state Exp;
branches ;
next     36.8;

36.8
date     89.11.16.16.43.52;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     89.11.14.16.07.54;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     89.11.14.01.56.13;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     89.10.25.14.35.57;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     89.10.25.14.18.51;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.10.18.04.47.43;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.10.03.18.34.31;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.20.17.00.44;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.42
log
@added Unix device types (ST_xxx) for Berkeley FFS under AmigaDos
@
text
@	IFND	DOS_DOSEXTENS_I
DOS_DOSEXTENS_I	SET	1
**
**	$Id: dosextens.i,v 36.41 92/06/02 23:40:42 jesup Exp $
**
**	DOS structures not needed for the casual AmigaDOS user 
**
**	(C) Copyright 1985,1986,1987,1988,1989,1990 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

     IFND  EXEC_TYPES_I
     INCLUDE "exec/types.i"
     ENDC
     IFND  EXEC_TASKS_I
     INCLUDE "exec/tasks.i"
     ENDC
     IFND  EXEC_PORTS_I
     INCLUDE "exec/ports.i"
     ENDC
     IFND  EXEC_LIBRARIES_I
     INCLUDE "exec/libraries.i"
     ENDC
     IFND  EXEC_SEMAPHORES_I
     INCLUDE "exec/semaphores.i"
     ENDC
     IFND  DEVICES_TIMER_I
     INCLUDE "devices/timer.i"
     ENDC

     IFND  DOS_DOS_I
     INCLUDE "dos/dos.i"
     ENDC


* All DOS processes have this STRUCTure
* Create and DeviceProc returns pointer to the MsgPort in this STRUCTure
* Process_addr = DeviceProc(..) - TC_SIZE

 STRUCTURE Process,0
    STRUCT  pr_Task,TC_SIZE
    STRUCT  pr_MsgPort,MP_SIZE	* This is BPTR address from DOS functions
    WORD    pr_Pad		* Remaining variables on 4 byte boundaries
    BPTR    pr_SegList		* Array of seg lists used by this process
    LONG    pr_StackSize	* Size of process stack in bytes
    APTR    pr_GlobVec		* Global vector for this process (BCPL)
    LONG    pr_TaskNum		* CLI task number of zero if not a CLI
    BPTR    pr_StackBase	* Ptr to high memory end of process stack
    LONG    pr_Result2		* Value of secondary result from last call
    BPTR    pr_CurrentDir	* Lock associated with current directory
    BPTR    pr_CIS		* Current CLI Input Stream
    BPTR    pr_COS		* Current CLI Output Stream
    APTR    pr_ConsoleTask	* Console handler process for current window
    APTR    pr_FileSystemTask	* File handler process for current drive
    BPTR    pr_CLI		* pointer to CommandLineInterface
    APTR    pr_ReturnAddr	* pointer to previous stack frame
    APTR    pr_PktWait		* Function to be called when awaiting msg
    APTR    pr_WindowPtr	* Window pointer for errors

* following definitions are new with 2.0
    BPTR    pr_HomeDir          * Home directory of executing program
    LONG    pr_Flags		* flags telling dos about process
    APTR    pr_ExitCode		* code to call on exit of program or NULL
    LONG    pr_ExitData		* Passed as an argument to pr_ExitCode
    APTR    pr_Arguments	* Arguments passed to the process at start
    STRUCT  pr_LocalVars,MLH_SIZE * Local environment variables
    APTR    pr_ShellPrivate	* for the use of the current shell
    BPTR    pr_CES		* Error stream - if NULL, use pr_COS
   LABEL   pr_SIZEOF		* Process

*
* Flags for pr_Flags
*
	BITDEF PR,FREESEGLIST,0
	BITDEF PR,FREECURRDIR,1
	BITDEF PR,FREECLI,2
	BITDEF PR,CLOSEINPUT,3
	BITDEF PR,CLOSEOUTPUT,4
	BITDEF PR,FREEARGS,5

* The long word address (BPTR) of this STRUCTure is returned by
* Open() and other routines that return a file.	 You need only worry
* about this STRUCT to do async io's via PutMsg() instead of
* standard file system calls

 STRUCTURE FileHandle,0
   APTR	  fh_Link		* pointer to EXEC message
   APTR	  fh_Interactive	* Boolean; TRUE if interactive handle
   APTR	  fh_Type		* Port to do PutMsg() to
   LONG	  fh_Buf
   LONG	  fh_Pos
   LONG	  fh_End
   LONG	  fh_Funcs
fh_Func1 EQU fh_Funcs
   LONG	  fh_Func2
   LONG	  fh_Func3
   LONG	  fh_Args
fh_Arg1 EQU fh_Args
   LONG	  fh_Arg2
   LABEL  fh_SIZEOF * FileHandle

* This is the extension to EXEC Messages used by DOS
 STRUCTURE DosPacket,0
   APTR	  dp_Link	  * pointer to EXEC message
   APTR	  dp_Port	  * pointer to Reply port for the packet
*			  * Must be filled in each send.
   LONG	  dp_Type	  * See ACTION_... below and
*			  * 'R' means Read, 'W' means Write to the file system
   LONG	  dp_Res1	  * For file system calls this is the result
*			  * that would have been returned by the
*			  * function, e.g. Write ('W') returns actual
*			  * length written
   LONG	  dp_Res2	  * For file system calls this is what would
*			  * have been returned by IoErr()
   LONG	  dp_Arg1
*  Device packets common equivalents
dp_Action  EQU	dp_Type
dp_Status  EQU	dp_Res1
dp_Status2 EQU	dp_Res2
dp_BufAddr EQU	dp_Arg1
   LONG	  dp_Arg2
   LONG	  dp_Arg3
   LONG	  dp_Arg4
   LONG	  dp_Arg5
   LONG	  dp_Arg6
   LONG	  dp_Arg7
   LABEL  dp_SIZEOF * DosPacket

* A Packet does not require the Message to before it in memory, but
* for convenience it is useful to associate the two.
* Also see the function init_std_pkt for initializing this STRUCTure

 STRUCTURE StandardPacket,0
   STRUCT sp_Msg,MN_SIZE
   STRUCT sp_Pkt,dp_SIZEOF
   LABEL  sp_SIZEOF * StandardPacket


* Packet types
ACTION_NIL		EQU	0
ACTION_STARTUP		EQU	0
ACTION_GET_BLOCK	EQU	2	;OBSOLETE
ACTION_SET_MAP		EQU	4
ACTION_DIE		EQU	5
ACTION_EVENT		EQU	6
ACTION_CURRENT_VOLUME	EQU	7
ACTION_LOCATE_OBJECT	EQU	8
ACTION_RENAME_DISK	EQU	9
ACTION_WRITE		EQU	'W'
ACTION_READ		EQU	'R'
ACTION_FREE_LOCK	EQU	15
ACTION_DELETE_OBJECT	EQU	16
ACTION_RENAME_OBJECT	EQU	17
ACTION_MORE_CACHE	EQU	18
ACTION_COPY_DIR		EQU	19
ACTION_WAIT_CHAR	EQU	20
ACTION_SET_PROTECT	EQU	21
ACTION_CREATE_DIR	EQU	22
ACTION_EXAMINE_OBJECT	EQU	23
ACTION_EXAMINE_NEXT	EQU	24
ACTION_DISK_INFO	EQU	25
ACTION_INFO		EQU	26
ACTION_FLUSH		EQU	27
ACTION_SET_COMMENT	EQU	28
ACTION_PARENT		EQU	29
ACTION_TIMER		EQU	30
ACTION_INHIBIT		EQU	31
ACTION_DISK_TYPE	EQU	32
ACTION_DISK_CHANGE	EQU	33
ACTION_SET_DATE		EQU	34

ACTION_SCREEN_MODE	EQU	994

ACTION_READ_RETURN	EQU	1001
ACTION_WRITE_RETURN	EQU	1002
ACTION_SEEK		EQU	1008
ACTION_FINDUPDATE	EQU	1004
ACTION_FINDINPUT	EQU	1005
ACTION_FINDOUTPUT	EQU	1006
ACTION_END		EQU	1007
ACTION_SET_FILE_SIZE	EQU	1022	; fast file system only
ACTION_WRITE_PROTECT	EQU	1023	; fast file system only

* new 2.0 packets
ACTION_SAME_LOCK	EQU	40
ACTION_CHANGE_SIGNAL	EQU	995
ACTION_FORMAT		EQU	1020
ACTION_MAKE_LINK	EQU	1021
*
*
ACTION_READ_LINK	EQU	1024
ACTION_FH_FROM_LOCK	EQU	1026
ACTION_IS_FILESYSTEM	EQU	1027
ACTION_CHANGE_MODE	EQU	1028
*
ACTION_COPY_DIR_FH	EQU	1030
ACTION_PARENT_FH	EQU	1031
ACTION_EXAMINE_ALL	EQU	1033
ACTION_EXAMINE_FH	EQU	1034

ACTION_LOCK_RECORD	EQU	2008
ACTION_FREE_RECORD	EQU	2009

ACTION_ADD_NOTIFY	EQU	4097
ACTION_REMOVE_NOTIFY	EQU	4098

* Added in V39:
ACTION_EXAMINE_ALL_END	EQU	1035
ACTION_SET_OWNER	EQU	1036

* Tell a file system to serialize the current volume. This is typically
* done by changing the creation date of the disk. This packet does not take
* any arguments.  NOTE: be prepared to handle failure of this packet for
* V37 ROM filesystems.  Also note that this action, if supported, must
* function even when the disk is inhibited (since it must be done before
* uninhibiting a copied disk).

ACTION_SERIALIZE_DISK	EQU	4200
   
* A structure for holding error messages - stored as array with error == 0
* for the last entry.

 STRUCTURE ErrorString,0
	APTR   estr_Nums
	APTR   estr_Strings
        LABEL  ErrorString_SIZEOF

* DOS library node structure.
* This is the data at positive offsets from the library node.
* Negative offsets from the node is the jump table to DOS functions
* node = (STRUCT DosLibrary *) OpenLibrary( "dos.library" .. )

 STRUCTURE DosLibrary,0
    STRUCT  dl_lib,LIB_SIZE
    APTR    dl_Root	     * Pointer to RootNode, described below
    APTR    dl_GV	     * Pointer to BCPL global vector
    LONG    dl_A2	     * BCPL standard register values
    LONG    dl_A5
    LONG    dl_A6
    APTR    dl_Errors	     * PRIVATE pointer to array of error msgs
    APTR    dl_TimeReq	     * PRIVATE pointer to timer request 
    APTR    dl_UtilityBase   * PRIVATE pointer to utility library base
    APTR    dl_IntuitionBase * PRIVATE pointer to intuition library base
    LABEL   dl_SIZEOF *	 DosLibrary

*

 STRUCTURE RootNode,0
    BPTR    rn_TaskArray       * [0] is max number of CLI's
*			       * [1] is APTR to process id of CLI 1
*			       * [n] is APTR to process id of CLI n
    BPTR    rn_ConsoleSegment  * SegList for the CLI
    STRUCT  rn_Time,ds_SIZEOF  * Current time
    LONG    rn_RestartSeg      * SegList for the disk validator process
    BPTR    rn_Info	       * Pointer to the Info structure
    BPTR    rn_FileHandlerSegment * code for file handler 
    STRUCT  rn_CliList,MLH_SIZE * new list of all CLI processes
*			       * the first cpl_Array is also rn_TaskArray
    APTR    rn_BootProc	       * private! ptr to msgport of boot fs
    BPTR    rn_ShellSegment    * seglist for Shell (for NewShell)
    LONG    rn_Flags	       * dos flags
    LABEL   rn_SIZEOF * RootNode

 BITDEF	RN,WILDSTAR,24
 BITDEF RN,PRIVATE1,1

* ONLY to be allocated by DOS!
 STRUCTURE CliProcList,0
    STRUCT  cpl_Node,MLN_SIZE
    LONG    cpl_First	       * number of first entry in array
    APTR    cpl_Array	       * pointer to array of process msgport pointers
*			       * [0] is max number of CLI's in this entry (n)
*			       * [1] is APTR to process id of CLI cpl_First
*			       * [n] is APTR to process id of CLI cpl_First+n-1
    LABEL   cpl_SIZEOF

 STRUCTURE DosInfo,0
    BPTR    di_McName	       * PRIVATE: system resident module list
di_ResList EQU di_McName
    BPTR    di_DevInfo	       * Device List
    BPTR    di_Devices	       * Currently zero
    BPTR    di_Handlers	       * Currently zero
    APTR    di_NetHand	       * Network handler processid currently zero
    STRUCT  di_DevLock,SS_SIZE    * do NOT access directly!
    STRUCT  di_EntryLock,SS_SIZE  * do NOT access directly!
    STRUCT  di_DeleteLock,SS_SIZE * do NOT access directly!
    LABEL   di_SIZEOF * DosInfo

* structure for the Dos resident list.  Do NOT allocate these, use
* AddSegment(), and heed the warnings in the autodocs!

 STRUCTURE Segment,0
	BPTR seg_Next
	LONG seg_UC
	BPTR seg_Seg
	STRUCT seg_Name,4	; Actually the first 4 chars of BSTR name
	LABEL seg_SIZEOF

CMD_SYSTEM	EQU	-1
CMD_INTERNAL	EQU	-2
CMD_DISABLED	EQU	-999


* DOS Processes started from the CLI via RUN or NEWCLI have this additional
* set to data associated with them

 STRUCTURE CommandLineInterface,0
    LONG   cli_Result2	       * Value of IoErr from last command
    BSTR   cli_SetName	       * Name of current directory
    BPTR   cli_CommandDir      * Head of the path locklist
    LONG   cli_ReturnCode      * Return code from last command
    BSTR   cli_CommandName     * Name of current command
    LONG   cli_FailLevel       * Fail level (set by FAILAT)
    BSTR   cli_Prompt	       * Current prompt (set by PROMPT)
    BPTR   cli_StandardInput   * Default (terminal) CLI input
    BPTR   cli_CurrentInput    * Current CLI input
    BSTR   cli_CommandFile     * Name of EXECUTE command file
    LONG   cli_Interactive     * Boolean True if prompts required
    LONG   cli_Background      * Boolean True if CLI created by RUN
    BPTR   cli_CurrentOutput   * Current CLI output
    LONG   cli_DefaultStack    * Stack size to be obtained in long words
    BPTR   cli_StandardOutput  * Default (terminal) CLI output
    BPTR   cli_Module	       * SegList of currently loaded command
    LABEL  cli_SIZEOF	       * CommandLineInterface

* This structure can take on different values depending on whether it is
* a device, an assigned directory, or a volume.	 Below is the structure
* reflecting volumes only.  Following that is the structure representing
* only devices. Following that is the unioned structure representing all
* the values
*
* NOTE: the dol/dl/dvi_Name field MUST be a BSTR followed by a null ('\0').
* The null must not be included in the BSTR count.  Yes, this is wierd, sorry.
  
* structure representing a volume 

 STRUCTURE DevList,0
    BPTR	dl_Next			; bptr to next device list
    LONG	dl_Type			; see DLT below
    APTR	dl_Task			; ptr to handler task
    BPTR	dl_Lock			; not for volumes
    STRUCT	dl_VolumeDate,ds_SIZEOF ; creation date
    BPTR	dl_LockList		; outstanding locks
    LONG	dl_DiskType		; 'DOS', etc
    LONG	dl_unused
    BSTR	dl_Name			; bptr to bcpl name
    LABEL	DevList_SIZEOF

* device structure (same as the DeviceNode structure in filehandler.i

 STRUCTURE	 DevInfo,0
    BPTR    dvi_Next
    LONG    dvi_Type
    APTR    dvi_Task
    BPTR    dvi_Lock
    BSTR    dvi_Handler
    LONG    dvi_Stacksize
    LONG    dvi_Priority
    LONG    dvi_Startup
    BPTR    dvi_SegList
    BPTR    dvi_GlobVec
    BSTR    dvi_Name
    LABEL   dvi_SIZEOF

* combined structure for devices, assigned directories, volumes 

 STRUCTURE DosList,0
    BPTR     dol_Next	     ; bptr to next device on lis
    LONG     dol_Type	     ; see DLT below
    APTR     dol_Task	     ; ptr to handler task
    BPTR     dol_Lock

    STRUCT	dol_VolumeDate,0	; creation date (UNION)
    STRUCT	dol_AssignName,0	; name for assign path (UNION)
    BSTR	dol_Handler		; file name to load if seglist is null
    STRUCT	dol_List,0		; List of directories assigned (UNION)
    LONG	dol_StackSize		; stacksize to use when starting process
    LONG	dol_Priority		; task priority when starting process

    STRUCT	dol_LockList,0		; outstanding locks (UNION)
    ULONG	dol_Startup		; startup msg: FileSysStartupMsg
					; for disks

    STRUCT	dol_DiskType,0		; 'DOS', etc (UNION)
    BPTR	dol_SegList		; already loaded code for new task

    BPTR	dol_GlobVec		; BCPL global vector

    BSTR	dol_Name		; bptr to bcpl name
    LABEL	DosList_SIZEOF



* definitions for dl_Type
DLT_DEVICE	EQU	0
DLT_DIRECTORY	EQU	1	; assign
DLT_VOLUME	EQU	2
DLT_LATE	EQU	3	; late-binding assign
DLT_NONBINDING	EQU	4	; non-binding assign (AssignPath)
DLT_PRIVATE	EQU	-1	; for internal use only

* structure return by GetDeviceProc()
 STRUCTURE DevProc,0
    APTR	dvp_Port	; struct MsgPort *
    BPTR	dvp_Lock
    ULONG	dvp_Flags
    APTR	dvp_DevNode	; struct DosList * - DON'T TOUCH OR USE!
    LABEL	dvp_SIZEOF

* definitions for dvp_Flags
 BITDEF	DVP,UNLOCK,0
 BITDEF	DVP,ASSIGN,1

* Flags to be passed to LockDosList(), etc
 BITDEF LD,DEVICES,2
 BITDEF LD,VOLUMES,3
 BITDEF LD,ASSIGNS,4
 BITDEF LD,ENTRY,5
 BITDEF LD,DELETE,6

* You MUST specify one of LDF_READ or LDF_WRITE
 BITDEF LD,READ,0
 BITDEF LD,WRITE,1

* actually all but LDF_ENTRY (which is used for internal locking)
LDF_ALL	EQU	(LDF_DEVICES!LDF_VOLUMES!LDF_ASSIGNS)

* a lock structure, as returned by Lock() or DupLock()
 STRUCTURE FileLock,0
    BPTR	fl_Link			; bcpl pointer to next lock
    LONG	fl_Key			; disk block number
    LONG	fl_Access		; exclusive or shared
    APTR	fl_Task			; handler task's port
    BPTR	fl_Volume		; bptr to DLT_VOLUME DosList entry
    LABEL	fl_SIZEOF

* error report types for ErrorReport()
REPORT_STREAM	EQU	0	; a stream 
REPORT_TASK	EQU	1	; a process - unused 
REPORT_LOCK	EQU	2	; a lock 
REPORT_VOLUME	EQU	3	; a volume node 
REPORT_INSERT	EQU	4	; please insert volume 

* Special error codes for ErrorReport()
ABORT_DISK_ERROR	EQU	296	; Read/write error 
ABORT_BUSY		EQU	288	; You MUST replace... 

* types for initial packets to shells from run/newcli/execute/system.
* For shell-writers only
RUN_EXECUTE		EQU	-1
RUN_SYSTEM		EQU	-2
RUN_SYSTEM_ASYNCH	EQU	-3

* Types for fib_DirEntryType.  NOTE that both USERDIR and ROOT are
* directories, and that directory/file checks should use <0 and >=0.
* This is not necessarily exhaustive!  Some handlers may use other
* values as needed, though <0 and >=0 should remain as supported as
* possible.
ST_ROOT		EQU	1
ST_USERDIR	EQU	2
ST_SOFTLINK	EQU	3	; looks like dir, but may point to a file!
ST_LINKDIR	EQU	4	; hard link to dir
ST_FILE		EQU	-3	; must be negative for FIB!
ST_LINKFILE	EQU	-4	; hard link to file
ST_PIPEFILE	EQU	-5	; for pipes that support ExamineFH


* these are primarily for Unix filesystems mounted under AmigaDos 
ST_BDEVICE	EQU	-10	/* block special device (block only access) */
ST_CDEVICE	EQU	-11	/* character special device (byte accessable) */
ST_SOCKET	EQU	-12	/* Unix style socket */
ST_FIFO		EQU	-13	/* named pipe */
ST_LIFO		EQU	-14	/* named stack */
    
	ENDC	; DOS_DOSEXTENS_I
@


36.41
log
@Added comment about serialize_disk
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.40 92/06/02 22:49:58 jesup Exp Locker: jesup $
d467 8
@


36.40
log
@Added comment about dol_Name
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.39 92/05/14 14:44:38 jesup Exp Locker: jesup $
d214 3
a216 1
* V37 ROM filesystems.
@


36.39
log
@Added ACTION_SET_OWNER
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.38 92/04/07 01:50:28 jesup Exp Locker: jesup $
d329 3
@


36.38
log
@Added ACTION_EXAMINE_ALL_END
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.37 91/11/08 14:29:16 jesup Exp Locker: jesup $
d209 1
@


36.37
log
@Added ACTION_SERIALIZE_DISK
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.37 91/11/08 14:28:26 jesup Exp $
d206 3
@


36.36
log
@Added dl_IntuitionBase
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.35 91/03/17 20:03:24 jesup Exp Locker: jesup $
d207 7
@


36.35
log
@Added ST_PIPEFILE
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.34 91/02/25 16:20:05 jesup Exp Locker: jesup $
d224 1
a224 1
    LONG    dl_A2	     * Private register dump of DOS
d227 4
a230 3
    APTR    dl_Errors	     * pointer to array of error msgs
    APTR    dl_TimeReq	     * private! pointer to timer request 
    APTR    dl_UtilityBase   * private! pointer to utility library base
@


36.34
log
@Added LDF_DELETE
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.33 91/02/13 06:40:49 jesup Exp Locker: jesup $
d448 1
@


36.33
log
@Added struct Segment
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.32 91/02/10 04:44:15 jesup Exp Locker: jesup $
d270 3
a272 2
    STRUCT  di_DevLock,SS_SIZE   * do NOT access directly!
    STRUCT  di_EntryLock,SS_SIZE * do NOT access directly!
d402 1
@


36.32
log
@removed C comment charws
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.31 91/02/08 17:04:38 jesup Exp $
d273 15
@


36.31
log
@added private bit
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.30 91/01/27 03:03:26 jesup Exp $
d181 2
a182 2
ACTION_SET_FILE_SIZE	EQU	1022	/* fast file system only */
ACTION_WRITE_PROTECT	EQU	1023	/* fast file system only */
@


36.30
log
@Fixed some comments
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.29 91/01/17 14:22:54 jesup Exp Locker: jesup $
d251 1
@


36.29
log
@Added action_change_signal, 1.4->2.0
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.28 90/11/02 23:23:40 jesup Exp Locker: jesup $
d263 2
a264 1
    BPTR    di_McName	       * Network name of this machine currently 0
d279 1
a279 1
    BPTR   cli_CommandDir      * Lock associated with command directory
@


36.28
log
@Added DirEntryTypes
@
text
@d4 1
a4 1
**	$Id: dosextens.i,v 36.25 90/07/12 03:30:09 jesup Exp $
d60 1
a60 1
* following definitions are new with 1.4
d184 1
a184 1
* new 1.4 packets
d186 1
@


36.27
log
@Comment changes
@
text
@d417 12
@


36.26
log
@Fixed WILDSTAR (oops)
@
text
@d55 1
a55 1
    BPTR    pr_CLI		* pointer to ConsoleLineInterpreter
d240 1
a240 1
    BPTR    rn_Info	       * Pointer ot the Info structure
d397 1
a397 1
    BPTR	fl_Volume		; bptr to a DeviceList
@


36.25
log
@$id
@
text
@d4 1
a4 1
**	$Id: $
d249 1
a249 1
 BITDEF	RN,WILDSTAR,0
@


36.24
log
@added bit for flags in rn_Flags
@
text
@d4 1
a4 2
**	$Filename: dos/dosextens.i $
**	$Release: 1.3 $
d8 1
a8 1
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
@


36.23
log
@error string changes
@
text
@d247 1
a247 1
    LONG    rn_Flags	       * private dos flags
d249 2
@


36.22
log
@Added ACTION_FORMAT
@
text
@d211 2
a212 2
	LONG   estr_Error
	APTR   estr_String
d247 1
@


36.21
log
@Added LDF_ENTRY
@
text
@d187 1
d189 2
d195 1
@


36.20
log
@for rcs 4.x header change
@
text
@d376 1
d382 1
@


36.19
log
@*** empty log message ***
@
text
@@


36.18
log
@Added bootproc, shellsegment, system_asynch
@
text
@d245 1
@


36.17
log
@Added second semaphore for locking.
@
text
@d241 2
d404 3
a406 2
RUN_EXECUTE	EQU	-1
RUN_SYSTEM	EQU	-2
@


36.16
log
@Added pr_CES
@
text
@d258 2
a259 1
    STRUCT  di_DevLock,SS_SIZE * FIX! PRIVATE! should be many-reader!
d374 1
a374 1
* You MUST specify LDF_READ or LDF_WRITE
@


36.15
log
@Added shell_private, moved some stuff to dos.i
@
text
@d69 1
@


36.14
log
@*** empty log message ***
@
text
@d68 2
a69 1
    LABEL   pr_SIZEOF		* Process
a396 8

* types for ChangeMode()
CHANGE_LOCK	EQU	0
CHANGE_FH	EQU	1

* Values for MakeLink()
LINK_HARD	EQU	0
LINK_SOFT	EQU	1
@


36.13
log
@*** empty log message ***
@
text
@d401 4
@


36.12
log
@*** empty log message ***
@
text
@d1 2
a2 2
	IFND	LIBRARIES_DOSEXTENS_I
LIBRARIES_DOSEXTENS_I	SET	1
d4 1
a4 1
**	$Filename: libraries/dosextens.i $
a27 5

     IFND  LIBRARIES_DOS_I
     INCLUDE "libraries/dos.i"
     ENDC

d32 3
d36 1
d406 1
a406 1
	ENDC	; LIBRARIES_DOSEXTENS_I
@


36.11
log
@*** empty log message ***
@
text
@a187 1
ACTION_LOCK_FROM_FH	EQU	1025
@


36.10
log
@Yet more Process fields, addition to dosbase
@
text
@d181 1
a181 1
ACTION_TRUNCATE		EQU	1022	/* fast file system only */
d192 4
@


36.9
log
@stuff for ChangeMode, System(), cli array of msgports not processes
@
text
@d64 4
d71 10
d220 2
a221 1
    APTR    dl_TimeReq	     * private pointer to timer request 
@


36.8
log
@Added ACTION_IS_FILESYSTEM, ACTION_CHANGE_MODE, REPORT_xxx (for ErrorReport)
@
text
@d227 1
a227 1
    APTR    cpl_Array	       * pointer to array of process pointers
d379 9
@


36.7
log
@Changed es_ to estr_ (avoid conflict with EasyRequest's es_)
@
text
@d61 1
a61 1
    
d63 1
d127 1
d176 2
d368 11
@


36.6
log
@Var stuff, new actions, string stuff
changed dosbase, process structure.
@
text
@d185 3
a187 3
	LONG   es_Error
	APTR   es_String
        LABEL  es_SIZEOF
@


36.5
log
@*** empty log message ***
@
text
@d61 3
d172 6
d181 8
d201 2
a202 1
    APTR    dl_TimeReq	     * pointer to timer request for copying by Delay()
@


36.4
log
@Fixed bad commants
@
text
@d199 1
a199 1
			       * the first cpl_Array is also rn_TaskArray
@


36.3
log
@
@
text
@d206 3
a208 3
			       * [0] is max number of CLI's in this entry (n)
			       * [1] is APTR to process id of CLI cpl_First
			       * [n] is APTR to process id of CLI cpl_First+n-1
@


36.2
log
@Added >20 cli support (rootnode, new structure).
Added dos device list semaphore (needs to be private!)
Added flags for dos device list locking calls.
@
text
@d166 3
a168 1
ACTION_SAMELOCK		EQU	40
@


36.1
log
@*** empty log message ***
@
text
@d25 3
d196 2
d200 9
d215 1
d324 11
@
