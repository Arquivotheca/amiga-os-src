head     36.14;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @@;


36.14
date     94.02.01.14.15.09;  author jesup;  state Exp;
branches ;
next     36.13;

36.13
date     91.04.29.17.34.37;  author jesup;  state Exp;
branches ;
next     36.12;

36.12
date     91.03.28.15.11.52;  author jesup;  state Exp;
branches ;
next     36.11;

36.11
date     90.11.02.03.33.56;  author jesup;  state Exp;
branches ;
next     36.10;

36.10
date     90.07.12.03.31.02;  author jesup;  state Exp;
branches ;
next     36.9;

36.9
date     90.05.09.02.58.03;  author jesup;  state Exp;
branches ;
next     36.8;

36.8
date     90.05.09.02.35.11;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     90.04.03.04.50.00;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     90.03.18.15.32.29;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     90.03.05.01.29.20;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     90.03.03.02.41.15;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.12.16.20.11.02;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.12.09.02.20.46;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.12.01.08.35.42;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.14
log
@added Get/Set attribute tags
@
text
@	IFND	DOS_DOSTAGS_I
DOS_DOSTAGS_I SET	1
**
**	$Id: dostags.i,v 36.13 91/04/29 17:34:37 jesup Exp Locker: jesup $
**
**	Tag definitions for all Dos routines using tags
**
**	(C) Copyright 1989,1990 Commodore-Amiga, Inc.
**	    All Rights Reserved
**


     IFND  UTILITY_TAGITEM_I
     INCLUDE "utility/tagitem.i"
     ENDC

*****************************************************************************
* definitions for the System() call

SYS_Dummy 	EQU	TAG_USER+32
SYS_Input	EQU	SYS_Dummy+1	; specifies the input filehandle
SYS_Output	EQU	SYS_Dummy+2	; specifies the output filehandle
SYS_Asynch	EQU	SYS_Dummy+3	; run asynch, close input/output(!)
SYS_UserShell	EQU	SYS_Dummy+4   ; send to user shell instead of boot shell
SYS_CustomShell	EQU	SYS_Dummy+5   ; send to a specific shell (data is name)
*SYS_Error	EQU	SYS_Dummy+?


*****************************************************************************
* definitions for the CreateNewProc() call
* you MUST specify one of NP_Seglist or NP_Entry.  All else is optional.

NP_Dummy	EQU TAG_USER+1000
NP_Seglist	EQU NP_Dummy+1	 ; seglist of code to run for the process  
NP_FreeSeglist	EQU NP_Dummy+2	 ; free seglist on exit - only valid for
				 ; for NP_Seglist.  Default is TRUE.
NP_Entry	EQU NP_Dummy+3	 ; entry point to run - mutually exclusive 
				 ; with NP_Seglist. 
NP_Input	EQU NP_Dummy+4	 ; filehandle - default is Open("NIL:"...) 
NP_Output	EQU NP_Dummy+5	 ; filehandle - default is Open("NIL:"...) 
NP_CloseInput	EQU NP_Dummy+6	 ; close input filehandle on exit
				 ; default TRUE
NP_CloseOutput	EQU NP_Dummy+7	 ; close output filehandle on exit
				 ; default TRUE
NP_Error	EQU NP_Dummy+8	 ; filehandle - default is Open("NIL:"...) 
NP_CloseError	EQU NP_Dummy+9	 ; close error filehandle on exit
				 ; default TRUE
NP_CurrentDir	EQU NP_Dummy+10	 ; lock - default is parent's current dir  
NP_StackSize	EQU NP_Dummy+11	 ; stacksize for process - default 4000    
NP_Name		EQU NP_Dummy+12	 ; name for process - default "New Process"
NP_Priority	EQU NP_Dummy+13	 ; priority - default same as parent
NP_ConsoleTask	EQU NP_Dummy+14	 ; consoletask - default same as parent    
NP_WindowPtr	EQU NP_Dummy+15	 ; window ptr - default is same as parent  
NP_HomeDir	EQU NP_Dummy+16	 ; home directory - default current home dir   
NP_CopyVars	EQU NP_Dummy+17	 ; boolean to copy local vars-default TRUE 
NP_Cli		EQU NP_Dummy+18	 ; create cli structure - default FALSE
NP_Path		EQU NP_Dummy+19	 ; path - default is copy of parents path  
				 ; only valid if a cli process!
NP_CommandName	EQU NP_Dummy+20  ; commandname - valid only for CLI
NP_Arguments	EQU NP_Dummy+21
; cstring of arguments - passed with str in a0, length in d0.
; (copied and freed on exit.)  Default is 0-length NULL ptr.
; NOTE: not operational until V37 - see BIX/TechNotes for
; more info/workaround.  In V36, the registers were random.
; You must NEVER use NP_Arguments with a NP_Input of NULL.

NP_NotifyOnDeath EQU NP_Dummy+22 ; notify parent on death - default FALSE
				 ; Not functional yet.
NP_Synchronous	EQU NP_Dummy+23	 ; don't return until process finishes -   
				 ; default FALSE.
				 ; Not functional yet.
NP_ExitCode	EQU NP_Dummy+24	 ; code to be called on process exit       
NP_ExitData	EQU NP_Dummy+25	 ; optional argument for NP_EndCode rtn -  
				 ; default NULL

*****************************************************************************
* tags for AllocDosObject
ADO_Dummy	EQU	TAG_USER+2000
ADO_FH_Mode	EQU	ADO_Dummy+1 	; for type DOS_FILEHANDLE only
				; sets up FH for the type of open being done
				; This can make a big difference for buffered
				; files.

	; The following are for DOS_CLI
	; If you do not specify these, dos will use it's preferred values
	; which may change from release to release.  The BPTRs to these
	; will be set up correctly for you.  Everything will be zero,
	; except cli_FailLevel (10) and cli_Background (DOSTRUE).
	; NOTE: you may also use these 4 tags with CreateNewProc.

ADO_DirLen	EQU	ADO_Dummy+2	; size in bytes for current dir buffer
ADO_CommNameLen	EQU	ADO_Dummy+3	; size in bytes for command name buffer
ADO_CommFileLen	EQU	ADO_Dummy+4	; size in bytes for command file buffer
ADO_PromptLen	EQU	ADO_Dummy+5	; size in bytes for the prompt buffer

* tags for NewLoadSeg
* no tags are defined yet for NewLoadSeg

*****************************************************************************
* tags for GetAttributes/SetAttributes

DSA_Dummy	EQU	TAG_USER+10000
DSA_MODIFY_TIME	EQU	DSA_Dummy+1	for the object modify time
				ti_Data is a struct DateStamp * 
DSA_PROTECTION	EQU	DSA_Dummy+2	for the object protection bits
				ti_Data is a LONG of protection bits 
DSA_OWNER_UID	EQU	DSA_Dummy+3	for the owner's user-id
				ti_Data is a LONG of owner UID (note: AmigaDOS
				currently only supports 16 bits of UID) 
DSA_OWNER_GID	EQU	DSA_Dummy+4	for the owner's group-id
				ti_Data is a LONG of owner GID (note: AmigaDOS
				currently only supports 16 bits of GID) 
DSA_COMMENT	EQU	DSA_Dummy+5	for the object's comment
				ti_Data is an APTR to a null-terminated comment 

*	Currently Berkeley FFS only, but other filesystems may support them:
DSA_CREATE_TIME	EQU	DSA_Dummy+6	for the object creation time
				ti_Data is a struct DateStamp * 
DSA_ACCESS_TIME	EQU	DSA_Dummy+7	for the object creation time
				ti_Data is a struct DateStamp * 

	ENDC	; DOS_DOSTAGS_I
@


36.13
log
@Added comments concerning NP_Arguments
@
text
@d4 1
a4 1
**	$Id: dostags.i,v 36.12 91/03/28 15:11:52 jesup Exp Locker: jesup $
d98 23
@


36.12
log
@Fixed CommmandName
@
text
@d4 1
a4 1
**	$Id: dostags.i,v 36.11 90/11/02 03:33:56 jesup Exp Locker: jesup $
d60 7
a66 7
NP_Arguments	EQU NP_Dummy+21	 ; cstring of arguments - passed with str
				 ; in a0, length in d0.  (copied and freed
				 ; on exit.  Default is empty string.
				 ; NOTE: not operational until 2.04 - see
				 ; BIX/TechNotes for more info/workarounds
				 ; NOTE: in 2.0, it DIDN'T pass "" - the
				 ; registers were random.
@


36.11
log
@comment changes (non-functional or non-existant tags)
@
text
@d4 1
a4 1
**	$Id: dostags.i,v 36.10 90/07/12 03:31:02 jesup Exp $
d59 1
a59 1
NP_CommmandName	EQU NP_Dummy+20  ; commandname - valid only for CLI
@


36.10
log
@$id
@
text
@d4 1
a4 1
**	$Id: $
d17 1
d28 2
d54 1
a54 1
NP_HomeDir	EQU NP_Dummy+16	 ; home directory - default current dir	   
d63 6
a68 1
NP_NotifyOnDeath EQU NP_Dummy+22 ; notify parent on death - default FALSE  
d71 1
d76 1
@


36.9
log
@Fixed it (','s and just plain mistake
@
text
@d3 8
a11 10
*** dostags.i **************************************************************
*
*  dostags.i - include file for dos routines that use tags
*
*
****************************************************************************
* CONFIDENTIAL and PROPRIETARY
* Copyright (C) 1989, COMMODORE-AMIGA, INC.
* All Rights Reserved
****************************************************************************/
@


36.8
log
@remove exec/types, added ADO_xxx for DOS_CLI
@
text
@d21 1
a21 1
SYS_Dummy 	EQU	TAG_USER+32,
d32 1
a32 1
NP_Dummy	EQU TAG_USER+1000,
d75 1
d83 4
a86 4
	ADO_DirLen,		; size in bytes for current dir buffer
	ADO_CommNameLen,	; size in bytes for command name buffer
	ADO_CommFileLen,	; size in bytes for command file buffer
	ADO_PromptLen,		; size in bytes for the prompt buffer
@


36.7
log
@for rcs 4.x header change
@
text
@a14 4
     IFND  EXEC_TYPES_I
     INCLUDE "exec/types.i"
     ENDC

d75 11
@


36.6
log
@*** empty log message ***
@
text
@@


36.5
log
@Added tags for AllocDosObject
@
text
@d30 1
@


36.4
log
@Added SYS_Asynch
@
text
@d29 1
d73 5
a77 1
* no tags are defined yet for AllocDosObject
@


36.3
log
@*** empty log message ***
@
text
@d28 2
a29 1
*SYS_Error	EQU	SYS_Dummy+3
@


36.2
log
@*** empty log message ***
@
text
@d70 6
@


36.1
log
@*** empty log message ***
@
text
@d1 2
a2 2
	IFND	LIBRARIES_DOSTAGS_I
LIBRARIES_DOSTAGS_I SET	1
d33 1
a33 1
NP_Dummy	EQU TAG_USER+32,
d70 1
a70 1
	ENDC	; LIBRARIES_DOSTAGS_I
@
