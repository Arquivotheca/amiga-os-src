head     36.13;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @@;


36.13
date     92.06.02.00.10.41;  author jesup;  state Exp;
branches ;
next     36.12;

36.12
date     91.03.14.20.55.02;  author jesup;  state Exp;
branches ;
next     36.11;

36.11
date     90.07.12.03.34.47;  author jesup;  state Exp;
branches ;
next     36.10;

36.10
date     90.04.03.04.50.56;  author jesup;  state Exp;
branches ;
next     36.9;

36.9
date     90.03.03.02.42.45;  author jesup;  state Exp;
branches ;
next     36.8;

36.8
date     90.01.29.02.18.29;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     89.12.09.02.22.09;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     89.12.05.21.59.57;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     89.12.05.21.54.05;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     89.12.05.04.14.51;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.12.01.08.34.57;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.11.22.03.44.51;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.11.14.02.00.06;  author jesup;  state Exp;
branches ;
next     ;


desc
@Variable (global/local) include file
@


36.13
log
@Added GVF_SAVE_VAR
@
text
@	IFND	DOS_VAR_I
DOS_VAR_I SET	1
**
**	$Id: var.i,v 36.12 91/03/14 20:55:02 jesup Exp Locker: jesup $
**
**	include file for dos local and environment variables
**
**	(C) Copyright 1989,1990 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

     IFND  EXEC_NODES_I
     INCLUDE "exec/nodes.i"
     ENDC

* the structure in the pr_LocalVars list
* Do NOT allocate yourself, use SetVar()!!! This structure may grow in
* future releases!  The list should be left in alphabetical order, and
* may have multiple entries with the same name but different types.

 STRUCTURE LocalVar,0
	STRUCT  lv_Node,LN_SIZE
	UWORD	lv_Flags
	APTR	lv_Value
	ULONG	lv_Len
 LABEL LocalVar_SIZEOF

*
* The lv_Flags bits are available to the application.  The unused
* lv_Node.ln_Pri bits are reserved for system use.
*

* bit definitions for lv_Node.ln_Type:

LV_VAR		EQU	0		; a variable
LV_ALIAS	EQU	1		; an alias
* to be or'ed into type:
LVB_IGNORE	EQU	7		; ignore this entry on GetVar, etc
LVF_IGNORE	EQU	$80

* definitions of flags passed to GetVar()/SetVar()/DeleteVar()
* bit defs to be OR'ed with the type:
* item will be treated as a single line of text unless BINARY_VAR is used

	BITDEF	GV,GLOBAL_ONLY,8
	BITDEF	GV,LOCAL_ONLY,9
	BITDEF	GV,BINARY_VAR,10	; treat as binary variable
	BITDEF	GV,DONT_NULL_TERM,11	; only with GVF_BINARY_VAR

* this is only supported in >= V39 dos.  V37 dos ignores this.
* this causes SetVar to affect ENVARC: as well as ENV:.
	BITDEF	GV,SAVE_VAR,12		; only with GVF_GLOBAL_VAR


	ENDC	; DOS_VAR_I
@


36.12
log
@Added GVF_DONT_NULL_TERM
@
text
@d4 1
a4 1
**	$Id: var.i,v 36.11 90/07/12 03:34:47 jesup Exp Locker: jesup $
d49 5
@


36.11
log
@$id
@
text
@d4 1
a4 1
**	$Id: $
d48 1
@


36.10
log
@for rcs 4.x header change
@
text
@d3 8
a10 11

*** var.i ******************************************************************
*
*  var.i - include file for dos local and environment variables
*
*
****************************************************************************
* CONFIDENTIAL and PROPRIETARY
* Copyright (C) 1989, COMMODORE-AMIGA, INC.
* All Rights Reserved
****************************************************************************/
@


36.9
log
@TEXT<->BINARY, fixed includes
@
text
@@


36.8
log
@*** empty log message ***
@
text
@d15 2
a16 2
     IFND  EXEC_TYPES_I
     INCLUDE "exec/types.i"
d46 1
d50 1
a50 1
	BITDEF	GV,TEXT_VAR,10		; treat as text variable
@


36.7
log
@*** empty log message ***
@
text
@d49 1
@


36.6
log
@Now matches var.h
@
text
@d1 2
a2 2
	IFND	LIBRARIES_VAR_I
LIBRARIES_VAR_I SET	1
d50 1
a50 1
	ENDC	; LIBRARIES_VAR_I
@


36.5
log
@*** empty log message ***
@
text
@d21 2
a22 1
* future releases!
d25 2
a26 2
	STRUCT  lv_Node,MLN_SIZE
	APTR	lv_Name
a28 2
	UWORD	lv_AppFlags
	UWORD	lv_SysFlags
d32 2
a33 2
* The lv_Flags bits are available to the shell/application.  The unused
* lv_SysFlags bits are reserved for system use.
d36 1
a36 3
* bit definitions for lv_SysFlags:
	BITDEF	LV,IGNORE,0		; ignore this entry on GetVar
	BITDEF	LV,ALIAS,1		; an alias
d38 11
a48 4
* definitions for GetVar()/SetVar() flags
* bit defs
	BITDEF	GV,GLOBAL_ONLY,0
	BITDEF	GV,LOCAL_ONLY,1
@


36.4
log
@Needs to be updated to match var.h
@
text
@d30 1
a30 1
 LABEL lv_SIZEOF
@


36.3
log
@divided.

@
text
@d28 1
a28 1
	UWORD	lv_Flags
d33 2
a34 2
* The lv_Flags bits are available to the shell/application.  The lv_SysFlags
* bits are reserved for system use.
d37 4
d43 2
a44 6
GVB_GLOBAL_ONLY		EQU	0
GVB_LOCAL_ONLY		EQU	1

* flags
GVF_GLOBAL_ONLY		EQU	1
GVF_LOCAL_ONLY		EQU	2
@


36.2
log
@*** empty log message ***
@
text
@d4 1
a4 1
*** var.h ******************************************************************
d6 1
a6 1
*  var.h - include file for dos local and environment variables
d20 3
d28 2
a29 1
	ULONG	lv_Flags
a31 1

d33 2
a34 2
* The lower 16 bits (0-15) of ev_Flags are available to the shell/
* application.  The upper 16 bits (16-31) are reserved.
@


36.1
log
@Created
@
text
@d43 1
a43 2
#endif

@
