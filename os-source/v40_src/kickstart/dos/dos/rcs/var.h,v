head     36.11;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


36.11
date     92.06.02.00.10.26;  author jesup;  state Exp;
branches ;
next     36.10;

36.10
date     91.03.14.20.54.56;  author jesup;  state Exp;
branches ;
next     36.9;

36.9
date     90.07.12.03.27.20;  author jesup;  state Exp;
branches ;
next     36.8;

36.8
date     90.04.03.04.50.52;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     90.03.03.02.36.45;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     90.01.29.02.14.58;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     89.12.09.02.17.51;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     89.12.05.04.10.53;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.12.01.08.32.57;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.11.22.03.42.00;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.11.14.01.59.40;  author jesup;  state Exp;
branches ;
next     ;


desc
@Variable (global/local) include file
@


36.11
log
@Added GVF_SAVE_VAR
@
text
@#ifndef DOS_VAR_H
#define DOS_VAR_H
/*
**
**	$Id: var.h,v 36.10 91/03/14 20:54:56 jesup Exp Locker: jesup $
**
**	include file for dos local and environment variables
**
**	(C) Copyright 1989,1990 Commodore-Amiga, Inc.
**	    All Rights Reserved
**
*/


#ifndef EXEC_NODES_H
#include "exec/nodes.h"
#endif

/* the structure in the pr_LocalVars list */
/* Do NOT allocate yourself, use SetVar()!!! This structure may grow in */
/* future releases!  The list should be left in alphabetical order, and */
/* may have multiple entries with the same name but different types.    */

struct LocalVar {
	struct Node lv_Node;
	UWORD	lv_Flags;
	UBYTE	*lv_Value;
	ULONG	lv_Len;
};

/*
 * The lv_Flags bits are available to the application.  The unused
 * lv_Node.ln_Pri bits are reserved for system use.
 */

/* bit definitions for lv_Node.ln_Type: */
#define LV_VAR			0	/* an variable */
#define LV_ALIAS		1	/* an alias */
/* to be or'ed into type: */
#define LVB_IGNORE		7	/* ignore this entry on GetVar, etc */
#define LVF_IGNORE		0x80

/* definitions of flags passed to GetVar()/SetVar()/DeleteVar() */
/* bit defs to be OR'ed with the type: */
/* item will be treated as a single line of text unless BINARY_VAR is used */
#define GVB_GLOBAL_ONLY		8
#define GVF_GLOBAL_ONLY		0x100
#define GVB_LOCAL_ONLY		9
#define GVF_LOCAL_ONLY		0x200
#define GVB_BINARY_VAR		10		/* treat variable as binary */
#define GVF_BINARY_VAR		0x400
#define GVB_DONT_NULL_TERM	11	/* only with GVF_BINARY_VAR */
#define GVF_DONT_NULL_TERM	0x800

/* this is only supported in >= V39 dos.  V37 dos ignores this. */
/* this causes SetVar to affect ENVARC: as well as ENV:.	*/
#define GVB_SAVE_VAR		12	/* only with GVF_GLOBAL_VAR */
#define GVF_SAVE_VAR		0x1000

#endif /* DOS_VAR_H */
@


36.10
log
@Added GVF_DONT_NULL_TERM
@
text
@d5 1
a5 1
**	$Id: var.h,v 36.9 90/07/12 03:27:20 jesup Exp Locker: jesup $
d54 5
@


36.9
log
@$id
@
text
@d5 1
a5 1
**	$Id: $
d52 2
@


36.8
log
@for rcs 4.x header change
@
text
@d3 10
a13 10
/*** var.h ******************************************************************
 *
 *  var.h - include file for dos local and environment variables
 *
 *
 ****************************************************************************
 * CONFIDENTIAL and PROPRIETARY
 * Copyright (C) 1989, COMMODORE-AMIGA, INC.
 * All Rights Reserved
 ****************************************************************************/
@


36.7
log
@TEXT<->BINARY, fixed includes
@
text
@@


36.6
log
@*** empty log message ***
@
text
@d15 2
a16 2
#ifndef EXEC_TYPES_H
#include "exec/types.h"
d45 1
d50 2
a51 2
#define GVB_TEXT_VAR		10		/* treat variable as text */
#define GVF_TEXT_VAR		0x400
@


36.5
log
@*** empty log message ***
@
text
@d49 2
@


36.4
log
@Major rework of var routines, to handle aliases, etc.

@
text
@d1 2
a2 2
#ifndef LIBRARIES_VAR_H
#define LIBRARIES_VAR_H
d50 1
a50 1
#endif /* LIBRARIES_VAR_H */
@


36.3
log
@Divided field
@
text
@d21 2
a22 1
/* future releases! */
d25 2
a26 2
	struct MinNode lv_Node;
	UBYTE	*lv_Name;
a28 2
	UWORD	lv_Flags;
	UWORD	lv_SysFlags;
d32 2
a33 2
 * The lv_Flags bits are available to the shell/application.  The lv_SysFlags
 * bits are reserved for system use.
d36 6
a41 4
/* definitions for GetVar()/SetVar() flags */
/* bit defs */
#define GVB_GLOBAL_ONLY		0
#define GVB_LOCAL_ONLY		1
d43 6
a48 3
/* flags */
#define GVF_GLOBAL_ONLY		1
#define GVF_LOCAL_ONLY		2
@


36.2
log
@*** empty log message ***
@
text
@d20 3
d28 2
a29 1
	ULONG	lv_Flags;
a31 1

d33 2
a34 2
 * The lower 16 bits (0-15) of ev_Flags are available to the shell/
 * application.  The upper 16 bits (16-31) are reserved.
@


36.1
log
@Created
@
text
@d2 1
a2 1
#define LIBRARIES_VAR_H TRUE
d43 1
a43 2
#endif

@
