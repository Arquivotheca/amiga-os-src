head     36.11;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


36.11
date     92.07.31.18.40.33;  author jesup;  state Exp;
branches ;
next     36.10;

36.10
date     91.02.13.19.11.54;  author jesup;  state Exp;
branches ;
next     36.9;

36.9
date     90.12.17.22.54.33;  author jesup;  state Exp;
branches ;
next     36.8;

36.8
date     90.12.16.04.21.00;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     90.11.21.02.49.43;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     90.05.09.02.26.31;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     90.04.03.04.44.25;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     89.12.01.08.25.15;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.11.22.03.28.31;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.10.18.04.36.56;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.16.22.07.20;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.11
log
@Added ifdefs for SASC 6.0
@
text
@/* max soft links gone through in resolving a path */
#define MAX_LINKS		15

/* eof character */
#define ENDSTREAMCH		-1

/* buffered IO buffer size */
#define SCB_BUFFERSIZE		(49*4)

/* BCPL global offset local globals start at */
#define UG			150
#define FG			UG

#define G_DOSBASE		129
#define G_UTILITYBASE		130

/* # of globals before the global pointer */
#define NEGATIVE_GLOBAL_SIZE	50

/* cli command path node */
/* should be getvec()ed */

struct Path {
	BPTR path_Next;
	BPTR path_Lock;
};

/* useful definition */
#define MYPROC (myproc())

/* damn bryce changed exec_old_pragmas.h */
/*#define SysBase (*((struct ExecBase **) 4))*/

#undef strlen
#ifdef SASC_6
extern size_t __regargs strlen (const char *string);
#else
extern int __regargs strlen (char *string);
#endif

/* #define mystrcat strcat */

#undef NewList
extern void __regargs NewList (struct List *list);

@


36.10
log
@Segment now pblic
@
text
@d35 3
d39 1
@


36.9
log
@Replaced MYPROC with a function.
@
text
@a19 11
/* resident segment structure - should be getvec()ed */
/* variable sized structure (name starts at name) */
/* should be getvec()ed */

struct Segment {
	BPTR seg_Next;
	LONG seg_UC;
	BPTR seg_Seg;
	UBYTE seg_Name[4];	/* actually the first 4 chars of BSTR name */
};

@


36.8
log
@exec_old_pragmas.h
@
text
@d40 1
a40 1
#define MYPROC ((struct Process *) (*((struct ExecBase **) 4))->ThisTask)
d52 1
@


36.7
log
@*** empty log message ***
@
text
@d42 1
a42 1
/* damn bryce changed exec_pragmas.h */
@


36.6
log
@*** empty log message ***
@
text
@d44 8
@


36.5
log
@for rcs 4.x header change
@
text
@d41 3
@


36.4
log
@Added utilitybase, MYPROC macro
@
text
@@


36.3
log
@Moved stuff to dosextens, char->UBYTE
@
text
@d14 3
d38 3
@


36.2
log
@Added MAX_LINKS
@
text
@a16 12
/* error report types */
#define REPORT_STREAM		0	/* a stream */
#define REPORT_TASK		1	/* a process */
#define REPORT_LOCK		2	/* a lock */
#define REPORT_VOLUME		3	/* a volume node */

/* random from manhdr */
#define ABORT_DISK_ERROR	296
#define ABORT_BUSY		288

#define ACTION_STARTUP		0

d25 1
a25 1
	char seg_Name[4];	/* actually the first 4 chars of BSTR name */
@


36.1
log
@*** empty log message ***
@
text
@d1 3
@
