head     36.18;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


36.18
date     92.05.12.21.21.40;  author jesup;  state Exp;
branches ;
next     36.17;

36.17
date     91.05.08.23.31.09;  author jesup;  state Exp;
branches ;
next     36.16;

36.16
date     91.02.13.19.11.13;  author jesup;  state Exp;
branches ;
next     36.15;

36.15
date     90.12.06.00.47.40;  author jesup;  state Exp;
branches ;
next     36.14;

36.14
date     90.12.03.09.16.06;  author jesup;  state Exp;
branches ;
next     36.13;

36.13
date     90.11.21.02.44.38;  author jesup;  state Exp;
branches ;
next     36.12;

36.12
date     90.04.03.04.42.20;  author jesup;  state Exp;
branches ;
next     36.11;

36.11
date     90.03.18.00.10.16;  author jesup;  state Exp;
branches ;
next     36.10;

36.10
date     90.02.01.04.33.34;  author jesup;  state Exp;
branches ;
next     36.9;

36.9
date     90.01.29.02.05.37;  author jesup;  state Exp;
branches ;
next     36.8;

36.8
date     90.01.17.21.55.04;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     89.12.08.07.31.06;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     89.12.03.14.51.17;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     89.12.01.08.23.30;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     89.11.22.03.27.20;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.10.24.18.43.28;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.10.03.17.56.56;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.16.22.06.37;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.18
log
@Fixed a typo (struct Seg *)
@
text
@/* cli_protos.h */

LONG __regargs cli_init(struct DosPacket *pkt);
struct DosList * __regargs createnode(LONG unit,
			   char *devname);
struct MsgPort * __regargs startup(struct DosList *node,
				   LONG *syssegl,
				   LONG boottime,
				   struct ExpansionBase *eb);
LONG __regargs make_task_assignment(char *name,
				    char *dir);

LONG __regargs make_assign_entry(char *name);
void __regargs make_node_entry(char *name,
			       LONG startup,
			       BPTR seglist,
			       char *handler,
			       LONG stksize,
			       LONG pri,
			       LONG gv);
void __regargs makes(char *name,
		     LONG startup,
		     LONG stacksize);
void __regargs make_node_entries(LONG *syssegl);
LONG ASM makeseg(REG(d1) char *name,REG(d2) BPTR seg,REG(d3) LONG system);
void __regargs readprefs(void);
ULONG __regargs MaxCli(void);
struct Process * ASM FindCli(REG(d1) ULONG num);
LONG __regargs cli_init_run (struct DosPacket *pkt);
void __regargs run_init_clip (struct CommandLineInterface *clip, BPTR outs,
			      struct CommandLineInterface *oclip,
			      struct DosPacket *pkt);
LONG ASM myNameFromLock (REG(d1) BPTR lock, REG(d2) char *buffer,
			 REG(d3) LONG buflen);
BPTR __regargs copylist (BPTR p);
LONG __regargs cli_init_newcli (struct DosPacket *pkt);
BPTR __regargs finddefault (char *file);

/* cli.h */
#ifdef OLD_CLI
void ASM start (REG(d1) struct DosPacket *parm_pkt);
BPTR __regargs load (char *file,BPTR dir,LONG *codep,LONG flag);
void __regargs getr2 (LONG *codep);
LONG __regargs load_and_run (BPTR module,struct CommandLineInterface *clip);
BPTR __regargs openf (LONG f);
LONG __regargs err (char *m,BPTR si,BPTR so);
#endif

void __regargs kill_cli_num (LONG tnum);

struct Segment * ASM searchsegs (REG(d1) UBYTE *name,
				 REG(d2) struct Segment *start,
				 REG(d3) LONG system);
LONG ASM RemSegment (REG(d1) struct Segment *segment);
LONG ASM RunCommand (REG(d1) BPTR seg, REG(d2) LONG stack, REG(d3) UBYTE *args,
		     REG(d4) LONG length);

/* external */
#ifndef USE_FPTR
LONG ASM call_bcpl_fptr (REG(d1) struct DosPacket *parm_packet,
			 REG(d2) LONG fptr);
#endif

LONG ASM FindArg  (REG(d1) UBYTE *keyword, REG(d2) UBYTE *template);
LONG ASM ReadItem (REG(d1) UBYTE *name, REG(d2) LONG maxchars,
		   REG(d3) struct CHSource *CHSource);
struct RDArgs * ASM ReadArgs (REG(d1) UBYTE *keys, REG(d2) LONG *argv,
			      REG(d3) struct RDArgs *control);
void ASM FreeArgs (REG(d1) struct RDArgs *control);

/* rdargshack.c */

struct RDArgs * ASM RealReadArgs (REG(d1) UBYTE *keys, REG(d2) LONG *argv,
			          REG(d3) struct RDArgs *control);
/* execute.c */

LONG ASM execute (REG(d1) char *comm,				/* GLOBAL */
		  REG(d2) BPTR instr,
		  REG(d3) BPTR outstr);
LONG ASM system (REG(d1) char *comm,				/* NEW */
		 REG(d2) struct TagItem *tags);
LONG __regargs internal_run (char *command, char *shell, BPTR instr,
			     BPTR outstr, LONG type, struct TagItem *tags);
LONG __regargs find_tnum (struct CliProcList **clip);
@


36.17
log
@Forgot to check in.  Added myNameFromLock.
@
text
@d7 3
a9 1
				   LONG *syssegl);
d51 3
a53 2
struct Seg * ASM searchsegs (REG(d1) UBYTE *name, REG(d2) struct Segment *start,
			     REG(d3) LONG system);
@


36.16
log
@*** empty log message ***
@
text
@d31 2
@


36.15
log
@added param to init_clip
@
text
@d50 2
@


36.14
log
@*** empty log message ***
@
text
@d29 2
a30 1
			      struct CommandLineInterface *oclip);
@


36.13
log
@*** empty log message ***
@
text
@d74 2
a75 6
LONG __regargs execute_common  (char *comm,
				char *shell,
				BPTR instr,
				BPTR outstr,
				LONG type);
LONG __regargs internal_run (char *command, char *shell, LONG len, LONG type);
@


36.12
log
@for rcs 4.x header change
@
text
@d26 1
a26 1
struct Process * ASM FindCli(REG(d1) LONG num);
@


36.11
log
@*** empty log message ***
@
text
@@


36.10
log
@*** empty log message ***
@
text
@d74 6
a79 5
LONG ASM execute_common (REG(d1) char *comm,
			 REG(d2) BPTR instr,
			 REG(d3) BPTR outstr,
			 REG(d0) LONG type);
LONG __regargs internal_run (char *command, LONG len, LONG type);
@


36.9
log
@removed CLI
@
text
@d63 4
@


36.8
log
@*** empty log message ***
@
text
@d35 1
a36 3

void __regargs kill_cli_num (LONG tnum);

a37 1

a38 1

a39 1

d41 2
d44 1
a44 1
LONG __regargs err (char *m,BPTR si,BPTR so);
@


36.7
log
@*** empty log message ***
@
text
@d23 1
a23 1
void ASM makeseg(REG(d1) char *name,REG(d2) BPTR seg,REG(d3) LONG system);
@


36.6
log
@*** empty log message ***
@
text
@d23 1
a23 1
void __regargs makeseg(char *name, BPTR seg, LONG system);
d49 3
a51 1
struct Seg * __regargs searchsegs (char *name, LONG number);
@


36.5
log
@modified load (for homedir), moved system() to tags.
@
text
@d27 1
a27 1
LONG ASM       cli_init_run (REG(d1) struct DosPacket *pkt);
d31 1
a31 1
LONG ASM       cli_init_newcli (REG(d1) struct DosPacket *pkt);
@


36.4
log
@Major changes
@
text
@d39 1
a39 1
BPTR __regargs load (char *file,BPTR dir,LONG *codep);
d70 1
a70 2
		 REG(d2) BPTR instr,
		 REG(d3) BPTR outstr);
@


36.3
log
@Added FindCli/maxCli
@
text
@d27 6
a35 2
LONG ASM call_bcpl_fptr (REG(d1) struct DosPacket *parm_packet,
			 REG(d2) LONG fptr);
d49 1
a49 1
struct Seg * __regargs searchsegs (char *name);
d51 5
a55 2
#define rditem ReadItem
#define findarg FindArg
d57 6
a62 5
LONG ASM   rditem  (REG(d1) UBYTE *commandname,REG(d2) LONG maxlongs,
		    REG(d3) LONG isbcpl);
LONG * ASM rdargs  (REG(d1) UBYTE *keys,REG(d2) LONG *argv,REG(d3) LONG size,
		    REG(d0) LONG isbcpl);
LONG ASM   findarg (REG(d1) UBYTE *keys,REG(d2) UBYTE *w,REG(d3) LONG isbcpl);
d64 14
@


36.2
log
@*** empty log message ***
@
text
@d25 2
@


36.1
log
@*** empty log message ***
@
text
@d31 2
d45 7
a51 4
LONG ASM   rditem (REG(d1) UBYTE *commandname,REG(d2) LONG maxlongs,
		   REG(d3) LONG isbcpl);
LONG * ASM rdargs (REG(d1) UBYTE *keys,REG(d2) LONG *argv,REG(d3) LONG size,
		   REG(d0) LONG isbcpl);
@
