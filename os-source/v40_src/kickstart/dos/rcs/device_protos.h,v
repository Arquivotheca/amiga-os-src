head     36.7;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


36.7
date     91.02.25.16.20.37;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     91.01.24.16.06.34;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     90.04.03.05.15.17;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     90.04.03.04.42.49;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     90.01.17.21.55.27;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.10.03.18.07.38;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.16.22.06.41;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.7
log
@Added lockit()
@
text
@/* device_protos.h */
/* use ANSI token concatenation operator - ## */

#define ASM __asm
#define REG(x)	register __ ## x

struct DosList * ASM LockDosList         (REG(d1) ULONG flags);
struct DosList * ASM AttemptLockDosList  (REG(d1) ULONG flags);
struct DosList * ASM InternalLockDosList (REG(d1) ULONG flags,
					  REG(d2) LONG synch);
struct DosList * __regargs lockit (struct DosList *dl,
				   struct SignalSemaphore *sem,
				   ULONG flags,
				   ULONG synch);
void ASM UnLockDosList (REG(d1) ULONG flags);

LONG ASM RemDosEntry  (REG(d1) struct DosList *dlist);
LONG ASM AddDosEntry  (REG(d1) struct DosList *dlist);
void ASM FreeDosEntry (REG(d1) struct DosList *dlist);

struct DosList * ASM MakeDosEntry (REG(d1) UBYTE *name,
				   REG(d2) LONG  type);
struct DosList * ASM FindDosEntry (REG(d1) struct DosList *dlist,
				   REG(d2) UBYTE *name,
				   REG(d3) ULONG flags);
struct DosList * ASM NextDosEntry (REG(d1) struct DosList *dlist,
				   REG(d2) ULONG flags);
struct DosList * ASM adddevice    (REG(d1) char *name);

struct DosList * __regargs FindDosEntryByTask (struct MsgPort *port);

LONG ASM SameDevice   (REG(d1) BPTR lock1, REG(d2) BPTR lock2);

LONG ASM assign       (REG(d1) char *name, REG(d2) BPTR lock);
LONG ASM assignlate   (REG(d1) char *name, REG(d2) UBYTE *string);
LONG ASM assignstring (REG(d1) char *name, REG(d2) UBYTE *string);
LONG ASM assigncommon (REG(d1) char *name, REG(d2) BPTR lock,
		       REG(d3) LONG type);
void __regargs freelocklist (struct AssignList *list);
LONG ASM addassign    (REG(d1) char *name, REG(d2) BPTR lock);
@


36.6
log
@added SameDevice
@
text
@d11 4
@


36.5
log
@*** empty log message ***
@
text
@d27 2
@


36.4
log
@for rcs 4.x header change
@
text
@a12 3
void ASM LockDosEntries (REG(d1) struct DosList *dlist, REG(d2) LONG flags);
void ASM UnLockDosEntries (REG(d1) ULONG flags);

@


36.3
log
@*** empty log message ***
@
text
@@


36.2
log
@*** empty log message ***
@
text
@d13 3
@


36.1
log
@*** empty log message ***
@
text
@d7 20
a26 1
struct DosList * ASM adddevice(REG(d1) char *name);
@
