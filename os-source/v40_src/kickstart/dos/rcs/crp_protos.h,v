head     36.8;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


36.8
date     90.12.03.09.16.43;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     90.11.21.02.45.41;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     90.05.09.02.24.08;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     90.04.03.04.42.31;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     90.03.05.01.15.30;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     90.03.03.02.26.21;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     90.02.16.22.31.28;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.12.01.08.28.52;  author jesup;  state Exp;
branches ;
next     ;


desc
@for createproc.c
@


36.8
log
@*** empty log message ***
@
text
@/* path_protos.h */
/* use ANSI token concatenation operator - ## */

#define ASM __asm
#define REG(x)	register __ ## x

struct Process * ASM CreateNewProc (REG(d1) struct TagList *tags);

struct CommandLineInterface * __regargs makecli (struct Process *myproc,
						 struct TagItem *tags);
struct CommandLineInterface * __regargs AllocCli (struct TagItem *tags);

void __regargs freecli (struct CommandLineInterface *cli, LONG tnum);

void __regargs freepath (BPTR path);

struct MsgPort * ASM createtaskproc (REG(a0) char *name,
				     REG(a1) BPTR seg,
				     REG(a2) BPTR gvec,
				     REG(d0) LONG stacksize,
				     REG(d1) LONG namelen,
				     REG(d2) LONG pri,
				     REG(d3) LONG task);

struct MsgPort * ASM createproc (REG(d1) char *name,
				 REG(d2) LONG pri,
				 REG(d3) BPTR seg,
				 REG(d0) LONG stacksize);

struct MsgPort * ASM createtask (REG(d1) BPTR segarray,
				 REG(d2) LONG stacksize,
				 REG(d3) BPTR pri,
				 REG(d0) BSTR bname,
				 REG(a0) BPTR gvec);

struct RootNode * __regargs taskrootstruct (void);

LONG __regargs CleanupProc (struct Process *p, LONG returncode);
@


36.7
log
@*** empty log message ***
@
text
@d10 2
a11 4
						 struct TagItem *tags,
						 LONG myubase);
struct CommandLineInterface * __regargs AllocCli (struct TagItem *tags,
						  LONG myubase);
@


36.6
log
@*** empty log message ***
@
text
@d17 2
@


36.5
log
@for rcs 4.x header change
@
text
@d12 2
@


36.4
log
@Added taskrootstruct
@
text
@@


36.3
log
@Added returncode to parms, just in case
@
text
@d34 2
@


36.2
log
@*** empty log message ***
@
text
@d10 2
a11 1
						 struct TagItem *tags);
d34 1
a34 1
void __regargs CleanupProc (struct Process *p);
@


36.1
log
@initial ci
@
text
@d14 8
@
