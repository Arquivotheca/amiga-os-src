AddDosEntry	device.c	/^AddDosEntry (REG(d1) struct DosList *dlist)$/
AddPart	blib.c	/^AddPart (REG(d1) UBYTE *dirname, REG(d2) UBYTE *fi/
AllocCli	createproc.c	/^AllocCli (struct TagItem *tags)$/
AllocDosObject	blib.c	/^AllocDosObject (REG(d1) ULONG type, REG(d2) struct/
AllocNew	exall.c	/^#define AllocNew(x) ((struct x *) AllocMem(sizeof(/
AttemptLockDosList	device.c	/^AttemptLockDosList (REG(d1) ULONG flags)$/
BUFFER	bcplio.c	/^#define BUFFER(fh)	((UBYTE *) (fh)->fh_Buf)$/
CleanupProc	createproc.c	/^CleanupProc (struct Process *p, LONG returncode)$/
CreateNewProc	createproc.c	/^CreateNewProc (REG(d1) struct TagList *tags)$/
DeleteVar	env.c	/^DeleteVar (REG(d1) UBYTE *name, REG(d2) ULONG flag/
EndNotify	notify.c	/^EndNotify (REG(d1) struct NotifyRequest *nreq)$/
ErrorReport	blib.c	/^ErrorReport (REG(d1) LONG code,$/
FGetC	bcplio.c	/^FGetC (REG(d1) BPTR fh)$/
FGets	bcplio.c	/^FGets (REG(d1) BPTR fh, REG(d2) UBYTE *buf, REG(d3/
FPutC	bcplio.c	/^FPutC (REG(d1) BPTR fh, REG(d2) LONG ch)$/
FPuts	bcplio.c	/^FPuts (REG(d1) BPTR fh, REG(d2) UBYTE *str)$/
FRead	bcplio.c	/^FRead (REG(d1) BPTR fh, REG(d2) UBYTE *block, REG(/
FWrite	bcplio.c	/^FWrite (REG(d1) BPTR fh, REG(d2) UBYTE *block, REG/
Fault	blib.c	/^Fault (REG(d1) LONG code, REG(d2) UBYTE *header, R/
FilePart	blib.c	/^FilePart (REG(d1) UBYTE *path)$/
FindCli	cli_init.c	/^FindCli (REG(d1) ULONG num)$/
FindDosEntry	device.c	/^FindDosEntry (REG(d1) struct DosList *dlist, REG(d/
FindDosEntryByTask	device.c	/^FindDosEntryByTask (struct MsgPort *port)$/
FindVar	env.c	/^FindVar (REG(d1) UBYTE *name, REG(d2) ULONG type)$/
Flush	bcplio.c	/^Flush (REG(d1) BPTR fh)$/
FreeDosEntry	device.c	/^FreeDosEntry (REG(d1) struct DosList *dlist)$/
FreeDosObject	blib.c	/^FreeDosObject (REG(d1) ULONG type, REG(d2) void *p/
FunkyMatchFirst	patternhack.c	/^LONG ASM FunkyMatchFirst (REG(d1) UBYTE *pat,$/
GetCurrentDirName	path.c	/^GetCurrentDirName (REG(d1) UBYTE *buffer, REG(d2) /
GetProgramName	path.c	/^GetProgramName (REG(d1) UBYTE *buffer, REG(d2) LON/
GetPrompt	path.c	/^GetPrompt (REG(d1) UBYTE *buffer, REG(d2) LONG len/
GetVar	env.c	/^GetVar (REG(d1) UBYTE *name, REG(d2) UBYTE *buffer/
InternalLockDosList	device.c	/^InternalLockDosList (REG(d1) ULONG flags,REG(d2) L/
LockDosList	device.c	/^LockDosList (REG(d1) ULONG flags)$/
LockRecords	record.c	/^LockRecords (REG(d1) struct RecordLock *array, REG/
MakeDosEntry	device.c	/^MakeDosEntry (REG(d1) UBYTE *name, REG(d2) LONG ty/
MaxCli	cli_init.c	/^MaxCli ()$/
NameFromFH	path.c	/^NameFromFH (REG(d1) BPTR fh, REG(d2) char *buffer,/
NameFromLock	path.c	/^NameFromLock (REG(d1) BPTR lock, REG(d2) char *buf/
NextDosEntry	device.c	/^NextDosEntry (REG(d1) struct DosList *dlist, REG(d/
OpenFromLock	blib.c	/^OpenFromLock (REG(d1) BPTR lock)$/
PathPart	blib.c	/^PathPart (REG(d1) UBYTE *path)$/
PutStr	bcplio.c	/^PutStr (REG(d1) UBYTE *str)$/
REG	bcplio.c	/^#define REG(x)	register __ ## x	\/* ANSI concatenat/
ReadLink	blib.c	/^ReadLink (REG(d1) struct MsgPort *port, REG(d2) BP/
RemDosEntry	device.c	/^RemDosEntry (REG(d1) struct DosList *dlist)$/
RemSegment	cli.c	/^RemSegment (REG(d1) struct Segment *segment)$/
RunCommand	cli.c	/^RunCommand (REG(d1) BPTR seg, REG(d2) LONG stack, /
SameDevice	device.c	/^SameDevice (REG(d1) BPTR lock1, REG(d2) BPTR lock2/
SameLock	blib.c	/^SameLock (REG(d1) BPTR l1, REG(d2) BPTR l2)$/
SetCurrentDirName	path.c	/^SetCurrentDirName (REG(d1) UBYTE *dirname)$/
SetProgramName	path.c	/^SetProgramName (REG(d1) UBYTE *name)$/
SetPrompt	path.c	/^SetPrompt (REG(d1) UBYTE *prompt)$/
SetVBuf	bcplio.c	/^SetVBuf (REG(d1) BPTR fh, REG(d2) UBYTE *buff, REG/
SetVar	env.c	/^SetVar (REG(d1) UBYTE *name, REG(d2) UBYTE *buffer/
StartNotify	notify.c	/^StartNotify (REG(d1) struct NotifyRequest *nreq)$/
TOBPTR	bcplio.c	/^#define TOBPTR(x)	(((LONG) (x)) >> 2)	\/* convert t/
TOBUFFER	bcplio.c	/^#define TOBUFFER(buf)	(buf)$/
UnGetC	bcplio.c	/^UnGetC (REG(d1) BPTR fh, REG(d2) LONG ch)$/
UnLockDosList	device.c	/^UnLockDosList (REG(d1) ULONG flags)$/
UnLockRecords	record.c	/^UnLockRecords (REG(d1) struct RecordLock *array)$/
VFPrintf	bcplio.c	/^VFPrintf (REG(d1) BPTR fh, REG(d2) UBYTE *fmt, REG/
VFWritef	bcplio.c	/^VFWritef (REG(d1) BPTR fh, REG(d2) UBYTE *format, /
VPrintf	bcplio.c	/^VPrintf (REG(d1) UBYTE *fmt, REG(d2) LONG *argv)$/
WriteChars	bcplio.c	/^WriteChars (REG(d1) UBYTE *buffer, REG(d2) LONG bu/
actend	bcplio.c	/^actend (scb)$/
actendread	bcplio.c	/^actendread (scb)$/
actendwrite	bcplio.c	/^actendwrite(scb)$/
actinitcommon	bcplio.c	/^actinitcommon (scb)$/
actread	bcplio.c	/^actread (scb)$/
actreadinit	bcplio.c	/^actreadinit (scb)$/
actwrite	bcplio.c	/^actwrite (scb)$/
actwriteinit	bcplio.c	/^actwriteinit (scb)$/
addassign	device.c	/^addassign (REG(d1) char *name, REG(d2) BPTR lock)$/
adddevice	device.c	/^adddevice (REG(d1) char *name)		\/* CSTR *\/$/
addvar	env.c	/^addvar (struct List *list, struct LocalVar *nlv)$/
assign	device.c	/^assign (REG(d1) char *name, REG(d2) BPTR lock)$/
assigncommon	device.c	/^assigncommon (REG(d1) char *name, REG(d2) BPTR loc/
assignlate	device.c	/^assignlate (REG(d1) char *name, REG(d2) UBYTE *str/
assignstring	device.c	/^assignstring (REG(d1) char *name, REG(d2) UBYTE *s/
bwritef	bcplio.c	/^bwritef (REG(d1) char *format,$/
bwrites	bcplio.c	/^bwrites (REG(d1) BSTR s)$/
bwritet	bcplio.c	/^bwritet (REG(d1) BSTR s,$/
changemode	blib.c	/^changemode (REG(d1) LONG type, REG(d2) BPTR fh, RE/
cli_init	cli_init.c	/^cli_init (pkt)$/
cli_init_newcli	cli_init.c	/^cli_init_newcli (struct DosPacket *pkt)$/
cli_init_run	cli_init.c	/^cli_init_run (struct DosPacket *pkt)$/
closedisk	blib.c	/^closedisk (task)$/
common_get	path.c	/^common_get (LONG offset, UBYTE *buffer, LONG len)$/
common_getc	bcplio.c	/^common_getc (struct FileHandle *cis)$/
common_set	path.c	/^common_set (LONG offset, UBYTE *newname, LONG maxs/
copylist	cli_init.c	/^copylist (BPTR p)$/
copyvars	env.c	/^copyvars (struct Process *np, struct Process *oldp/
createnode	cli_init.c	/^createnode (unit,devname)$/
createproc	createproc.c	/^struct MsgPort * ASM $/
createtask	createproc.c	/^struct MsgPort * ASM $/
createtaskproc	createproc.c	/^struct MsgPort * ASM $/
datstamp	blib.c	/^datstamp (REG(d1) struct DateStamp *v)$/
delay	blib.c	/^delay (REG(d1) ULONG ticks)$/
deplete	bcplio.c	/^deplete (cos)$/
devact	blib.c	/^devact (REG(d1) char *name, REG(d2) LONG arg1, REG/
deviceproc	blib.c	/^deviceproc (REG(d1) char *name)$/
do_lock	blib.c	/^do_lock (REG(d1) BPTR lock,	\/* may actually be FH!/
dotimer	blib.c	/^dotimer (REG(d1) LONG request,$/
endread	bcplio.c	/^endread ()$/
endstream	bcplio.c	/^endstream (REG(d1) BPTR scb)$/
endtask	blib.c	/^endtask (REG(d1) BPTR seg)$/
endwrite	bcplio.c	/^endwrite ()$/
err	cli.c	/^err (m,si,so)$/
err_report	blib.c	/^err_report (REG(d1) LONG type, REG(d2) BPTR arg,$/
execute	execute.c	/^execute (REG(d1) char *comm,$/
fake_exall	exall.c	/^fake_exall (BPTR lock, struct ExAllData *ed, LONG /
fault	blib.c	/^fault (REG(d1) LONG code, REG(d2) UBYTE *header)$/
fill_data	exall.c	/^fill_data (struct ExAllData *ed, ULONG data, struc/
find_tnum	execute.c	/^find_tnum (struct CliProcList **clip)$/
findarg	rdargs.c	/^findarg (REG(d1) UBYTE *keys, REG(d2) UBYTE *w, RE/
finddev	blib.c	/^finddev (REG(d1) char *name,$/
findinput	bcplio.c	/^findinput (REG(d1) char *string)$/
findoutput	bcplio.c	/^findoutput (REG(d1) char *string)$/
findstream	bcplio.c	/^findstream (REG(d1) char *string,	\/* aka Open() *\//
freecli	createproc.c	/^freecli (struct CommandLineInterface *cli, LONG tn/
freedevproc	blib.c	/^freedevproc (REG(d1) struct DevProc *dp)$/
freelocklist	device.c	/^freelocklist (struct AssignList *list)$/
freeobj	blib.c	/^freeobj (REG(d1) BPTR lock)$/
freepath	createproc.c	/^freepath (BPTR path)$/
freevars	env.c	/^freevars (struct Process *proc)$/
getdevproc	blib.c	/^getdevproc (REG(d1) char *name, REG(d2) struct Dev/
getr2	cli.c	/^getr2 (codep)$/
if	blib.c	/^				if (al && dp->dvp_Lock == volnode->dol_Lock)$/
init_scb	bcplio.c	/^init_scb (REG(d1) struct FileHandle *scb, REG(d2) /
internal_run	execute.c	/^internal_run (char *command, char *shell, LONG typ/
isfilesystem	blib.c	/^isfilesystem (REG(d1) char *name)$/
isinteractive	blib.c	/^isinteractive (REG(d1) BPTR s)$/
kill_cli_num	execute.c	/^kill_cli_num (LONG tnum)$/
load	cli.c	/^load (file,dir,codep,flag)$/
load_and_run	cli.c	/^load_and_run (module,clip)$/
loaddevice	blib.c	/^loaddevice (REG(d1) struct DosList *node,$/
lockit	device.c	/^lockit (struct DosList *dl, struct SignalSemaphore/
longsize	execute.c	/^#define longsize(x)	((sizeof(x)+3) >> 2)$/
make1	cli_init.c	/^#define make1(name,startup,hname,stacksize,gv) \\$/
make_assign_entry	cli_init.c	/^make_assign_entry (name)$/
make_node_entries	cli_init.c	/^make_node_entries (syssegl)$/
make_node_entry	cli_init.c	/^make_node_entry (name,startup,seglist,handler,stks/
make_task_assignment	cli_init.c	/^make_task_assignment (name,dir)$/
makec	cli_init.c	/^#define makec(name,startup,segl) \\$/
makecli	createproc.c	/^makecli (struct Process *currproc, struct TagItem /
makeglob	blib.c	/^makeglob (REG(d1) LONG *segl)$/
makes	cli_init.c	/^makes(name,startup,stacksize)$/
makeseg	cli_init.c	/^makeseg (REG(d1) char *name,REG(d2) BPTR seg,REG(d/
mygetstring	fault.c	/^mygetstring (REG(d1) LONG code)$/
newline	bcplio.c	/^newline ()$/
noreqloadseg	blib.c	/^noreqloadseg (REG(d1) char *name)$/
openf	cli.c	/^openf (f)$/
pm	cli_init.c	/^#define pm(x)$/
rdargs	rdargs.c	/^rdargs (REG(d1) UBYTE *keys, REG(d2) LONG *argv, R/
rditem	rdargs.c	/^rditem (REG(d1) UBYTE *commandname, REG(d2) LONG m/
readbytes	bcplio.c	/^readbytes (REG(d1) char *v,$/
readn	bcplio.c	/^readn ()$/
readprefs	cli_init.c	/^readprefs ()$/
readwords	bcplio.c	/^readwords (REG(d1) BPTR v,$/
remaddassign	device.c	/^remaddassign (REG(d1) char *name, REG(d2) BPTR loc/
renameobj	blib.c	/^renameobj (REG(d1) char *fromname,$/
replenish	bcplio.c	/^replenish (end,cis)$/
run_init_clip	cli_init.c	/^run_init_clip (struct CommandLineInterface *clip, /
searchsegs	cli.c	/^searchsegs (REG(d1) UBYTE *name,REG(d2) struct Seg/
setcomment	blib.c	/^setcomment (REG(d1) char *name,$/
setdosdate	blib.c	/^setdosdate (REG(d1) struct DateStamp *v)$/
start	cli.c	/^start (REG(d1) struct DosPacket *parm_pkt)$/
startup	cli_init.c	/^startup (node,syssegl)$/
system	execute.c	/^system (REG(d1) char *comm,$/
taskrootstruct	createproc.c	/^taskrootstruct ()$/
uncommon_get	path.c	/^uncommon_get (UBYTE *name, UBYTE *buffer, LONG len/
while	blib.c	/^				while (al) {$/
writebytes	bcplio.c	/^writebytes (REG(d1) char *v,$/
writed	bcplio.c	/^writed (REG(d1) LONG n,		\/* number *\/$/
writef	bcplio.c	/^writef (format,a)$/
writehex	bcplio.c	/^writehex (REG(d1) LONG n,$/
writen	bcplio.c	/^writen (REG(d1) LONG n)$/
writeoct	bcplio.c	/^writeoct (REG(d1) LONG n,$/
writes	bcplio.c	/^writes (REG(d1) UBYTE *s)$/
writesnum	bcplio.c	/^writesnum (char *s, LONG num)$/
writet	bcplio.c	/^writet (REG(d1) LONG s,		\/* really char * *\/$/
writeu	bcplio.c	/^writeu (REG(d1) ULONG n,$/
writewords	bcplio.c	/^writewords (REG(d1) BPTR v,$/
xfer_text	env.c	/^xfer_text (char *buffer, char *source, LONG len)$/
@AddSegArray	doslib.asm	/^@AddSegArray/
@AllocVecPub	doslib.asm	/^@AllocVecPub/
@AllocVecPubClear	doslib.asm	/^@AllocVecPubClear/
@ArgStr	doslib.asm	/^@ArgStr/
@Atol	support.asm	/^@Atol/
@BtoC	support.asm	/^@BtoC/
@BtoCstr	downc.asm	/^@BtoCstr/
@CheckSignal	support2.asm	/^@CheckSignal/
@ClearICache	doslib.asm	/^@ClearICache/
@CompareDates	support.asm	/^@CompareDates/
@CreatePkt	sendpkt.asm	/^@CreatePkt/
@CtoB	downc.asm	/^@CtoB/
@CtoBstr	support.asm	/^@CtoBstr/
@DeletePkt	sendpkt.asm	/^@DeletePkt/
@ExAll	support.asm	/^@ExAll/
@GetProgramDir	doslib.asm	/^@GetProgramDir/
@InternalLoadSeg	loadseg.asm	/^@InternalLoadSeg/
@InternalRunCommand	doslib.asm	/^@InternalRunCommand/
@InternalUnLoadSeg	loadseg.asm	/^@InternalUnLoadSeg/
@LockRecord,_LockRecord	record_supp.asm	/^@LockRecord,_LockRecord/
@MakeProc	doslib.asm	/^@MakeProc/
@MySetPrefs	doslib.asm	/^@MySetPrefs/
@SendPkt	sendpkt.asm	/^@SendPkt/
@SetArgStr	doslib.asm	/^@SetArgStr/
@SetIoErr	doslib.asm	/^@SetIoErr/
@SetProgramDir	doslib.asm	/^@SetProgramDir/
@abort	doslib.asm	/^@abort/
@bcpl_qpkt	doslib.asm	/^@bcpl_qpkt/
@bsplitname	support2.asm	/^@bsplitname/
@call_bcpl_fptr	call_bcpl.asm	/^@call_bcpl_fptr/
@clearvec	downc.asm	/^@clearvec/
@cli	doslib.asm	/^@cli/
@cloneTagItems	support.asm	/^@cloneTagItems/
@comparedate	mlib.asm	/^@comparedate/
@consoletask	doslib.asm	/^@consoletask/
@copyMem	support2.asm	/^@copyMem/
@cpymax	support.asm	/^@cpymax/
@currentdir	doslib.asm	/^@currentdir/
@div32	doslib.asm	/^@div32/
@divrem32	doslib.asm	/^@divrem32/
@do_match	support2.asm	/^@do_match/
@dosbase	doslib.asm	/^@dosbase/
@exit	doslib.asm	/^@exit/
@filesystemtask	doslib.asm	/^@filesystemtask/
@filterTagItems	support.asm	/^@filterTagItems/
@findTagItem	support.asm	/^@findTagItem/
@finddefault	support2.asm	/^@finddefault/
@freeTagItems	support.asm	/^@freeTagItems/
@getSysTime	support2.asm	/^@getSysTime/
@getTagData	support.asm	/^@getTagData/
@getresult2	doslib.asm	/^@getresult2/
@getstring	support.asm	/^@getstring/
@input	doslib.asm	/^@input/
@loadseg	loadseg.asm	/^@loadseg/
@loadsegbstr	loadseg.asm	/^@loadsegbstr/
@multiply	doslib.asm	/^@multiply/
@myproc	doslib.asm	/^@myproc/
@myputch	io.asm	/^@myputch/
@mysplitname	support2.asm	/^@mysplitname/
@mysprintf	support2.asm	/^@mysprintf/
@mystrcat	support.asm	/^@mystrcat/
@mystrchr	support.asm	/^@mystrchr/
@mystricmp	support.asm	/^@mystricmp/
@mystrnicmp	support.asm	/^@mystrnicmp/
@mystrrchr	support.asm	/^@mystrrchr/
@objact	support.asm	/^@objact/
@opendosbase	doslib.asm	/^@opendosbase/
@openwindow	request.asm	/^@openwindow/
@output	doslib.asm	/^@output/
@packBoolTags	support.asm	/^@packBoolTags/
@qpkt	doslib.asm	/^@qpkt/
@qpkt_task	doslib.asm	/^@qpkt_task/
@rdch	io.asm	/^@rdch/
@rem32	doslib.asm	/^@rem32/
@requester	request.asm	/^@requester/
@requester2	request.asm	/^@requester2/
@result2	doslib.asm	/^@result2/
@returnpkt	doslib.asm	/^@returnpkt/
@rootstruct	doslib.asm	/^@rootstruct/
@seglist	doslib.asm	/^@seglist/
@selectinput	doslib.asm	/^@selectinput/
@selectoutput	doslib.asm	/^@selectoutput/
@sendpacket	sendpkt.asm	/^@sendpacket/
@sendpkt0	sendpkt.asm	/^@sendpkt0/
@sendpkt1	sendpkt.asm	/^@sendpkt1/
@sendpkt2	sendpkt.asm	/^@sendpkt2/
@sendpkt3	sendpkt.asm	/^@sendpkt3/
@sendpkt4	sendpkt.asm	/^@sendpkt4/
@setconsole	doslib.asm	/^@setconsole/
@setfilesys	doslib.asm	/^@setfilesys/
@setresult2	doslib.asm	/^@setresult2/
@store_IBase	doslib.asm	/^@store_IBase/
@taskid	doslib.asm	/^@taskid/
@taskwait	doslib.asm	/^@taskwait/
@toUpper	support.asm	/^@toUpper/
@udiv32	doslib.asm	/^@udiv32/
@unloadseg	loadseg.asm	/^@unloadseg/
@wrch	io.asm	/^@wrch/
BCPLBtoC	downc.asm	/^BCPLBtoC/
BCPLCtoB	downc.asm	/^BCPLCtoB/
CALLDOS	doslib.asm	/^CALLDOS/
CLEARVEC	downc.asm	/^CLEARVEC/
COPYSTRING	downc.asm	/^COPYSTRING/
COPYVEC	downc.asm	/^COPYVEC/
FAKEBLIB	fakeblib.asm	/^FAKEBLIB/
FAKEBLIB_SEG	fakeblib.asm	/^FAKEBLIB_SEG/
FAKECLI	fakecli.asm	/^FAKECLI/
FAKECLI_SEG	fakecli.asm	/^FAKECLI_SEG/
JTAB	jumptab.asm	/^JTAB/
J_CLOSE	doslib.asm	/^J_CLOSE/
J_NOP	doslib.asm	/^J_NOP/
J_OPEN	doslib.asm	/^J_OPEN/
PACKSTRING	downc.asm	/^PACKSTRING/
REQ0	request.asm	/^REQ0/
REQUEST2	request.asm	/^REQUEST2/
RET	doslib.asm	/^RET/
SAVE	doslib.asm	/^SAVE/
UNPACKSTRING	downc.asm	/^UNPACKSTRING/
_AllocVecPub	doslib.asm	/^_AllocVecPub/
_AllocVecPubClear	doslib.asm	/^_AllocVecPubClear/
_BtoC	support.asm	/^_BtoC/
_BtoCstr	downc.asm	/^_BtoCstr/
_CNP_ActiveCode	doslib.asm	/^_CNP_ActiveCode/
_CheckSignal	support2.asm	/^_CheckSignal/
_CompareDates	support.asm	/^_CompareDates/
_CreatePkt	sendpkt.asm	/^_CreatePkt/
_CtoB	downc.asm	/^_CtoB/
_CtoBstr	support.asm	/^_CtoBstr/
_CurrentDir	doslib.asm	/^_CurrentDir/
_DeletePkt	sendpkt.asm	/^_DeletePkt/
_DupLockFromFH	support.asm	/^_DupLockFromFH/
_ExamineFH	support.asm	/^_ExamineFH/
_Format	support.asm	/^_Format/
_InternalRunCommand	doslib.asm	/^_InternalRunCommand/
_LockRecord	support.asm	/^_LockRecord/
_MakeLink	support.asm	/^_MakeLink/
_ParentOfFH	support.asm	/^_ParentOfFH/
_SEGLIST	doslib.asm	/^_SEGLIST/
_SendPkt	sendpkt.asm	/^_SendPkt/
_SetFileSize	support.asm	/^_SetFileSize/
_UnLockRecord	support.asm	/^_UnLockRecord/
_abort	doslib.asm	/^_abort/
_activecode	doslib.asm	/^_activecode/
_addbuffers	support.asm	/^_addbuffers/
_b_porthandler	bstr.asm	/^_b_porthandler/
_b_prompt	bstr.asm	/^_b_prompt/
_bcpl_cli_init	fakecli.asm	/^_bcpl_cli_init/
_bcpl_qpkt	doslib.asm	/^_bcpl_qpkt/
_call_bcpl_fptr	call_bcpl.asm	/^_call_bcpl_fptr/
_clearvec	downc.asm	/^_clearvec/
_cloneTagItems	support.asm	/^_cloneTagItems/
_consolename	doslib.asm	/^_consolename/
_copydir	support.asm	/^_copydir/
_cpymax	support.asm	/^_cpymax/
_createdir	support.asm	/^_createdir/
_currentdir	doslib.asm	/^_currentdir/
_deactcode	doslib.asm	/^_deactcode/
_deletefile	support.asm	/^_deletefile/
_deletetask	doslib.asm	/^_deletetask/
_devact_str	support.asm	/^_devact_str/
_div32	doslib.asm	/^_div32/
_divrem32	doslib.asm	/^_divrem32/
_dos_errstrs	strings.asm	/^_dos_errstrs/
_doslibname	doslib.asm	/^_doslibname/
_end	end.asm	/^_end/
_examine	support.asm	/^_examine/
_exnext	support.asm	/^_exnext/
_filterTagItems	support.asm	/^_filterTagItems/
_findTagItem	support.asm	/^_findTagItem/
_freeTagItems	support.asm	/^_freeTagItems/
_freeVec	doslib.asm	/^_freeVec/
_getTagData	support.asm	/^_getTagData/
_getstring	support.asm	/^_getstring/
_info	support.asm	/^_info/
_inhibit	support.asm	/^_inhibit/
_loadseg	loadseg.asm	/^_loadseg/
_loadsegbstr	loadseg.asm	/^_loadsegbstr/
_locateobj	support.asm	/^_locateobj/
_lock	support.asm	/^_lock/
_myNameFromLock	support2.asm	/^_myNameFromLock/
_myputch	io.asm	/^_myputch/
_mysplitname	support2.asm	/^_mysplitname/
_mysprintf	support2.asm	/^_mysprintf/
_mystricmp	support.asm	/^_mystricmp/
_mystrnicmp	support.asm	/^_mystrnicmp/
_noflushseek	support.asm	/^_noflushseek/
_objact	support.asm	/^_objact/
_packBoolTags	support.asm	/^_packBoolTags/
_parent	support.asm	/^_parent/
_qpkt	doslib.asm	/^_qpkt/
_qpkt_task	doslib.asm	/^_qpkt_task/
_ramname	doslib.asm	/^_ramname/
_rdch	io.asm	/^_rdch/
_read	support.asm	/^_read/
_readwrite	support.asm	/^_readwrite/
_relabel	support.asm	/^_relabel/
_rem32	doslib.asm	/^_rem32/
_requester	request.asm	/^_requester/
_requester2	request.asm	/^_requester2/
_returnpkt	doslib.asm	/^_returnpkt/
_seek	support.asm	/^_seek/
_selectinput	doslib.asm	/^_selectinput/
_selectoutput	doslib.asm	/^_selectoutput/
_sendpacket	sendpkt.asm	/^_sendpacket/
_sendpkt0	sendpkt.asm	/^_sendpkt0/
_sendpkt1	sendpkt.asm	/^_sendpkt1/
_sendpkt2	sendpkt.asm	/^_sendpkt2/
_sendpkt3	sendpkt.asm	/^_sendpkt3/
_sendpkt4	sendpkt.asm	/^_sendpkt4/
_setconsole	doslib.asm	/^_setconsole/
_setdate	support.asm	/^_setdate/
_setfilesys	doslib.asm	/^_setfilesys/
_setmode	support.asm	/^_setmode/
_setprotection	support.asm	/^_setprotection/
_shellname	doslib.asm	/^_shellname/
_toUpper	support.asm	/^_toUpper/
_udiv32	doslib.asm	/^_udiv32/
_unloadseg	loadseg.asm	/^_unloadseg/
_waitforchar	support.asm	/^_waitforchar/
_wrch	io.asm	/^_wrch/
_write	support.asm	/^_write/
doslib_createproc	doslib.asm	/^doslib_createproc/
get_ubase	doslib.asm	/^get_ubase/
