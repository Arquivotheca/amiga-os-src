head     39.0;
branch   ;
access   ;
symbols  V40_9:39.0 V40_8:39.0 V40_7:39.0 V40_6:39.0 V40_5:39.0 V40_4:39.0 V40_3:39.0 V40_2:39.0 V40_1:39.0 V40_0:39.0 V39_56:39.0 V39_55:39.0 V39_54:39.0 V39_53:39.0 V39_52:39.0 V39_50:39.0 V39_48:39.0 V39_47:39.0 V39_46:39.0 V39_45:39.0 V39_44:39.0 V39_43:39.0 V39_42:39.0 V39_41:39.0 V39_40:39.0 V39_39:39.0 V39_38:39.0 V39_37:39.0 V39_36:39.0 V39_35:39.0 V39_34:39.0 V39_33:39.0 V39_30:39.0 V39_29:39.0 V39_28:39.0 V39_27:39.0 V39_26:39.0 V39_25:39.0 V39_24:39.0 V39_23:39.0 V39_22:39.0 V39_20:39.0 V39_19:39.0 V39_18:39.0 V39_17:39.0 V39_16:39.0 V39_15:39.0 V39_14:39.0 V39_12:39.0 V39_11:39.0 V39_10:39.0 V39_9:39.0 V39_8:39.0 V39_7:39.0 V39_6:39.0 V39_5:39.0 V39_4:39.0 V39_3:39.0 V39_2:39.0 V39_1:39.0;
locks    ; strict;
comment  @* @;


39.0
date     91.10.15.08.29.38;  author mks;  state Exp;
branches ;
next     ;


desc
@V39 Exec initial checkin
@



39.0
log
@V39 Exec initial checkin
@
text
@*	   ************************************************
*	   **						 **
*	   **	   --------------------------------	 **
*	   **	    ROM OPERATING SYSTEM EXECUTIVE	 **
*	   **	   --------------------------------	 **
*	   **						 **
*	   **						 **
*	   **						 **
*	   ************************************************

*************************************************************************
*									*
*   Copyright 1984,85,88,89 Commodore-Amiga, Inc.			*
*   All rights reserved.  No part of this program may be reproduced,	*
*   transmitted, transcribed, stored in retrieval system, or		*
*   translated into any language or computer language, in any form	*
*   or by any means, electronic, mechanical, magnetic, optical, 	*
*   chemical, manual or otherwise, without the prior written		*
*   permission of Commodore-Amiga, Incorporated.			*
*									*
*************************************************************************

**********************************************************************
*
*   Source Control:
*
*	$Id$
*
*	$Log$
*********************************************************************

	NOLIST
	INCLUDE "assembly.i"
	LIST
	IFNE	INCLUDE_WACK
	NOLIST
	INCLUDE "types.i"
	INCLUDE "wackbase.i"
	LIST

firstKey	equ	4
lastKey 	equ	5
keyfun		equ	6

symName 	equ	4




*	result = DoKey (char)
*	d0		d0
	xref	_Execute
;	XDEF	_DoKey
;_DoKey:
;		move.l	4(sp),d0
	XDEF	DoKey
DoKey:

		;	key = FindKey (char)
		;	d0		d0
		move.l	d0,d1
		move.l	wb_ThisMap(a6),a0
		bra.s	fk_start
fk_next:	move.l	(a0),d0
		beq.s	dk_exit
		move.l	d0,a0
fk_start:	cmp.b	firstKey(a0),d1
		beq.s	fk_found
		blt.s	fk_next
		cmp.b	lastKey(a0),d1
		bgt.s	fk_next
fk_found:
*
*
		move.l	a0,d0
		move.l	keyfun(a0),-(sp)
		bsr	_Execute
		addq.l	#4,sp
dk_exit:	rts				;D0=result



*	symbol = FindSymbol (name)
*	d0		     a0
	xref	_SymMap
	xref	CompareStr
	XDEF	_FindSymbol
_FindSymbol:
		move.l	4(sp),a0
	XDEF	FindSymbol
FindSymbol:
		movem.l a2/a3,-(sp)
		move.l	a0,a2
		lea	_SymMap,a3
		bra.s	fs_start
fs_next:	move.l	(a3),d0
		beq.s	fs_exit
		move.l	d0,a3
fs_start:	move.l	symName(a3),a0
		move.l	a2,a1
		bsr	CompareStr
		tst.l	d0
		bne.s	fs_next
fs_found:
		move.l	a3,d0
fs_exit:
		movem.l (sp)+,a2/a3
		rts


	xref	RawGetChar
	XDEF	Interp
	XDEF	_Interp

_Interp:
Interp:
in_next:
		bsr	RawGetChar
		move.b	d0,wb_ThisKey(a6)
		bsr.s	DoKey
		bra.s	in_next

	ENDC	;INCLUDE_WACK
	end
@
