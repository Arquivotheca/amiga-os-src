head     39.0;
branch   ;
access   ;
symbols  V40_9:39.0 V40_8:39.0 V40_7:39.0 V40_6:39.0 V40_5:39.0 V40_4:39.0 V40_3:39.0 V40_2:39.0 V40_1:39.0 V40_0:39.0 V39_56:39.0 V39_55:39.0 V39_54:39.0 V39_53:39.0 V39_52:39.0 V39_50:39.0 V39_48:39.0 V39_47:39.0 V39_46:39.0 V39_45:39.0 V39_44:39.0 V39_43:39.0 V39_42:39.0 V39_41:39.0 V39_40:39.0 V39_39:39.0 V39_38:39.0 V39_37:39.0 V39_36:39.0 V39_35:39.0 V39_34:39.0 V39_33:39.0 V39_30:39.0 V39_29:39.0 V39_28:39.0 V39_27:39.0 V39_26:39.0 V39_25:39.0 V39_24:39.0 V39_23:39.0 V39_22:39.0 V39_20:39.0 V39_19:39.0 V39_18:39.0 V39_17:39.0 V39_16:39.0 V39_15:39.0 V39_14:39.0 V39_12:39.0 V39_11:39.0 V39_10:39.0 V39_9:39.0 V39_8:39.0 V39_7:39.0 V39_6:39.0 V39_5:39.0 V39_4:39.0 V39_3:39.0 V39_2:39.0 V39_1:39.0;
locks    ; strict;
comment  @@;


39.0
date     91.10.15.08.27.10;  author mks;  state Exp;
branches ;
next     ;


desc
@V39 Exec initial checkin
@



39.0
log
@V39 Exec initial checkin
@
text
@##base _SysBase
##bias 30
##public
Supervisor(userFunc)(a5)
*------ special "alternate OS patchable functions" --------------------
##private
ExitIntr()
Schedule()
Reschedule()
Switch()
Dispatch()
Exception()
##public
InitCode(startClass,version)(D0/D1)
*------ module building tools -----------------------------------------
InitStruct(initTable,memory,size)(A1/A2,D0)
MakeLibrary(funcInit,structInit,libInit,dataSize,codeSize)(A0/A1/A2,D0/D1)
MakeFunctions(target,functionArray,funcDispBase)(A0/A1/A2)
FindResident(name)(A1)
InitResident(resident,segList)(A1,D1)
Alert(alertNum)(D7)
Debug(flags)(D0)
*------ interrupts ----------------------------------------------------
Disable()
Enable()
Forbid()
Permit()
SetSR(newSR,mask)(D0/D1)
SuperState()
UserState(sysStack)(D0)
SetIntVector(intNumber,interrupt)(D0/A1)
AddIntServer(intNumber,interrupt)(D0/A1)
RemIntServer(intNumber,interrupt)(D0/A1)
Cause(interrupt)(A1)
*------ memory allocation ---------------------------------------------
Allocate(freeList,byteSize)(A0,D0)
Deallocate(freeList,memoryBlock,byteSize)(A0/A1,D0)
AllocMem(byteSize,requirements)(D0/D1)
AllocAbs(byteSize,location)(D0/A1)
FreeMem(memoryBlock,byteSize)(A1,D0)
AvailMem(requirements)(D1)
AllocEntry(entry)(A0)
FreeEntry(entry)(A0)
*------ lists ---------------------------------------------------------
Insert(list,node,pred)(A0/A1/A2)
AddHead(list,node)(A0/A1)
AddTail(list,node)(A0/A1)
Remove(node)(A1)
RemHead(list)(A0)
RemTail(list)(A0)
Enqueue(list,node)(A0/A1)
FindName(list,name)(A0/A1)
*------ tasks ---------------------------------------------------------
AddTask(task,initPC,finalPC)(A1/A2/A3)
RemTask(task)(A1)
FindTask(name)(A1)
SetTaskPri(task,priority)(A1,D0)
SetSignal(newSignals,signalSet)(D0/D1)
SetExcept(newSignals,signalSet)(D0/D1)
Wait(signalSet)(D0)
Signal(task,signalSet)(A1,D0)
AllocSignal(signalNum)(D0)
FreeSignal(signalNum)(D0)
AllocTrap(trapNum)(D0)
FreeTrap(trapNum)(D0)
*------ messages ------------------------------------------------------
AddPort(port)(A1)
RemPort(port)(A1)
PutMsg(port,message)(A0/A1)
GetMsg(port)(A0)
ReplyMsg(message)(A1)
WaitPort(port)(A0)
FindPort(name)(A1)
*------ libraries -----------------------------------------------------
AddLibrary(library)(A1)
RemLibrary(library)(A1)
OldOpenLibrary(libName)(A1)
CloseLibrary(library)(A1)
SetFunction(library,funcOffset,funcEntry)(A1,A0,D0)
SumLibrary(library)(A1)
*------ devices -------------------------------------------------------
AddDevice(device)(A1)
RemDevice(device)(A1)
OpenDevice(devName,unit,ioRequest,flags)(A0,D0/A1,D1)
CloseDevice(ioRequest)(A1)
DoIO(ioRequest)(A1)
SendIO(ioRequest)(A1)
CheckIO(ioRequest)(A1)
WaitIO(ioRequest)(A1)
AbortIO(ioRequest)(A1)
*------ resources -----------------------------------------------------
AddResource(resource)(A1)
RemResource(resource)(A1)
OpenResource(resName)(A1)
*------ new V31 (1.1) functions ---------------------------------------
##private
RawIOInit()
RawMayGetChar()
RawPutChar(char)(d0)
##public
RawDoFmt(FormatString,DataStream,PutChProc,PutChData)(A0/A1/A2/A3)
GetCC()
TypeOfMem(address)(A1)
Procure(semaport,bidMsg)(A0/A1)
Vacate(semaport)(A0)
OpenLibrary(libName,version)(A1,D0)
*------ V33 (1.2) new signal semaphore support ------------------------
InitSemaphore(sigSem)(A0)
ObtainSemaphore(sigSem)(A0)
ReleaseSemaphore(sigSem)(A0)
AttemptSemaphore(sigSem)(A0)
ObtainSemaphoreList(sigSem)(A0)
ReleaseSemaphoreList(sigSem)(A0)
FindSemaphore(sigSem)(A1)
AddSemaphore(sigSem)(A1)
RemSemaphore(sigSem)(A1)
*------ V33 (1.2) ROM "kickstart" support -----------------------------
SumKickData()
*------ memory tools --------------------------------------------------
AddMemList(size,attributes,pri,base,name)(D0/D1/D2/A0/A1)
CopyMem(source,dest,size)(A0/A1,D0)
CopyMemQuick(source,dest,size)(A0/A1,D0)
*------ start of V36 extensions ---------------------------------------
CacheClearU(flags)(D0)
CacheClearE(flags)(D0)
CacheControl(cacheBits,cacheMask)(D0/D1)
CreateIORequest(port,size)(A0,D0)
DeleteIORequest(iorequest)(A0)
CreateMsgPort()()
DeleteMsgPort(port)(A0)
ObtainSemaphoreShared(sigSem)(A0)
*------ more memory tools (note strange register on FreeVec()/FreePooled() ---
AllocVec(byteSize,requirements)(d0/d1)
FreeVec(memoryBlock)(a1)
CreatePrivatePool(memFlags,puddleSize,puddleThresh)(d0/d1/d2)
DeletePrivatePool(poolHeader)(a0)
AllocPooled(memSize,poolHeader)(d0/a0)
FreePooled(memory,poolHeader)(a1,a0)
*------ 
SetFunction8(funcOffset,newEntry,array,library)(D0/D1/A0/A1)
ColdReboot()()
StackSwap(newSize,newSP,newStack)(D0/D1/A0)
*------ Task tree support -----------------
ChildFree(tid)(d0)
ChildOrphan(tid)(d0)
ChildStatus(tid)(d0)
ChildWait(tid)(d0)
*------ future --------------------------------------------------------
##private
ExecReserved00(nothing)(D0)
ExecReserved01(nothing)(D0)
ExecReserved02(nothing)(D0)
ExecReserved03(nothing)(D0)
##end
@
