head     39.0;
branch   ;
access   ;
symbols  V40_9:39.0 V40_8:39.0 V40_7:39.0 V40_6:39.0 V40_5:39.0 V40_4:39.0 V40_3:39.0 V40_2:39.0 V40_1:39.0 V40_0:39.0 V39_56:39.0 V39_55:39.0 V39_54:39.0 V39_53:39.0 V39_52:39.0 V39_50:39.0 V39_48:39.0 V39_47:39.0 V39_46:39.0 V39_45:39.0 V39_44:39.0 V39_43:39.0 V39_42:39.0 V39_41:39.0 V39_40:39.0 V39_39:39.0 V39_38:39.0 V39_37:39.0 V39_36:39.0 V39_35:39.0 V39_34:39.0 V39_33:39.0 V39_30:39.0 V39_29:39.0 V39_28:39.0 V39_27:39.0 V39_26:39.0 V39_25:39.0 V39_24:39.0 V39_23:39.0 V39_22:39.0 V39_20:39.0 V39_19:39.0 V39_18:39.0 V39_17:39.0 V39_16:39.0 V39_15:39.0 V39_14:39.0 V39_12:39.0 V39_11:39.0 V39_10:39.0 V39_9:39.0 V39_8:39.0 V39_7:39.0 V39_6:39.0 V39_5:39.0 V39_4:39.0 V39_3:39.0 V39_2:39.0 V39_1:39.0;
locks    jerryh:39.0; strict;
comment  @ * @;


39.0
date     91.10.15.08.27.58;  author mks;  state Exp;
branches ;
next     ;


desc
@V39 Exec initial checkin
@



39.0
log
@V39 Exec initial checkin
@
text
@#ifndef EXEC_LISTS_H
#define EXEC_LISTS_H
/*
**	$Id: lists.h,v 36.10 91/03/15 03:34:42 bryce Exp $
**
**	Definitions and macros for use with Exec lists
**
**	(C) Copyright 1985,1986,1987,1988,1989,1991 Commodore-Amiga, Inc.
**	    All Rights Reserved
*/

#ifndef EXEC_NODES_H
#include "exec/nodes.h"
#endif /* EXEC_NODES_H */

/*
 *  Full featured list header.
 */
struct List {
   struct  Node *lh_Head;
   struct  Node *lh_Tail;
   struct  Node *lh_TailPred;
   UBYTE   lh_Type;
   UBYTE   l_pad;
};	/* word aligned */

/*
 * Minimal List Header - no type checking
 */
struct MinList {
   struct  MinNode *mlh_Head;
   struct  MinNode *mlh_Tail;
   struct  MinNode *mlh_TailPred;
};	/* longword aligned */


/*
 *	Check for the presence of any nodes on the given list.  These
 *	macros are even safe to use on lists that are modified by other
 *	tasks.  However; if something is simultaneously changing the
 *	list, the result of the test is unpredictable.
 *
 *	Unless you first arbitrated for ownership of the list, you can't
 *	_depend_ on the contents of the list.  Nodes might have been added
 *	or removed during or after the macro executes.
 *
 *		if( IsListEmpty(list) )		printf("List is empty\n");
 */
#define IsListEmpty(x) \
	( ((x)->lh_TailPred) == (struct Node *)(x) )

#define IsMsgPortEmpty(x) \
	( ((x)->mp_MsgList.lh_TailPred) == (struct Node *)(&(x)->mp_MsgList) )


#endif	/* EXEC_LISTS_H */
@
