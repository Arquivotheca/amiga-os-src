			Sprite Scan-Doubling Options
			----------------------------

Option5:  Scan Double Sprites 2-7 Always in 31KHz, 0 unless it's not a 
______________________________________________________________________
	  pointer and allow attached sprite pointers
	  __________________________________________

  Hardware: 	Separate enables for sprites 0,1, and 2-7 (3 enable bits).
		Automatic parity for sprite 0, the rest even parity.

  Advantages:	Allows both tall pointer and scan-doubled pointer, w/o
		affecting other sprites.
		Allows attached pointers to work properly.
		Allows 400 line positioning of sprite pointer.

  Disadvantages:Does not allow independant doubling of individual sprites.

  Difficulty:	Requires blowing out side of Sprite DMA section to 
		accommodate sprite parity compares and additional enables.
		Requires creation of ATT bit of SPR0CTL and 2 FMODE bits.

  S/W Ranking:	1 (pick of the litter)

  Note:		Relayout of sprite DMA section may facilitate individual
		control of sprite vertical position parity.

  Bitmap mods:	FMODE: 	bit 6 - SSD0EN - enables sprite 0.
		       	bit 7 - SSDxEN - enables sprite 2-7.

		SPR1CTL:bit 7 - ATT    - now controls enable (and parity?)
					 for sprite 1.

OptionX:  Scan-Double All Sprites when in 31KHz.
________________________________________________

  Hardware:	Individual sprite enable implemented thru redefinition
		of MSB of horizontal field of SPRxPOS.
		Automatic parity generation for individual sprites.
		Requires implementation of mode enable bit.

  Advantages:	Maximum flexibility to the O/S. 

  Disadvantages:Additional S/W overhead????

  Difficulty:	Need to disable existing SPRxPOS horizontal MSB's when
		mode bit is set(LISA impact).
		Need to create global enable bit and possibly duplicate
		 existing SPRxPOS vertical LSB's(8x).
		Need to relayout area between sprite dma cells and position
		counter and create new scan doubling control cells (8x) in
		the gap created between them.		

  S/W Ranking:	2

  Bitmap mods:	FMODE: 	bit 6 - SSDGEN - global enable for sprite scan
					 doubling.

		SPRxPOS:bit 7 - SH10   - now enable scan-doubling for
					 individuaL sprites.

Option1:  Scan-Double All Sprites when in 31KHz.
________________________________________________

  Hardware: 	Single Enable Bit for all sprites, and unique parity
		bit for Sprite pointer (0). Other sprites could have
		even parity, eliminating the need for additional parity
		bits.

  Advantages:	Allows 400 line positioning of sprite pointer. Uncouples 
		pointer parity from other sprites.

  Disadvantages:Precludes tall sprite pointer in "native" 31KHz viewports.

  Difficulty:

  S/W Ranking:	3

Option0:  Scan-Double All Sprites when in 31KHz(current implementation).
________________________________________________________________________

  Hardware:	Single enable and parity bits for ALL sprites.

  Advantages:	minimal implementation difficulty.

  Disadvantages:Sprite pointer cannot point to all 400 lines.

  Difficulty:

  S/W Ranking:	4

			Bitplane Scan-Doubling
			----------------------

  Hardware:	Redefine playfield moduli to work on alternate display lines.
		Use DIWSTRT(V0) to determine which moduli is selected (parity)

  Advantages:	minimal implementation difficulty.

  Disadvantages:dual playfield screens can not be scan-doubled.

  Advantages:

------------------------------------------------------------------------------

				Comments
 				--------

		After further discussions with Chris Green and Spence, it became
	obvious that they didn't understand fully the relative merits of
	sprite option "X" above. After explaining things more fully with them
	they stated that they could live with either "5" or "x" but that "x"
	was now preferred due to its greater flexibility.

		Upon careful examination of the layout, it became apparent that 
	both of the above options require blowing out the side of the sprite
	state machine. This means that implementation difficulty and risk are
	comparable for both options. Therefore I have concentrated my efforts
	to date on option "x" in the expectations that it will be the solution
	of choice. I will retain "5" as a backup option in the event that 
	unforeseen difficulties arise in implementing the alternative.

