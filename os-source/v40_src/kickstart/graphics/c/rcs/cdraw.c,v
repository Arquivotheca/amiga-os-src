head     39.1;
branch   ;
access   ;
symbols  rel39_24:39.1 rel39_18:39.1 rel39_97:39.1 rel39_90:39.1 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_52:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_27:37.0 V37_25:37.0 V37_24:37.0 V37_23:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.3 V36_208:36.3 V36_207:36.3 V36_205:36.3 V36_203:36.3 V36_202:36.3 V36_201:36.3 V36_200:36.3 V36_199:36.3 V36_198:36.3 V36_196:36.3 V36_195:36.3 V36_194:36.3 V36_193:36.3 V36_192:36.3 V36_191:36.3 V36_190:36.3 V36_189:36.3 V36_188:36.3 V36_186:36.3 V36_185:36.3 V36_184:36.3 V36_182:36.3 V36_181:36.3;
locks    ; strict;
comment  @ * @;


39.1
date     92.10.06.13.50.26;  author chrisg;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.14.58;  author chrisg;  state Exp;
branches ;
next     37.2;

37.2
date     91.05.20.11.06.31;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.05.02.12.49.47;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.18.20;  author spence;  state Exp;
branches ;
next     36.3;

36.3
date     90.07.27.16.55.06;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     90.03.28.09.10.47;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     88.03.10.16.11.06;  author dale;  state Exp;
branches ;
next     ;


desc
@@


39.1
log
@void.
@
text
@/******************************************************************************
*
*	$Id: cdraw.c,v 39.0 91/08/21 17:14:58 chrisg Exp Locker: chrisg $
*
******************************************************************************/

#include <exec/types.h>
#include <exec/nodes.h>
#include <exec/lists.h>
#include <exec/ports.h>
#include <graphics/gfx.h>
#include <graphics/clip.h>
#include <graphics/rastport.h>
#include <hardware/blit.h>
#include "/macros.h"
#include "c.protos"

/*#define DEBUG*/
#include "cdrawinfo.h"

#define DOWNCODE

void cdraw(rp,cp,to,cdi)
struct RastPort *rp;
Point to;
Point cp;
struct cdraw_info   *cdi;
{
    struct Layer *cw;
    struct ClipRect *cr;
	struct BitMap *bm;

    /* check for trivial accept/reject */
#ifdef DEBUG
    printf("CDRAW(%d,%d,%lx,rp=%lx)",to,cdi,rp);
#ifdef DEBUGDEBUG
	Debug();*/
#endif
#endif
    cw = rp->Layer;
	cr = cw->SuperClipRect;
	bm = rp->BitMap;
	rp->BitMap = cw->SuperBitMap;
	while (cr)
	{
#ifdef DEBUG
	    printf("call cr_draw cr=%lx with super bitmap\n",cr);
#ifdef DEBUGDEBUG
		Debug();
#endif
#endif
	    if (cr_cdraw(rp,cr,cdi,cp,to)) break;
	    else cr = cr->Next;
	}
	rp->BitMap = bm;
    /*rp->Layer = cw;*/
#ifdef DEBUG
	printf("exit cdraw\n");
#endif
}

#ifndef DOWNCODE
c_cr_cdraw(rp,cr,cdi,old,t)
struct RastPort *rp;
struct ClipRect *cr;
Point old,t;
struct cdraw_info *cdi;
{
#ifdef DEBUG
	printf("checking cr = %lx\n",cr);
#ifdef DEBUGDEBUG
	Debug();
#endif
#endif
	cdi->code1 = getcode(cr,old.x,old.y);
	cdi->code2 = getcode(cr,t.x,t.y);
	if ((cdi->code1 | cdi->code2) == 0) /* trivial accept */
	{
	    /* trivial accept this vector for this cliprect */
	    /* under standard assumptions, this vector will not appear */
	    /* in any other ClipRect, we can return immediately */
#ifdef DEBUG
	    printf("accept and draw (%d,%d)->(%d,%d)\n",old,t);
#ifdef DEBUGDEBUG
		Debug();
#endif
#endif
	    /* can assume that no other draw has occured for this vector */
	    if ( cr->lobs == 0)
	    {   /* directly on screen */
		rp->cp_x = old.x;
		rp->cp_y = old.y;
#ifdef DEBUG
	printf("call baredraw(%lx,%d,%d)\n",rp,t);
#endif
		baredraw(rp,t.x,t.y);
	    }
	    else
	    {
		if (cr->BitMap)
		{
		    int mx;
		    struct BitMap *bm;
		    /* swap in new plane descriptor */
		    bm = rp->BitMap;    /* saveoriginal */
		    rp->BitMap = cr->BitMap;
		    mx = cr->bounds.MinX & (~15);
		    rp->cp_x = old.x-mx;
		    rp->cp_y = old.y-cr->bounds.MinY;
		    baredraw(rp,t.x-mx,t.y-cr->bounds.MinY);
		    rp->BitMap = bm;
		}
	    }
#ifdef DEBUG
	printf("returnTRUE\n");
#endif
	    return(TRUE);
	}
	else
	if ( (cdi->code1 & cdi->code2) == 0)
	{
	    if ( (cr->lobs == 0) || (cr->BitMap != 0) )
		{
#ifdef DEBUG
	printf("call clipdraw(%d,%d,%d,%d)\n",old,t);
#endif
		clipdraw(rp,cr,cdi,old.x,old.y,t.x,t.y);
		}
	}
#ifdef DEBUG
	printf("returnFALSE\n");
#endif
	return(FALSE);
}

#endif
@


39.0
log
@Bumped
@
text
@d3 1
a3 1
*	$Id: cdraw.c,v 37.2 91/05/20 11:06:31 chrisg Exp Locker: chrisg $
d23 1
a23 1
cdraw(rp,cp,to,cdi)
@


37.2
log
@Added prototypes, improved warnings, and glue code. still needs work.
@
text
@d3 1
a3 1
*	$Id: cdraw.c,v 1.1 91/05/20 10:39:20 chrisg Exp $
@


37.1
log
@ changed "../" to "/" for native build
@
text
@d3 1
a3 1
*	$Id: cdraw.c,v 37.0 91/01/07 15:18:20 spence Exp Locker: chrisg $
d16 1
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: cdraw.c,v 36.3 90/07/27 16:55:06 bart Exp Locker: spence $
d15 1
a15 1
#include "../macros.h"
@


36.3
log
@id
@
text
@d3 1
a3 1
*	$Id: $
@


36.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/c/RCS/cdraw.c,v 36.1 88/03/10 16:11:06 dale Exp Locker: bart $
@


36.1
log
@V36 initial check in
@
text
@d3 1
a3 1
*	$Header: $
@
