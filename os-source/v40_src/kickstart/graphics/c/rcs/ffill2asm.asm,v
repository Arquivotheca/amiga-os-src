head     39.0;
branch   ;
access   ;
symbols  rel39_24:39.0 rel39_18:39.0 rel39_97:39.0 rel39_90:39.0 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_52:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_27:37.0 V37_25:37.0 V37_24:37.0 V37_23:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.3 V36_208:36.3 V36_207:36.3 V36_205:36.3 V36_203:36.3 V36_202:36.3 V36_201:36.3 V36_200:36.3 V36_199:36.3 V36_198:36.3 V36_196:36.3 V36_195:36.3 V36_194:36.3 V36_193:36.3 V36_192:36.3 V36_191:36.3 V36_190:36.3 V36_189:36.3 V36_188:36.3 V36_186:36.3 V36_185:36.3 V36_184:36.3 V36_182:36.3 V36_181:36.3;
locks    ; strict;
comment  @@;


39.0
date     91.08.21.17.18.13;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.27.38;  author spence;  state Exp;
branches ;
next     36.3;

36.3
date     90.07.27.16.57.15;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     90.03.28.09.09.16;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     88.03.10.16.12.31;  author dale;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@Bumped
@
text
@*******************************************************************************
*
*	$Id: ffill2asm.asm,v 37.0 91/01/07 15:27:38 spence Exp Locker: chrisg $
*
*******************************************************************************


	include 'exec/types.i'
	include 'graphics/gfx.i'

	ifne	bm_BytesPerRow
		fail
	endc

	xdef	_address
_address:
	move.l	4(sp),a0	* get bm pointer
	move.w	14(sp),d0	* get y
	muls	(a0),d0		* BytesPerRow * y
	move.l	bm_Planes(a0),a0
	add.l	d0,a0
	move.w	10(sp),d0	* get x
	asr.w	#3,d0
	and.w	#$FFFE,d0
	adda.w	d0,a0		* sign extended d0 first
	move.l	a0,d0
	rts

*	xdef	address
**	input = a0 = bm pointer
**	        d2 = x
**           d3 = y
**   output = a0
**   uses d0,d1
*address:
*	move.w	d3,d0		* d0 <- y
*	muls	(a0),d0		* y*BytesPerRow
*	move.l	bm_Planes(a0),a0
*	add.l	d0,a0
*	move.w	d2,d0		* d0 <- x
*	asr.w	#3,d0
*	and.w	#$FFFE,d0
*	adda.w	d0,a0		* d0 is sign extended first
*	rts

*bit_table:
*	dc.w $8000
*	dc.w $4000
*	dc.w $2000
*	dc.w $1000
*	dc.w $800
*	dc.w $400
*	dc.w $200
*	dc.w $100
*	dc.w $80
*	dc.w $40
*	dc.w $20
*	dc.w $10
*	dc.w $8
*	dc.w $4
*	dc.w $2
*	dc.w $1
*
*	xdef	_EXTREME
*_EXTREME:
*	movem.l	a2/a3/a4/d2/d3,-(sp)
*	move.l	20+4(sp),a2	* get fi
*	movem.l	20+8(sp),d2/d3		* get x,y
*	movem.l	20+16(sp),a2/a3		* get &right,&left
*	move.l	ffi_bm(a2),a0
*	bsr		address		* returns p in a0
*	move.w	d2,d0
*	and.w	#15,d0		* extract bit number
*	add.w	d0,d0
*	move.w	bit_table(d0.w),d1	* mask
*	
*	movem.l	(sp)+,a2/a3/a4/d2/d3
*	rts

	end
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: ffill2asm.asm,v 36.3 90/07/27 16:57:15 bart Exp Locker: spence $
@


36.3
log
@id
@
text
@d3 1
a3 1
*	$Id: $
@


36.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/c/RCS/ffill2asm.asm,v 36.1 88/03/10 16:12:31 dale Exp Locker: bart $
@


36.1
log
@
@
text
@d3 1
a3 1
*	$Header: $
@
