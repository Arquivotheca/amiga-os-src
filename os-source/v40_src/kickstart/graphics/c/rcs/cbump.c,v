head     39.1;
branch   ;
access   ;
symbols  rel39_24:39.1 rel39_18:39.1 rel39_97:39.1 rel39_90:39.1 rel39_89:39.1 rel39_82:39.1 rel39_76:39.1 rel39_71:39.1 rel39_65:39.1 rel39_64:39.1 rel39_61:39.1 rel39_60:39.1 rel39_55:39.0 rel39_52:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_27:37.0 V37_25:37.0 V37_24:37.0 V37_23:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.4 V36_208:36.4 V36_207:36.4 V36_205:36.4 V36_203:36.4 V36_202:36.4 V36_201:36.4 V36_200:36.3 V36_199:36.3 V36_198:36.3 V36_196:36.3 V36_195:36.3 V36_194:36.3 V36_193:36.3 V36_192:36.3 V36_191:36.3 V36_190:36.3 V36_189:36.3 V36_188:36.3 V36_186:36.3 V36_185:36.3 V36_184:36.3 V36_182:36.3 V36_181:36.3;
locks    ; strict;
comment  @ * @;


39.1
date     92.05.05.11.56.41;  author chrisg;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.14.52;  author chrisg;  state Exp;
branches ;
next     37.3;

37.3
date     91.05.20.11.06.18;  author chrisg;  state Exp;
branches ;
next     37.2;

37.2
date     91.05.03.10.53.30;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.05.02.12.49.12;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.18.18;  author spence;  state Exp;
branches ;
next     36.4;

36.4
date     90.12.06.13.49.15;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     90.07.27.16.55.03;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     90.03.28.09.09.51;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     88.03.10.16.11.04;  author dale;  state Exp;
branches ;
next     ;


desc
@@


39.1
log
@regargs.
@
text
@/******************************************************************************
*
*	$Id: cbump.c,v 39.0 91/08/21 17:14:52 chrisg Exp Locker: chrisg $
*
******************************************************************************/

#include <exec/types.h>
#include <graphics/gfx.h>
#include <exec/nodes.h>
#include <exec/lists.h>
#include <exec/memory.h>
#include "tune.h"
#include <graphics/copper.h>
#include "/macros.h"
#include "c.protos"

/*#define DEBUG*/

struct CopIns * __regargs cbump(acl,c)
struct CopList **acl;
register struct CopIns *c;
{
    register struct CopList *cl = *acl;
    struct CopIns *ctemp;
#ifdef DEBUG
    printf("cbump(%lx,%lx)",acl,c);
#endif
    if (++cl->Count >= cl->MaxCount)
    {
#ifdef DEBUG
	printf(": look for another list\n");
#endif

	if (cl->Next == 0)  /* another buffer allocated? */
	{   /* nope */
	    if((cl->Next = (struct CopList *)AllocMem(sizeof( struct CopList),MEMF_PUBLIC)) == 0)
	    {
#ifdef MEMDEBUG
		printf("cbump: no copdsp mem\n");
#endif
		--cl->Count;
		return(c);
	    }
	    if ((ctemp = (struct CopIns *)AllocMem(sizeof(struct CopIns) * COPINSINC,MEMF_PUBLIC)) == 0)
	    {
		FreeMem( cl->Next, sizeof( struct CopList) );
		cl->Next = NULL;
#ifdef MEMDEBUG
		printf("cbump: no copins mem dsp\n");
#endif
		--cl->Count;
		return(c);
	    }
	    cl->Next->CopIns = ctemp;
	    cl->Next->MaxCount = COPINSINC;
	    cl->Next->Next = 0;
	}
	cl = cl->Next;
	ctemp = cl->CopIns;
	*acl = cl;
	c--;
	ctemp->OpCode = c->OpCode;
	ctemp->NXTLIST = c->NXTLIST;
	c->OpCode = CPRNXTBUF;
	c->NXTLIST = cl;
	cl->Count = 1;
	return(++ctemp);
    }
    return(c);
}
@


39.0
log
@Bumped
@
text
@d3 1
a3 1
*	$Id: cbump.c,v 37.3 91/05/20 11:06:18 chrisg Exp Locker: chrisg $
d19 1
a19 1
struct CopIns *cbump(acl,c)
@


37.3
log
@Added prototypes, improved warnings, and glue code. still needs work.
@
text
@d3 1
a3 1
*	$Id: cbump.c,v 1.1 91/05/20 10:39:15 chrisg Exp $
@


37.2
log
@ removed useless variable flag
@
text
@d3 1
a3 1
*	$Id: cbump.c,v 37.1 91/05/02 12:49:12 chrisg Exp Locker: chrisg $
d15 1
@


37.1
log
@ changed "../" to "/" for native build
@
text
@d3 1
a3 1
*	$Id: cbump.c,v 37.0 91/01/07 15:18:18 spence Exp Locker: chrisg $
a23 1
    UBYTE flag = FALSE;
a42 1
	    flag = TRUE;
d45 2
a46 5
		if( flag )
		{
			FreeMem( cl->Next, sizeof( struct CopList) );
			cl->Next = NULL;
		}
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: cbump.c,v 36.4 90/12/06 13:49:15 bart Exp Locker: spence $
d14 1
a14 1
#include "../macros.h"
@


36.4
log
@removed gfxallocmem.c and implemented better lo-mem error recovery -- bart
@
text
@d3 1
a3 1
*	$Id: cbump.c,v 36.3 90/07/27 16:55:03 bart Exp Locker: bart $
@


36.3
log
@id
@
text
@d3 1
a3 1
*	$Id: $
d24 1
d36 2
a37 2
	    if((cl->Next = (struct CopList *)GfxAllocMem(sizeof( struct CopList),MEMF_PUBLIC)) == 0)
		{
d39 1
a39 1
			printf("cbump: no copdsp mem\n");
d41 10
a50 1
			return(FALSE);
a51 2
	    if ((ctemp = (struct CopIns *)GfxAllocMem(sizeof(struct CopIns) * COPINSINC,MEMF_PUBLIC)) == 0)
		{
d53 1
a53 1
			printf("cbump: no copins mem dsp\n");
d55 3
a57 2
			return(FALSE);
		}
@


36.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/c/RCS/cbump.c,v 36.1 88/03/10 16:11:04 dale Exp Locker: bart $
@


36.1
log
@V36 initial check in
@
text
@d3 1
a3 1
*	$Header: $
@
