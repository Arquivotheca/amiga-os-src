head     39.0;
branch   ;
access   ;
symbols  rel39_24:39.0 rel39_18:39.0 rel39_97:39.0 rel39_90:39.0 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_52:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.1 V37_29:37.1 V37_28:37.1 V37_27:37.1 V37_25:37.1 V37_24:37.1 V37_23:37.1 V37_22:37.1 V37_21:37.1 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.4 V36_208:36.4 V36_207:36.4 V36_205:36.4 V36_203:36.4 V36_202:36.4 V36_201:36.4 V36_200:36.4 V36_199:36.4 V36_198:36.4 V36_196:36.4 V36_195:36.4 V36_194:36.4 V36_193:36.4 V36_192:36.4 V36_191:36.4 V36_190:36.4 V36_189:36.4 V36_188:36.4 V36_186:36.4 V36_185:36.4 V36_184:36.4 V36_182:36.4 V36_181:36.4;
locks    ; strict;
comment  @ * @;


39.0
date     91.08.21.17.15.22;  author chrisg;  state Exp;
branches ;
next     37.2;

37.2
date     91.05.20.11.07.04;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.03.15.13.01.48;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.18.28;  author spence;  state Exp;
branches ;
next     36.4;

36.4
date     90.07.27.16.55.22;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     90.03.28.09.11.18;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     90.03.13.12.56.22;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     88.03.10.16.11.13;  author dale;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@Bumped
@
text
@/******************************************************************************
*
*	$Id: clipline.c,v 37.2 91/05/20 11:07:04 chrisg Exp Locker: chrisg $
*
******************************************************************************/

#include <exec/types.h>
#include <graphics/gfx.h>
#include <exec/nodes.h>
#include <exec/lists.h>
#include <exec/ports.h>
#include <graphics/clip.h>

/*#define DEBUG*/
#include "cdrawinfo.h"
#include "c.protos"

int __regargs lineclip(struct ClipRect *cr,struct cdraw_info *cdi,
				int *px1,int *py1,int *px2,int *py2)
{
    char code1,code2,code;
    int x1,y1,x2,y2;
    int x,y;
    int x0,y0;

    x1 = *px1;
    x2 = *px2;
    y1 = *py1;
    y2 = *py2;
    code1 = cdi->code1;
    code2 = cdi->code2;
    x0 = x1;
    y0 = y1;

    while ( code1 | code2)
    {
	if (code1 & code2)  return(TRUE);   /* clipped out */
	code = code1;
	if (code == 0)  code = code2;

	if (code & ISLESSX)
	{
#ifdef DEBUG
		if (cdi->dx == 0)
		{
			printf("abort divide 1\n");
			Debug();
		}
#endif
	    y = y0 + IDivS_round(IMulS(cdi->dy,(cr->bounds.MinX-x0)),cdi->dx);

	    x = cr->bounds.MinX;
	}
	else
	if (code & ISGRTRX)
	{
#ifdef DEBUG
		if (cdi->dx == 0)
		{
			printf("abort divide 1\n");
			Debug();
		}
#endif
	    y = y0 + IDivS_round(IMulS(cdi->dy,(cr->bounds.MaxX-x0)),cdi->dx);
	    x = cr->bounds.MaxX;
	}
	else
	if (code & ISLESSY)
	{
#ifdef DEBUG
		if (cdi->dy == 0)
		{
			printf("abort divide 1\n");
			Debug();
		}
#endif
	    x = x0 + IDivS_round(IMulS(cdi->dx,(cr->bounds.MinY-y0)),cdi->dy);
	    y = cr->bounds.MinY;
	}
	else
	if (code & ISGRTRY)
	{
#ifdef DEBUG
		if (cdi->dy == 0)
		{
			printf("abort divide 1\n");
			Debug();
		}
#endif
	    x = x0 + IDivS_round(IMulS(cdi->dx,(cr->bounds.MaxY-y0)),cdi->dy);
	    y = cr->bounds.MaxY;
	}
	if ( code == code1)
	{
	    *px1 = x1 = x;
	    *py1 = y1 = y;
	    code1 = getcode(cr,x,y);
	}
	else
	{
	    *px2 = x2 = x;
	    *py2 = y2 = y;
	    code2 = getcode(cr,x,y);
	}
    }
	return(FALSE); /* remember to indicate not clipped out */
}
	
@


37.2
log
@Added prototypes, improved warnings, and glue code. still needs work.
@
text
@d3 1
a3 1
*	$Id: clipline.c,v 1.1 91/05/20 10:39:32 chrisg Exp $
@


37.1
log
@  Removed test code.
@
text
@d3 1
a3 1
*	$Id: clipline.c,v 37.0 91/01/07 15:18:28 spence Exp Locker: chrisg $
d16 1
d18 2
a19 4
lineclip(cr,cdi,px1,py1,px2,py2)
struct cdraw_info *cdi;
struct ClipRect *cr;
int *px1,*py1,*px2,*py2;
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: clipline.c,v 36.4 90/07/27 16:55:22 bart Exp Locker: spence $
a25 1

@


36.4
log
@id
@
text
@d3 1
a3 1
*	$Id: $
@


36.3
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/c/RCS/clipline.c,v 36.2 90/03/13 12:56:22 bart Exp Locker: bart $
@


36.2
log
@return FALSE rather than garbage
@
text
@d3 1
a3 1
*	$Header: clipline.c,v 36.1 88/03/10 16:11:13 dale Exp $
@


36.1
log
@V36 initial check in
@
text
@d3 1
a3 1
*	$Header: $
d108 1
@
