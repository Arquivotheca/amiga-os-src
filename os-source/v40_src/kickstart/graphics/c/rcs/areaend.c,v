head     39.1;
branch   ;
access   ;
symbols  rel39_24:39.1 rel39_18:39.1 rel39_97:39.1 rel39_90:39.1 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_52:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_27:37.0 V37_25:37.0 V37_24:37.0 V37_23:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.5 V36_208:36.5 V36_207:36.5 V36_205:36.5 V36_203:36.5 V36_202:36.5 V36_201:36.5 V36_200:36.5 V36_199:36.5 V36_198:36.5 V36_196:36.5 V36_195:36.5 V36_194:36.5 V36_193:36.5 V36_192:36.5 V36_191:36.5 V36_190:36.5 V36_189:36.5 V36_188:36.5 V36_186:36.5 V36_185:36.5 V36_184:36.5 V36_182:36.5 V36_181:36.5;
locks    ; strict;
comment  @ * @;


39.1
date     92.10.07.14.11.39;  author chrisg;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.13.42;  author chrisg;  state Exp;
branches ;
next     37.2;

37.2
date     91.05.20.11.04.33;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.05.02.12.41.11;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.17.56;  author spence;  state Exp;
branches ;
next     36.5;

36.5
date     90.07.27.16.54.26;  author bart;  state Exp;
branches ;
next     36.4;

36.4
date     90.03.28.09.11.31;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     89.05.05.16.35.26;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     88.10.04.15.59.00;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     88.03.10.16.10.25;  author dale;  state Exp;
branches ;
next     ;


desc
@V36 initial check in
@


39.1
log
@compiler warnings
@
text
@/******************************************************************************
*
*	Source Control
*	--------------
*	$Id: areaend.c,v 39.0 91/08/21 17:13:42 chrisg Exp Locker: chrisg $
*
******************************************************************************/

#include <exec/types.h>
#include <graphics/gfx.h>
#include <graphics/rastport.h>
#include "areafill.h"
#include "/macros.h"
#include "c.protos"

void draw_fill_outline(w,minx,miny)
struct RastPort *w;
short minx,miny;
{
    short *save_patptr;
    register short *p;
    register char *flgsptr;
	struct AreaInfo *ai=w->AreaInfo;
	UBYTE	save_minterms[8];
	USHORT save_lptrn;
	UBYTE save_FgPen;
	UBYTE save_DrawMode;
	short	x0,y0;
	int i;

	save_lptrn = w->LinePtrn;
	save_FgPen = w->FgPen;
	save_DrawMode = w->DrawMode;
	for (i=0;i<8;i++) save_minterms[i] = w->minterms[i];

	w->DrawMode = 0;
	w->FgPen = w->AOlPen;
	genminterms(w);
	save_patptr = w->AreaPtrn;
	w->AreaPtrn = 0;
	w->LinePtrn = 0xffff;
	p = ai->VctrTbl;        flgsptr = ai->FlagTbl;
	for(i=ai->Count;i>0;NULL)
	{
	    /* bart - 04.29.86 */
	    /* notice the fancy footwork on the ++ and -- below */

	    if(*flgsptr & EXTENDED)
	    {
		BYTE saveflag;
		SHORT x1,y1;

		while( ((saveflag = *flgsptr++) & EXTENDED) &&
			((x0 = *p++) || TRUE) &&
			((y0 = *p++) || TRUE) &&
			(--i>0) )  
		{ 
		    BYTE ext_flag;

		    /* update pointers */

		    x1 = *p++;
		    y1 = *p++;
		    ext_flag = *flgsptr++;
		    --i; 

		    /* need to outline this ? */

		    if (saveflag & DRWBNDRY)
		    {
			SHORT cx,cy,a,b;
			    
			/* convert (x0,y0),(x1,y1) to proper arguments */

			cx = (x0+x1)>>1;
			cy = (y0+y1)>>1;
			a  = x1 - cx;
			b  = y1 - cy;

			switch(ext_flag)
			{
			    case(CIRCLE):
			    {
				draw_ellipse(w,minx+cx,miny+cy,a,b);
				break;
			    }
			    case(ELLIPSE):
			    {
				draw_ellipse(w,minx+cx,miny+cy,a,b);
				break;
			    }
			    default: ;
			}
		    }
		}
		if( !(saveflag & EXTENDED) ) --flgsptr;
	    }
	    else
	    {
		x0 = *p++; y0 = *p++;
		
		if (*flgsptr++ & DRWBNDRY)
		{
		    --i;
		    DRAW(w,minx+x0,miny+y0);
		}
		else
		{
		    --i;
		    MOVE(w,minx+x0,miny+y0);
		}
	    }
	}
	w->DrawMode = save_DrawMode;
	w->FgPen = save_FgPen;
	for (i=0;i<8;i++) w->minterms[i] = save_minterms[i];
	w->AreaPtrn = save_patptr;
	w->LinePtrn = save_lptrn;
}

@


39.0
log
@Bumped
@
text
@d5 1
a5 1
*	$Id: areaend.c,v 37.2 91/05/20 11:04:33 chrisg Exp Locker: chrisg $
d16 1
a16 1
draw_fill_outline(w,minx,miny)
@


37.2
log
@added protos, etc.
@
text
@d5 1
a5 1
*	$Id: areaend.c,v 1.1 91/05/20 10:38:41 chrisg Exp $
@


37.1
log
@ changed "../" to "/" for native build
@
text
@d5 1
a5 1
*	$Id: areaend.c,v 37.0 91/01/07 15:17:56 spence Exp Locker: chrisg $
d14 1
@


37.0
log
@initial switchover from V36
@
text
@d5 1
a5 1
*	$Id: areaend.c,v 36.5 90/07/27 16:54:26 bart Exp Locker: spence $
d13 1
a13 1
#include "../macros.h"
@


36.5
log
@id
@
text
@d5 1
a5 1
*	$Id: $
@


36.4
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/c/RCS/areaend.c,v 36.3 89/05/05 16:35:26 bart Exp Locker: bart $
@


36.3
log
@if( !(saveflag & EXTENDED) ) --flgsptr;
@
text
@d5 1
a5 1
*	$Header: areaend.c,v 36.2 88/10/04 15:59:00 bart Exp $
@


36.2
log
@areaoutline for ellipses and circles
@
text
@d5 1
a5 1
*	$Header: areaend.c,v 36.1 88/03/10 16:10:25 dale Exp $
d52 1
a52 1
		while( ((saveflag = *flgsptr++) & EXTENDED)&&
d95 1
@


36.1
log
@V36 initial check in
@
text
@d5 1
a5 1
*	$Header: $
d53 2
a54 2
			(TRUE || (x0 = *p++))&&
			(TRUE || (y0 = *p++))&&
d70 3
a72 1
		        /* yes, do extended operation */
d74 5
a80 9
			    SHORT cx,cy,a,b;
			
			    /* convert (x0,y0),(x1,y1) to proper arguments */

			    cx = (x0+x1)>>1;
			    cy = (y0+y1)>>1;
			    a  = x1 - cx;
			    b  = y1 - cy;

@
