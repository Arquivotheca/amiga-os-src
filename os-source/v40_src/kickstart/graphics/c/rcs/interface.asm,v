head     39.0;
branch   ;
access   ;
symbols  rel39_24:39.0 rel39_18:39.0 rel39_97:39.0 rel39_90:39.0 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_27:37.0 V37_25:37.0 V37_24:37.0 V37_23:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.12 V36_208:36.12 V36_207:36.12 V36_205:36.12 V36_203:36.12 V36_202:36.12 V36_201:36.12 V36_200:36.12 V36_199:36.12 V36_198:36.12 V36_196:36.12 V36_195:36.12 V36_194:36.12 V36_193:36.12 V36_192:36.12 V36_191:36.12 V36_190:36.12 V36_189:36.12 V36_188:36.12 V36_186:36.12 V36_185:36.12 V36_184:36.12 V36_182:36.12 V36_181:36.12;
locks    ; strict;
comment  @*   @;


39.0
date     91.08.21.17.19.22;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.27.40;  author spence;  state Exp;
branches ;
next     36.12;

36.12
date     90.07.27.16.58.00;  author bart;  state Exp;
branches ;
next     36.11;

36.11
date     90.03.28.09.09.30;  author bart;  state Exp;
branches ;
next     36.10;

36.10
date     88.10.21.19.27.14;  author bart;  state Exp;
branches ;
next     36.9;

36.9
date     88.10.20.13.06.19;  author bart;  state Exp;
branches ;
next     36.8;

36.8
date     88.10.20.11.48.28;  author bart;  state Exp;
branches ;
next     36.7;

36.7
date     88.09.13.17.01.55;  author bart;  state Exp;
branches ;
next     36.6;

36.6
date     88.09.13.11.20.21;  author bart;  state Exp;
branches ;
next     36.5;

36.5
date     88.09.13.11.13.46;  author bart;  state Exp;
branches ;
next     36.4;

36.4
date     88.09.13.11.12.38;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     88.09.13.10.29.57;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     88.09.13.10.23.46;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     88.08.07.16.50.39;  author bart;  state Exp;
branches ;
next     36.0;

36.0
date     88.08.07.16.42.56;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@Bumped
@
text
@
*******************************************************************************
*
*	$Id: interface.asm,v 37.0 91/01/07 15:27:40 spence Exp Locker: chrisg $
*
*******************************************************************************

	include "exec/types.i"
	include "graphics/gfxnodes.i"
	include "graphics/monitor.i"

	section graphics
	code

	xdef    _mspc_init

_mspc_init:

	movem.l a6,-(sp)        * save
	move.l  8(sp),a6        * libbase
	move.l  12(sp),a0       * mspc
	move.l  16(sp),d0       * flags
	pea.l	init_rts(pc)
	move.l	XLN_INIT(a0),-(sp)
	rts			* doit
init_rts:
	movem.l (sp)+,a6        * restore
	rts

	xdef    _mspc_transform

_mspc_transform:

	movem.l	a2/a6,-(sp)	* save
	move.l	12(sp),a6  	* libbase
	move.l	16(sp),a0 	* node
	move.l	20(sp),a1 	* src
	move.l	24(sp),d0 	* type
	move.l	28(sp),a2 	* dst
	pea.l	transform_rts(pc)
	move.l	ms_transform(a0),-(sp)
	rts			* doit
transform_rts:
	movem.l	(sp)+,a2/a6	* restore
	rts

	xdef	_mspc_translate

_mspc_translate:

	movem.l	a2/a6,-(sp)	* save
	move.l	12(sp),a6  	* libbase
	move.l	16(sp),a0 	* node
	move.l	20(sp),a1 	* src
	move.l	24(sp),d0 	* type
	move.l	28(sp),a2 	* dst
	pea.l	translate_rts(pc)
	move.l	ms_translate(a0),-(sp)
	rts			* doit
translate_rts:
	movem.l	(sp)+,a2/a6	* restore
	rts

	xdef	_mspc_scale

_mspc_scale:

	movem.l	a2/a6,-(sp)	* save
	move.l	12(sp),a6  	* libbase
	move.l	16(sp),a0 	* node
	move.l	20(sp),a1 	* src
	move.l	24(sp),d0 	* type
	move.l	28(sp),a2 	* dst
	pea.l	scale_rts(pc)
	move.l	ms_scale(a0),-(sp)
	rts			* doit
scale_rts:
	movem.l	(sp)+,a2/a6	* restore
	rts

	xdef	_mspc_oscan

_mspc_oscan:

	movem.l	a6,-(sp)	* save
	move.l	8(sp),a6  	* libbase
	move.l	12(sp),a0 	* node
	move.l	16(sp),a1 	* rect
	move.l	20(sp),d0 	* type
	pea.l	oscan_rts(pc)
	move.l	ms_maxoscan(a0),-(sp)
	rts			* doit
oscan_rts:
	movem.l	(sp)+,a6	* restore
	rts

	xdef _gfxnode_init
	xref _gfxinit

*	gfxinit(	gfxnode	),	GB
*			a0		a6

_gfxnode_init:

	move.l	a0,-(sp)
	jsr     _gfxinit
	addq.l	#4,sp
	rts

*	flags = init_monitorspec(	mspc,	type	),	GB
*	d0				a0	d0		a6

	xdef _monitor_init
	xref _init_monitorspec

*	flags = init_monitorspec(	mspc,	type	),	GB
*	d0				a0	d0		a6

_monitor_init:

	move.l	d0,-(sp)
	move.l	a0,-(sp)
	jsr     _init_monitorspec
	addq.l	#8,sp
	rts

	xdef _monitor_transform
	xref _transform_monitorspec

*	transform_monitorspec(	mspc,	src,	type,	dst	), 	GB
*				a0,	a1,	d0,	a2    		a6

_monitor_transform:

	move.l	a2,-(sp)
	move.l	d0,-(sp)
	move.l	a1,-(sp)
	move.l	a0,-(sp)
	jsr	_transform_monitorspec
	lea.l	16(sp),sp
	rts

	xdef _monitor_translate
	xref _translate_monitorspec

*	translate_monitorspec(	mspc,	src,	type,	dst	), 	GB
*				a0,	a1,	d0,	a2    		a6

_monitor_translate:

	move.l	a2,-(sp)
	move.l	d0,-(sp)
	move.l	a1,-(sp)
	move.l	a0,-(sp)
	jsr	_translate_monitorspec
	lea.l	16(sp),sp
	rts

	xdef _monitor_scale
	xref _scale_monitorspec

*	scale_monitorspec(	mspc,	src,	type,	dst	), 	GB
*				a0,	a1,	d0,	a2    		a6

_monitor_scale:

	move.l	a2,-(sp)
	move.l	d0,-(sp)
	move.l	a1,-(sp)
	move.l	a0,-(sp)
	jsr	_scale_monitorspec
	lea.l	16(sp),sp
	rts

	xdef _unity_scale

_unity_scale:

	move.l	(a1),(a2)	* copy src point to dest
	rts		  	* that's all folks! :-)

	xdef _monitor_bounds
	xref _maxoscan

*	maxoscan(	mspc,	rect,	mode	), 	GB
*			a0,	a1,	d0		a6

_monitor_bounds:

	move.l	d0,-(sp)
	move.l	a1,-(sp)
	move.l	a0,-(sp)
	jsr	_maxoscan
	lea.l	12(sp),sp
	rts

	xdef _video_bounds
	xref _videoscan

*	videoscan(	mspc,	rect,	mode	), 	GB
*			a0,	a1,	d0		a6

_video_bounds:

	move.l	d0,-(sp)
	move.l	a1,-(sp)
	move.l	a0,-(sp)
	jsr	_videoscan
	lea.l	12(sp),sp
	rts

	xdef    _stuf_base

_stuf_base:

	move.l	4(sp),a6
	rts

	end
@


37.0
log
@initial switchover from V36
@
text
@d4 1
a4 1
*	$Id: interface.asm,v 36.12 90/07/27 16:58:00 bart Exp Locker: spence $
@


36.12
log
@id
@
text
@d4 1
a4 1
*	$Id: $
@


36.11
log
@*** empty log message ***
@
text
@d4 1
a4 1
*	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/c/RCS/interface.asm,v 36.10 88/10/21 19:27:14 bart Exp Locker: bart $
@


36.10
log
@MonitorListSemaphore
@
text
@d4 1
a4 1
*	$Header: interface.asm,v 36.9 88/10/20 13:06:19 bart Exp $
@


36.9
log
@fix to unity_scale
@
text
@d4 1
a4 1
*	$Header: interface.asm,v 36.8 88/10/20 11:48:28 bart Exp $
d210 7
@


36.8
log
@_unity_scale: copy src point to dest
@
text
@d4 1
a4 1
*	$Header: interface.asm,v 36.7 88/09/13 17:01:55 bart Exp $
d179 2
a180 3
	move.l	a2,a0	* address of dest point
	move.l	a1,(a0) * copy src point to dest
	rts		* that's all folks! :-)
@


36.7
log
@videoscan() processing and denise backwards compatibility
@
text
@d4 1
a4 1
*	$Header: interface.asm,v 36.6 88/09/13 11:20:21 bart Exp $
d174 8
@


36.6
log
@back to maxoscan for jimm
@
text
@d4 1
a4 1
*	$Header: interface.asm,v 36.5 88/09/13 11:13:46 bart Exp $
d187 15
@


36.5
log
@*** empty log message ***
@
text
@d4 1
a4 1
*	$Header: interface.asm,v 36.4 88/09/13 11:12:38 bart Exp $
d81 1
a81 1
	xdef	_mspc_normoscan
d83 1
a83 1
_mspc_normoscan:
d90 2
a91 2
	pea.l	normoscan_rts(pc)
	move.l	ms_normaloscan(a0),-(sp)
d93 1
a93 1
normoscan_rts:
d176 1
a176 1
	xref _normal_oscan
d178 1
a178 1
*	normal_oscan(	mspc,	rect,	mode	), 	GB
d186 1
a186 1
	jsr	_normal_oscan
@


36.4
log
@*** empty log message ***
@
text
@d4 1
a4 1
*	$Header: interface.asm,v 36.3 88/09/13 10:29:57 bart Exp $
d178 1
a178 1
*	maxoscan(	mspc,	rect,	mode	), 	GB
@


36.3
log
@*** empty log message ***
@
text
@d4 1
a4 1
*	$Header: interface.asm,v 36.2 88/09/13 10:23:46 bart Exp $
d176 1
a176 1
	xref _maxoscan
@


36.2
log
@ms_normaloscan
@
text
@d4 1
a4 1
*	$Header: interface.asm,v 36.1 88/08/07 16:50:39 bart Exp $
d186 1
a186 1
	jsr	_maxoscan
@


36.1
log
@checkpoint - assembly interface to monitorspec routines
@
text
@d4 1
a4 1
*	$Header: interface.asm,v 36.0 88/08/07 16:42:56 bart Exp $
d81 1
a81 1
	xdef	_mspc_oscan
d83 1
a83 1
_mspc_oscan:
d90 2
a91 2
	pea.l	oscan_rts(pc)
	move.l	ms_maxoscan(a0),-(sp)
d93 1
a93 1
oscan_rts:
d96 1
@


36.0
log
@added to rcs for updating
@
text
@d4 1
a4 1
*	$Header: $
@
