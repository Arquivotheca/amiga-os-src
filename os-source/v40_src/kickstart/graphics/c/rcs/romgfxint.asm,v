head     39.3;
branch   ;
access   ;
symbols  rel39_24:39.3 rel39_18:39.2 rel39_97:39.2 rel39_90:39.2 rel39_89:39.2 rel39_82:39.2 rel39_76:39.2 rel39_71:39.2 rel39_65:39.2 rel39_64:39.2 rel39_61:39.2 rel39_60:39.2 rel39_55:39.2 rel39_52:39.1 rel39_47:39.1 rel39_39:39.1 rel39_38:39.1 rel39_37:39.1 rel39_35:39.1 rel39_34:39.1 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_27:37.0 V37_25:37.0 V37_24:37.0 V37_23:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.3 V36_208:36.3 V36_207:36.3 V36_205:36.3 V36_203:36.3 V36_202:36.3 V36_201:36.3 V36_200:36.3 V36_199:36.3 V36_198:36.3 V36_196:36.3 V36_195:36.3 V36_194:36.3 V36_193:36.3 V36_192:36.3 V36_191:36.3 V36_190:36.3 V36_189:36.3 V36_188:36.3 V36_186:36.3 V36_185:36.3 V36_184:36.3 V36_182:36.3 V36_181:36.3;
locks    ; strict;
comment  @@;


39.3
date     93.05.06.12.00.07;  author chrisg;  state Exp;
branches ;
next     39.2;

39.2
date     92.04.27.12.33.03;  author chrisg;  state Exp;
branches ;
next     39.1;

39.1
date     91.11.18.11.46.01;  author chrisg;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.21.35;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.05.20.12.56.29;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.27.57;  author spence;  state Exp;
branches ;
next     36.3;

36.3
date     90.07.27.16.59.36;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     90.03.28.09.09.04;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     88.03.10.16.12.40;  author dale;  state Exp;
branches ;
next     ;


desc
@@


39.3
log
@space.
@
text
@*******************************************************************************
*
*	$Id: romgfxint.asm,v 39.2 92/04/27 12:33:03 chrisg Exp Locker: chrisg $
*
*******************************************************************************

* c code calling other code through vector table
* changed to use pragmas! these pragmas will be automagically added to the protos file.


* GRAPHICS library calls
* graphics intermodule calls throught vector table

	section	graphics


    xdef    _ADDICRVECTOR
    xref    _LVOAddICRVector
_ADDICRVECTOR:
    move.l  a6,-(sp)
    move.l  8(sp),a6
    movem.l 12(sp),d0/a1
    jsr     _LVOAddICRVector(a6)
    move.l  (sp)+,a6
    rts
 
    xdef    _ABLEICR
    xref    _LVOAbleICR
_ABLEICR:
    move.l  a6,-(sp)
    move.l  8(sp),a6
    move.l  12(sp),d0
    jsr     _LVOAbleICR(a6)
    move.l  (sp)+,a6
    rts



	end
@


39.2
log
@ killed stubs.
@
text
@d3 1
a3 1
*	$Id: romgfxint.asm,v 39.1 91/11/18 11:46:01 chrisg Exp Locker: chrisg $
a37 5
	xdef	_shortinitrast
	xref	shortinitrast
_shortinitrast:
	move.l	4(sp),a1
	bra		shortinitrast
@


39.1
log
@ killed never used function.
@
text
@d3 1
a3 1
*	$Id: romgfxint.asm,v 37.1 91/05/20 12:56:29 chrisg Exp $
a14 2
    xref    _LVOSetFont
    xref    _LVOBltBitMap
a16 13
    xdef    _BLTBITMAP
_BLTBITMAP:
    movem.l D2/D3/D4/D5/D6/D7/A2,-(sp)
    move.l  32(sp),A0
    movem.l 36(sp),D0/D1
    move.l  44(sp),A1
    movem.l 48(sp),D2/D3/D4/D5/D6/D7/A2
    jsr _LVOBltBitMap(a6)
    movem.l (sp)+,D2/D3/D4/D5/D6/D7/A2
    rts


 
a35 11

	xdef	_BLTPATTERN
	xref	_LVOBltPattern
_BLTPATTERN:
	movem.l	d2/d3/d4,-(sp)
	move.l	16(sp),a1
	move.l	20(sp),a0
	movem.l	24(sp),d0/d1/d2/d3/d4
	jsr	_LVOBltPattern(a6)
	movem.l	(sp)+,d2/d3/d4
	rts
@


39.0
log
@Bumped
@
text
@d3 1
a3 1
*	$Id: romgfxint.asm,v 37.1 91/05/20 12:56:29 chrisg Exp Locker: chrisg $
d8 1
d10 1
a68 11

	xdef	_setrgb4cm
	xref	_SetRGB4CM

_setrgb4cm:
	move.l	4(sp),a0	* colormap pointer
	movem.l	d2/d3,-(sp)
	movem.l	8+8(sp),d0/d1/d2/d3 * index,r,g,b
	bsr	_SetRGB4CM
	movem.l	(sp)+,d2/d3
	rts
@


37.1
log
@removed some entries so they can be called via pragamas
@
text
@d3 1
a3 1
*	$Id: romgfxint.asm,v 37.0 91/01/07 15:27:57 spence Exp $
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: romgfxint.asm,v 36.3 90/07/27 16:59:36 bart Exp Locker: spence $
a12 2
    xref    _LVOQBlit
    xref    _LVOQBSBlit
a15 4
    xdef    _QBLIT
_QBLIT:
    move.l  4(sp),a1   * ptr to blit structure
    jmp     _LVOQBlit(a6)
a16 5
    xdef    _QBSBLIT
_QBSBLIT:
    move.l  4(sp),a1   * ptr to blit structure
    jmp     _LVOQBSBlit(a6)

a27 9
	xdef	_RECTFILL
	xref	_LVORectFill
_RECTFILL:
	movem.l	d2/d3,-(sp)
	move.l	12(sp),a1
	movem.l	16(sp),d0/d1/d2/d3
	jsr		_LVORectFill(a6)
	movem.l	(sp)+,d2/d3
	rts
a60 71
	xdef	_SETRAST
	xref	_LVOSetRast
_SETRAST:
	move.l	4(sp),a1	* rastport
	move.l	8(sp),d0	* color
	jmp	_LVOSetRast(a6)

	xdef	_INITBITMAP
	xref	_LVOInitBitMap
_INITBITMAP:
	move.l	d2,-(sp)
	movem.l	12(sp),d0-d2
	move.l	8(sp),a0
	jsr		_LVOInitBitMap(a6)
	move.l	(sp)+,d2
	rts

	xdef	_WRITEPIXEL
	xref	_LVOWritePixel
_WRITEPIXEL
	move.l	4(sp),a1		* rastport
	movem.l	8(sp),d0/d1		* x,y
	jmp		_LVOWritePixel(a6)

	xdef	_READPIXEL
	xref	_LVOReadPixel
_READPIXEL
	move.l	4(sp),a1		* rastport
	movem.l	8(sp),d0/d1		* x,y
	jmp		_LVOReadPixel(a6)

	xdef	_SETAPEN
	xref	_LVOSetAPen
_SETAPEN:
	move.l	4(sp),a1
	move.l	8(sp),d0
	jmp		_LVOSetAPen(a6)

	xdef	_BLTCLEAR
	xref	_LVOBltClear
_BLTCLEAR:
	move.l	4(sp),a1
	movem.l	8(sp),d0-d1
	jmp		_LVOBltClear(a6)

	xdef	_ALLOCRASTER
	xref	_LVOAllocRaster
_ALLOCRASTER:
	movem.l	4(sp),d0/d1
	jmp		_LVOAllocRaster(a6)

	xdef	_FREERASTER
	xref	_LVOFreeRaster
_FREERASTER:
	move.l	4(sp),a0
	movem.l	8(sp),d0/d1
	jmp		_LVOFreeRaster(a6)

	xdef	_MOVE
	xref	_LVOMove
_MOVE:
	move.l	4(sp),a1
	movem.l	8(sp),d0/d1
	jmp		_LVOMove(a6)

	xdef	_DRAW
	xref	_LVODraw
_DRAW:
	move.l	4(sp),a1
	movem.l	8(sp),d0/d1
	jmp		_LVODraw(a6)
@


36.3
log
@id
@
text
@d3 1
a3 1
*	$Id: $
@


36.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/c/RCS/romgfxint.asm,v 36.1 88/03/10 16:12:40 dale Exp Locker: bart $
@


36.1
log
@
@
text
@d3 1
a3 1
*	$Header: $
@
