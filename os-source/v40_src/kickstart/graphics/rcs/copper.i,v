head     39.14;
branch   ;
access   ;
symbols  rel39_24:39.13 rel39_18:39.12 rel39_97:39.9 rel39_90:39.9 rel39_89:39.9 rel39_82:39.9 rel39_76:39.9 rel39_71:39.9 rel39_65:39.8 rel39_64:39.8 rel39_61:39.8 rel39_60:39.8 rel39_55:39.6 rel39_52:39.5 rel39_47:39.5 rel39_39:39.4 rel39_38:39.4 rel39_37:39.4 rel39_35:39.4 rel39_34:39.4 V37_30:37.1 V37_29:37.1 V37_28:37.1 V37_27:37.1 V37_25:37.1 V37_24:37.1 V37_23:37.1 V37_22:37.1 V37_21:37.1 V37_20:37.1 V37_19:37.1 V37_18:37.1 V37_15:37.1 V37_14:37.1 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.9 V36_208:36.9 V36_207:36.9 V36_205:36.9 V36_203:36.9 V36_202:36.9 V36_201:36.9 V36_200:36.9 V36_199:36.9 V36_198:36.9 V36_196:36.9 V36_195:36.8 V36_194:36.8 V36_193:36.8 V36_192:36.8 V36_191:36.8 V36_190:36.8 V36_189:36.8 V36_188:36.8 V36_187:36.8 V36_186:36.8 V36_185:36.8 V36_184:36.8 V36_183:36.8 V36_182:36.8 V36_181:36.7 V36_180:36.7 V36_179:36.7 V36_161:36.6 V36_160:36.6 V36_158:36.6 V36_157:36.6 V36_153:36.6 V36_151:36.6 V36_147:36.6 V36_146:36.6 V36_144:36.6 V36_143:36.5 V36_142:36.5 V36_141:36.5 V36_139:36.5 V36_137:36.5 V36_136:36.5 V36_135:36.5 V36_133:36.5 V36_131:36.4 V36_130:36.4 V36_129:36.4 V36_128:36.4 V36_127:36.4 V36_126:36.4 V36_125:36.4 V36_123:36.4 V36_122:36.4 V36_121:36.4 V36_0:36.4 V36_118:36.4 V36_116:36.4 V36_115:36.4 V36_114:36.4 V36_112:36.4 V36_107:36.4 V36_106:36.4 V36_104:36.4 V36_103:36.4 V36_101:36.4 V36_100:36.4 V36_99:36.4 V36_95:36.4 V36_94:36.4 V36_92:36.4 V36_90:36.4 V36_89:36.4 V36_88:36.4 V36_83:36.4 V36_82:36.4 V36_79:36.4 V36_78:36.4 V36_77:36.4 V36_75:36.4 V36_74:36.4 V36_73:36.4 V36_72:36.4 V36_70:36.4 V36_69:36.4 V36_61:36.4 V36_60:36.4 V36_59:36.4 V36_57:36.2 V36_56:36.2 V36_55:36.2 V36_54:36.2 V36_52:36.2 V36_51:36.2 V36_50:36.2 V36_48:36.2 V36_47:36.2 V36_46:36.2 V36_45:36.2 V36_44:36.2 V36_43:36.2 V36_42:36.2 V36_41:36.2 V36_40:36.2 V36_37:36.2 V36_36:36.2 V36_35:36.2 V36_34:36.2 V36_33:36.2 V36_30:36.0 V36_29:36.0 V36_27:36.0;
locks    ; strict;
comment  @*   @;


39.14
date     93.08.11.15.15.05;  author spence;  state Exp;
branches ;
next     39.13;

39.13
date     93.05.05.15.37.59;  author spence;  state Exp;
branches ;
next     39.12;

39.12
date     93.03.08.09.47.21;  author chrisg;  state Exp;
branches ;
next     39.11;

39.11
date     93.02.22.10.22.03;  author spence;  state Exp;
branches ;
next     39.10;

39.10
date     93.02.16.13.04.03;  author chrisg;  state Exp;
branches ;
next     39.9;

39.9
date     92.07.01.13.38.20;  author chrisg;  state Exp;
branches ;
next     39.8;

39.8
date     92.05.13.11.42.55;  author spence;  state Exp;
branches ;
next     39.7;

39.7
date     92.04.29.12.20.45;  author spence;  state Exp;
branches ;
next     39.6;

39.6
date     92.04.27.12.03.12;  author spence;  state Exp;
branches ;
next     39.5;

39.5
date     92.03.19.16.34.14;  author chrisg;  state Exp;
branches ;
next     39.4;

39.4
date     92.02.07.11.10.11;  author chrisg;  state Exp;
branches ;
next     39.3;

39.3
date     91.12.31.14.33.33;  author spence;  state Exp;
branches ;
next     39.2;

39.2
date     91.10.16.12.40.52;  author spence;  state Exp;
branches ;
next     39.1;

39.1
date     91.08.27.17.01.31;  author spence;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.08.49;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.02.12.18.11.14;  author spence;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.13.32;  author spence;  state Exp;
branches ;
next     36.9;

36.9
date     90.11.05.14.38.22;  author spence;  state Exp;
branches ;
next     36.8;

36.8
date     90.09.12.14.38.45;  author bart;  state Exp;
branches ;
next     36.7;

36.7
date     90.07.27.16.26.44;  author bart;  state Exp;
branches ;
next     36.6;

36.6
date     90.05.02.10.33.23;  author kodiak;  state Exp;
branches ;
next     36.5;

36.5
date     90.03.28.09.40.49;  author bart;  state Exp;
branches ;
next     36.4;

36.4
date     89.05.02.09.31.10;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     89.05.02.09.01.33;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     89.03.02.17.38.10;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     89.03.02.16.55.17;  author bart;  state Exp;
branches ;
next     36.0;

36.0
date     88.12.13.11.56.24;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.14
log
@cl_Flags -> cl_PrivateFlags
@
text
@   IFND  GRAPHICS_COPPER_I
GRAPHICS_COPPER_I SET   1
**
**	$Id: copper.i,v 39.13 93/05/05 15:37:59 spence Exp Locker: spence $
**
**	graphics copper list intruction definitions
**
**	(C) Copyright 1985,1986,1987,1988,1989 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

    IFND    EXEC_TYPES_I
    include 'exec/types.i'
    ENDC

COPPER_MOVE equ 0       * pseude opcode for move #XXXX,dir  
COPPER_WAIT equ 1       * pseudo opcode for wait y,x  
CPRNXTBUF   equ 2       * continue processing with next buffer  
CPR_NT_LOF  equ $8000   * copper instruction only for short frames  
CPR_NT_SHT  equ $4000   * copper instruction only for long frames  
CPR_NT_SYS  equ $2000   * copper user instruction only  

   STRUCTURE   CopIns,0
      WORD  ci_OpCode         * 0 = move, 1 = wait  
      STRUCT   ci_nxtlist,0   * UNION
      STRUCT   ci_VWaitPos,0
      STRUCT   ci_DestAddr,2

      STRUCT   ci_HWaitPos,0
      STRUCT   ci_DestData,2

   LABEL ci_SIZEOF

* structure of cprlist that points to list that hardware actually executes  
   STRUCTURE   cprlist,0
      APTR  crl_Next
      APTR  crl_start
      WORD  crl_MaxCount
   LABEL crl_SIZEOF

   STRUCTURE   CopList,0
      APTR  cl_Next        * next block for this copper list  
      APTR  cl__CopList    * system use  
      APTR  cl__ViewPort   * system use  
      APTR  cl_CopIns      * start of this block  
      APTR  cl_CopPtr      * intermediate ptr  
      APTR  cl_CopLStart   * mrgcop fills this in for Long Frame 
      APTR  cl_CopSStart   * mrgcop fills this in for Short Frame 
      WORD  cl_Count       * intermediate counter  
      WORD  cl_MaxCount    * max # of copins for this block  
      WORD  cl_DyOffset    * offset this copper list vertical waits  
	IFD	V1_3
	  APTR   cl_Cop2Start
      APTR   cl_Cop3Start
      APTR   cl_Cop4Start
      APTR   cl_Cop5Start
	ENDC
      WORD  cl_SLRepeat
      WORD  cl_PrivateFlags	* NB - this was cl_Flags, but has been
      				* changed to avoid conflict with intuition's
      				* IClass structure. This field is private
      				* anyway, and no one should be affected.
   LABEL cl_SIZEOF

EXACT_LINE	EQU	1
HALF_LINE	EQU	2

   STRUCTURE   UCopList,0
      APTR     ucl_Next
      APTR     ucl_FirstCopList * head node of this copper list  
      APTR     ucl_CopList      * node in use  
   LABEL ucl_SIZEOF

*  private graphics data structure
*  hands off!
   STRUCTURE   copinit,0
	STRUCT	copinit_vsync_hblank,4
	STRUCT	copinit_diagstrt,24
	STRUCT  copinit_fm0,4
	STRUCT	copinit_diwstart,20
	STRUCT	copinit_bplcon2,4
	STRUCT	copinit_sprfix,8*2*2
	STRUCT	copinit_sprstrtup,2*(2*8*2)
	STRUCT	copinit_wait14,2*2
	STRUCT	copinit_norm_hblank,2*2
	STRUCT  copinit_jump,2*2
	STRUCT copinit_wait_forever,6*2
	STRUCT	copinit_sprstop,8*2
   LABEL copinit_SIZEOF

   ENDC	; GRAPHICS_COPPER_I
@


39.13
log
@HALF_LINE
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.12 93/03/08 09:47:21 chrisg Exp Locker: spence $
d59 4
a62 1
      WORD  cl_Flags
@


39.12
log
@didn't match copper.h
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.11 93/02/22 10:22:03 spence Exp Locker: chrisg $
d63 1
@


39.11
log
@CopList->SLRepeat and Flags
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.10 93/02/16 13:04:03 chrisg Exp Locker: spence $
d80 1
a80 1
	STRUCT	copinit_wait14,2*(2+2)
@


39.10
log
@fixed opcinit def.
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.9 92/07/01 13:38:20 chrisg Exp Locker: chrisg $
d58 3
d62 1
a62 1
   LABEL cl_SIZEOF
@


39.9
log
@added def for sprite fix.
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.8 92/05/13 11:42:55 spence Exp Locker: chrisg $
d78 4
a81 2
	STRUCT	copinit_genloc,(2*(4+(2*2)))
	STRUCT	copinit_sprstop,16
@


39.8
log
@put bplcon2 and bplcon3 before the WAIT in copinit. Hopefully has no
side effects, and DCTV guy's copinit.library should work again
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.7 92/04/29 12:20:45 spence Exp Locker: spence $
d75 1
@


39.7
log
@rearranged copinit to hide Alice bug
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.6 92/04/27 12:03:12 spence Exp Locker: spence $
d72 1
a72 1
	STRUCT  fm0,4
d74 1
d77 1
a77 1
	STRUCT	copinit_genloc,(2*(4+(2*2)+2))+4
@


39.6
log
@copinit->sprstop now aligned for a 4x sprite.
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.5 92/03/19 16:34:14 chrisg Exp Locker: spence $
a70 1
	STRUCT	copinit_diwstart,8
d73 1
@


39.5
log
@ added hands off comment.
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.4 92/02/07 11:10:11 chrisg Exp Locker: chrisg $
d76 2
a77 2
	STRUCT	copinit_genloc,2*(4+(2*2)+2)
	STRUCT	copinit_sprstop,8
@


39.4
log
@  Whoever added the V1_3 definition in copper.h and didn't
update copper.i should be shot.
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.3 91/12/31 14:33:33 spence Exp Locker: chrisg $
d68 1
@


39.3
log
@Made space in copinit for an extra write to bplcon3 which sets
LOCT = 0.
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.2 91/10/16 12:40:52 spence Exp Locker: spence $
d52 7
@


39.2
log
@put default fmode in copinit
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.1 91/08/27 17:01:31 spence Exp Locker: spence $
d64 1
a64 1
	STRUCT	copinit_diagstrt,20
@


39.1
log
@Changed copinit->diagstrt size for hi and low nybbles of colour0
@
text
@d4 1
a4 1
**	$Id: copper.i,v 39.0 91/08/21 17:08:49 chrisg Exp Locker: spence $
d65 1
@


39.0
log
@Bumped
@
text
@d4 1
a4 1
**	$Id: copper.i,v 37.1 91/02/12 18:11:14 spence Exp Locker: chrisg $
d64 1
a64 1
	STRUCT	copinit_diagstrt,8
@


37.1
log
@C-style /* comments */ changed to * assembler style
@
text
@d4 1
a4 1
**	$Id: copper.i,v 37.0 91/01/07 15:13:32 spence Exp Locker: spence $
@


37.0
log
@initial switchover from V36
@
text
@d4 1
a4 1
**	$Id: copper.i,v 36.9 90/11/05 14:38:22 spence Exp Locker: spence $
d16 6
a21 6
COPPER_MOVE equ 0       /* pseude opcode for move #XXXX,dir */
COPPER_WAIT equ 1       /* pseudo opcode for wait y,x */
CPRNXTBUF   equ 2       /* continue processing with next buffer */
CPR_NT_LOF  equ $8000   /* copper instruction only for short frames */
CPR_NT_SHT  equ $4000   /* copper instruction only for long frames */
CPR_NT_SYS  equ $2000   /* copper user instruction only */
d24 1
a24 1
      WORD  ci_OpCode      * 0 = move, 1 = wait */
d34 1
a34 1
* structure of cprlist that points to list that hardware actually executes */
d42 10
a51 10
      APTR  cl_Next  /* next block for this copper list */
      APTR  cl__CopList  /* system use */
      APTR  cl__ViewPort /* system use */
      APTR  cl_CopIns /* start of this block */
      APTR  cl_CopPtr /* intermediate ptr */
      APTR  cl_CopLStart   /* mrgcop fills this in for Long Frame*/
      APTR  cl_CopSStart   /* mrgcop fills this in for Short Frame*/
      WORD  cl_Count       /* intermediate counter */
      WORD  cl_MaxCount   /* max # of copins for this block */
      WORD  cl_DyOffset    /* offset this copper list vertical waits */
d56 2
a57 2
      APTR     ucl_FirstCopList /* head node of this copper list */
      APTR     ucl_CopList /* node in use */
@


36.9
log
@includes exec/types.i
@
text
@d4 1
a4 1
**	$Id: copper.i,v 36.8 90/09/12 14:38:45 bart Exp Locker: spence $
@


36.8
log
@cpr_nt_sys
,
@
text
@d4 1
a4 1
**	$Id: copper.i,v 36.7 90/07/27 16:26:44 bart Exp Locker: bart $
d11 4
@


36.7
log
@*** empty log message ***
@
text
@d4 1
a4 1
**	$Id: copper.i,v 36.6 90/05/02 10:33:23 kodiak Exp Locker: bart $
d13 1
a13 1
COPPER_WAIT equ 1        /* pseudo opcode for wait y,x */
d15 1
a15 1
CPR_NT_LOF  equ $8000  /* copper instruction only for short frames */
d17 1
@


36.6
log
@standardize include header
@
text
@d4 1
a4 1
**	$Id$
@


36.5
log
@*** empty log message ***
@
text
@d4 1
a4 5
**	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/RCS/copper.i,v 36.4 89/05/02 09:31:10 bart Exp Locker: bart $   
**	$Filename: graphics/copper.i $
**	$Release: 1.4 $
**	$Revision: 36.4 $
**	$Date: 89/05/02 09:31:10 $
d66 1
a66 1
   ENDC
@


36.4
log
@copyright 1989
@
text
@d4 1
a4 1
**	$Header: copper.i,v 36.3 89/05/02 09:01:33 bart Exp $   
d7 2
a8 2
**	$Revision: 36.3 $
**	$Date: 89/05/02 09:01:33 $
@


36.3
log
@header
@
text
@d4 1
a4 1
**	$Header: $   
d7 2
a8 2
**	$Revision: $
**	$Date: $
@


36.2
log
@*** empty log message ***
@
text
@a0 1

d3 12
a14 4
********************************************************************
*               Commodore-Amiga, Inc.                              *
*               copper.i                                           *
********************************************************************
@


36.1
log
@genloc in copinit
@
text
@d58 2
a59 1
	STRUCT	copinit_genloc,2*(4+2+2+(2*2)+2)
@


36.0
log
@added to rcs for updating
@
text
@d57 2
a58 1
	STRUCT	copinit_sprstrtup,2*((2*8*2)+2+(2*2)+2)
@
