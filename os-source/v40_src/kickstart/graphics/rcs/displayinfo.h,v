head     39.13;
branch   ;
access   ;
symbols  rel39_24:39.12 rel39_18:39.12 rel39_97:39.11 rel39_90:39.11 rel39_89:39.11 rel39_82:39.11 rel39_76:39.11 rel39_71:39.11 rel39_65:39.11 rel39_64:39.10 rel39_61:39.10 rel39_60:39.10 rel39_55:39.9 rel39_52:39.9 rel39_47:39.8 rel39_39:39.7 rel39_38:39.7 rel39_37:39.6 rel39_35:39.6 rel39_34:39.6 V37_30:37.5 V37_29:37.4 V37_28:37.4 V37_27:37.4 V37_25:37.4 V37_24:37.3 V37_23:37.3 V37_22:37.3 V37_21:37.3 V37_20:37.3 V37_19:37.3 V37_18:37.3 V37_15:37.3 V37_14:37.3 V37_13:37.3 V37_12:37.3 V37_11:37.3 V37_10:37.3 V37_9:37.3 V37_8:37.3 V37_7:37.3 V37_6:37.3 V37_5:37.3 V37_4:37.3 V37_3:37.3 V37_2:37.3 V37_1:37.0 V36_209:36.42 V36_208:36.42 V36_207:36.42 V36_205:36.42 V36_203:36.42 V36_202:36.42 V36_201:36.42 V36_200:36.42 V36_199:36.42 V36_198:36.42 V36_196:36.42 V36_195:36.42 V36_194:36.42 V36_193:36.42 V36_192:36.42 V36_191:36.42 V36_190:36.42 V36_189:36.42 V36_188:36.42 V36_187:36.42 V36_186:36.42 V36_185:36.42 V36_184:36.42 V36_183:36.42 V36_182:36.42 V36_181:36.42 V36_180:36.42 V36_179:36.42 V36_161:36.40 V36_160:36.40 V36_158:36.40 V36_157:36.40 V36_153:36.40 V36_151:36.40 V36_147:36.40 V36_146:36.40 V36_144:36.40 V36_143:36.39 V36_142:36.39 V36_141:36.39 V36_139:36.39 V36_137:36.39 V36_136:36.39 V36_135:36.39 V36_133:36.39 V36_131:36.38 V36_130:36.38 V36_129:36.38 V36_128:36.38 V36_127:36.38 V36_126:36.38 V36_125:36.38 V36_123:36.38 V36_122:36.38 V36_121:36.38 V36_0:36.38 V36_118:36.38 V36_116:36.38 V36_115:36.38 V36_114:36.38 V36_112:36.38 V36_107:36.35 V36_106:36.34 V36_104:36.34 V36_103:36.34 V36_101:36.34 V36_100:36.34 V36_99:36.34 V36_95:36.34 V36_94:36.34 V36_92:36.33 V36_90:36.33 V36_89:36.33 V36_88:36.33 V36_83:36.33 V36_82:36.33 V36_79:36.32 V36_78:36.32 V36_77:36.32 V36_75:36.32 V36_74:36.32 V36_73:36.31 V36_72:36.31 V36_70:36.31 V36_69:36.31 V36_61:36.31 V36_60:36.31 V36_59:36.31 V36_57:36.30 V36_56:36.30 V36_55:36.30 V36_54:36.30 V36_52:36.30 V36_51:36.30 V36_50:36.30 V36_48:36.30 V36_47:36.30 V36_46:36.30 V36_45:36.30 V36_44:36.30 V36_43:36.30 V36_42:36.30 V36_41:36.30 V36_40:36.30 V36_37:36.29 V36_36:36.29 V36_35:36.27 V36_34:36.27 V36_33:36.27 V36_30:36.27 V36_29:36.27 V36_27:36.27;
locks    ; strict;
comment  @*   @;


39.13
date     93.05.31.14.30.10;  author chrisg;  state Exp;
branches ;
next     39.12;

39.12
date     93.02.16.13.38.11;  author spence;  state Exp;
branches ;
next     39.11;

39.11
date     92.06.06.15.19.11;  author spence;  state Exp;
branches ;
next     39.10;

39.10
date     92.05.13.11.44.02;  author spence;  state Exp;
branches ;
next     39.9;

39.9
date     92.04.07.15.25.04;  author spence;  state Exp;
branches ;
next     39.8;

39.8
date     92.03.19.16.35.14;  author chrisg;  state Exp;
branches ;
next     39.7;

39.7
date     92.03.03.10.38.56;  author spence;  state Exp;
branches ;
next     39.6;

39.6
date     91.11.11.11.40.57;  author spence;  state Exp;
branches ;
next     39.5;

39.5
date     91.10.18.18.43.53;  author spence;  state Exp;
branches ;
next     39.4;

39.4
date     91.10.17.10.48.41;  author spence;  state Exp;
branches ;
next     39.3;

39.3
date     91.09.23.12.10.58;  author spence;  state Exp;
branches ;
next     39.2;

39.2
date     91.08.30.16.40.05;  author spence;  state Exp;
branches ;
next     39.1;

39.1
date     91.08.27.17.03.11;  author spence;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.09.10;  author chrisg;  state Exp;
branches ;
next     38.4;

38.4
date     91.08.21.13.54.37;  author spence;  state Exp;
branches ;
next     38.3;

38.3
date     91.07.27.17.09.56;  author spence;  state Exp;
branches ;
next     38.2;

38.2
date     91.07.22.15.01.42;  author spence;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.02.20.10.29;  author spence;  state Exp;
branches ;
next     38.0;

38.0
date     91.06.14.11.37.05;  author spence;  state Exp;
branches ;
next     37.5;

37.5
date     91.04.26.16.33.27;  author spence;  state Exp;
branches ;
next     37.4;

37.4
date     91.04.15.13.53.31;  author spence;  state Exp;
branches ;
next     37.3;

37.3
date     91.01.14.14.59.18;  author spence;  state Exp;
branches ;
next     37.2;

37.2
date     91.01.14.13.57.18;  author bart;  state Exp;
branches ;
next     37.1;

37.1
date     91.01.14.13.51.40;  author bart;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.13.41;  author spence;  state Exp;
branches ;
next     36.42;

36.42
date     90.07.27.16.27.03;  author bart;  state Exp;
branches ;
next     36.41;

36.41
date     90.06.22.06.27.47;  author bart;  state Exp;
branches ;
next     36.40;

36.40
date     90.05.02.10.33.31;  author kodiak;  state Exp;
branches ;
next     36.39;

36.39
date     90.03.28.09.37.55;  author bart;  state Exp;
branches ;
next     36.38;

36.38
date     90.01.31.14.12.47;  author bart;  state Exp;
branches ;
next     36.37;

36.37
date     90.01.31.13.49.38;  author bart;  state Exp;
branches ;
next     36.36;

36.36
date     90.01.31.12.18.15;  author bart;  state Exp;
branches ;
next     36.35;

36.35
date     90.01.04.11.32.33;  author bart;  state Exp;
branches ;
next     36.34;

36.34
date     89.11.21.10.55.33;  author bart;  state Exp;
branches ;
next     36.33;

36.33
date     89.09.17.08.17.27;  author bart;  state Exp;
branches ;
next     36.32;

36.32
date     89.08.17.12.58.55;  author bart;  state Exp;
branches ;
next     36.31;

36.31
date     89.05.02.09.29.28;  author bart;  state Exp;
branches ;
next     36.30;

36.30
date     89.03.09.16.12.06;  author bart;  state Exp;
branches ;
next     36.29;

36.29
date     89.03.06.12.40.22;  author bart;  state Exp;
branches ;
next     36.28;

36.28
date     89.03.06.11.34.33;  author bart;  state Exp;
branches ;
next     36.27;

36.27
date     89.02.24.09.52.27;  author bart;  state Exp;
branches ;
next     36.26;

36.26
date     89.02.17.21.55.13;  author bart;  state Exp;
branches ;
next     36.25;

36.25
date     89.02.17.18.07.34;  author bart;  state Exp;
branches ;
next     36.24;

36.24
date     89.02.17.10.21.05;  author bart;  state Exp;
branches ;
next     36.23;

36.23
date     89.02.17.09.09.32;  author bart;  state Exp;
branches ;
next     36.22;

36.22
date     89.02.17.09.00.31;  author bart;  state Exp;
branches ;
next     36.21;

36.21
date     89.02.17.08.51.10;  author bart;  state Exp;
branches ;
next     36.20;

36.20
date     89.02.16.12.07.30;  author bart;  state Exp;
branches ;
next     36.19;

36.19
date     89.02.16.10.07.08;  author bart;  state Exp;
branches ;
next     36.18;

36.18
date     89.02.15.16.12.53;  author bart;  state Exp;
branches ;
next     36.17;

36.17
date     89.02.15.16.09.41;  author bart;  state Exp;
branches ;
next     36.16;

36.16
date     89.02.14.10.16.30;  author bart;  state Exp;
branches ;
next     36.15;

36.15
date     89.02.01.17.54.24;  author bart;  state Exp;
branches ;
next     36.14;

36.14
date     89.01.25.10.47.22;  author bart;  state Exp;
branches ;
next     36.13;

36.13
date     89.01.25.10.42.39;  author bart;  state Exp;
branches ;
next     36.12;

36.12
date     89.01.24.14.01.12;  author bart;  state Exp;
branches ;
next     36.11;

36.11
date     89.01.24.13.52.47;  author bart;  state Exp;
branches ;
next     36.10;

36.10
date     89.01.24.13.38.25;  author bart;  state Exp;
branches ;
next     36.9;

36.9
date     89.01.24.11.40.38;  author bart;  state Exp;
branches ;
next     36.8;

36.8
date     89.01.24.11.23.14;  author bart;  state Exp;
branches ;
next     36.7;

36.7
date     89.01.23.14.22.14;  author bart;  state Exp;
branches ;
next     36.6;

36.6
date     89.01.23.14.05.39;  author bart;  state Exp;
branches ;
next     36.5;

36.5
date     89.01.23.10.54.32;  author bart;  state Exp;
branches ;
next     36.4;

36.4
date     89.01.23.10.49.21;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     89.01.23.10.48.04;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     89.01.23.10.33.10;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     89.01.20.12.02.12;  author bart;  state Exp;
branches ;
next     36.0;

36.0
date     88.12.13.11.56.26;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.13
log
@massive fixes to includes & autodocs.
@
text
@#ifndef	GRAPHICS_DISPLAYINFO_H
#define	GRAPHICS_DISPLAYINFO_H
/*
**	$Id: displayinfo.h,v 39.12 93/02/16 13:38:11 spence Exp Locker: chrisg $
**
**	include define file for displayinfo database
**
**	(C) Copyright 1985,1986,1987,1988,1989 Commodore-Amiga, Inc.
**	    All Rights Reserved
*/

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif /* EXEC_TYPES_H */

#ifndef GRAPHICS_GFX_H
#include <graphics/gfx.h>
#endif /* GRAPHICS_GFX_H */

#ifndef GRAPHICS_MONITOR_H
#include <graphics/monitor.h>
#endif /* GRAPHICS_MONITOR_H */

#ifndef GRAPHICS_MODEID_H
#include <graphics/modeid.h>
#endif /* GRAPHICS_MODEID_H */

#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif /* UTILITY_TAGITEM_H */

/* the "public" handle to a DisplayInfoRecord */

typedef APTR DisplayInfoHandle;	

/* datachunk type identifiers */

#define DTAG_DISP               0x80000000
#define DTAG_DIMS               0x80001000
#define DTAG_MNTR               0x80002000
#define DTAG_NAME               0x80003000
#define DTAG_VEC		0x80004000	/* internal use only */

struct QueryHeader
{
	ULONG	StructID;	/* datachunk type identifier */
        ULONG   DisplayID;      /* copy of display record key   */
	ULONG	SkipID;		/* TAG_SKIP -- see tagitems.h */
	ULONG	Length;		/* length of local data in double-longwords */
};

struct DisplayInfo
{
	struct	QueryHeader Header;
	UWORD	NotAvailable;	/* if NULL available, else see defines */
	ULONG	PropertyFlags;	/* Properties of this mode see defines */
	Point	Resolution;	/* ticks-per-pixel X/Y                 */
	UWORD	PixelSpeed;	/* aproximation in nanoseconds         */
	UWORD	NumStdSprites;	/* number of standard amiga sprites    */
	UWORD	PaletteRange;	/* OBSOLETE - use Red/Green/Blue bits instead */
	Point	SpriteResolution; /* std sprite ticks-per-pixel X/Y    */
	UBYTE	pad[4];		/* used internally */
	UBYTE	RedBits;	/* number of Red bits this display supports (V39) */
	UBYTE	GreenBits;	/* number of Green bits this display supports (V39) */
	UBYTE	BlueBits;	/* number of Blue bits this display supports (V39) */
	UBYTE	pad2[5];	/* find some use for this. */
	ULONG	reserved[2];    /* terminator */
};

/* availability */ 

#define DI_AVAIL_NOCHIPS	0x0001
#define DI_AVAIL_NOMONITOR	0x0002
#define DI_AVAIL_NOTWITHGENLOCK	0x0004

/* mode properties */ 

#define DIPF_IS_LACE		0x00000001
#define DIPF_IS_DUALPF		0x00000002
#define DIPF_IS_PF2PRI		0x00000004
#define DIPF_IS_HAM		0x00000008

#define DIPF_IS_ECS		0x00000010	/* note: ECS modes (SHIRES, VGA, and **
											** PRODUCTIVITY) do not support      **
											** attached sprites.                 **
											*/
#define DIPF_IS_AA		0x00010000	/* AA modes - may only be available
						** if machine has correct memory
						** type to support required
						** bandwidth - check availability.
						** (V39)
						*/
#define DIPF_IS_PAL		0x00000020
#define DIPF_IS_SPRITES		0x00000040
#define DIPF_IS_GENLOCK		0x00000080

#define DIPF_IS_WB		0x00000100
#define DIPF_IS_DRAGGABLE	0x00000200
#define DIPF_IS_PANELLED	0x00000400
#define DIPF_IS_BEAMSYNC	0x00000800

#define DIPF_IS_EXTRAHALFBRITE	0x00001000

/* The following DIPF_IS_... flags are new for V39 */
#define DIPF_IS_SPRITES_ATT		0x00002000	/* supports attached sprites */
#define DIPF_IS_SPRITES_CHNG_RES 	0x00004000	/* supports variable sprite resolution */
#define DIPF_IS_SPRITES_BORDER		0x00008000	/* sprite can be displayed in the border */
#define DIPF_IS_SCANDBL			0x00020000	/* scan doubled */
#define DIPF_IS_SPRITES_CHNG_BASE	0x00040000
											/* can change the sprite base colour */
#define DIPF_IS_SPRITES_CHNG_PRI	0x00080000
											/* can change the sprite priority
											** with respect to the playfield(s).
											*/
#define DIPF_IS_DBUFFER		0x00100000	/* can support double buffering */
#define DIPF_IS_PROGBEAM	0x00200000	/* is a programmed beam-sync mode */
#define DIPF_IS_FOREIGN		0x80000000	/* this mode is not native to the Amiga */


struct DimensionInfo
{
        struct  QueryHeader Header;
        UWORD   MaxDepth;             /* log2( max number of colors ) */
        UWORD   MinRasterWidth;       /* minimum width in pixels      */
        UWORD   MinRasterHeight;      /* minimum height in pixels     */
        UWORD   MaxRasterWidth;       /* maximum width in pixels      */
        UWORD   MaxRasterHeight;      /* maximum height in pixels     */
        struct  Rectangle   Nominal;  /* "standard" dimensions        */
        struct  Rectangle   MaxOScan; /* fixed, hardware dependent    */
        struct  Rectangle VideoOScan; /* fixed, hardware dependent    */
        struct  Rectangle   TxtOScan; /* editable via preferences     */
        struct  Rectangle   StdOScan; /* editable via preferences     */
        UBYTE   pad[14];
        ULONG   reserved[2];          /* terminator */
};

struct MonitorInfo
{
        struct  QueryHeader Header;
        struct  MonitorSpec  *Mspc;   /* pointer to monitor specification  */
        Point   ViewPosition;         /* editable via preferences          */
        Point   ViewResolution;       /* standard monitor ticks-per-pixel  */
        struct  Rectangle ViewPositionRange;  /* fixed, hardware dependent */
        UWORD   TotalRows;            /* display height in scanlines       */
        UWORD   TotalColorClocks;     /* scanline width in 280 ns units    */
        UWORD   MinRow;               /* absolute minimum active scanline  */
        WORD    Compatibility;        /* how this coexists with others     */
        UBYTE   pad[32];
        Point	MouseTicks;
	Point	DefaultViewPosition;  /* original, never changes */
	ULONG	PreferredModeID;      /* for Preferences */
        ULONG   reserved[2];          /* terminator */
};

/* monitor compatibility */

#define MCOMPAT_MIXED   0       /* can share display with other MCOMPAT_MIXED */
#define MCOMPAT_SELF    1       /* can share only within same monitor */
#define MCOMPAT_NOBODY -1       /* only one viewport at a time */

#define DISPLAYNAMELEN 32

struct NameInfo
{
        struct  QueryHeader Header;
        UBYTE   Name[DISPLAYNAMELEN];
        ULONG   reserved[2];          /* terminator */
};

/******************************************************************************/

/* The following VecInfo structure is PRIVATE, for our use only
 * Touch these, and burn! (V39)
 */

struct VecInfo
{
	struct	QueryHeader   Header;
	APTR	Vec;
	APTR	Data;
	UWORD	Type;
	UWORD	pad[3];
	ULONG	reserved[2];
};

#endif	/* GRAPHICS_DISPLAYINFO_H */
@


39.12
log
@MonitorInfo->MouseTicks
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.11 92/06/06 15:19:11 spence Exp Locker: spence $
d129 2
a130 2
        struct  Rectangle   MaxOScan; /* fixed, hardware dependant    */
        struct  Rectangle VideoOScan; /* fixed, hardware dependant    */
d143 1
a143 1
        struct  Rectangle ViewPositionRange;  /* fixed, hardware dependant */
@


39.11
log
@DIPF_IS_PROGBEAM
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.10 92/05/13 11:44:02 spence Exp Locker: spence $
d148 2
a149 1
        UBYTE   pad[36];
@


39.10
log
@Removed ModeID definitions. includes <graphics/modeid.h> instead.
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.9 92/04/07 15:25:04 spence Exp Locker: spence $
d84 3
a86 3
						** PRODUCTIVITY) do not support      **
						** attached sprites.                 **
						*/
d105 4
a108 4
#define DIPF_IS_SPRITES_ATT	0x00002000	/* supports attached sprites */
#define DIPF_IS_SPRITES_CHNG_RES 0x00004000	/* supports variable sprite resolution */
#define DIPF_IS_SPRITES_BORDER	0x00008000	/* sprite can be displayed in the border */
#define DIPF_IS_SCANDBL		0x00020000	/* scan doubled */
d110 1
a110 1
						/* can change the sprite base colour */
d112 3
a114 3
						/* can change the sprite priority
						** with respect to the playfield(s).
						*/
d116 1
@


39.9
log
@added DIPF_IS_DBUFFER for doublebuffering.
changed DIPF_IS_FOREIGN to 0x80000000, to make it easier to detect. Should
also add in the future a DisplayInfo->ForeignPropertyFlags.
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.8 92/03/19 16:35:14 chrisg Exp Locker: spence $
d24 4
a182 91

/*******************************************************************************/

/* DisplayInfoRecord identifiers */

#define INVALID_ID              ~0

/* normal identifiers */

#define MONITOR_ID_MASK      		0xFFFF1000 

#define DEFAULT_MONITOR_ID      	0x00000000 
#define NTSC_MONITOR_ID         	0x00011000 
#define PAL_MONITOR_ID          	0x00021000

/* the following 20 composite keys are for Modes on the default Monitor */
/* ntsc & pal "flavors" of these particular keys may be made by or'ing  */
/* the ntsc or pal MONITOR_ID with the desired MODE_KEY... */

#define LORES_KEY			0x00000000 
#define HIRES_KEY			0x00008000 
#define SUPER_KEY			0x00008020 
#define HAM_KEY				0x00000800 
#define LORESLACE_KEY			0x00000004 
#define HIRESLACE_KEY			0x00008004 
#define SUPERLACE_KEY			0x00008024 
#define HAMLACE_KEY			0x00000804 
#define LORESDPF_KEY			0x00000400 
#define HIRESDPF_KEY			0x00008400 
#define SUPERDPF_KEY			0x00008420 
#define LORESLACEDPF_KEY		0x00000404 
#define HIRESLACEDPF_KEY		0x00008404 
#define SUPERLACEDPF_KEY		0x00008424 
#define LORESDPF2_KEY			0x00000440 
#define HIRESDPF2_KEY			0x00008440 
#define SUPERDPF2_KEY			0x00008460 
#define LORESLACEDPF2_KEY		0x00000444 
#define HIRESLACEDPF2_KEY		0x00008444 
#define SUPERLACEDPF2_KEY		0x00008464 
#define EXTRAHALFBRITE_KEY		0x00000080 
#define EXTRAHALFBRITELACE_KEY		0x00000084 
/* New for AA ChipSet */
#define HIRESHAM_KEY			0x00008800
#define SUPERHAM_KEY			0x00008820
#define HIRESHAMLACE_KEY		0x00008804
#define SUPERHAMLACE_KEY		0x00008824

/* vga identifiers */

#define VGA_MONITOR_ID          	0x00031000

#define VGAEXTRALORES_KEY         	0x00031004 
#define VGALORES_KEY          		0x00039004 
#define VGAPRODUCT_KEY           	0x00039024 
#define VGAHAM_KEY            		0x00031804 
#define VGAEXTRALORESLACE_KEY     	0x00031005 
#define VGALORESLACE_KEY      		0x00039005 
#define VGAPRODUCTLACE_KEY       	0x00039025 
#define VGAHAMLACE_KEY        		0x00031805 
#define VGAEXTRALORESDPF_KEY      	0x00031404 
#define VGALORESDPF_KEY       		0x00039404 
#define VGAPRODUCTDPF_KEY        	0x00039424 
#define VGAEXTRALORESLACEDPF_KEY  	0x00031405 
#define VGALORESLACEDPF_KEY   		0x00039405 
#define VGAPRODUCTLACEDPF_KEY    	0x00039425 
#define VGAEXTRALORESDPF2_KEY     	0x00031444 
#define VGALORESDPF2_KEY      		0x00039444 
#define VGAPRODUCTDPF2_KEY       	0x00039464 
#define VGAEXTRALORESLACEDPF2_KEY 	0x00031445 
#define VGALORESLACEDPF2_KEY  		0x00039445 
#define VGAPRODUCTLACEDPF2_KEY   	0x00039465 
#define VGAEXTRAHALFBRITE_KEY   	0x00031084 
#define VGAEXTRAHALFBRITELACE_KEY   	0x00031085 
/* New for AA ChipSet */
#define VGAPRODUCTHAM_KEY		0x00039824
#define VGALORESHAM_KEY			0x00039804
#define VGAEXTRALORESHAM_KEY		VGAHAM_KEY
#define VGAPRODUCTHAMLACE_KEY		0x00039825
#define VGALORESHAMLACE_KEY		0x00039805
#define VGAEXTRALORESHAMLACE_KEY	VGAHAMLACE_KEY

/* a2024 identifiers */

#define A2024_MONITOR_ID        	0x00041000 

#define A2024TENHERTZ_KEY       	0x00041000 
#define A2024FIFTEENHERTZ_KEY   	0x00049000 

/* prototype identifiers */

#define PROTO_MONITOR_ID        	0x00051000 
@


39.8
log
@changes.

@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.7 92/03/03 10:38:56 spence Exp Locker: chrisg $
d111 2
a112 1
#define DIPF_IS_FOREIGN		0x00100000	/* this mode is not native to the Amiga */
@


39.7
log
@added new DIPF_IS_SPRITES flags
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.6 91/11/11 11:40:57 spence Exp Locker: spence $
d38 1
a38 1
#define DTAG_VEC		0x80004000
d59 3
a61 3
	UBYTE	RedBits;	/* number of Red bits this display supports (V38) */
	UBYTE	GreenBits;	/* number of Green bits this display supports (V38) */
	UBYTE	BlueBits;	/* number of Blue bits this display supports (V38) */
@


39.6
log
@removed VGA70 definitions
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.5 91/10/18 18:43:53 spence Exp Locker: spence $
d100 13
a112 4
#define DIPF_IS_SPRITES_ATT	0x00002000	/* supports attached sprites (V39) */
#define DIPF_IS_SPRITES_CHNG_RES 0x00004000	/* supports variable sprite resolution (V39) */
#define DIPF_IS_SPRITES_BORDER	0x00008000	/* sprite can be displayed in the border (V39) */
#define DIPF_IS_SCANDBL		0x00020000	/* scan doubled (V39) */
a257 3
/* Scan doubled modes */
#define VGAPRODUCTDBL_KEY		0x0003902c
#define VGAPRODUCTDBLLACE_KEY		0x0003902e
@


39.5
log
@Replace ProgInfo with VecInfo
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.4 91/10/17 10:48:41 spence Exp Locker: spence $
a251 27

/* vga70 identifiers */

#define VGA70_MONITOR_ID 			0x00061000

#define VGA70EXTRALORES_KEY		0x00061004
#define VGA70LORES_KEY			0x00069004
#define VGA70PRODUCT_KEY		0x00069024
#define VGA70HAM_KEY			0x00061804
#define VGA70EXTRALORESLACE_KEY		0x00061005
#define VGA70LORESLACE_KEY		0x00069005
#define VGA70PRODUCTLACE_KEY		0x00069025
#define VGA70HAMLACE_KEY		0x00061805
#define VGA70EXTRALORESDPF_KEY		0x00061404
#define VGA70LORESDPF_KEY		0x00069404
#define VGA70PRODUCTDPF_KEY		0x00069424
#define VGA70EXTRALORESLACEDPF_KEY	0x00061405
#define VGA70LORESLACEDPF_KEY		0x00069405
#define VGA70PRODUCTLACEDPF_KEY		0x00069425
#define VGA70EXTRALORESDPF2_KEY		0x00061444
#define VGA70LORESDPF2_KEY		0x00069444
#define VGA70PRODUCTDPF2_KEY		0x00069464
#define VGA70EXTRALORESLACEDPF2_KEY	0x00061445
#define VGA70LORESLACEDPF2_KEY		0x00069445
#define VGA70PRODUCTLACEDPF2_KEY	0x00069465
#define VGA70EXTRAHALFBRITE_KEY		0x00061084
#define VGA70EXTRAHALFBRITELACE_KEY	0x00061085
@


39.4
log
@ProgInfo also has pointers to Move/ChangeSprite().
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.3 91/09/23 12:10:58 spence Exp Locker: spence $
d38 1
a38 1
#define DTAG_PROG		0x80004000
d156 2
a157 4
/* The following ProgInfo structure and flags are PRIVATE, for our use only
 * Touch these, and burn!

 ProgInfo - for view mode drivers (V38)
d160 1
a160 1
struct ProgInfo
d163 6
a168 25
	APTR	MakeIt;		/* pointer to a list of functions to call */
	APTR	MoveSprite;
	APTR	ChangeSprite;
	UWORD	bplcon0;	/* minimum needed for this mode */
	UWORD	bplcon2;	/* has KILLEHB flag, PF2PRI, and SOGEN */
	UBYTE	ToViewX;	/* convert from VP horizontal resoliution to View */
	UBYTE	ToViewY;	/* convert from VP vertical resoliution to View */
	UWORD	Flags;		/* see below */
	UWORD	MakeItType;
	UWORD	ScrollVPCount;
	UWORD	DDFSTRTMask;	/* for 1x, 2x or 4x */
	UWORD	DDFSTOPMask;
	UWORD	DspInsCount;	/* initial DspIns */
	UBYTE	ToDIWResn;	/* convert from the stored DisplayWindow resolution to hardware resolution */
	UBYTE	Offset;		/* for calculating offsets */
	ULONG	reserved[2];	/* tag end substitute */
};

#define PROGINFO_NATIVE		0x0001
#define PROGINFO_VARBEAM	0x0002
#define PROGINFO_MODELACE	0x0004
#define PROGINFO_SHIFT3		0x0010
#define PROGINFO_SHIFT5		0x0020
#define PROGINFO_SCANDBL	0x0040
#define PROGINFO_HAM		0x0080
@


39.3
log
@PROGINFO_ SCANDBL, VARBEAM and HAM
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.2 91/08/30 16:40:05 spence Exp Locker: spence $
d166 2
@


39.2
log
@VGA HAM keys
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.1 91/08/27 17:03:11 spence Exp Locker: spence $
d103 1
d154 1
d156 2
a157 1
/* ProgInfo - for view mode drivers (V38) */
d159 3
d181 7
a187 5
#define PROGINFO_NATIVE		0x0001	/* Amiga-native mode */
#define PROGINFO_BEAMSYNC	0x0002	/* Amiga-native beam-synched */
#define PROGINFO_MODELACE	0x0004	/* interlace (for modulos) */
#define PROGINFO_SHIFT3		0x0010	/* private */
#define PROGINFO_SHIFT5		0x0020	/* private */
d189 1
d201 1
a201 1
#define PAL_MONITOR_ID          	0x00021000 
d237 1
a237 1
#define VGA_MONITOR_ID          	0x00031000 
d268 3
@


39.1
log
@defined DIPF_IS_AA
changed proginfo->DDFExtra to ScrollVPCount
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 39.0 91/08/21 17:09:10 chrisg Exp Locker: spence $
d252 7
@


39.0
log
@Bumped
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 38.4 91/08/21 13:54:37 spence Exp Locker: chrisg $
d68 3
a70 3
#define DI_AVAIL_NOCHIPS        0x0001
#define DI_AVAIL_NOMONITOR      0x0002
#define DI_AVAIL_NOTWITHGENLOCK 0x0004
d74 4
a77 4
#define DIPF_IS_LACE            0x00000001
#define DIPF_IS_DUALPF          0x00000002
#define DIPF_IS_PF2PRI          0x00000004
#define DIPF_IS_HAM             0x00000008
d79 1
a79 1
#define DIPF_IS_ECS             0x00000010	/* note: ECS modes (SHIRES, VGA, and **
d83 9
a91 3
#define DIPF_IS_PAL             0x00000020
#define DIPF_IS_SPRITES         0x00000040
#define DIPF_IS_GENLOCK         0x00000080
d93 4
a96 4
#define DIPF_IS_WB              0x00000100
#define DIPF_IS_DRAGGABLE       0x00000200
#define DIPF_IS_PANELLED        0x00000400
#define DIPF_IS_BEAMSYNC        0x00000800
d100 3
a102 3
#define DIPF_IS_SPRITES_ATT     0x00002000	/* supports attached sprites (V38) */
#define DIPF_IS_SPRITES_CHNG_RES 0x00004000	/* supports variable sprite resolution (V38) */
#define DIPF_IS_SPRITES_BORDER  0x00008000	/* sprite can be displayed in the border (V38) */
d166 1
a166 1
	UWORD	DDFExtra;
@


38.4
log
@PROGINFO_BEAMSYNCH
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 38.3 91/07/27 17:09:56 spence Exp Locker: spence $
@


38.3
log
@Hires and SuperHires HAM keys defined.
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 38.2 91/07/22 15:01:42 spence Exp Locker: spence $
d127 2
a128 2
		Point	DefaultViewPosition;  /* original, never changes */
		ULONG	PreferredModeID;      /* for Preferences */
d170 1
d251 22
a272 22
#define VGA70EXTRALORES_KEY         0x00061004
#define VGA70LORES_KEY          	0x00069004
#define VGA70PRODUCT_KEY	        0x00069024
#define VGA70HAM_KEY            	0x00061804
#define VGA70EXTRALORESLACE_KEY     0x00061005
#define VGA70LORESLACE_KEY      	0x00069005
#define VGA70PRODUCTLACE_KEY	    0x00069025
#define VGA70HAMLACE_KEY        	0x00061805
#define VGA70EXTRALORESDPF_KEY      0x00061404
#define VGA70LORESDPF_KEY       	0x00069404
#define VGA70PRODUCTDPF_KEY     	0x00069424
#define VGA70EXTRALORESLACEDPF_KEY  0x00061405
#define VGA70LORESLACEDPF_KEY   	0x00069405
#define VGA70PRODUCTLACEDPF_KEY    	0x00069425
#define VGA70EXTRALORESDPF2_KEY     0x00061444
#define VGA70LORESDPF2_KEY      	0x00069444
#define VGA70PRODUCTDPF2_KEY       	0x00069464
#define VGA70EXTRALORESLACEDPF2_KEY 0x00061445
#define VGA70LORESLACEDPF2_KEY  	0x00069445
#define VGA70PRODUCTLACEDPF2_KEY   	0x00069465
#define VGA70EXTRAHALFBRITE_KEY   	0x00061084
#define VGA70EXTRAHALFBRITELACE_KEY 0x00061085
@


38.2
log
@Altered ProgInfo for new RawProgInfo
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 38.1 91/07/02 20:10:29 spence Exp Locker: spence $
d191 27
a217 22
#define LORES_KEY           		0x00000000 
#define HIRES_KEY           		0x00008000 
#define SUPER_KEY           		0x00008020 
#define HAM_KEY             		0x00000800 
#define LORESLACE_KEY       		0x00000004 
#define HIRESLACE_KEY       		0x00008004 
#define SUPERLACE_KEY       		0x00008024 
#define HAMLACE_KEY         		0x00000804 
#define LORESDPF_KEY        		0x00000400 
#define HIRESDPF_KEY        		0x00008400 
#define SUPERDPF_KEY        		0x00008420 
#define LORESLACEDPF_KEY    		0x00000404 
#define HIRESLACEDPF_KEY    		0x00008404 
#define SUPERLACEDPF_KEY    		0x00008424 
#define LORESDPF2_KEY       		0x00000440 
#define HIRESDPF2_KEY       		0x00008440 
#define SUPERDPF2_KEY       		0x00008460 
#define LORESLACEDPF2_KEY   		0x00000444 
#define HIRESLACEDPF2_KEY   		0x00008444 
#define SUPERLACEDPF2_KEY   		0x00008464 
#define EXTRAHALFBRITE_KEY           	0x00000080 
#define EXTRAHALFBRITELACE_KEY       	0x00000084 
@


38.1
log
@ProgInfo->Offset, and ProgInfo->DDFExtra.
Also changed ProgInfo->DataSize from LONG to WORD to make room for
DDFExtra.
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 38.0 91/06/14 11:37:05 spence Exp Locker: spence $
d159 1
a159 1
	UWORD	DataSize;	/* Amount of extra data needed to build the ViewPort */
@


38.0
log
@struct ProgInfo
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 37.5 91/04/26 16:33:27 spence Exp Locker: spence $
d159 2
a160 1
	ULONG	DataSize;	/* Amount of extra data needed to build the ViewPort */
d165 1
a165 1
	UBYTE	pad;
d169 4
a172 2
#define PROGINFO_NATIVE		0x00000001	/* Amiga-native mode */
#define PROGINFO_MODELACE	0x00000004	/* interlace (for modulos) */
@


37.5
log
@Padded extended MonitorInfo for 8-byte alignment.
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 37.4 91/04/15 13:53:31 spence Exp Locker: spence $
d38 1
d50 14
a63 10
        struct  QueryHeader Header;
        UWORD   NotAvailable;   /* if NULL available, else see defines */
        ULONG   PropertyFlags;  /* Properties of this mode see defines */
        Point   Resolution;     /* ticks-per-pixel X/Y                 */
        UWORD   PixelSpeed;     /* aproximation in nanoseconds         */
        UWORD   NumStdSprites;  /* number of standard amiga sprites    */
        UWORD   PaletteRange;   /* distinguishable shades available    */
        Point   SpriteResolution; /* std sprite ticks-per-pixel X/Y    */
        UBYTE   pad[4];
        ULONG   reserved[2];    /* terminator */
d79 4
a82 4
#define DIPF_IS_ECS             0x00000010	/*	note: ECS modes (SHIRES, VGA, and **
											**	PRODUCTIVITY) do not support      **
											**	attached sprites.                 **
											*/
d94 4
d146 25
@


37.4
log
@extended MonitorInfo for preferences
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 37.3 91/01/14 14:59:18 spence Exp Locker: spence $
d117 1
a117 1
        UBYTE   pad[32];
@


37.3
log
@ECS modes don't support attached sprites
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 37.2 91/01/14 13:57:18 bart Exp Locker: spence $
d117 3
a119 1
        UBYTE   pad[36];
d203 27
@


37.2
log
@*** empty log message ***
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 37.1 91/01/14 13:51:40 bart Exp Locker: bart $
d74 4
a77 1
#define DIPF_IS_ECS             0x00000010
@


37.1
log
@DIPF_IS_ATTACHEDSPRITES
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 37.0 91/01/07 15:13:41 spence Exp Locker: bart $
a84 1
#define DIPF_IS_ATTACHEDSPRITES 0x00002000
@


37.0
log
@initial switchover from V36
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 36.42 90/07/27 16:27:03 bart Exp Locker: spence $
d85 1
@


36.42
log
@*** empty log message ***
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 36.41 90/06/22 06:27:47 bart Exp Locker: bart $
@


36.41
log
@endif syntax
@
text
@d4 1
a4 1
**	$Id: displayinfo.h,v 36.40 90/05/02 10:33:31 kodiak Exp Locker: bart $
@


36.40
log
@standardize include header
@
text
@d4 1
a4 1
**	$Id$
d14 1
a14 1
#endif !EXEC_TYPES_H
d18 1
a18 1
#endif !GRAPHICS_GFX_H
d22 1
a22 1
#endif !GRAPHICS_MONITOR_H
d26 1
a26 1
#endif !UTILITY_TAGITEM_H
@


36.39
log
@*** empty log message ***
@
text
@d4 1
a4 4
**	$Filename: graphics/displayinfo.h $
**	$Release: 1.4 $
**	$Revision: 36.38 $
**	$Date: 90/01/31 14:12:47 $
@


36.38
log
@VGAEXTRAHALFBRITE
@
text
@d6 2
a7 2
**	$Revision: 36.37 $
**	$Date: 90/01/31 13:49:38 $
@


36.37
log
@EXTRAHALFBRITE
@
text
@d6 2
a7 2
**	$Revision: 36.36 $
**	$Date: 90/01/31 12:18:15 $
d199 2
@


36.36
log
@DI_AVAIL_NOTWITHGENLOCK
@
text
@d6 2
a7 2
**	$Revision: 36.35 $
**	$Date: 90/01/04 11:32:33 $
d87 2
d172 2
@


36.35
log
@MONITOR_ID_MASK
@
text
@d6 2
a7 2
**	$Revision: 36.34 $
**	$Date: 89/11/21 10:55:33 $
d68 1
@


36.34
log
@utility/tagitem
@
text
@d6 2
a7 2
**	$Revision: 36.33 $
**	$Date: 89/09/17 08:17:27 $
d138 2
@


36.33
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.32 $
**	$Date: 89/08/17 12:58:55 $
d27 3
a29 3
#ifndef INTUITION_TAGITEM_H
#include <intuition/tagitem.h>
#endif !INTUITION_TAGITEM_H
@


36.32
log
@TAG_SKIP
@
text
@d6 2
a7 2
**	$Revision: 36.31 $
**	$Date: 89/05/02 09:29:28 $
d19 1
a19 1
#ifndef GRAPHICS_MONITOR_H
d21 1
a21 1
#endif !GRAPHICS_MONITOR_H
@


36.31
log
@copyright 1989
@
text
@d6 2
a7 2
**	$Revision: 36.30 $
**	$Date: 89/03/09 16:12:06 $
d46 1
a46 1
	ULONG	StructIgnore;	/* TAG_IGNORE -- see tagitems.h */
@


36.30
log
@SpriteResolution
@
text
@d6 2
a7 2
**	$Revision: 36.29 $
**	$Date: 89/03/06 12:40:22 $
d11 1
a11 1
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
@


36.29
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.28 $
**	$Date: 89/03/06 11:34:33 $
d58 3
a60 2
        UWORD   PaletteRange;   /* distinguishable shades available */
        UBYTE   pad[8];
@


36.28
log
@ViewResolution
@
text
@d6 2
a7 2
**	$Revision: 36.27 $
**	$Date: 89/02/24 09:52:27 $
d113 1
a113 1
        UBYTE   pad[32];
@


36.27
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.29 $
**	$Date: 89/02/23 13:14:20 $
d107 1
@


36.26
log
@checkpoint
@
text
@d6 2
a7 2
**	$Revision: 36.25 $
**	$Date: 89/02/17 18:07:34 $
d37 4
a40 4
#define TAG_DISP                0x80000000
#define TAG_DIMS                0x80001000
#define TAG_MNTR                0x80002000
#define TAG_NAME                0x80003000
d135 1
a135 1
/* monitor identifiers */
d137 3
a139 6
#define DEFAULT_MONITOR_ID      0x00000000 /* null for compatibility */
#define NTSC_MONITOR_ID         0x00011000 /* ntsc,        special */
#define PAL_MONITOR_ID          0x00021000 /* pal,         special */
#define VGA_MONITOR_ID          0x00031000 /* vga,         special */
#define A2024_MONITOR_ID        0x00041000 /* a2024,       special */
#define PROTO_MONITOR_ID        0x00051000 /* development, special */
d141 3
a143 1
/* normal mode identifiers */
d145 20
a164 20
#define LORES_MODE_ID           0x00000000 /* lores */
#define HIRES_MODE_ID           0x00008000 /* hires */
#define SUPER_MODE_ID           0x00008020 /* superhires */
#define HAM_MODE_ID             0x00000800 /* hold_and_modify */
#define LORESLACE_MODE_ID       0x00000004 /* lores lace */
#define HIRESLACE_MODE_ID       0x00008004 /* hires lace */
#define SUPERLACE_MODE_ID       0x00008024 /* superhires lace */
#define HAMLACE_MODE_ID         0x00000804 /* hold_and_modify lace */
#define LORESDPF_MODE_ID        0x00000400 /* lores dualpf */
#define HIRESDPF_MODE_ID        0x00008400 /* hires dualpf */
#define SUPERDPF_MODE_ID        0x00008420 /* superhires dualpf */
#define LORESLACEDPF_MODE_ID    0x00000404 /* lores dualpf lace */
#define HIRESLACEDPF_MODE_ID    0x00008404 /* hires dualpf lace */
#define SUPERLACEDPF_MODE_ID    0x00008424 /* superhires dualpf lace */
#define LORESDPF2_MODE_ID       0x00000440 /* lores dualpf2 */
#define HIRESDPF2_MODE_ID       0x00008440 /* hires dualpf2 */
#define SUPERDPF2_MODE_ID       0x00008460 /* superhires dualpf2 */
#define LORESLACEDPF2_MODE_ID   0x00000444 /* lores dualpf2 lace */
#define HIRESLACEDPF2_MODE_ID   0x00008444 /* hires dualpf2 lace */
#define SUPERLACEDPF2_MODE_ID   0x00008464 /* superhires dualpf2 lace */
d166 1
a166 1
/* special mode identifiers */
d168 1
a168 20
#define VXLORES_MODE_ID         0x00000004 /* vga_lores */
#define VLORES_MODE_ID          0x00008004 /* vga_hires */
#define PROTO_MODE_ID           0x00008024 /* vga_superhires */
#define VHAM_MODE_ID            0x00000804 /* vga_hold_and_modify */
#define VXLORESLACE_MODE_ID     0x00000005 /* vga_lores lace */
#define VLORESLACE_MODE_ID      0x00008005 /* vga_hires lace */
#define PROTOLACE_MODE_ID       0x00008025 /* vga_superhires lace */
#define VHAMLACE_MODE_ID        0x00000805 /* vga_hold_and_modify lace */
#define VXLORESDPF_MODE_ID      0x00000404 /* vga_lores dualpf */
#define VLORESDPF_MODE_ID       0x00008404 /* vga_hires dualpf */
#define PROTODPF_MODE_ID        0x00008424 /* vga_superhires dualpf */
#define VXLORESLACEDPF_MODE_ID  0x00000405 /* vga_lores dualpf lace */
#define VLORESLACEDPF_MODE_ID   0x00008405 /* vga_hires dualpf lace */
#define PROTOLACEDPF_MODE_ID    0x00008425 /* vga_superhires dualpf lace */
#define VXLORESDPF2_MODE_ID     0x00000444 /* vga_lores dualpf2 */
#define VLORESDPF2_MODE_ID      0x00008444 /* vga_hires dualpf2 */
#define PROTODPF2_MODE_ID       0x00008464 /* vga_superhires dualpf2 */
#define VXLORESLACEDPF2_MODE_ID 0x00000445 /* vga_lores dualpf2 lace */
#define VLORESLACEDPF2_MODE_ID  0x00008445 /* vga_hires dualpf2 lace */
#define PROTOLACEDPF2_MODE_ID   0x00008465 /* vga_superhires dualpf2 lace */
d170 20
a189 2
#define TEN_HERTZ_MODE_ID       0x00000000 /* slow scan mode (a2024 specific) */
#define FIFTEEN_HERTZ_MODE_ID   0x00008000 /* fast scan mode (a2024 specific) */
d191 1
a191 1
/* some composite keys */
d193 8
a200 6
#define LORES_KEY               ( DEFAULT_MONITOR_ID | LORES_MODE_ID         )
#define HIRES_KEY               ( DEFAULT_MONITOR_ID | HIRES_MODE_ID         )
#define SUPERHIRES_KEY          ( DEFAULT_MONITOR_ID | SUPER_MODE_ID         )
#define PRODUCTIVITY_KEY        (     VGA_MONITOR_ID | PROTO_MODE_ID         )
#define A2024_10HZ_KEY          (   A2024_MONITOR_ID | TEN_HERTZ_MODE_ID     )
#define A2024_15HZ_KEY          (   A2024_MONITOR_ID | FIFTEEN_HERTZ_MODE_ID )
@


36.25
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.24 $
**	$Date: 89/02/17 10:21:05 $
@


36.24
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.23 $
**	$Date: 89/02/17 09:09:32 $
d94 2
a97 2
        struct  Rectangle   MaxOScan; /* fixed, hardware dependant    */
        struct  Rectangle VideoOScan; /* fixed, hardware dependant    */
@


36.23
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.22 $
**	$Date: 89/02/17 09:00:31 $
d112 1
@


36.22
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.21 $
**	$Date: 89/02/17 08:51:10 $
d18 4
@


36.21
log
@bw
@
text
@d6 2
a7 2
**	$Revision: 36.20 $
**	$Date: 89/02/16 12:07:30 $
d55 1
a55 1
        UBYTE   pad[2];
d94 1
a94 1
        UBYTE   pad[6];
@


36.20
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.19 $
**	$Date: 89/02/16 10:07:08 $
d85 4
d94 1
a94 5
        UWORD   MinRasterWidth;       /* minimum width in pixels      */
        UWORD   MinRasterHeight;      /* minimum height in pixels     */
        UWORD   MaxRasterWidth;       /* maximum width in pixels      */
        UWORD   MaxRasterHeight;      /* maximum height in pixels     */
        UBYTE   pad[2];
a107 1
        UBYTE   pad[2];
a122 1
        UBYTE   pad[4];
@


36.19
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.18 $
**	$Date: 89/02/15 16:12:53 $
d41 1
a41 1
	ULONG	VerRev; 	/* version : revision */
a48 1
        ULONG   DisplayID;      /* copy of display record key          */
a83 1
        ULONG   DisplayID;            /* copy of display record key   */
a100 1
        ULONG   DisplayID;            /* only upper 16 bits valid */
a122 1
        ULONG   DisplayID;            /* copy of display record key   */
@


36.18
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.17 $
**	$Date: 89/02/15 16:09:41 $
d40 1
a40 1
	ULONG	StructID;	/* structure identifier */
d42 1
a42 1
	ULONG	StructIgnore;	/* where tag used to go  */
d48 10
a57 8
	struct	QueryHeader Header;
	ULONG	ModeID;		/* active control bits for this mode  */
	ULONG	MspcID;		/* monitor record identifier */
	ULONG	AspectX;	/* ticks per pixel horizontally  */
	ULONG	AspectY;	/* ticks per pixel vertically */
	ULONG	Special;	/* special mode processing */
	ULONG	Compatible;	/* coexistence criteria */
	ULONG	reserved[2];    /* tag end substitute */
d60 1
a60 6
struct DisplayName
{
	struct	QueryHeader Header;
	UBYTE	Name[32];
	ULONG	reserved[2];    /* tag end substitute */
};
d62 21
a82 1
struct DisplayNorm
d84 14
a97 6
	struct	QueryHeader Header;
	ULONG	Width;
	ULONG	Height;
	ULONG	Depth;
	ULONG	pad[1];
	ULONG	reserved[2];    /* tag end substitute */
d100 1
a100 1
struct DisplayOScan
d102 11
a112 4
	LONG    MinX;
	LONG    MinY;
	LONG    MaxX;
	LONG    MaxY;
d115 9
a123 1
struct DisplayMonitor
d125 5
a129 10
	struct	QueryHeader Header;
	struct	MonitorSpec  *Mspc;
	struct  DisplayOScan  TxtOScan;
	struct  DisplayOScan  StdOScan;
	ULONG	Origin;
	ULONG	MinWide;
	ULONG	MinHigh;
	ULONG	ColorID;
	ULONG	pad[1];
	ULONG	reserved[2];    /* tag end substitute */
@


36.17
log
@,
@
text
@d5 3
a7 3
**	$Release: 1.3 $
**	$Revision: 36.16 $
**	$Date: 89/02/14 10:16:30 $
@


36.16
log
@checkpoint 02.14.89
@
text
@d6 2
a7 2
**	$Revision: 36.15 $
**	$Date: 89/02/01 17:54:24 $
a18 4
#ifndef DISPLAY_RECORD_H
#include <display/record.h>
#endif !DISPLAY_RECORD_H

d23 23
d96 71
@


36.15
log
@checkpoint - a2024 10hz and 15hz works from 32 bit id
@
text
@d6 2
a7 2
**	$Revision: 36.14 $
**	$Date: 89/01/25 10:47:22 $
@


36.14
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.13 $
**	$Date: 89/01/25 10:42:39 $
@


36.13
log
@moved DisplayHeader to display/record.h
@
text
@d6 2
a7 2
**	$Revision: 36.12 $
**	$Date: 89/01/24 14:01:12 $
d29 1
a29 1
	struct	DisplayHeader Header;
d41 1
a41 1
	struct	DisplayHeader Header;
d48 1
a48 1
	struct	DisplayHeader Header;
d66 1
a66 1
	struct	DisplayHeader Header;
@


36.12
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.11 $
**	$Date: 89/01/24 13:52:47 $
d19 4
a25 12

#ifndef INTUITION_TAGITEM_H
#include <intuition/tagitem.h>
#endif !INTUITION_TAGITEM_H

struct DisplayHeader
{
	ULONG	StructID;	/* structure identifier */
	ULONG	VerRev; 	/* version : revision */
	ULONG	StructIgnore;	/* where tag used to go  */
	ULONG	Length;		/* length of local data in double-longwords */
};
@


36.11
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.10 $
**	$Date: 89/01/24 13:38:25 $
d82 1
@


36.10
log
@DisplayMonitor
@
text
@d6 2
a7 2
**	$Revision: 36.9 $
**	$Date: 89/01/24 11:40:38 $
d19 4
d64 8
d75 3
a77 2
	struct  Rectangle TxtOScan;
	struct  Rectangle StdOScan;
@


36.9
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.8 $
**	$Date: 89/01/24 11:23:14 $
d57 12
@


36.8
log
@header, info, name, norm
@
text
@d6 2
a7 2
**	$Revision: 36.7 $
**	$Date: 89/01/23 14:22:14 $
d56 1
@


36.7
log
@removed reserved tag place holders... local data processing only
@
text
@d6 2
a7 2
**	$Revision: 36.6 $
**	$Date: 89/01/23 14:05:39 $
d23 1
a23 1
struct DisplayInfo
d25 1
a25 1
	ULONG	StructID;	/* where tag used to go */
d29 5
d39 18
a56 2
	ULONG	pad[1];		/* end of local data... */
	struct TagItem	TailTag;
@


36.6
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.5 $
**	$Date: 89/01/23 10:54:32 $
a28 1
	ULONG	reserved0;	/* start of local data */
a29 1
	ULONG	reserved1;	/* where tag used to go */
a30 1
	ULONG	reserved2;	/* where tag used to go */
a31 1
	ULONG	reserved3;	/* where tag used to go */
d33 2
a34 2
	ULONG	reserved4;	/* where tag used to go */
	ULONG	Special;	/* end of local data... */
@


36.5
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.3 $
**	$Date: 89/01/23 10:48:04 $
d32 1
a32 1
	ULONG	MpscID;		/* monitor record identifier */
@


36.4
log
@*** empty log message ***
@
text
@d28 2
a29 2
	ULONG	Length;		/* length in longs to TailTag */
	ULONG	reserved0;	/* where tag used to go */
d38 1
a38 1
	ULONG	Special;	/* special processing... */
@


36.3
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.2 $
**	$Date: 89/01/23 10:33:10 $
d26 1
a26 1
	UWORD	VerRev; 	/* version : revision */
@


36.2
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.1 $
**	$Date: 89/01/20 12:02:12 $
d26 3
a28 3
	UWORD	StructVer; 	/* 	    "		*/
	UWORD	StructRev;	/* 	    "		*/
	struct TagItem	HeadTag;
@


36.1
log
@begin to incorporate displayinfo records into tag interface
@
text
@d6 2
a7 2
**	$Revision: 36.0 $
**	$Date: 88/12/13 11:56:25 $
d25 3
@


36.0
log
@added to rcs for updating
@
text
@d1 13
a13 5
struct Range
{
        unsigned short min;
        unsigned short max;
};
d15 3
a17 14
struct DisplayInfoRec
{
        struct Range    dir_Width;
        struct Range    dir_Height;
        struct Range    dir_Depth;
        unsigned short  dir_DMPX;
        unsigned short  dir_DMPY;
        unsigned short  dir_vp_modes;
        unsigned short  dir_magic2;
        unsigned short  dir_magic3;
        unsigned short  dir_magic4;
	void *dir_magicptr1;
	void *dir_magicptr2;
};
d19 3
a21 1
/* tentative definations for dir_DisplayBits */
d23 1
a23 17
#ifdef FOOBAZ
/* For horizontal resolutions */
#define HRES_MASK	0x7
#define DIR_LOWRES	0x0
#define DIR_HIRES	0x1
#define DIR_SUPERHIRES	0x2
/* numbers 3-7 are reserved for future horizontal resolutions */

/* For special display interpretations */
#define HAM
#define DUALPF
#define DUALPFREVERSE
#define EXTRA_HALFBRITE
#endif


struct DisplayInfoNode
d25 12
a36 7
        struct Node myself;
	short  reserved;
        /*struct MinNode coersion;*/
        struct MinNode access_chain;
	struct DisplayInfoNode *self;
        struct DisplayInfoRec *dir;
	struct MonitorSpec *mspc;
d39 1
a39 13
struct DisplayInfoAccessNode
{
        struct MinNode access_chain;
	struct DisplayInfoNode *self;
        struct DisplayInfoRec *dir;
};

struct QuerryRec
{
	unsigned short w;	/* for now width */
	unsigned short h;	/* height */
	unsigned short d;	/* depth */
};
@
