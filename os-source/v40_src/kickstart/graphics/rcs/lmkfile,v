head     39.23;
branch   ;
access   ;
symbols  rel39_24:39.23 rel39_18:39.22 rel39_97:39.16 rel39_90:39.16 rel39_89:39.16 rel39_82:39.16 rel39_76:39.16 rel39_71:39.16 rel39_65:39.16 rel39_64:39.16 rel39_61:39.16 rel39_60:39.16 rel39_55:39.15 rel39_52:39.14 rel39_47:39.13 rel39_39:39.12 testrcs:39.12 rel39_38:39.11 rel39_37:39.11 rel39_35:39.9 rel39_34:39.9;
locks    ; strict;
comment  @# @;


39.23
date     93.05.13.11.27.08;  author chrisg;  state Exp;
branches ;
next     39.22;

39.22
date     93.04.01.15.29.00;  author chrisg;  state Exp;
branches ;
next     39.21;

39.21
date     93.03.12.16.22.39;  author chrisg;  state Exp;
branches ;
next     39.20;

39.20
date     93.03.12.12.30.12;  author chrisg;  state Exp;
branches ;
next     39.19;

39.19
date     93.03.08.13.08.11;  author chrisg;  state Exp;
branches ;
next     39.18;

39.18
date     93.02.09.15.57.56;  author chrisg;  state Exp;
branches ;
next     39.17;

39.17
date     93.01.20.13.39.04;  author chrisg;  state Exp;
branches ;
next     39.16;

39.16
date     92.05.13.11.47.59;  author spence;  state Exp;
branches ;
next     39.15;

39.15
date     92.04.14.11.28.12;  author spence;  state Exp;
branches ;
next     39.14;

39.14
date     92.04.08.17.08.16;  author chrisg;  state Exp;
branches ;
next     39.13;

39.13
date     92.03.19.16.40.06;  author chrisg;  state Exp;
branches ;
next     39.12;

39.12
date     92.03.05.10.44.32;  author chrisg;  state Exp;
branches ;
next     39.11;

39.11
date     92.02.26.10.38.01;  author chrisg;  state Exp;
branches ;
next     39.10;

39.10
date     92.02.24.14.07.21;  author chrisg;  state Exp;
branches ;
next     39.9;

39.9
date     92.01.29.17.04.18;  author chrisg;  state Exp;
branches ;
next     39.8;

39.8
date     92.01.07.14.26.54;  author chrisg;  state Exp;
branches ;
next     39.7;

39.7
date     92.01.03.15.59.59;  author chrisg;  state Exp;
branches ;
next     39.6;

39.6
date     91.12.20.16.14.31;  author spence;  state Exp;
branches ;
next     39.5;

39.5
date     91.11.18.11.33.37;  author spence;  state Exp;
branches ;
next     39.4;

39.4
date     91.11.15.10.48.41;  author spence;  state Exp;
branches ;
next     39.3;

39.3
date     91.10.28.17.26.13;  author spence;  state Exp;
branches ;
next     39.2;

39.2
date     91.10.16.13.30.06;  author spence;  state Exp;
branches ;
next     39.1;

39.1
date     91.08.28.11.41.34;  author spence;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.11.22;  author chrisg;  state Exp;
branches ;
next     1.6;

1.6
date     91.08.13.10.38.17;  author chrisg;  state Exp;
branches ;
next     1.5;

1.5
date     91.06.19.14.41.02;  author spence;  state Exp;
branches ;
next     1.4;

1.4
date     91.06.14.11.34.36;  author spence;  state Exp;
branches ;
next     1.3;

1.3
date     91.05.20.11.40.00;  author spence;  state Exp;
branches ;
next     1.2;

1.2
date     91.05.08.16.44.02;  author spence;  state Exp;
branches ;
next     1.1;

1.1
date     91.05.08.10.53.05;  author spence;  state Exp;
branches ;
next     ;


desc
@makes all directorys
/
@


39.23
log
@added back ADDSYM!!!
@
text
@##########################################################################
#
# $Id: lmkfile,v 39.22 93/04/01 15:29:00 chrisg Exp Locker: chrisg $
#
# $Locker: chrisg $
#
##########################################################################

VERSION=	40
SRCDIRPATH=     gfxsrc:
V=              V:
SUBDIRS=	a c d gels text fonts
SRCDIR=		graphics
SUBSYSNAME=	graphics
SUBSYSGROUP=	graphics
DESTDIR=	v:src/kickstart/graphics
DESTINCDIR=	v:include

.asm.obj:
	casm -A $*.asm -iincluder: -o$*.obj

GFXLIBS= a/a.lib c/c.lib d/d.lib gels/gels.lib text/text.lib fonts/fonts.lib
OTHERFILES1=lmkfile graphics.ld graphics.ld.strip graphics_lib.sfd graphics.lmap
OTHERFILES2=graphics.xref graphics_rev.h graphics_rev.i graphics_rev.rev graphics_aa.ld graphics_emul.ld graphics_aa_nt.ld

MYLIBS=	${GFXLIBS} ${V}lib/rom.lib ${V}lib/debug.lib

AFILES=	pwrup.asm

OFILES=	pwrup.obj

EXTERNIFILES1= copper.i display.i gels.i gfx.i gfxbase.i gfxnodes.i rpattr.i
EXTERNIFILES2= monitor.i rastport.i regions.i sprite.i view.i coerce.i modeid.i
EXTERNIFILES3= displayinfo.i videocontrol.i text/scale.i text/text.i

INTERNIFILES= displayinfo_internal.i vp_internal.i macros.i sane_names.i cia8520.i gfxpragmas.h
IFILES= \
	${INTERNIFILES} \
	${EXTERNIFILES1} \
	${EXTERNIFILES2} \
	${EXTERNIFILES3}

EXTERNHFILES1= collide.h copper.h display.h displayinfo.h gels.h gfx.h rpattr.h
EXTERNHFILES2= gfxbase.h gfxmacros.h gfxnodes.h graphint.h monitor.h coerce.h modeid.h
EXTERNHFILES3= rastport.h regions.h sprite.h view.h videocontrol.h text/scale.h text/text.h

INTERNHFILES= displayinfo_internal.h vp_internal.h macros.h sane_names.h cia8520.h

HFILES= \
	${INTERNHFILES} \
	${EXTERNHFILES1} \
	${EXTERNHFILES2} \
	${EXTERNHFILES3}

FIRSTO=	pwrup.obj

MFLAGS=	VERSION=${VERSION}

LFLAGS=	SMALLCODE SMALLDATA XREF graphics.xref MAP graphics.lmap XOHSFL PLAIN ADDSYM

all:	pwrup.obj

	@@echo >ram:x "cd a"
	@@echo >>ram:x "lmk"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd c"
	@@echo >>ram:x "lmk"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd d"
	@@echo >>ram:x "lmk"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd gels"
	@@echo >>ram:x "lmk"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd text"
	@@echo >>ram:x "lmk"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd fonts"
	@@echo >>ram:x "lmk"
	@@echo >>ram:x "cd /"
	@@execute ram:x
# graphics.ld - for a600 and final A3000.
# graphics_emul.ld for a[34]000 beta
# graphics_aa.ld for A1200 and CDGS
# graphics_aa_nt.ld for final A4000
	blink <WITH <
	FROM $(FIRSTO) LIB $(MYLIBS) to graphics.ld
	$(LFLAGS)
	<
	blink <WITH <
	FROM $(FIRSTO) a/GetColormap_aa.obj a/newcolorstuff.aa.obj a/wpa8.hw.obj LIB $(MYLIBS) to graphics_aa.ld
	$(LFLAGS)
	<
	blink <WITH <
	FROM $(FIRSTO) a/wpa8.emul.obj LIB $(MYLIBS) to graphics_emul.ld
	$(LFLAGS)
	<

	blink <WITH <
	FROM $(FIRSTO) a/GetColormap_aa.obj a/newcolorstuff.aa.obj a/wpa8.nt.obj LIB $(MYLIBS) to graphics_aa_nt.ld
	$(LFLAGS)
	<

	@@run lmk -s saveobjs >con:320/10/640/40/Savaobjs/auto/inactive

pwrup.obj:	pwrup.asm graphics_rev.i gfxbase.i


# bump the revision number

rev:
	v:aug/bin/bumprev $(VERSION) graphics_rev


# delete all the .obj files

clean:
	@@echo "Say goodbye to those .obj files....."
	-delete *.obj *ld*
	@@echo >ram:x "cd a"
	@@echo >>ram:x "lmk clean"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd c"
	@@echo >>ram:x "lmk clean"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd d"
	@@echo >>ram:x "lmk clean"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd fonts"
	@@echo >>ram:x "lmk clean"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd gels"
	@@echo >>ram:x "lmk clean"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd text"
	@@echo >>ram:x "lmk clean"
	@@echo >>ram:x "cd /"
	@@execute ram:x

# protos..

protos:
	@@echo "Making lattice protos"
	@@echo >ram:x "cd c"
	@@echo >>ram:x "lmk protos"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd d"
	@@echo >>ram:x "lmk saveobjs"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd gels"
	@@echo >>ram:x "lmk saveobjs"
	@@echo >>ram:x "cd /"
	@@execute ram:x

# get back my .obj files!....

saveobjs:
	@@echo >ram:x "cd a"
	@@echo >>ram:x "lmk -s saveobjs"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd c"
	@@echo >>ram:x "lmk -s saveobjs"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd d"
	@@echo >>ram:x "lmk -s saveobjs"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd fonts"
	@@echo >>ram:x "lmk -s saveobjs"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd gels"
	@@echo >>ram:x "lmk -s saveobjs"
	@@echo >>ram:x "cd /"
	@@echo >>ram:x "cd text"
	@@echo >>ram:x "lmk -s saveobjs"
	@@echo >>ram:x "cd /"
	@@execute ram:x

# the autodocs....

doc:
	@@echo "Making autodocs. This will write to v:doc!"
	@@echo >t:x1 "cd a"
	@@echo >>t:x1 "lmk -s doc"
	@@echo >>t:x1 "cd /"
	@@echo >>t:x1 "cd c"
	@@echo >>t:x1 "lmk -s doc"
	@@echo >>t:x1 "cd /"
	@@echo >>t:x1 "cd d"
	@@echo >>t:x1 "lmk -s doc"
	@@echo >>t:x1 "cd /"
	@@echo >>t:x1 "cd gels"
	@@echo >>t:x1 "lmk -s doc"
	@@echo >>t:x1 "cd /"
	@@echo >>t:x1 "cd text"
	@@echo >>t:x1 "lmk -s doc"
	@@echo >>t:x1 "cd /"
	@@execute t:x1
	join a/a.doc c/c.doc d/d.doc gels/gels.doc text/text.doc to ram:x
	autodoc ram:x >graphics.doc
	delete ram:x
	copy graphics.doc v:doc

# to the server...

internal:
	@@echo "Make internal - Server, or bust!"
	stripf graphics.ld graphics.ld.strip
	copy $(AFILES) $(DESTDIR) nopro
	copy $(EXTERNIFILES1) $(DESTDIR) nopro
	copy $(EXTERNIFILES2) $(DESTDIR) nopro
	copy $(EXTERNIFILES3) $(DESTDIR) nopro
	copy $(EXTERNHFILES1) $(DESTDIR) nopro
	copy $(EXTERNHFILES2) $(DESTDIR) nopro
	copy $(EXTERNHFILES3) $(DESTDIR) nopro
	copy $(OTHERFILES1) $(DESTDIR) nopro
	copy $(OTHERFILES2) $(DESTDIR) nopro
	@@echo >t:x1 "cd a"
	@@echo >>t:x1 "lmk -s internal"
	@@echo >>t:x1 "cd /d"
	@@echo >>t:x1 "lmk -s internal"
	@@echo >>t:x1 "cd /text"
	@@echo >>t:x1 "lmk -s internal"
	@@echo >>t:x1 "cd /fonts"
	@@echo >>t:x1 "lmk -s internal"
	@@echo >>t:x1 "cd /c"
	@@echo >>t:x1 "lmk -s internal"
	@@echo >>t:x1 "cd /gels"
	@@echo >>t:x1 "lmk -s internal"
	@@echo >>t:x1 "cd /"
	@@execute t:x1
	@@delete t:x1
	copy graphics_lib.sfd v:lib/sfd nopro
	
# include files....

headers:
	@@echo "Copying all include files over to their homes..."
	@@copy $(EXTERNHFILES1) $(DESTINCDIR)/$(SUBSYSGROUP) nopro
	@@copy $(EXTERNHFILES2) $(DESTINCDIR)/$(SUBSYSGROUP) nopro
	@@copy $(EXTERNHFILES3) $(DESTINCDIR)/$(SUBSYSGROUP) nopro
	@@copy $(EXTERNIFILES1) $(DESTINCDIR)/$(SUBSYSGROUP) nopro
	@@copy $(EXTERNIFILES2) $(DESTINCDIR)/$(SUBSYSGROUP) nopro
	@@copy $(EXTERNIFILES3) $(DESTINCDIR)/$(SUBSYSGROUP) nopro
	@@echo "... and to your include:"
	@@protect include:graphics/* rwed
	@@copy $(DESTINCDIR)/$(SUBSYSGROUP) include:graphics nopro
	@@echo "Now, the internal files."
	@@copy ${INTERNHFILES} ${DESTDIR} nopro
	@@copy ${INTERNIFILES} ${DESTDIR} nopro

#stripper? I hardly even know her.
#	@@rx stripper $(SRCDIRPATH),$(EXTERNHFILES1),$(DESTINCDIR).strip/$(SUBSYSGROUP)
#	@@rx stripper $(SRCDIRPATH),$(EXTERNHFILES2),$(DESTINCDIR).strip/$(SUBSYSGROUP)
#	@@rx stripper $(SRCDIRPATH),$(EXTERNHFILES3),$(DESTINCDIR).strip/$(SUBSYSGROUP)
#	@@rx stripper $(SRCDIRPATH),$(EXTERNIFILES1),$(DESTINCDIR).strip/$(SUBSYSGROUP)
#	@@rx stripper $(SRCDIRPATH),$(EXTERNIFILES2),$(DESTINCDIR).strip/$(SUBSYSGROUP)
#	@@rx stripper $(SRCDIRPATH),$(EXTERNIFILES3),$(DESTINCDIR).strip/$(SUBSYSGROUP)
@


39.22
log
@added yet another variant build. wpa8.nt.obj supports chunkytoplanar hardware,
but does not test for it!
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.21 93/03/12 16:22:39 chrisg Exp Locker: chrisg $
d59 1
a59 1
LFLAGS=	SMALLCODE SMALLDATA XREF graphics.xref MAP graphics.lmap XOHSFL PLAIN
@


39.21
log
@update to _aa build variant
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.20 93/03/12 12:30:12 chrisg Exp Locker: chrisg $
d24 1
a24 1
OTHERFILES2=graphics.xref graphics_rev.h graphics_rev.i graphics_rev.rev graphics_aa.ld graphics_emul.ld
d82 1
a82 1
# graphics.ld - for a600
d84 2
a85 1
# graphics_aa.ld for A1200 and a[34]00 final and CDGS
d96 5
@


39.20
log
@killed "."s in variant build.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.19 93/03/08 13:08:11 chrisg Exp Locker: chrisg $
d90 1
a90 1
	FROM $(FIRSTO) a/newcolorstuff.aa.obj a/wpa8.hw.obj LIB $(MYLIBS) to graphics_aa.ld
@


39.19
log
@added extra graphics builds

@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.18 93/02/09 15:57:56 chrisg Exp Locker: chrisg $
d24 1
a24 1
OTHERFILES2=graphics.xref graphics_rev.h graphics_rev.i graphics_rev.rev graphics.aa.ld graphics.emul.ld
d83 2
a84 2
# graphics.emul.ld for a[34]000 beta
# graphics.aa.ld for A1200 and a[34]00 final and CDGS
d90 1
a90 1
	FROM $(FIRSTO) a/newcolorstuff.aa.obj a/wpa8.hw.obj LIB $(MYLIBS) to graphics.aa.ld
d94 1
a94 1
	FROM $(FIRSTO) a/wpa8.emul.obj LIB $(MYLIBS) to graphics.emul.ld
@


39.18
log
@bumped to v40.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.17 93/01/20 13:39:04 chrisg Exp Locker: chrisg $
d24 1
a24 1
OTHERFILES2=graphics.xref graphics_rev.h graphics_rev.i graphics_rev.rev
d82 3
d89 9
@


39.17
log
@new linker options for more symbols.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.16 92/05/13 11:47:59 spence Exp Locker: chrisg $
d9 1
a9 1
VERSION=	39
d94 1
a94 1
	v:aug/bin/bumprev 39 graphics_rev
@


39.16
log
@added modeid.h,i
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.15 92/04/14 11:28:12 spence Exp Locker: spence $
d5 1
a5 1
# $Locker: spence $
d59 1
a59 1
LFLAGS=	SMALLCODE SMALLDATA ADDSYM XREF graphics.xref MAP graphics.lmap XOHSFL PLAIN
@


39.15
log
@Use V:aug/bin/bumprev
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.14 92/04/08 17:08:16 chrisg Exp Locker: spence $
d33 1
a33 1
EXTERNIFILES2= monitor.i rastport.i regions.i sprite.i view.i coerce.i
d44 1
a44 1
EXTERNHFILES2= gfxbase.h gfxmacros.h gfxnodes.h graphint.h monitor.h coerce.h
@


39.14
log
@rpattr.i/h
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.13 92/03/19 16:40:06 chrisg Exp Locker: chrisg $
d5 1
a5 1
# $Locker: chrisg $
d94 1
a94 1
	@@rx >* bumprev.rexx $(SRCDIRPATH) $(VERSION)
@


39.13
log
@fixed make doc
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.12 92/03/05 10:44:32 chrisg Exp Locker: chrisg $
d32 1
a32 1
EXTERNIFILES1= copper.i display.i gels.i gfx.i gfxbase.i gfxnodes.i
d43 1
a43 1
EXTERNHFILES1= collide.h copper.h display.h displayinfo.h gels.h gfx.h 
@


39.12
log
@massive changes to make internal. now each directory knows how to copy
all files (and no more) needed.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.11 92/02/26 10:38:01 chrisg Exp Locker: chrisg $
d180 1
a180 1
	join a/a.doc c/c.doc d/d.doc gels/*.gels.doc text/text.doc to ram:x
@


39.11
log
@ made copy sub lmkfiles and added nopro.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.10 92/02/24 14:07:21 chrisg Exp Locker: chrisg $
d23 2
d36 1
a36 1
INTERNIFILES= displayinfo_internal.i vp_internal.i macros.i sane_names.i cia8520.i
a188 1
	execute testsfd
d190 24
a213 13
	copy ** $(DESTDIR) nopro
	copy a/*.(c|asm|h|i) $(DESTDIR)/a nopro
	copy c/*.(c|asm|h|i) $(DESTDIR)/c nopro
	copy d/*.(c|asm|h|i) $(DESTDIR)/d nopro
	copy fonts/*.(c|asm|h|i) $(DESTDIR)/fonts nopro
	copy gels/*.(c|asm|h|i) $(DESTDIR)/gels nopro
	copy text/*.(c|asm|h|i) $(DESTDIR)/text nopro
	copy a/lmkfile $(DESTDIR)/a nopro
	copy c/lmkfile $(DESTDIR)/c nopro
	copy d/lmkfile $(DESTDIR)/d nopro
	copy fonts/lmkfile $(DESTDIR)/fonts nopro
	copy gels/lmkfile $(DESTDIR)/gels nopro
	copy text/lmkfile $(DESTDIR)/text nopro
@


39.10
log
@added checksfd
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.9 92/01/29 17:04:18 chrisg Exp Locker: chrisg $
d196 6
d208 6
a213 6
	@@copy $(EXTERNHFILES1) $(DESTINCDIR)/$(SUBSYSGROUP)
	@@copy $(EXTERNHFILES2) $(DESTINCDIR)/$(SUBSYSGROUP)
	@@copy $(EXTERNHFILES3) $(DESTINCDIR)/$(SUBSYSGROUP)
	@@copy $(EXTERNIFILES1) $(DESTINCDIR)/$(SUBSYSGROUP)
	@@copy $(EXTERNIFILES2) $(DESTINCDIR)/$(SUBSYSGROUP)
	@@copy $(EXTERNIFILES3) $(DESTINCDIR)/$(SUBSYSGROUP)
d216 1
a216 1
	@@copy $(DESTINCDIR)/$(SUBSYSGROUP) include:graphics
@


39.9
log
@fixed make doc. uggh.
rcsdiff gfxbase.h
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.8 92/01/07 14:26:54 chrisg Exp Locker: chrisg $
d187 1
@


39.8
log
@now saves object files away w/o opening a window.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.7 92/01/03 15:59:59 chrisg Exp Locker: chrisg $
d162 17
a178 1
	join a/*.asm c/*.(c|asm) d/*.(c|asm) fonts/*.(c|asm) gels/*.(c|asm) text/*.(c|asm) to ram:x
@


39.7
log
@made con: window come up inactive
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.6 91/12/20 16:14:31 spence Exp Locker: chrisg $
d84 1
a84 1
	@@run lmk saveobjs >con:320/10/640/40/Savaobjs/auto/inactive
a137 1
	@@echo "Save those .obj files onto disk..."
d139 1
a139 1
	@@echo >>ram:x "lmk saveobjs"
d142 1
a142 1
	@@echo >>ram:x "lmk saveobjs"
d145 1
a145 1
	@@echo >>ram:x "lmk saveobjs"
d148 1
a148 1
	@@echo >>ram:x "lmk saveobjs"
d151 1
a151 1
	@@echo >>ram:x "lmk saveobjs"
d154 1
a154 1
	@@echo >>ram:x "lmk saveobjs"
@


39.6
log
@removed clip.h/i from externifiles list
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.5 91/11/18 11:33:37 spence Exp Locker: spence $
d5 1
a5 1
# $Locker: spence $
d84 1
a84 1
	@@run lmk saveobjs >con:320/10/640/40/Savaobjs/auto
@


39.5
log
@No longer copies layers.h/i in make headers (is now in layers.library
domain).
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.4 91/11/15 10:48:41 spence Exp Locker: spence $
d30 1
a30 1
EXTERNIFILES1= clip.i copper.i display.i gels.i gfx.i gfxbase.i gfxnodes.i
d41 1
a41 1
EXTERNHFILES1= clip.h collide.h copper.h display.h displayinfo.h gels.h gfx.h 
d84 1
a84 1
	@@run lmk saveobjs >con:320/10/640/40/Savaobjs
@


39.4
log
@ceorce.h,i
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.3 91/10/28 17:26:13 spence Exp Locker: spence $
d31 1
a31 1
EXTERNIFILES2= layers.i monitor.i rastport.i regions.i sprite.i view.i coerce.i
d42 1
a42 1
EXTERNHFILES2= gfxbase.h gfxmacros.h gfxnodes.h graphint.h layers.h monitor.h coerce.h
@


39.3
log
@make headers copies the internal headers to V:src/kickstart/graphics
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.2 91/10/16 13:30:06 spence Exp Locker: spence $
d31 1
a31 1
EXTERNIFILES2= layers.i monitor.i rastport.i regions.i sprite.i view.i 
d42 1
a42 1
EXTERNHFILES2= gfxbase.h gfxmacros.h gfxnodes.h graphint.h layers.h monitor.h
@


39.2
log
@make headers also copies to include:graphics
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.1 91/08/28 11:41:34 spence Exp Locker: spence $
d34 1
d36 1
a36 4
	cia8520.i \
	sane_names.i \
	macros.i \
	displayinfo_internal.i \
d45 2
d48 1
a48 4
	cia8520.h \
	sane_names.h \
	macros.h \
	displayinfo_internal.h \
d195 3
@


39.1
log
@V39
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.0 91/08/21 17:11:22 chrisg Exp Locker: spence $
d195 3
@


39.0
log
@Bumped
@
text
@d3 1
a3 1
# $Id: lmkfile,v 1.6 91/08/13 10:38:17 chrisg Exp Locker: chrisg $
d5 1
a5 1
# $Locker: chrisg $
d9 1
a9 1
VERSION=	38
@


1.6
log
@ added gfxsrc: define and **
@
text
@d3 1
a3 1
# $Id: lmkfile,v 1.5 91/06/19 14:41:02 spence Exp Locker: chrisg $
@


1.5
log
@no stripped include files.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 1.4 91/06/14 11:34:36 spence Exp Locker: spence $
d5 1
a5 1
# $Locker: spence $
d10 1
a10 1
SRCDIRPATH=     work:src/gfx
d176 1
a176 1
	copy * $(DESTDIR) nopro
@


1.4
log
@V38 usage
@
text
@d3 1
a3 1
# $Id: lmkfile,v 1.3 91/05/20 11:40:00 spence Exp Locker: spence $
d17 1
a17 1
DESTINCDIR=	include:
d183 1
a183 1
#	copy graphics_lib.sfd v:lib/sfd nopro
d197 6
a202 6
	@@rx stripper $(SRCDIRPATH),$(EXTERNHFILES1),$(DESTINCDIR).strip/$(SUBSYSGROUP)
	@@rx stripper $(SRCDIRPATH),$(EXTERNHFILES2),$(DESTINCDIR).strip/$(SUBSYSGROUP)
	@@rx stripper $(SRCDIRPATH),$(EXTERNHFILES3),$(DESTINCDIR).strip/$(SUBSYSGROUP)
	@@rx stripper $(SRCDIRPATH),$(EXTERNIFILES1),$(DESTINCDIR).strip/$(SUBSYSGROUP)
	@@rx stripper $(SRCDIRPATH),$(EXTERNIFILES2),$(DESTINCDIR).strip/$(SUBSYSGROUP)
	@@rx stripper $(SRCDIRPATH),$(EXTERNIFILES3),$(DESTINCDIR).strip/$(SUBSYSGROUP)
@


1.3
log
@protos
@
text
@d3 1
a3 1
# $Id: lmkfile,v 1.2 91/05/08 16:44:02 spence Exp Locker: spence $
d9 1
a9 1
VERSION=	37
d11 1
a11 1
V=              V${VERSION}:
d16 2
a17 3
#DESTDIR=	v:src/kickstart/graphics
DESTDIR=	t:gfx
DESTINCDIR=	t:gfxi		# will be v:include
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
# $Id: lmkfile,v 1.1 91/05/08 10:53:05 spence Exp Locker: spence $
d23 1
a23 7
GFXLIBS= \
	a/a.lib \
	c/c.lib \
	d/d.lib \
	gels/gels.lib \
	text/text.lib \
	fonts/fonts.lib
d61 1
a61 1
LFLAGS=	XREF=$*.xref MAP=$*.lmap
d84 5
a88 1
	blink FROM $(FIRSTO) LIB $(MYLIBS) to graphics.ld
d124 15
d176 2
a177 1
	copy \#? $(DESTDIR) nopro
d196 2
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
# $Id: Makefile,v 37.2 91/03/08 17:18:57 spence Exp $
d5 1
a5 1
# $Locker:  $
d18 1
d37 3
a39 16
EXTERNIFILES= \
	clip.i \
	copper.i \
	display.i \
	gels.i \
	gfx.i \
	gfxbase.i \
	gfxnodes.i \
	layers.i \
	monitor.i \
	rastport.i \
	regions.i \
	sprite.i \
	view.i \
	displayinfo.i \
	videocontrol.i
d46 3
a48 1
	${EXTERNIFILES}
d50 3
a52 19
EXTERNHFILES= \
	clip.h \
	collide.h \
	copper.h \
	display.h \
	displayinfo.h \
	gels.h \
	gfx.h \
	gfxbase.h \
	gfxmacros.h \
	gfxnodes.h \
	graphint.h \
	layers.h \
	monitor.h \
	rastport.h \
	regions.h \
	sprite.h \
	view.h \
	videocontrol.h
d59 3
a61 1
	${EXTERNHFILES}
d104 1
d109 1
a109 3
	@@echo "make clean a" >*
	@@execute ram:x
	@@echo >ram:x "cd c"
d112 1
a112 3
	@@echo "make clean c" >*
	@@execute ram:x
	@@echo >ram:x "cd d"
d115 1
a115 3
	@@echo "make clean d" >*
	@@execute ram:x
	@@echo >ram:x "cd fonts"
d118 1
a118 3
	@@echo "make clean fonts" >*
	@@execute ram:x
	@@echo >ram:x "cd gels"
d121 1
a121 3
	@@echo "make clean gels" >*
	@@execute ram:x
	@@echo >ram:x "cd text"
a123 1
	@@echo "make clean text" >*
d129 1
d133 1
a133 3
	@@echo "make saveobjs a" >*
	@@execute ram:x
	@@echo >ram:x "cd c"
d136 1
a136 3
	@@echo "make saveobjs c" >*
	@@execute ram:x
	@@echo >ram:x "cd d"
d139 1
a139 3
	@@echo "make saveobjs d" >*
	@@execute ram:x
	@@echo >ram:x "cd fonts"
d142 1
a142 3
	@@echo "make saveobjs fonts" >*
	@@execute ram:x
	@@echo >ram:x "cd gels"
d145 1
a145 3
	@@echo "make saveobjs gels" >*
	@@execute ram:x
	@@echo >ram:x "cd text"
a147 1
	@@echo "make saveobjs text" >*
d153 1
d162 1
d172 16
@
