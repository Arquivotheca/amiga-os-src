head     39.33;
branch   ;
access   ;
symbols  rel39_24:39.33 rel39_18:39.33 rel39_97:39.29 rel39_90:39.28 rel39_89:39.28 rel39_82:39.28 rel39_76:39.24 rel39_71:39.22 rel39_65:39.20 rel39_64:39.18 rel39_61:39.18 rel39_60:39.17 rel39_55:39.15 rel39_52:39.15 rel39_47:39.14 rel39_39:39.11 rel39_38:39.11 rel39_37:39.10 rel39_35:39.9 rel39_34:39.9 V37_30:37.3 V37_29:37.3 V37_28:37.3 V37_27:37.3 V37_25:37.3 V37_24:37.2 V37_23:37.2 V37_22:37.2 V37_21:37.2 V37_20:37.2 V37_19:37.2 V37_18:37.2 V37_15:37.2 V37_14:37.2 V37_13:37.2 V37_12:37.2 V37_11:37.1 V37_10:37.1 V37_9:37.1 V37_8:37.1 V37_7:37.1 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.21 V36_208:36.21 V36_207:36.21 V36_205:36.21 V36_203:36.21 V36_202:36.21 V36_201:36.21 V36_200:36.21 V36_199:36.21 V36_198:36.21 V36_196:36.21 V36_195:36.21 V36_194:36.21 V36_193:36.21 V36_192:36.21 V36_191:36.21 V36_190:36.21 V36_189:36.21 V36_188:36.21 V36_187:36.21 V36_186:36.21 V36_185:36.21 V36_184:36.19 V36_183:36.19 V36_182:36.19 V36_181:36.19 V36_180:36.19 V36_179:36.19 V36_161:36.18 V36_160:36.18 V36_158:36.18 V36_157:36.18 V36_153:36.18 V36_151:36.18 V36_147:36.17 V36_146:36.17 V36_144:36.17 V36_143:36.16 V36_142:36.16 V36_141:36.16 V36_139:36.16 V36_137:36.16 V36_136:36.16 V36_135:36.16 V36_133:36.16 V36_131:36.15 V36_130:36.15 V36_129:36.15 V36_128:36.15 V36_127:36.15 V36_126:36.15 V36_125:36.15 V36_123:36.15 V36_122:36.15 V36_121:36.15 V36_0:36.15 V36_118:36.15 V36_116:36.15 V36_115:36.14 V36_114:36.14 V36_112:36.14 V36_107:36.14 V36_106:36.14 V36_104:36.13 V36_103:36.13 V36_101:36.13 V36_100:36.13 V36_99:36.13 V36_95:36.13 V36_94:36.13 V36_92:36.13 V36_90:36.13 V36_89:36.13 V36_88:36.13 V36_83:36.11 V36_82:36.11 V36_79:36.10 V36_78:36.10 V36_77:36.10 V36_75:36.9 V36_74:36.9 V36_73:36.9 V36_72:36.9 V36_70:36.9 V36_69:36.9 V36_61:36.8 V36_60:36.8 V36_59:36.8 V36_57:36.6 V36_56:36.6 V36_55:36.6 V36_54:36.6 V36_52:36.6 V36_51:36.6 V36_50:36.6 V36_48:36.6 V36_47:36.6 V36_46:36.6 V36_45:36.6 V36_44:36.6 V36_43:36.6 V36_42:36.6 V36_41:36.6 V36_40:36.6 V36_37:36.6 V36_36:36.6 V36_35:36.6 V36_34:36.6 V36_33:36.6 V36_30:36.6 V36_29:36.6 V36_27:36.6;
locks    ; strict;
comment  @*   @;


39.33
date     93.04.21.18.44.00;  author chrisg;  state Exp;
branches ;
next     39.32;

39.32
date     93.03.08.10.30.02;  author chrisg;  state Exp;
branches ;
next     39.31;

39.31
date     93.02.15.11.24.24;  author spence;  state Exp;
branches ;
next     39.30;

39.30
date     92.11.23.16.53.07;  author spence;  state Exp;
branches ;
next     39.29;

39.29
date     92.11.09.14.23.58;  author chrisg;  state Exp;
branches ;
next     39.28;

39.28
date     92.08.10.10.21.30;  author chrisg;  state Exp;
branches ;
next     39.27;

39.27
date     92.08.08.11.02.56;  author chrisg;  state Exp;
branches ;
next     39.26;

39.26
date     92.08.06.16.39.49;  author spence;  state Exp;
branches ;
next     39.25;

39.25
date     92.08.06.11.36.38;  author spence;  state Exp;
branches ;
next     39.24;

39.24
date     92.07.29.16.36.44;  author chrisg;  state Exp;
branches ;
next     39.23;

39.23
date     92.07.21.14.48.27;  author chrisg;  state Exp;
branches ;
next     39.22;

39.22
date     92.06.16.13.31.45;  author chrisg;  state Exp;
branches ;
next     39.21;

39.21
date     92.06.11.12.18.22;  author spence;  state Exp;
branches ;
next     39.20;

39.20
date     92.06.09.11.27.25;  author chrisg;  state Exp;
branches ;
next     39.19;

39.19
date     92.06.08.14.07.15;  author spence;  state Exp;
branches ;
next     39.18;

39.18
date     92.06.03.16.36.54;  author chrisg;  state Exp;
branches ;
next     39.17;

39.17
date     92.05.13.11.47.21;  author spence;  state Exp;
branches ;
next     39.16;

39.16
date     92.05.05.12.22.37;  author chrisg;  state Exp;
branches ;
next     39.15;

39.15
date     92.04.07.14.51.36;  author spence;  state Exp;
branches ;
next     39.14;

39.14
date     92.04.03.16.54.41;  author chrisg;  state Exp;
branches ;
next     39.13;

39.13
date     92.03.19.16.37.48;  author chrisg;  state Exp;
branches ;
next     39.12;

39.12
date     92.03.06.12.45.32;  author spence;  state Exp;
branches ;
next     39.11;

39.11
date     92.03.03.10.45.16;  author spence;  state Exp;
branches ;
next     39.10;

39.10
date     92.02.24.13.58.37;  author chrisg;  state Exp;
branches ;
next     39.9;

39.9
date     92.01.29.16.59.12;  author spence;  state Exp;
branches ;
next     39.8;

39.8
date     92.01.21.13.37.38;  author chrisg;  state Exp;
branches ;
next     39.7;

39.7
date     92.01.21.10.22.40;  author spence;  state Exp;
branches ;
next     39.6;

39.6
date     91.11.04.15.36.42;  author chrisg;  state Exp;
branches ;
next     39.5;

39.5
date     91.10.30.19.31.10;  author spence;  state Exp;
branches ;
next     39.4;

39.4
date     91.10.28.11.50.57;  author chrisg;  state Exp;
branches ;
next     39.3;

39.3
date     91.10.16.17.26.44;  author spence;  state Exp;
branches ;
next     39.2;

39.2
date     91.10.15.16.04.17;  author chrisg;  state Exp;
branches ;
next     39.1;

39.1
date     91.08.27.17.07.26;  author spence;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.10.16;  author chrisg;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.27.17.11.28;  author spence;  state Exp;
branches ;
next     38.0;

38.0
date     91.05.30.13.06.18;  author spence;  state Exp;
branches ;
next     37.3;

37.3
date     91.04.15.10.27.35;  author spence;  state Exp;
branches ;
next     37.2;

37.2
date     91.02.07.15.38.59;  author spence;  state Exp;
branches ;
next     37.1;

37.1
date     91.01.30.10.59.53;  author spence;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.14.15;  author spence;  state Exp;
branches ;
next     36.21;

36.21
date     90.09.26.10.22.07;  author bart;  state Exp;
branches ;
next     36.20;

36.20
date     90.09.25.18.14.40;  author bart;  state Exp;
branches ;
next     36.19;

36.19
date     90.07.27.16.28.17;  author bart;  state Exp;
branches ;
next     36.18;

36.18
date     90.05.11.14.16.29;  author bart;  state Exp;
branches ;
next     36.17;

36.17
date     90.05.02.10.33.53;  author kodiak;  state Exp;
branches ;
next     36.16;

36.16
date     90.03.28.09.41.18;  author bart;  state Exp;
branches ;
next     36.15;

36.15
date     90.02.28.09.37.45;  author bart;  state Exp;
branches ;
next     36.14;

36.14
date     89.12.15.12.24.56;  author bart;  state Exp;
branches ;
next     36.13;

36.13
date     89.10.25.12.34.05;  author bart;  state Exp;
branches ;
next     36.12;

36.12
date     89.10.25.10.35.19;  author bart;  state Exp;
branches ;
next     36.11;

36.11
date     89.09.17.08.41.11;  author bart;  state Exp;
branches ;
next     36.10;

36.10
date     89.08.22.09.08.34;  author bart;  state Exp;
branches ;
next     36.9;

36.9
date     89.06.23.17.31.12;  author bart;  state Exp;
branches ;
next     36.8;

36.8
date     89.05.02.09.31.33;  author bart;  state Exp;
branches ;
next     36.7;

36.7
date     89.05.02.09.01.47;  author bart;  state Exp;
branches ;
next     36.6;

36.6
date     89.02.17.21.55.46;  author bart;  state Exp;
branches ;
next     36.5;

36.5
date     89.02.15.12.52.02;  author bart;  state Exp;
branches ;
next     36.4;

36.4
date     89.02.14.10.17.24;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     89.02.01.17.54.33;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     89.01.31.17.43.47;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     89.01.31.17.41.03;  author bart;  state Exp;
branches ;
next     36.0;

36.0
date     88.12.13.11.56.34;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.33
log
@Defined ChunkyToPlanarPtr
@
text
@    IFND    GRAPHICS_GFXBASE_I
GRAPHICS_GFXBASE_I  SET 1
**
**	$Id: gfxbase.i,v 39.32 93/03/08 10:30:02 chrisg Exp Locker: chrisg $
**
**	graphics base definitions
**
**	(C) Copyright 1985,1986,1987,1988,1989 Commodore-Amiga, Inc.
**	    All Rights Reserved
**

    IFND    EXEC_LISTS_I
    include 'exec/lists.i'
    ENDC
    IFND    EXEC_LIBRARIES_I
    include 'exec/libraries.i'
    ENDC
    IFND    EXEC_INTERRUPTS_I
    include 'exec/interrupts.i'
    ENDC
    IFND    GRAPHICS_MONITOR_I
    include 'graphics/monitor.i'
    ENDC

 STRUCTURE  GfxBase,LIB_SIZE
	APTR	gb_ActiView		; struct *View
	APTR	gb_copinit		; struct *copinit; ptr to copper start up list
	APTR	gb_cia			; for 6526 resource use
	APTR	gb_blitter		; for blitter resource use
	APTR	gb_LOFlist		; current copper list being run
	APTR	gb_SHFlist		; current copper list being run
	APTR	gb_blthd		; struct *bltnode
	APTR	gb_blttl
	APTR	gb_bsblthd
	APTR	gb_bsblttl
	STRUCT	gb_vbsrv,IS_SIZE
	STRUCT	gb_timsrv,IS_SIZE
	STRUCT	gb_bltsrv,IS_SIZE
	STRUCT	gb_TextFonts,LH_SIZE
	APTR	gb_DefaultFont
	UWORD	gb_Modes		; copy of bltcon0
	BYTE	gb_VBlank
	BYTE	gb_Debug
	UWORD	gb_BeamSync
	WORD	gb_system_bplcon0
	BYTE	gb_SpriteReserved
	BYTE	gb_bytereserved

	WORD	gb_Flags
	WORD	gb_BlitLock
	WORD	gb_BlitNest
	STRUCT	gb_BlitWaitQ,LH_SIZE
	APTR	gb_BlitOwner
	STRUCT	gb_TOF_WaitQ,LH_SIZE

	WORD	gb_DisplayFlags
	APTR	gb_SimpleSprites
	WORD	gb_MaxDisplayRow
	WORD	gb_MaxDisplayColumn
	WORD	gb_NormalDisplayRows
	WORD	gb_NormalDisplayColumns
	WORD	gb_NormalDPMX
	WORD	gb_NormalDPMY

	APTR	gb_LastChanceMemory
	APTR	gb_LCMptr

	WORD	gb_MicrosPerLine	; usecs per line times 256
	WORD	gb_MinDisplayColumn

	UBYTE	gb_ChipRevBits0		; agnus/denise new features
	UBYTE	gb_MemType
	STRUCT	gb_crb_reserved,4

	STRUCT	gb_monitor_id,2		; normally null
	STRUCT	gb_hedley,4*8
	STRUCT	gb_hedley_sprites,4*8
	STRUCT	gb_hedley_sprites1,4*8
	WORD	gb_hedley_count
	WORD	gb_hedley_flags
	WORD	gb_hedley_tmp
	APTR	gb_hash_table
	UWORD	gb_current_tot_rows
	UWORD	gb_current_tot_cclks
	UBYTE	gb_hedley_hint
	UBYTE	gb_hedley_hint2
	STRUCT	gb_nreserved,4*4
	APTR	gb_a2024_sync_raster
	UWORD	gb_control_delta_pal
	UWORD	gb_control_delta_ntsc
	APTR	gb_current_monitor
	STRUCT	gb_MonitorList,LH_SIZE
	APTR	gb_default_monitor
	APTR	gb_MonitorListSemaphore
	APTR	gb_DisplayInfoDataBase
	UWORD	gb_TopLine
	APTR	gb_ActiViewCprSemaphore
	APTR	gb_UtilBase
	APTR	gb_ExecBase
	APTR	gb_bwshifts
	APTR	gb_StrtFetchMasks
	APTR	gb_StopFetchMasks
	APTR	gb_Overrun
	APTR	gb_RealStops
	WORD	gb_SpriteWidth
	WORD	gb_SpriteFMode
	BYTE	gb_SoftSprites
	BYTE	gb_arraywidth					; need 2 more bytes to be lword aligned
	WORD	gb_DefaultSpriteWidth			; what sprite width intuiton wants.
	BYTE	gb_SprMoveDisable
	BYTE	gb_WantChips
	UBYTE	gb_BoardMemType
	UBYTE	gb_Bugs
	ULONG   gb_LayersBase
	ULONG 	gb_ColorMask
	APTR	gb_IVector
	APTR	gb_IData
	ULONG	gb_SpecialCounter
	APTR	gb_DBList
	UWORD	gb_MonitorFlags
	BYTE	gb_ScanDoubledSprites
	BYTE	gb_BP3Bits
	STRUCT	gb_MonitorVBlank,asi_SIZEOF
	APTR	gb_natural_monitor
	APTR	gb_ProgData
	BYTE	gb_ExtSprites
	UBYTE	gb_pad3
	WORD	gb_GfxFlags
	ULONG	gb_VBCounter
	APTR	gb_HashTableSemaphore
	STRUCT 	gb_HWEmul,9*4
	LABEL	gb_SIZE

gb_ChunkyToPlanarPtr	equ	gb_HWEmul

* bits for dalestuff, which may go away when blitter becomes a resource
OWNBLITTERn equ 0   * blitter owned bit
QBOWNERn    equ 1   * blitter owned by blit queuer
BLITMSG_FAULTn  equ 2

BLITMSG_FAULT	equ 1<<BLITMSG_FAULTn
QBOWNER		equ 1<<QBOWNERn

	BITDEF	GBFLAGS,TIMER,6
	BITDEF	GBFLAGS,LASTBLIT,7

* flag bits for ChipRevBits
	BITDEF	GFX,BIG_BLITS,0
	BITDEF	GFX,HR_AGNUS,0
	BITDEF	GFX,HR_DENISE,1
	BITDEF	GFX,AA_ALICE,2
	BITDEF	GFX,AA_LISA,3
	BITDEF	GFX,AA_MLISA,4		; internal use only

* For SetChipRev()
SETCHIPREV_A	equ	GFXF_HR_AGNUS
SETCHIPREV_ECS	equ	(GFXF_HR_AGNUS!GFXF_HR_DENISE)
SETCHIPREV_AA	equ	(GFXF_AA_ALICE!GFXF_AA_LISA!SETCHIPREV_ECS)
SETCHIPREV_BEST	equ	$ffffffff

* memory type
BUS_16		equ	0
NML_CAS		equ	0
BUS_32		equ	1
DBL_CAS		equ	2
BANDWIDTH_1X	equ	(BUS_16!NML_CAS)
BANDWIDTH_2XNML	equ	BUS_32
BANDWIDTH_2XDBL	equ	DBL_CAS
BANDWIDTH_4X	equ	(BUS_32!DBL_CAS)


* flag bits for DisplayFlags

NTSCn		equ 0
NTSC		equ 1<<NTSCn

GENLOCn		equ 1
GENLOC		equ 1<<GENLOCn

PALn		equ 2
PAL		equ 1<<PALn


TODA_SAFEn  	equ 3
TODA_SAFE   	equ 1<<TODA_SAFEn

REALLY_PALn	equ	4	
; what is actual crystal frequency (as opposed to what bootmenu set the agnus to)?
REALLY_PAL	equ	1<<REALLY_PALn

LPEN_SWAP_FRAMESn	equ	5
LPEN_SWAP_FRAMES	equ	1<<LPEN_SWAP_FRAMESn

* handy name macro

GRAPHICSNAME	MACRO
		DC.B  'graphics.library',0
		ENDM

    ENDC	; GRAPHICS_GFXBASE_I
@


39.32
log
@added chunky hw emulation.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.31 93/02/15 11:24:24 spence Exp Locker: chrisg $
d133 2
@


39.31
log
@redefined UBYTE pad3[3] as UBYTEpad3, UWORD gb_GfxFlags.
Defined a new flag for GfxFlags NEW_DATABASE. This bit is clear, but
will be set in the future when the new database is implemented. This is
so the monitors can detect this flag in the future and not install
themselves.
Also added LPEN_SWAP_FRAMES flag to DisplayFlags.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.30 92/11/23 16:53:07 spence Exp Locker: spence $
d131 1
@


39.30
log
@HashTableSemaphore
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.29 92/11/09 14:23:58 chrisg Exp Locker: spence $
d127 2
a128 1
	STRUCT	gb_pad3,3
d188 2
@


39.29
log
@added VBCounter for intuition
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.28 92/08/10 10:21:30 chrisg Exp Locker: chrisg $
d129 1
@


39.28
log
@added symbols for qblit code.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.27 92/08/08 11:02:56 chrisg Exp Locker: chrisg $
d127 2
@


39.27
log
@added ExtSprite field for tracking who is an ExtSprite.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.26 92/08/06 16:39:49 spence Exp Locker: chrisg $
d132 4
d137 3
a163 1
QBOWNER		equ 1<<QBOWNERn
a183 2
BLITMSG_FAULTn  equ 2
BLITMSG_FAULT	equ 1<<BLITMSG_FAULTn
@


39.26
log
@Pointer to the ROM ProgData
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.25 92/08/06 11:36:38 spence Exp Locker: spence $
d126 1
@


39.25
log
@added natural_monitor
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.24 92/07/29 16:36:44 chrisg Exp Locker: spence $
d125 1
@


39.24
log
@REALLY_PALn symbol.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.23 92/07/21 14:48:27 chrisg Exp Locker: chrisg $
d124 1
@


39.23
log
@really_pal flag.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.22 92/06/16 13:31:45 chrisg Exp Locker: chrisg $
d171 3
a173 1
REALLY_PAL	equ	16	; what is actual crystal frequency (as opposed to what bootmenu set the agnus to)?
@


39.22
log
@bp3bits
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.21 92/06/11 12:18:22 spence Exp Locker: chrisg $
d167 1
d170 2
@


39.21
log
@Appended MonitorVBlank to GfxBase.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.20 92/06/09 11:27:25 chrisg Exp Locker: spence $
d122 1
a122 1
	BYTE	gb_APad
@


39.20
log
@scan dbled sprites
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.19 92/06/08 14:07:15 spence Exp Locker: chrisg $
d21 3
d123 1
@


39.19
log
@Added GfxBase->MonitorFlags, a copy of GfxBase->current_monitor->ms_Flags
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.18 92/06/03 16:36:54 chrisg Exp Locker: spence $
d118 2
@


39.18
log
@dblist added.
singly linked list of nodes to signal for dbuf.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.17 92/05/13 11:47:21 spence Exp Locker: chrisg $
d117 1
@


39.17
log
@stole a pad BYTE for GfxBase->Bugs
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.16 92/05/05 12:22:37 chrisg Exp Locker: spence $
d116 1
@


39.16
log
@added specialcounter.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.15 92/04/07 14:51:36 spence Exp Locker: chrisg $
d86 2
a87 2
	WORD	gb_control_delta_pal
	WORD	gb_control_delta_ntsc
d110 1
a110 1
	BYTE	pad00
d134 1
a134 1
SETCHIPREV_BEST	equ	-1
@


39.15
log
@GBASE->BoardMemType for the real board memory type.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.14 92/04/03 16:54:41 chrisg Exp Locker: spence $
d115 1
@


39.14
log
@ added defs for Ivector and IData
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.13 92/03/19 16:37:48 chrisg Exp Locker: chrisg $
d109 2
a110 1
	STRUCT	pad00,2
@


39.13
log
@changes.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.12 92/03/06 12:45:32 spence Exp Locker: chrisg $
d112 2
@


39.12
log
@Took one of the pad00[] bytes for WantChips, which is the chiprev set by
Bootmenu

redefined SETCHIPREV_A to be GFXF_HR_AGNUS instead of 0.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.11 92/03/03 10:45:16 spence Exp Locker: spence $
d124 1
a124 1
	BITDEF	GFX,AA_MLISA,4
d128 2
a129 2
SETCHIPREV_ECS	equ	(GFXF_HR_AGNUS|GFXF_HR_DENISE)
SETCHIPREV_AA	equ	(GFXF_AA_ALICE|GFXF_AA_LISA|SETCHIPREV_ECS)
d137 1
a137 1
BANDWIDTH_1X	equ	(BUS_16|NML_CAS)
d140 1
a140 1
BANDWIDTH_4X	equ	(BUS_32|DBL_CAS)
@


39.11
log
@#define SETCHIPREV_BEST -1
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.10 92/02/24 13:58:37 chrisg Exp Locker: spence $
d108 2
a109 1
	STRUCT	pad00,3
d127 1
a127 1
SETCHIPREV_A	equ	0
@


39.10
log
@ added colormask field
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.9 92/01/29 16:59:12 spence Exp Locker: chrisg $
d129 1
@


39.9
log
@renamed BOOTCHIPS_ to SETCHIPREV_
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.8 92/01/21 13:37:38 chrisg Exp Locker: spence $
d110 1
@


39.8
log
@ redefinition of includes for pragma calling.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.7 92/01/21 10:22:40 spence Exp Locker: chrisg $
d124 4
a127 4
* For MakeGfxGreat()
BOOTCHIPS_A	equ	0
BOOTCHIPS_ECS	equ	(GFXF_HR_AGNUS|GFXF_HR_DENISE)
BOOTCHIPS_AA	equ	(GFXF_AA_ALICE|GFXF_AA_LISA|BOOTCHIPS_ECS)
@


39.7
log
@BOOTCHIPS definitions for MakegfxGreat()
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.6 91/11/04 15:36:42 chrisg Exp Locker: spence $
d95 1
a95 1
	APTR	gb_UtilityBase
@


39.6
log
@added LayersBase field. graphics will open layers to do sorting
of cliprects for scrolls.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.5 91/10/30 19:31:10 spence Exp Locker: chrisg $
d123 5
@


39.5
log
@GFXF_AA_MLISA defined - mirrors LISA bit to show machine type.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.4 91/10/28 11:50:57 chrisg Exp Locker: spence $
d108 2
a109 1
	BYTE 	pad00
@


39.4
log
@ added some stuff for sprite modes
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.3 91/10/16 17:26:44 spence Exp Locker: chrisg $
d121 1
@


39.3
log
@MakeVP() LUT pointers in GfxBase
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.2 91/10/15 16:04:17 chrisg Exp Locker: spence $
d103 1
d105 4
a108 1
	BYTE	gb_pad7					; still lword aligned
@


39.2
log
@ added spritewidth field
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.1 91/08/27 17:07:26 spence Exp Locker: chrisg $
d97 5
@


39.1
log
@Changed gb->FMode (not needed) to gb->TopLine, the line WAITed for
by copinit.
defined flag TOPLINE_CHANGE = 16 for gb->Flags
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 39.0 91/08/21 17:10:16 chrisg Exp Locker: spence $
d97 3
@


39.0
log
@Bumped
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 38.1 91/07/27 17:11:28 spence Exp Locker: chrisg $
d93 1
a93 1
	WORD	gb_FMode
@


38.1
log
@corrected typos in BANDWIDTH_$x definition.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 38.0 91/05/30 13:06:18 spence Exp Locker: spence $
@


38.0
log
@MemType and FMode fields.
New AA flags
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 37.3 91/04/15 10:27:35 spence Exp Locker: spence $
d115 1
a115 1
BANDWIDTH_1X	equ	BUS_16 | NML_CAS
d118 1
a118 1
BANDWIDTH_4X	equ	BUS_32 | DBL_CAS
@


37.3
log
@aligns ActiViewCprSemaphore to a longword boundary.
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 37.2 91/02/07 15:38:59 spence Exp Locker: spence $
d23 22
a44 22
    APTR    gb_ActiView     ; struct *View
    APTR    gb_copinit      ; struct *copinit; ptr to copper start up list
    APTR    gb_cia      ; for 6526 resource use
    APTR    gb_blitter      ; for blitter resource use
    APTR    gb_LOFlist      ; current copper list being run
    APTR    gb_SHFlist      ; current copper list being run
    APTR    gb_blthd        ; struct *bltnode
    APTR    gb_blttl        ;
    APTR    gb_bsblthd      ;
    APTR    gb_bsblttl      ;
    STRUCT  gb_vbsrv,IS_SIZE
    STRUCT  gb_timsrv,IS_SIZE
    STRUCT  gb_bltsrv,IS_SIZE
    STRUCT  gb_TextFonts,LH_SIZE
    APTR    gb_DefaultFont
    UWORD   gb_Modes        ; copy of bltcon0
    BYTE    gb_VBlank
    BYTE    gb_Debug
    UWORD   gb_BeamSync
    WORD    gb_system_bplcon0
    BYTE    gb_SpriteReserved
    BYTE    gb_bytereserved
d46 2
a47 2
    WORD    gb_Flags
    WORD    gb_BlitLock
d69 2
a70 1
	STRUCT	gb_crb_reserved,5
d72 1
a72 1
    	STRUCT  gb_monitor_id,2   	; normally null
d85 1
a85 1
	APTR    gb_a2024_sync_raster
d89 1
a89 1
	STRUCT  gb_MonitorList,LH_SIZE
d93 1
a93 1
	WORD	lapad;					; alignment
d97 1
a97 1
    LABEL   gb_SIZE
d107 2
d110 9
d120 1
a120 1
QBOWNER     equ 1<<QBOWNERn
d141 3
a143 3
GRAPHICSNAME    MACRO
      		DC.B  'graphics.library',0
	    	ENDM
@


37.2
log
@back to 37.0
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 37.0 91/01/07 15:14:15 spence Exp $
d92 1
@


37.1
log
@Appended APTR SprCtlData for new MoveSprite() behaviour
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 37.0 91/01/07 15:14:15 spence Exp Locker: spence $
a94 1
	APTR	gb_SpriteCtlData
@


37.0
log
@initial switchover from V36
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 36.21 90/09/26 10:22:07 bart Exp Locker: spence $
d95 1
@


36.21
log
@*** empty log message ***
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 36.20 90/09/25 18:14:40 bart Exp Locker: bart $
@


36.20
log
@bit defs for ChipRevBits
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 36.19 90/07/27 16:28:17 bart Exp Locker: bart $
d103 2
d106 1
a124 6

* bit defs for ChipRevBits

BITDEF	GFX,BIG_BLITS,0
BITDEF	GFX,HR_AGNUS,0
BITDEF	GFX,HR_DENISE,1
@


36.19
log
@*** empty log message ***
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 36.18 90/05/11 14:16:29 bart Exp Locker: bart $
d119 9
@


36.18
log
@monitor_id (was reserved, normally null)
@
text
@d4 1
a4 1
**	$Id: gfxbase.i,v 36.17 90/05/02 10:33:53 kodiak Exp Locker: bart $
@


36.17
log
@standardize include header
@
text
@d4 1
a4 1
**	$Id$
d71 1
a71 1
    	STRUCT  gb_reserved,2   ; 8 bytes reserved for future use
@


36.16
log
@*** empty log message ***
@
text
@d4 1
a4 5
**	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/RCS/gfxbase.i,v 36.15 90/02/28 09:37:45 bart Exp Locker: bart $   
**	$Filename: graphics/gfxbase.i $
**	$Release: 1.4 $
**	$Revision: 36.15 $
**	$Date: 90/02/28 09:37:45 $
d126 1
a126 1
    ENDC
@


36.15
log
@no more displaymonitors fields
@
text
@d4 1
a4 1
**	$Header: gfxbase.i,v 36.14 89/12/15 12:24:56 bart Exp $   
d7 2
a8 2
**	$Revision: 36.14 $
**	$Date: 89/12/15 12:24:56 $
@


36.14
log
@*** empty log message ***
@
text
@d4 1
a4 1
**	$Header: gfxbase.i,v 36.13 89/10/25 12:34:05 bart Exp $   
d7 2
a8 2
**	$Revision: 36.13 $
**	$Date: 89/10/25 12:34:05 $
d73 1
a73 4
	STRUCT	gb_crb_reserved,3

	UBYTE	gb_DisplayMonitors
	UBYTE	gb_DisplayMonitors2
@


36.13
log
@added execbase
@
text
@d4 1
a4 1
**	$Header: gfxbase.i,v 36.12 89/10/25 10:35:19 bart Exp $   
d7 2
a8 2
**	$Revision: 36.12 $
**	$Date: 89/10/25 10:35:19 $
@


36.12
log
@utilitybase
@
text
@d4 1
a4 1
**	$Header: gfxbase.i,v 36.11 89/09/17 08:41:11 bart Exp $   
d7 2
a8 2
**	$Revision: 36.11 $
**	$Date: 89/09/17 08:41:11 $
d101 1
@


36.11
log
@added NTSC, GENLOC, PAL and GRAPHICSNAME
@
text
@d4 1
a4 1
**	$Header: gfxbase.i,v 36.10 89/08/22 09:08:34 bart Exp $   
d7 2
a8 2
**	$Revision: 36.10 $
**	$Date: 89/08/22 09:08:34 $
d100 1
@


36.10
log
@ActiViewCprSemaphore
@
text
@d4 1
a4 1
**	$Header: gfxbase.i,v 36.9 89/06/23 17:31:12 bart Exp $   
d7 2
a8 2
**	$Revision: 36.9 $
**	$Date: 89/06/23 17:31:12 $
d113 17
a129 2
TODA_SAFEn  equ 3
TODA_SAFE   equ 1<<TODA_SAFEn
@


36.9
log
@TODA_SAFE
@
text
@d4 1
a4 1
**	$Header: gfxbase.i,v 36.8 89/05/02 09:31:33 bart Exp $   
d7 2
a8 2
**	$Revision: 36.8 $
**	$Date: 89/05/02 09:31:33 $
d99 1
@


36.8
log
@copyright 1989
@
text
@d4 1
a4 1
**	$Header: gfxbase.i,v 36.7 89/05/02 09:01:47 bart Exp $   
d7 2
a8 2
**	$Revision: 36.7 $
**	$Date: 89/05/02 09:01:47 $
d109 5
@


36.7
log
@header
@
text
@d4 1
a4 1
**	$Header: $   
d7 2
a8 2
**	$Revision: $
**	$Date: $
@


36.6
log
@checkpoint
@
text
@d3 12
@


36.5
log
@merge DisplayInfoDataBase with graphics
@
text
@@


36.4
log
@checkpoint 02.14.89
@
text
@d86 1
a86 1
	APTR	gb_DisplayBase
@


36.3
log
@checkpoint - a2024 10hz and 15hz works from 32 bit id
@
text
@@


36.2
log
@APTR    gb_DisplayBase
@
text
@@


36.1
log
@*** empty log message ***
@
text
@d86 1
@


36.0
log
@added to rcs for updating
@
text
@d80 2
@
