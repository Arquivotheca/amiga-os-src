head     39.0;
branch   ;
access   ;
symbols  rel39_24:39.0 rel39_18:39.0 rel39_97:39.0 rel39_90:39.0 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_52:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_27:37.0 V37_25:37.0 V37_24:37.0 V37_23:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_18:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.6 V36_208:36.6 V36_207:36.6 V36_205:36.6 V36_203:36.6 V36_202:36.6 V36_201:36.6 V36_200:36.6 V36_199:36.6 V36_198:36.5 V36_196:36.4 V36_195:36.4 V36_194:36.4 V36_193:36.4 V36_192:36.4 V36_191:36.4 V36_190:36.4 V36_189:36.4 V36_188:36.4 V36_187:36.4 V36_186:36.4 V36_185:36.4 V36_184:36.4 V36_183:36.4 V36_182:36.4 V36_181:36.4 V36_180:36.4 V36_179:36.4 V36_161:36.3 V36_160:36.3 V36_158:36.3 V36_157:36.3 V36_153:36.3 V36_151:36.3 V36_147:36.3 V36_146:36.3 V36_144:36.3 V36_143:36.2 V36_142:36.2 V36_141:36.2 V36_139:36.2 V36_137:36.2 V36_136:36.2 V36_135:36.2 V36_133:36.2 V36_131:36.1 V36_130:36.1 V36_129:36.1 V36_128:36.1 V36_127:36.1 V36_126:36.1 V36_125:36.1 V36_123:36.1 V36_122:36.1 V36_121:36.1 V36_0:36.1 V36_118:36.1 V36_116:36.1 V36_115:36.1 V36_114:36.1 V36_112:36.1 V36_107:36.1 V36_106:36.1 V36_104:36.1 V36_103:36.1 V36_101:36.1 V36_100:36.1 V36_99:36.1 V36_95:36.1 V36_94:36.1 V36_92:36.1 V36_90:36.1 V36_89:36.1 V36_88:36.1 V36_83:36.1 V36_82:36.1 V36_79:36.1 V36_78:36.1 V36_77:36.1 V36_75:36.1 V36_74:36.1 V36_73:36.1 V36_72:36.1 V36_70:36.1 V36_69:36.1 V36_61:36.1 V36_60:36.1 V36_59:36.1 V36_57:36.0 V36_56:36.0 V36_55:36.0 V36_54:36.0 V36_52:36.0 V36_51:36.0 V36_50:36.0 V36_48:36.0 V36_47:36.0 V36_46:36.0 V36_45:36.0 V36_44:36.0 V36_43:36.0 V36_42:36.0 V36_41:36.0 V36_40:36.0 V36_37:36.0 V36_36:36.0 V36_35:36.0 V36_34:36.0 V36_33:36.0 V36_30:36.0 V36_29:36.0 V36_27:36.0;
locks    ; strict;
comment  @*   @;


39.0
date     91.08.21.17.12.06;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.14.57;  author spence;  state Exp;
branches ;
next     36.6;

36.6
date     90.11.16.14.15.42;  author spence;  state Exp;
branches ;
next     36.5;

36.5
date     90.11.06.13.14.03;  author spence;  state Exp;
branches ;
next     36.4;

36.4
date     90.07.27.16.30.46;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     90.05.02.10.34.10;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     90.03.28.09.39.17;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     89.05.02.09.30.26;  author bart;  state Exp;
branches ;
next     36.0;

36.0
date     88.12.13.11.56.42;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@Bumped
@
text
@#ifndef	GRAPHICS_RASTPORT_H
#define	GRAPHICS_RASTPORT_H
/*
**	$Id: rastport.h,v 37.0 91/01/07 15:14:57 spence Exp Locker: chrisg $
**
**	
**
**	(C) Copyright 1985,1986,1987,1988,1989 Commodore-Amiga, Inc.
**	    All Rights Reserved
*/

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif

#ifndef GRAPHICS_GFX_H
#include <graphics/gfx.h>
#endif

struct AreaInfo
{
    WORD   *VctrTbl;         /* ptr to start of vector table */
    WORD   *VctrPtr;         /* ptr to current vertex */
    BYTE    *FlagTbl;         /* ptr to start of vector flag table */
    BYTE    *FlagPtr;         /* ptrs to areafill flags */
    WORD   Count;            /* number of vertices in list */
    WORD   MaxCount;         /* AreaMove/Draw will not allow Count>MaxCount*/
    WORD   FirstX,FirstY;    /* first point for this polygon */
};

struct TmpRas
{
    BYTE *RasPtr;
    LONG Size;
};

/* unoptimized for 32bit alignment of pointers */
struct GelsInfo
{
    BYTE sprRsrvd;            /* flag of which sprites to reserve from
                                 vsprite system */
    UBYTE Flags;              /* system use */
    struct VSprite *gelHead, *gelTail; /* dummy vSprites for list management*/
    /* pointer to array of 8 WORDS for sprite available lines */
    WORD *nextLine;
    /* pointer to array of 8 pointers for color-last-assigned to vSprites */
    WORD **lastColor;
    struct collTable *collHandler;     /* addresses of collision routines */
    WORD leftmost, rightmost, topmost, bottommost;
   APTR firstBlissObj,lastBlissObj;    /* system use only */
};

struct RastPort
{
    struct  Layer *Layer;
    struct  BitMap   *BitMap;
    UWORD  *AreaPtrn;        /* ptr to areafill pattern */
    struct  TmpRas *TmpRas;
    struct  AreaInfo *AreaInfo;
    struct  GelsInfo *GelsInfo;
    UBYTE   Mask;             /* write mask for this raster */
    BYTE    FgPen;            /* foreground pen for this raster */
    BYTE    BgPen;            /* background pen  */
    BYTE    AOlPen;           /* areafill outline pen */
    BYTE    DrawMode;         /* drawing mode for fill, lines, and text */
    BYTE    AreaPtSz;         /* 2^n words for areafill pattern */
    BYTE    linpatcnt;        /* current line drawing pattern preshift */
    BYTE    dummy;
    UWORD  Flags;            /* miscellaneous control bits */
    UWORD  LinePtrn;         /* 16 bits for textured lines */
    WORD   cp_x, cp_y;       /* current pen position */
    UBYTE   minterms[8];
    WORD   PenWidth;
    WORD   PenHeight;
    struct  TextFont *Font;   /* current font address */
    UBYTE   AlgoStyle;        /* the algorithmically generated style */
    UBYTE   TxFlags;          /* text specific flags */
    UWORD   TxHeight;         /* text height */
    UWORD   TxWidth;          /* text nominal width */
    UWORD   TxBaseline;       /* text baseline */
    WORD    TxSpacing;        /* text spacing (per character) */
    APTR    *RP_User;
    ULONG   longreserved[2];
#ifndef GFX_RASTPORT_1_2
    UWORD   wordreserved[7];  /* used to be a node */
    UBYTE   reserved[8];      /* for future use */
#endif
};

/* drawing modes */
#define JAM1        0         /* jam 1 color into raster */
#define JAM2        1         /* jam 2 colors into raster */
#define COMPLEMENT  2         /* XOR bits into raster */
#define INVERSVID   4         /* inverse video for drawing modes */

/* these are the flag bits for RastPort flags */
#define FRST_DOT    0x01      /* draw the first dot of this line ? */
#define ONE_DOT     0x02      /* use one dot mode for drawing lines */
#define DBUFFER     0x04      /* flag set when RastPorts
                                 are double-buffered */

             /* only used for bobs */

#define AREAOUTLINE 0x08      /* used by areafiller */
#define NOCROSSFILL 0x20      /* areafills have no crossovers */

/* there is only one style of clipping: raster clipping */
/* this preserves the continuity of jaggies regardless of clip window */
/* When drawing into a RastPort, if the ptr to ClipRect is nil then there */
/* is no clipping done, this is dangerous but useful for speed */

#endif	/* GRAPHICS_RASTPORT_H */
@


37.0
log
@initial switchover from V36
@
text
@d4 1
a4 1
**	$Id: rastport.h,v 36.6 90/11/16 14:15:42 spence Exp Locker: spence $
@


36.6
log
@changed SHORT to WORD
.,
@
text
@d4 1
a4 1
**	$Id: rastport.h,v 36.5 90/11/06 13:14:03 spence Exp Locker: spence $
@


36.5
log
@includes exec/types.h
@
text
@d4 1
a4 1
**	$Id: rastport.h,v 36.4 90/07/27 16:30:46 bart Exp Locker: spence $
d22 2
a23 2
    SHORT   *VctrTbl;         /* ptr to start of vector table */
    SHORT   *VctrPtr;         /* ptr to current vertex */
d26 3
a28 3
    SHORT   Count;            /* number of vertices in list */
    SHORT   MaxCount;         /* AreaMove/Draw will not allow Count>MaxCount*/
    SHORT   FirstX,FirstY;    /* first point for this polygon */
d49 1
a49 1
    short leftmost, rightmost, topmost, bottommost;
d57 1
a57 1
    USHORT  *AreaPtrn;        /* ptr to areafill pattern */
d69 3
a71 3
    USHORT  Flags;            /* miscellaneous control bits */
    USHORT  LinePtrn;         /* 16 bits for textured lines */
    SHORT   cp_x, cp_y;       /* current pen position */
d73 2
a74 2
    SHORT   PenWidth;
    SHORT   PenHeight;
@


36.4
log
@*** empty log message ***
@
text
@d4 1
a4 1
**	$Id: rastport.h,v 36.3 90/05/02 10:34:10 kodiak Exp Locker: bart $
d11 4
@


36.3
log
@standardize include header
@
text
@d4 1
a4 1
**	$Id$
@


36.2
log
@*** empty log message ***
@
text
@d4 1
a4 4
**	$Filename: graphics/rastport.h $
**	$Release: 1.3 $
**	$Revision: 36.1 $
**	$Date: 89/05/02 09:30:26 $
@


36.1
log
@copyright 1989
@
text
@d6 2
a7 2
**	$Revision: 36.0 $
**	$Date: 88/12/13 11:56:42 $
@


36.0
log
@added to rcs for updating
@
text
@d6 2
a7 2
**	$Revision$
**	$Date$
d11 1
a11 1
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
@
