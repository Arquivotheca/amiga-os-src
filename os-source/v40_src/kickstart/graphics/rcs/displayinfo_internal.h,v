head     39.10;
branch   ;
access   ;
symbols  rel39_24:39.10 rel39_18:39.10 rel39_97:39.8 rel39_90:39.8 rel39_89:39.8 rel39_82:39.8 rel39_76:39.8 rel39_71:39.8 rel39_65:39.8 rel39_64:39.8 rel39_61:39.8 rel39_60:39.8 rel39_55:39.8 rel39_52:39.7 rel39_47:39.7 rel39_39:39.6 rel39_38:39.6 rel39_37:39.6 rel39_35:39.6 rel39_34:39.6 V37_30:37.3 V37_29:37.1 V37_28:37.1 V37_27:37.1 V37_25:37.1 V37_24:37.0 V37_23:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_18:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.19 V36_208:36.19 V36_207:36.19 V36_205:36.19 V36_203:36.19 V36_202:36.19 V36_201:36.19 V36_200:36.19 V36_199:36.19 V36_198:36.19 V36_196:36.19 V36_195:36.19 V36_194:36.19 V36_193:36.19 V36_192:36.19 V36_191:36.19 V36_190:36.19 V36_189:36.19 V36_188:36.19 V36_187:36.19 V36_186:36.19 V36_185:36.19 V36_184:36.19 V36_183:36.19 V36_182:36.19 V36_181:36.19 V36_180:36.19 V36_179:36.19 V36_161:36.18 V36_160:36.18 V36_158:36.18 V36_157:36.18 V36_153:36.18 V36_151:36.18 V36_147:36.18 V36_146:36.18 V36_144:36.18 V36_143:36.18 V36_142:36.18 V36_141:36.18 V36_139:36.18 V36_137:36.18 V36_136:36.17 V36_135:36.17 V36_133:36.17 V36_131:36.16 V36_130:36.16 V36_129:36.16 V36_128:36.16 V36_127:36.16 V36_126:36.16 V36_125:36.16 V36_123:36.16 V36_122:36.16 V36_121:36.16 V36_0:36.16 V36_118:36.16 V36_116:36.16 V36_115:36.16 V36_114:36.16 V36_112:36.16 V36_107:36.16 V36_106:36.16 V36_104:36.16 V36_103:36.16 V36_101:36.16 V36_100:36.16 V36_99:36.16 V36_95:36.16 V36_94:36.16 V36_92:36.16 V36_90:36.16 V36_89:36.16 V36_88:36.16 V36_83:36.16 V36_82:36.16 V36_79:36.16 V36_78:36.16 V36_77:36.16 V36_75:36.16 V36_74:36.16 V36_73:36.16 V36_72:36.16 V36_70:36.16 V36_69:36.16 V36_61:36.15 V36_60:36.15 V36_59:36.15 V36_57:36.14 V36_56:36.14 V36_55:36.14 V36_54:36.14 V36_52:36.14 V36_51:36.14 V36_50:36.14 V36_48:36.14 V36_47:36.14 V36_46:36.14 V36_45:36.14 V36_44:36.14 V36_43:36.14 V36_42:36.14 V36_41:36.14 V36_40:36.14 V36_37:36.13 V36_36:36.13 V36_35:36.11 V36_34:36.11 V36_33:36.11 V36_30:36.11 V36_29:36.11 V36_27:36.11;
locks    ; strict;
comment  @*   @;


39.10
date     93.02.16.13.39.05;  author spence;  state Exp;
branches ;
next     39.9;

39.9
date     92.12.22.12.31.09;  author chrisg;  state Exp;
branches ;
next     39.8;

39.8
date     92.04.15.15.51.40;  author spence;  state Exp;
branches ;
next     39.7;

39.7
date     92.03.24.10.39.58;  author spence;  state Exp;
branches ;
next     39.6;

39.6
date     92.01.17.11.55.37;  author spence;  state Exp;
branches ;
next     39.5;

39.5
date     91.10.30.19.50.17;  author spence;  state Exp;
branches ;
next     39.4;

39.4
date     91.10.18.18.45.09;  author spence;  state Exp;
branches ;
next     39.3;

39.3
date     91.10.17.10.50.14;  author spence;  state Exp;
branches ;
next     39.2;

39.2
date     91.10.09.11.22.51;  author spence;  state Exp;
branches ;
next     39.1;

39.1
date     91.10.08.19.40.03;  author spence;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.27.17.05.21;  author spence;  state Exp;
branches ;
next     38.2;

38.2
date     91.07.22.15.03.06;  author spence;  state Exp;
branches ;
next     38.1;

38.1
date     91.07.02.20.12.05;  author spence;  state Exp;
branches ;
next     38.0;

38.0
date     91.06.14.11.38.33;  author spence;  state Exp;
branches ;
next     37.4;

37.4
date     91.05.09.14.52.18;  author spence;  state Exp;
branches ;
next     37.3;

37.3
date     91.04.27.17.40.00;  author spence;  state Exp;
branches ;
next     37.2;

37.2
date     91.04.26.16.36.14;  author spence;  state Exp;
branches ;
next     37.1;

37.1
date     91.04.15.13.52.17;  author spence;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.13.49;  author spence;  state Exp;
branches ;
next     36.19;

36.19
date     90.07.27.16.27.24;  author bart;  state Exp;
branches ;
next     36.18;

36.18
date     90.04.06.18.52.32;  author bart;  state Exp;
branches ;
next     36.17;

36.17
date     90.03.28.09.37.17;  author bart;  state Exp;
branches ;
next     36.16;

36.16
date     89.07.24.13.30.33;  author bart;  state Exp;
branches ;
next     36.15;

36.15
date     89.05.02.09.29.33;  author bart;  state Exp;
branches ;
next     36.14;

36.14
date     89.03.09.16.12.21;  author bart;  state Exp;
branches ;
next     36.13;

36.13
date     89.03.06.12.40.59;  author bart;  state Exp;
branches ;
next     36.12;

36.12
date     89.03.06.11.34.44;  author bart;  state Exp;
branches ;
next     36.11;

36.11
date     89.02.24.09.52.34;  author bart;  state Exp;
branches ;
next     36.10;

36.10
date     89.02.17.21.55.24;  author bart;  state Exp;
branches ;
next     36.9;

36.9
date     89.02.17.20.03.14;  author bart;  state Exp;
branches ;
next     36.8;

36.8
date     89.02.17.10.21.18;  author bart;  state Exp;
branches ;
next     36.7;

36.7
date     89.02.17.09.01.53;  author bart;  state Exp;
branches ;
next     36.6;

36.6
date     89.02.17.08.28.11;  author bart;  state Exp;
branches ;
next     36.5;

36.5
date     89.02.16.12.07.34;  author bart;  state Exp;
branches ;
next     36.4;

36.4
date     89.02.16.11.21.54;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     89.02.16.10.07.18;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     89.02.16.09.36.40;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     89.02.15.16.12.26;  author bart;  state Exp;
branches ;
next     36.0;

36.0
date     89.02.15.16.11.35;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.10
log
@MonitorInfo->MouseTicks
@
text
@#ifndef	GRAPHICS_RAWDISPLAYINFO_H
#define	GRAPHICS_RAWDISPLAYINFO_H
/*
**	$Filename: displayinfo_internal.h $
**	$Release: 1.4 $
**	$Revision: 39.9 $
**	$Date: 92/12/22 12:31:09 $
**
**	include define file for displayinfo database
**
**	(C) Copyright 1985,1986,1987,1988,1989 Commodore-Amiga, Inc.
**	    All Rights Reserved
*/

#ifndef GRAPHICS_DISPLAYINFO_H
#include <graphics/displayinfo.h>
#endif

/* the "compressed" form of a DisplayInfoRecord */

struct RomCompressedNode
{
    BYTE            cno; 
    UBYTE           tag; 
    UWORD           cid;
};

/* the "public" part of a DisplayInfoRecord */

struct RecordNode 
{
    struct RecordNode *rcn_Succ;    /* next sibling */
    struct RecordNode *rcn_Pred;    /* previous sibling */
    struct RecordNode *rcn_Child;   /* subtype of record */
    struct RecordNode *rcn_Parent;  /* supertype of record */
};

/* some useful macro definitions */

#define SubRecord(r) (r)->rec_Node.rcn_Child
#define SupRecord(r) (r)->rec_Node.rcn_Parent
#define SibRecord(r) (r)->rec_Node.rcn_Succ

/* the "private" internal definition of a DisplayInfoRecord */

struct DisplayInfoRecord 
{
    struct RecordNode  rec_Node;
    UWORD	       rec_MajorKey;
    UWORD	       rec_MinorKey;
    struct TagItem     rec_Tag;     /* { TAG_DONE, 0 } or { TAG_MORE, &data } */
    ULONG	       rec_Control;
    ULONG              (*rec_get_data)();
    ULONG              (*rec_set_data)();
    struct Rectangle   rec_ClipOScan;
    ULONG	       reserved[2];
};

/* the "private" internal definition of datachunk types */

struct RawDisplayInfo
{
	struct	QueryHeader Header;
	UWORD	NotAvailable;
	ULONG	PropertyFlags;
	Point	Resolution;
	UWORD	PixelSpeed;
	UWORD	NumStdSprites;
	UWORD	PaletteRange;
	Point	SpriteResolution;
	ULONG	ModeID;
	UBYTE	RedBits;
	UBYTE	GreenBits;
	UBYTE	BlueBits;
	UBYTE	pad2[5];
	ULONG	reserved[2];    /* tag end substitute */
};

struct RawNameInfo
{
	struct	QueryHeader Header;
	UBYTE	Name[DISPLAYNAMELEN];
	ULONG	reserved[2];    /* tag end substitute */
};

struct RawDimensionInfo
{
	struct	QueryHeader Header;
	UWORD	MaxDepth;
        UWORD   MinRasterWidth;
        UWORD   MinRasterHeight;
        UWORD   MaxRasterWidth;
        UWORD   MaxRasterHeight;
	struct  Rect32	Nominal;
	struct  Rect32	MaxOScan;
	struct  Rect32	VideoOScan;
	UBYTE	HWMaxDepth;
	UBYTE   pad[5];
	ULONG	reserved[2];    /* tag end substitute */
};

struct RawMonitorInfo
{
	struct	QueryHeader   Header;
	struct	MonitorSpec  *Mspc;
        Point   ViewPosition;
        Point   ViewResolution;
        struct  Rectangle ViewPositionRange;
        UWORD   TotalRows;
        UWORD   TotalColorClocks;
        UWORD   MinRow;
	WORD	Compatibility;
	struct  Rect32	TxtOScan;
	struct  Rect32	StdOScan;
	Point	MouseTicks;
	Point	DefaultViewPosition;
	ULONG	PreferredModeID;
	ULONG	reserved[2];    /* tag end substitute */
};

struct RawVecInfo
{
	struct	QueryHeader Header;
	APTR	Vec;
	APTR	Data;
	UWORD	Type;
	UWORD	pad[3];
	ULONG	reserved[2];
};

#define DEFAULT_ENTRY (DEFAULT_MONITOR_ID >> 16)
#define NTSC_ENTRY (NTSC_MONITOR_ID >> 16)
#define PAL_ENTRY (PAL_MONITOR_ID >> 16)
#define VGA_ENTRY (VGA_MONITOR_ID >> 16)
#define ROM_MONITOR_ENTRIES 2		/* entry 2 = last entry in the ROM - rest are diskbased */


/* Some new Squeezed stuff to get those last few bytes.
 * (I'm glad I have a sense of humour)
 */

typedef struct tbPoint
{
   UBYTE x, y;
} bPoint;


struct Rect8
{
    UBYTE   MinX,MinY;
    UBYTE   MaxX,MaxY;
};

struct SqueezedVecInfo	/* unused */
{
	UWORD	Type;
};

struct SqueezedDisplayInfo
{
	ULONG	PropertyFlags;
	bPoint	Resolution;
	UBYTE	PixelSpeed;
	UWORD	PaletteRange;
	bPoint	SpriteResolution;
	ULONG	ModeID;
};

#define DIMS_RANGE_LORES 0
#define DIMS_RANGE_HIRES 1
#define DIMS_RANGE_SHIRES 2
#define DIMS_RANGE_A2024NTSC  3
#define DIMS_RANGE_A2024PAL  4
#define DIMS_DEPTH_HW6 128

struct SqueezedDimensionInfo
{
	UBYTE	MaxDepth;
	UBYTE	DimsRange;
	struct  Rectangle	Nominal;
	struct  Rectangle	MaxOScan;
	struct  Rectangle	VideoOScan;
};

/* These are used in the "(un)cooking" functions. */

#define GET_DISPLAYINFODATA 0
#define SET_DISPLAYINFODATA 1
#define NEW_DISPLAYINFODATA 2


#endif	/* GRAPHICS_RAWDISPLAYINFO_H */
@


39.9
log
@fix ansi-error.
@
text
@d6 2
a7 2
**	$Revision: 39.8 $
**	$Date: 92/04/15 15:51:40 $
d115 1
a115 1
	ULONG	pad;					/* 8 byte alignment for structure length */
a182 15
};

struct SqueezedMonitorInfo	/* not used */
{
        bPoint   ViewPosition;
        bPoint   ViewResolution;
        struct  Rect8 ViewPositionRange;
        UWORD   TotalRows;
        UWORD   TotalColorClocks;
        UWORD   MinRow;
	WORD	Compatibility;
	struct  Rectangle	TxtOScan;
	struct  Rectangle	StdOScan;
	Point	DefaultViewPosition;
	ULONG	PreferredModeID;
@


39.8
log
@added some #defines used by cook()
@
text
@d6 2
a7 2
**	$Revision: 39.7 $
**	$Date: 92/03/24 10:39:58 $
d17 1
a17 1
#endif !GRAPHICS_DISPLAYINFO_H
@


39.7
log
@changed ROM_MONITOR_ENTRIES to 2 (only DEFAULT/NTSC/PAL. VGA now on disk).
@
text
@d6 2
a7 2
**	$Revision: 39.6 $
**	$Date: 92/01/17 11:55:37 $
d199 7
@


39.6
log
@HWMaxDepth in RawDimensionInfo
@
text
@d6 2
a7 2
**	$Revision: 39.5 $
**	$Date: 91/10/30 19:50:17 $
d135 1
a135 1
#define ROM_MONITOR_ENTRIES 3		/* entry 3 = last entry in the ROM - rest are diskbased */
@


39.5
log
@ROM_MONITOR_ENTRIES altered from 4 to 3, now all A2024 data has been
removed.
@
text
@d6 2
a7 2
**	$Revision: 39.4 $
**	$Date: 91/10/18 18:45:09 $
d97 2
a98 1
	UBYTE   pad[6];
d174 1
@


39.4
log
@Replace RawProgInfo with RawVecInfo
@
text
@d6 2
a7 2
**	$Revision: 39.3 $
**	$Date: 91/10/17 10:50:14 $
d134 1
a134 2
#define A2024_ENTRY (A2024_MONITOR_ID >> 16)
#define ROM_MONITOR_ENTRIES 4		/* entry 4 = last entry in the ROM - rest are diskbased */
@


39.3
log
@RawProgInfo also has pointers to Move/ChangeSprite().

@
text
@d6 2
a7 2
**	$Revision: 39.2 $
**	$Date: 91/10/09 11:22:51 $
d120 1
a120 1
struct RawProgInfo
d122 6
a127 17
	struct	QueryHeader   Header;
	APTR	MakeIt;		/* pointer to a list of functions to call */
	APTR	MoveSprite;
	APTR	ChangeSprite;
	UWORD	bplcon0;	/* minimum needed for this mode */
	UWORD	bplcon2;	/* has KILLEHB flag, and SOGEN */
	UBYTE	ToViewX;	/* convert from VP horizontal resoliution to View */
	UBYTE	ToViewY;	/* convert from VP vertical resoliution to View */
	UWORD	Flags;
	UWORD	MakeItType;	/* entry in the MakeItLists table */
	UWORD	ScrollVPCount;	/* number of routines to call for ScrollVP() */
	UWORD	DDFSTRTMask;	/* for 1x, 2x or 4x */
	UWORD	DDFSTOPMask;
	UWORD	DspInsCount;	/* initial DspIns */
	UBYTE	ToDIWResn;
	UBYTE	Offset;		/* for calculating offsets */
	ULONG	reserved[2];	/* tag end substitute */
a129 1

d154 5
d179 3
a181 18
	struct  Rect32	Nominal;
	struct  Rect32	MaxOScan;
	struct  Rect32	VideoOScan;
};

struct SqueezedProgInfo
{
	UWORD	bplcon0;	/* minimum needed for this mode */
	UWORD	bplcon2;	/* has KILLEHB flag, and SOGEN */
	UBYTE	ToViewX;	/* convert from VP horizontal resoliution to View */
	UBYTE	ToViewY;	/* convert from VP vertical resoliution to View */
	UWORD	Flags;
	UBYTE	MakeItType;	/* entry in the MakeItLists table */
	UBYTE	ScrollVPCount;	/* number of routines to call for ScrollVP() */
	UWORD	DDFSTRTMask;	/* for 1x, 2x or 4x */
	UWORD	DDFSTOPMask;
	UBYTE	ToDIWResn;
	UBYTE	Offset;		/* for calculating offsets */
@


39.2
log
@Squeezed RawProgInfo
@
text
@d6 2
a7 2
**	$Revision: 39.1 $
**	$Date: 91/10/08 19:40:03 $
d124 2
@


39.1
log
@Squeezed RawDisplayInfo and RawDimensionInfo structures.
@
text
@d6 2
a7 2
**	$Revision: 39.0 $
**	$Date: 91/08/27 17:05:21 $
a58 5
typedef struct tbPoint
{
   BYTE x, y;
} bPoint;

d152 12
d187 30
@


39.0
log
@defined DIPF_IS_AA
changed proginfo->DDFExtra to ScrollVPCount
@
text
@d6 2
a7 2
**	$Revision: 38.2 $
**	$Date: 91/07/22 15:03:06 $
d59 5
d152 29
@


38.2
log
@Changed RawProfInfo->DataSize to MakeItType.
@
text
@d6 2
a7 2
**	$Revision: 38.1 $
**	$Date: 91/07/02 20:12:05 $
d130 1
a130 1
	UWORD	DDFExtra;	/* fudge factor */
@


38.1
log
@ProgInfo->Offset, and ProgInfo->DDFExtra.
Also changed ProgInfo->DataSize from LONG to WORD to make room for
DDFExtra.
@
text
@d6 2
a7 2
**	$Revision: 38.0 $
**	$Date: 91/06/14 11:38:33 $
d129 1
a129 1
	UWORD	DataSize;	/* Amount of extra data needed to build the ViewPort */
@


38.0
log
@struct RawProgInfo
@
text
@d6 2
a7 2
**	$Revision: 37.4 $
**	$Date: 91/05/09 14:52:18 $
d129 2
a130 1
	ULONG	DataSize;	/* Amount of extra data needed to build the ViewPort */
d135 1
a135 1
	UBYTE	pad;
@


37.4
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 37.3 $
**	$Date: 91/04/27 17:40:00 $
d63 8
a70 8
        struct  QueryHeader Header;
        UWORD   NotAvailable;
        ULONG   PropertyFlags;
        Point   Resolution;
        UWORD   PixelSpeed;
        UWORD   NumStdSprites;
        UWORD   PaletteRange;
	Point   SpriteResolution;
d72 4
d119 19
@


37.3
log
@moved some #defines from d/init.h
@
text
@d6 2
a7 2
**	$Revision: 37.2 $
**	$Date: 91/04/26 16:36:14 $
d16 1
a16 2
/*#include <graphics/displayinfo.h>*/
#include "displayinfo.h"
@


37.2
log
@Padded extended RawMonitorInfo for 8-byte alignment
@
text
@d6 2
a7 2
**	$Revision: 37.1 $
**	$Date: 91/04/15 13:52:17 $
d116 8
@


37.1
log
@extended RawMonitorInfo for preferences.
@
text
@d6 2
a7 2
**	$Revision: 37.0 $
**	$Date: 91/01/07 15:13:49 $
d16 2
a17 1
#include <graphics/displayinfo.h>
d111 1
@


37.0
log
@initial switchover from V36
@
text
@d6 2
a7 2
**	$Revision: 36.19 $
**	$Date: 90/07/27 16:27:24 $
d110 2
a111 1
	UBYTE	pad[4];
@


36.19
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.18 $
**	$Date: 90/04/06 18:52:32 $
@


36.18
log
@cliposcan
@
text
@d6 2
a7 2
**	$Revision: 36.17 $
**	$Date: 90/03/28 09:37:17 $
@


36.17
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.16 $
**	$Date: 89/07/24 13:30:33 $
d55 1
@


36.16
log
@rec_get_data, rec_set_data
@
text
@d6 2
a7 2
**	$Revision: 36.15 $
**	$Date: 89/05/02 09:29:33 $
@


36.15
log
@copyright 1989
@
text
@d6 2
a7 2
**	$Revision: 36.14 $
**	$Date: 89/03/09 16:12:21 $
d53 3
@


36.14
log
@SpriteResolution
@
text
@d6 2
a7 2
**	$Revision: 36.13 $
**	$Date: 89/03/06 12:40:59 $
d11 1
a11 1
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
@


36.13
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.12 $
**	$Date: 89/03/06 11:34:44 $
d66 1
a67 1
	UBYTE	pad[4];
@


36.12
log
@ViewResolution
@
text
@d6 2
a7 2
**	$Revision: 36.11 $
**	$Date: 89/02/24 09:52:34 $
d106 1
@


36.11
log
@*** empty log message ***
@
text
@d7 1
a7 1
**	$Date: 89/02/23 09:33:15 $
d98 1
@


36.10
log
@checkpoint
@
text
@d6 2
a7 2
**	$Revision: 36.9 $
**	$Date: 89/02/17 20:03:14 $
d52 1
@


36.9
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.8 $
**	$Date: 89/02/17 10:21:18 $
@


36.8
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.7 $
**	$Date: 89/02/17 09:01:53 $
d102 2
a103 2
	struct  Rect32	Txt0Scan;
	struct  Rect32	Std0Scan;
@


36.7
log
@conform to final alpha internal data structures
@
text
@d6 2
a7 2
**	$Revision: 36.6 $
**	$Date: 89/02/17 08:28:11 $
d102 2
@


36.6
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.5 $
**	$Date: 89/02/16 12:07:34 $
d58 9
a66 7
	struct	QueryHeader Header;
	ULONG	ModeID;		/* active control bits for this mode  */
	ULONG	MspcID;		/* monitor record identifier */
	ULONG	AspectX;	/* ticks per pixel horizontally  */
	ULONG	AspectY;	/* ticks per pixel vertically */
	ULONG	Special;	/* special mode processing */
	ULONG	Compatible;	/* coexistence criteria */
d73 1
a73 1
	UBYTE	Name[32];
d80 9
a88 4
	ULONG   Width;
	ULONG   Height;
	ULONG	Depth;
	ULONG	pad[1];
d96 6
a101 9
	struct  Rect32	      TxtOScan;
	struct  Rect32	      StdOScan;
	struct  Rect32	      MaxOScan;
	struct  Rect32	      VideoOScan;
	ULONG	Origin;
	ULONG	MinWide;
	ULONG	MinHigh;
	ULONG	ColorID;
	ULONG	pad[1];
@


36.5
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.4 $
**	$Date: 89/02/16 11:21:54 $
d78 2
a79 2
	ULONG	Width;
	ULONG	Height;
d91 2
@


36.4
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.3 $
**	$Date: 89/02/16 10:07:18 $
a58 1
	ULONG   DisplayID;
a70 1
	ULONG   DisplayID;
a77 1
	ULONG   DisplayID;
a87 1
	ULONG   	      DisplayID;
@


36.3
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.2 $
**	$Date: 89/02/16 09:36:40 $
d49 2
a50 1
    UWORD              rec_Key;
d59 1
d72 1
d80 1
a87 8
struct Rect32
{
	LONG    MinX;
	LONG    MinY;
	LONG    MaxX;
	LONG    MaxY;
};

d91 1
@


36.2
log
@Raw
@
text
@d1 2
a2 2
#ifndef	GRAPHICS_DISPLAYINFO_H
#define	GRAPHICS_DISPLAYINFO_H
d6 2
a7 2
**	$Revision: 36.1 $
**	$Date: 89/02/15 16:12:26 $
d15 3
a17 3
#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif !EXEC_TYPES_H
a18 8
#ifndef GRAPHICS_MONITOR_H
#include <graphics/monitor.h>
#endif !GRAPHICS_MONITOR_H

#ifndef INTUITION_TAGITEM_H
#include <intuition/tagitem.h>
#endif !INTUITION_TAGITEM_H

d53 1
a53 1
/* datachunk type identifiers */
a54 13
#define TAG_DISP                0x80000000
#define TAG_DIMS                0x80001000
#define TAG_MNTR                0x80002000
#define TAG_NAME                0x80003000

struct QueryHeader
{
	ULONG	StructID;	/* structure identifier */
	ULONG	VerRev; 	/* version : revision */
	ULONG	StructIgnore;	/* where tag used to go  */
	ULONG	Length;		/* length of local data in double-longwords */
};

d106 1
a106 72
/* DisplayInfoRecord identifiers */

#define INVALID_ID              ~0

/* monitor identifiers */

#define DEFAULT_MONITOR_ID      0x00000000 /* null for compatibility */
#define NTSC_MONITOR_ID         0x00011000 /* ntsc,        special */
#define PAL_MONITOR_ID          0x00021000 /* pal,         special */
#define VGA_MONITOR_ID          0x00031000 /* vga,         special */
#define A2024_MONITOR_ID        0x00041000 /* a2024,       special */
#define PROTO_MONITOR_ID        0x00051000 /* development, special */

/* normal mode identifiers */

#define LORES_MODE_ID           0x00000000 /* lores */
#define HIRES_MODE_ID           0x00008000 /* hires */
#define SUPER_MODE_ID           0x00008020 /* superhires */
#define HAM_MODE_ID             0x00000800 /* hold_and_modify */
#define LORESLACE_MODE_ID       0x00000004 /* lores lace */
#define HIRESLACE_MODE_ID       0x00008004 /* hires lace */
#define SUPERLACE_MODE_ID       0x00008024 /* superhires lace */
#define HAMLACE_MODE_ID         0x00000804 /* hold_and_modify lace */
#define LORESDPF_MODE_ID        0x00000400 /* lores dualpf */
#define HIRESDPF_MODE_ID        0x00008400 /* hires dualpf */
#define SUPERDPF_MODE_ID        0x00008420 /* superhires dualpf */
#define LORESLACEDPF_MODE_ID    0x00000404 /* lores dualpf lace */
#define HIRESLACEDPF_MODE_ID    0x00008404 /* hires dualpf lace */
#define SUPERLACEDPF_MODE_ID    0x00008424 /* superhires dualpf lace */
#define LORESDPF2_MODE_ID       0x00000440 /* lores dualpf2 */
#define HIRESDPF2_MODE_ID       0x00008440 /* hires dualpf2 */
#define SUPERDPF2_MODE_ID       0x00008460 /* superhires dualpf2 */
#define LORESLACEDPF2_MODE_ID   0x00000444 /* lores dualpf2 lace */
#define HIRESLACEDPF2_MODE_ID   0x00008444 /* hires dualpf2 lace */
#define SUPERLACEDPF2_MODE_ID   0x00008464 /* superhires dualpf2 lace */

/* special mode identifiers */

#define VXLORES_MODE_ID         0x00000004 /* vga_lores */
#define VLORES_MODE_ID          0x00008004 /* vga_hires */
#define PROTO_MODE_ID           0x00008024 /* vga_superhires */
#define VHAM_MODE_ID            0x00000804 /* vga_hold_and_modify */
#define VXLORESLACE_MODE_ID     0x00000005 /* vga_lores lace */
#define VLORESLACE_MODE_ID      0x00008005 /* vga_hires lace */
#define PROTOLACE_MODE_ID       0x00008025 /* vga_superhires lace */
#define VHAMLACE_MODE_ID        0x00000805 /* vga_hold_and_modify lace */
#define VXLORESDPF_MODE_ID      0x00000404 /* vga_lores dualpf */
#define VLORESDPF_MODE_ID       0x00008404 /* vga_hires dualpf */
#define PROTODPF_MODE_ID        0x00008424 /* vga_superhires dualpf */
#define VXLORESLACEDPF_MODE_ID  0x00000405 /* vga_lores dualpf lace */
#define VLORESLACEDPF_MODE_ID   0x00008405 /* vga_hires dualpf lace */
#define PROTOLACEDPF_MODE_ID    0x00008425 /* vga_superhires dualpf lace */
#define VXLORESDPF2_MODE_ID     0x00000444 /* vga_lores dualpf2 */
#define VLORESDPF2_MODE_ID      0x00008444 /* vga_hires dualpf2 */
#define PROTODPF2_MODE_ID       0x00008464 /* vga_superhires dualpf2 */
#define VXLORESLACEDPF2_MODE_ID 0x00000445 /* vga_lores dualpf2 lace */
#define VLORESLACEDPF2_MODE_ID  0x00008445 /* vga_hires dualpf2 lace */
#define PROTOLACEDPF2_MODE_ID   0x00008465 /* vga_superhires dualpf2 lace */

#define TEN_HERTZ_MODE_ID       0x00000000 /* slow scan mode (a2024 specific) */
#define FIFTEEN_HERTZ_MODE_ID   0x00008000 /* fast scan mode (a2024 specific) */

/* some composite keys */

#define LORES_KEY               ( DEFAULT_MONITOR_ID | LORES_MODE_ID         )
#define HIRES_KEY               ( DEFAULT_MONITOR_ID | HIRES_MODE_ID         )
#define SUPERHIRES_KEY          ( DEFAULT_MONITOR_ID | SUPER_MODE_ID         )
#define PRODUCTIVITY_KEY        (     VGA_MONITOR_ID | PROTO_MODE_ID         )
#define A2024_10HZ_KEY          (   A2024_MONITOR_ID | TEN_HERTZ_MODE_ID     )
#define A2024_15HZ_KEY          (   A2024_MONITOR_ID | FIFTEEN_HERTZ_MODE_ID )

#endif	/* GRAPHICS_DISPLAYINFO_H */
@


36.1
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.0 $
**	$Date: 89/02/15 16:11:35 $
d76 1
a76 1
struct DisplayInfo
d88 1
a88 1
struct DisplayName
d95 1
a95 1
struct DisplayNorm
d105 1
a105 1
struct DisplayOScan
d113 1
a113 1
struct DisplayMonitor
d115 1
a115 1
	struct	QueryHeader Header;
d117 2
a118 2
	struct  DisplayOScan  TxtOScan;
	struct  DisplayOScan  StdOScan;
@


36.0
log
@added to rcs for updating
@
text
@d4 4
a7 4
**	$Filename: $
**	$Release: $
**	$Revision: $
**	$Date: $
@
