head     39.32;
branch   ;
access   ;
symbols  rel39_24:39.31 rel39_18:39.30 rel39_97:39.29 rel39_90:39.27 rel39_89:39.27 rel39_82:39.27 rel39_76:39.25 rel39_71:39.25 rel39_65:39.25 rel39_64:39.25 rel39_61:39.24 rel39_60:39.24 rel39_55:39.24 rel39_52:39.24 rel39_47:39.17 rel39_39:39.13 rel39_38:39.13 rel39_37:39.10 rel39_35:39.9 rel39_34:39.8 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_27:37.0 V37_25:37.0 V37_24:37.0 V37_23:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_18:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.5 V36_208:36.5 V36_207:36.5 V36_205:36.5 V36_203:36.5 V36_202:36.5 V36_201:36.5 V36_200:36.5 V36_199:36.5 V36_198:36.5 V36_196:36.5 V36_195:36.5 V36_194:36.5 V36_193:36.5 V36_192:36.5 V36_191:36.5 V36_190:36.5 V36_189:36.5 V36_188:36.5 V36_187:36.5 V36_186:36.5 V36_185:36.5 V36_184:36.5 V36_183:36.5 V36_182:36.5 V36_181:36.5 V36_180:36.5 V36_179:36.5 V36_161:36.3 V36_160:36.3 V36_158:36.3 V36_157:36.3 V36_153:36.3 V36_151:36.2 V36_147:36.2 V36_146:36.2 V36_144:36.2 V36_143:36.1 V36_142:36.1 V36_141:36.1 V36_139:36.1 V36_137:36.1 V36_136:36.1 V36_135:36.1;
locks    ; strict;
comment  @*   @;


39.32
date     93.05.31.14.35.10;  author chrisg;  state Exp;
branches ;
next     39.31;

39.31
date     93.04.29.11.51.17;  author chrisg;  state Exp;
branches ;
next     39.30;

39.30
date     93.03.30.15.33.38;  author chrisg;  state Exp;
branches ;
next     39.29;

39.29
date     92.11.03.14.36.46;  author spence;  state Exp;
branches ;
next     39.28;

39.28
date     92.11.03.14.14.49;  author chrisg;  state Exp;
branches ;
next     39.27;

39.27
date     92.08.11.14.07.45;  author spence;  state Exp;
branches ;
next     39.26;

39.26
date     92.08.08.11.13.00;  author chrisg;  state Exp;
branches ;
next     39.25;

39.25
date     92.06.03.18.12.08;  author spence;  state Exp;
branches ;
next     39.24;

39.24
date     92.04.10.12.18.26;  author spence;  state Exp;
branches ;
next     39.23;

39.23
date     92.04.09.16.28.52;  author chrisg;  state Exp;
branches ;
next     39.22;

39.22
date     92.04.08.17.07.42;  author chrisg;  state Exp;
branches ;
next     39.21;

39.21
date     92.04.07.15.16.28;  author spence;  state Exp;
branches ;
next     39.20;

39.20
date     92.04.06.14.12.36;  author chrisg;  state Exp;
branches ;
next     39.19;

39.19
date     92.04.06.12.31.58;  author chrisg;  state Exp;
branches ;
next     39.18;

39.18
date     92.04.06.09.31.40;  author spence;  state Exp;
branches ;
next     39.17;

39.17
date     92.04.03.16.55.46;  author chrisg;  state Exp;
branches ;
next     39.16;

39.16
date     92.04.02.10.46.19;  author spence;  state Exp;
branches ;
next     39.15;

39.15
date     92.03.26.12.45.27;  author chrisg;  state Exp;
branches ;
next     39.14;

39.14
date     92.03.19.16.39.23;  author chrisg;  state Exp;
branches ;
next     39.13;

39.13
date     92.03.03.13.26.55;  author chrisg;  state Exp;
branches ;
next     39.12;

39.12
date     92.02.28.14.17.50;  author spence;  state Exp;
branches ;
next     39.11;

39.11
date     92.02.27.17.06.25;  author chrisg;  state Exp;
branches ;
next     39.10;

39.10
date     92.02.24.14.04.37;  author chrisg;  state Exp;
branches ;
next     39.9;

39.9
date     92.02.20.14.06.25;  author chrisg;  state Exp;
branches ;
next     39.8;

39.8
date     92.02.14.15.50.08;  author chrisg;  state Exp;
branches ;
next     39.7;

39.7
date     92.01.30.16.06.32;  author chrisg;  state Exp;
branches ;
next     39.6;

39.6
date     92.01.30.15.35.21;  author chrisg;  state Exp;
branches ;
next     39.5;

39.5
date     91.12.20.15.50.49;  author chrisg;  state Exp;
branches ;
next     39.4;

39.4
date     91.11.15.10.47.44;  author spence;  state Exp;
branches ;
next     39.3;

39.3
date     91.11.08.12.22.19;  author chrisg;  state Exp;
branches ;
next     39.2;

39.2
date     91.11.04.15.38.47;  author chrisg;  state Exp;
branches ;
next     39.1;

39.1
date     91.10.29.10.21.37;  author chrisg;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.27.17.05.42;  author chrisg;  state Exp;
branches ;
next     38.6;

38.6
date     91.08.21.16.53.10;  author chrisg;  state Exp;
branches ;
next     38.5;

38.5
date     91.08.21.16.05.22;  author chrisg;  state Exp;
branches ;
next     38.4;

38.4
date     91.08.20.16.07.56;  author chrisg;  state Exp;
branches ;
next     38.3;

38.3
date     91.08.15.18.12.20;  author spence;  state Exp;
branches ;
next     38.2;

38.2
date     91.08.15.17.58.20;  author spence;  state Exp;
branches ;
next     38.1;

38.1
date     91.08.07.13.49.32;  author chrisg;  state Exp;
branches ;
next     38.0;

38.0
date     91.07.22.15.05.18;  author spence;  state Exp;
branches ;
next     37.3;

37.3
date     91.07.12.16.31.59;  author chrisg;  state Exp;
branches ;
next     37.2;

37.2
date     91.07.03.10.55.18;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.06.19.14.21.57;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.14.30;  author spence;  state Exp;
branches ;
next     36.5;

36.5
date     90.07.27.16.29.16;  author bart;  state Exp;
branches ;
next     36.4;

36.4
date     90.07.20.09.32.10;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     90.05.21.12.18.35;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     90.05.02.10.16.30;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     90.04.02.12.24.08;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     90.04.02.12.23.13;  author kodiak;  state Exp;
branches ;
next     ;


desc
@sfd for graphics.library
@


39.32
log
@massive fixes to includes & autodocs.
@
text
@==id $Id: graphics_lib.sfd,v 39.31 93/04/29 11:51:17 chrisg Exp Locker: chrisg $
* "graphics.library"
==base _GfxBase
==include <graphics/gfx.h>
==include <graphics/displayinfo.h>
==include <graphics/gels.h>
==include <graphics/rastport.h>
==include <graphics/view.h>
==include <graphics/copper.h>
==include <graphics/clip.h>
==include <graphics/regions.h>
==include <graphics/sprite.h>
==include <graphics/text.h>
==include <hardware/blit.h>
==bias 30
==public
*------ BitMap primitives ------
LONG BltBitMap( struct BitMap *srcBitMap, WORD xSrc, WORD ySrc,
	struct BitMap *destBitMap, WORD xDest, WORD yDest, WORD xSize,
	WORD ySize, UBYTE minterm, UBYTE mask, PLANEPTR tempA )
	(A0,D0,D1,A1,D2,D3,D4,D5,D6,D7,A2)
VOID BltTemplate( PLANEPTR source, WORD xSrc, WORD srcMod,
	struct RastPort *destRP, WORD xDest, WORD yDest, WORD xSize,
	WORD ySize )
	(A0,D0,D1,A1,D2,D3,D4,D5 )
*------ Text routines ------
VOID ClearEOL( struct RastPort *rp ) (A1)
VOID ClearScreen( struct RastPort *rp ) (A1)
WORD TextLength( struct RastPort *rp, STRPTR string, UWORD count )
	(A1,A0,D0)
LONG Text( struct RastPort *rp, STRPTR string, UWORD count ) (A1,A0,D0)
LONG SetFont( struct RastPort *rp, struct TextFont *textFont ) (A1,A0)
struct TextFont *OpenFont( struct TextAttr *textAttr ) (A0)
VOID CloseFont( struct TextFont *textFont ) (A1)
ULONG AskSoftStyle( struct RastPort *rp ) (A1)
ULONG SetSoftStyle( struct RastPort *rp, ULONG style, ULONG enable )
	(A1,D0,D1)
*------	Gels routines ------
VOID AddBob( struct Bob *bob, struct RastPort *rp ) (A0,A1)
VOID AddVSprite( struct VSprite *vSprite, struct RastPort *rp ) (A0,A1)
VOID DoCollision( struct RastPort *rp ) (A1)
VOID DrawGList( struct RastPort *rp, struct ViewPort *vp ) (A1,A0)
VOID InitGels( struct VSprite *head, struct VSprite *tail,
	struct GelsInfo *gelsInfo ) (A0,A1,A2)
VOID InitMasks( struct VSprite *vSprite ) (A0)
VOID RemIBob( struct Bob *bob, struct RastPort *rp, struct ViewPort *vp )
	(A0,A1,A2)
VOID RemVSprite( struct VSprite *vSprite ) (A0)
VOID SetCollision( ULONG num, VOID (*routine)(struct VSprite *vSprite, APTR),
	struct GelsInfo *gelsInfo ) (D0,A0,A1)
VOID SortGList( struct RastPort *rp ) (A1)
VOID AddAnimOb( struct AnimOb *anOb, struct AnimOb **anKey,
	struct RastPort *rp ) (A0,A1,A2)
VOID Animate( struct AnimOb **anKey, struct RastPort *rp ) (A0,A1)
BOOL GetGBuffers( struct AnimOb *anOb, struct RastPort *rp, BOOL flag )
	(A0,A1,D0)
VOID InitGMasks( struct AnimOb *anOb ) (A0)
*------	General graphics routines ------
VOID DrawEllipse( struct RastPort *rp, WORD xCenter, WORD yCenter,
	WORD a, WORD b ) (A1,D0,D1,D2,D3)
LONG AreaEllipse( struct RastPort *rp, WORD xCenter, WORD yCenter,
	WORD a, WORD b ) (A1,D0,D1,D2,D3)
VOID LoadRGB4( struct ViewPort *vp, UWORD *colors, WORD count ) (A0,A1,D0)
VOID InitRastPort( struct RastPort *rp ) (A1)
VOID InitVPort( struct ViewPort *vp ) (A0)
ULONG MrgCop( struct View *view ) (A1)
ULONG MakeVPort( struct View *view, struct ViewPort *vp ) (A0,A1)
VOID LoadView( struct View *view ) (A1)
VOID WaitBlit() ()
VOID SetRast( struct RastPort *rp, UBYTE pen ) (A1,D0)
VOID Move( struct RastPort *rp, WORD x, WORD y ) (A1,D0,D1)
VOID Draw( struct RastPort *rp, WORD x, WORD y ) (A1,D0,D1)
LONG AreaMove( struct RastPort *rp, WORD x, WORD y ) (A1,D0,D1)
LONG AreaDraw( struct RastPort *rp, WORD x, WORD y ) (A1,D0,D1)
LONG AreaEnd( struct RastPort *rp ) (A1)
VOID WaitTOF() ()
VOID QBlit( struct bltnode *blit ) (A1)
VOID InitArea( struct AreaInfo *areaInfo, APTR vectorBuffer,
	WORD maxVectors ) (A0,A1,D0)
VOID SetRGB4( struct ViewPort *vp, WORD index, 
	UBYTE red, UBYTE green, UBYTE blue ) (A0,D0,D1,D2,D3)
VOID QBSBlit( struct bltnode *blit ) (A1)
VOID BltClear( PLANEPTR memBlock, ULONG byteCount, ULONG flags ) (A1,D0,D1)
VOID RectFill( struct RastPort *rp, WORD xMin, WORD yMin,
	WORD xMax, WORD yMax ) (A1,D0,D1,D2,D3)
VOID BltPattern( struct RastPort *rp, PLANEPTR mask, WORD xMin, WORD yMin,
	WORD xMax, WORD yMax, UWORD maskBPR ) (A1,A0,D0,D1,D2,D3,D4)
ULONG ReadPixel( struct RastPort *rp, WORD x, WORD y ) (A1,D0,D1)
LONG WritePixel( struct RastPort *rp, WORD x, WORD y ) (A1,D0,D1)
BOOL Flood( struct RastPort *rp, ULONG mode, WORD x, WORD y ) (A1,D2,D0,D1)
VOID PolyDraw( struct RastPort *rp, WORD count, WORD *polyTable ) (A1,D0,A0)
VOID SetAPen( struct RastPort *rp, UBYTE pen ) (A1,D0)
VOID SetBPen( struct RastPort *rp, UBYTE pen ) (A1,D0)
VOID SetDrMd( struct RastPort *rp, UBYTE drawMode ) (A1,D0)
VOID InitView( struct View *view ) (A1)
VOID CBump( struct UCopList *copList ) (A1)
VOID CMove( struct UCopList *copList, APTR destination, WORD data )
	(A1,D0,D1)
VOID CWait( struct UCopList *copList, WORD v, WORD h ) (A1,D0,D1)
LONG VBeamPos() ()
VOID InitBitMap( struct BitMap *bitMap, BYTE depth, WORD width, WORD height )
	(A0,D0,D1,D2)
VOID ScrollRaster( struct RastPort *rp, WORD dx, WORD dy, WORD xMin, WORD yMin,
	WORD xMax, WORD yMax ) (A1,D0,D1,D2,D3,D4,D5)
VOID WaitBOVP( struct ViewPort *vp ) (A0)
WORD GetSprite( struct SimpleSprite *sprite, WORD num ) (A0,D0)
VOID FreeSprite( WORD num )(D0)
VOID ChangeSprite( struct ViewPort *vp, struct SimpleSprite *sprite,
	PLANEPTR newData ) (A0,A1,A2)
VOID MoveSprite( struct ViewPort *vp, struct SimpleSprite *sprite,
	WORD x, WORD y ) (A0,A1,D0,D1)
VOID LockLayerRom( struct Layer *layer ) (A5)
VOID UnlockLayerRom( struct Layer *layer ) (A5)
VOID SyncSBitMap( struct Layer *layer ) (A0)
VOID CopySBitMap( struct Layer *layer ) (A0)
VOID OwnBlitter() ()
VOID DisownBlitter() ()
VOID InitTmpRas( struct TmpRas *tmpRas, PLANEPTR buffer, LONG size ) (A0,A1,D0)
VOID AskFont( struct RastPort *rp, struct TextAttr *textAttr ) (A1,A0)
VOID AddFont( struct TextFont *textFont ) (A1)
VOID RemFont( struct TextFont *textFont ) (A1)
PLANEPTR AllocRaster( UWORD width, UWORD height ) (D0,D1)
VOID FreeRaster( PLANEPTR p, UWORD width, UWORD height ) (A0,D0,D1)
VOID AndRectRegion( struct Region *region, struct Rectangle *rectangle )
	(A0,A1) 
BOOL OrRectRegion( struct Region *region, struct Rectangle *rectangle )
	(A0,A1)
struct Region *NewRegion() ()
BOOL ClearRectRegion( struct Region *region, struct Rectangle *rectangle )
	(A0,A1)
VOID ClearRegion( struct Region *region ) (A0)
VOID DisposeRegion( struct Region *region ) (A0)
VOID FreeVPortCopLists( struct ViewPort *vp ) (A0)
VOID FreeCopList( struct CopList *copList ) (A0)
VOID ClipBlit( struct RastPort *srcRP, WORD xSrc, WORD ySrc,
	struct RastPort *destRP, WORD xDest, WORD yDest,
	WORD xSize, WORD ySize, UBYTE minterm ) (A0,D0,D1,A1,D2,D3,D4,D5,D6)
BOOL XorRectRegion( struct Region *region, struct Rectangle *rectangle )
	(A0,A1)
VOID FreeCprList( struct cprlist *cprList ) (A0)
struct ColorMap *GetColorMap( LONG entries ) (D0)
VOID FreeColorMap( struct ColorMap *colorMap ) (A0)
ULONG GetRGB4( struct ColorMap *colorMap, LONG entry ) (A0,D0)
VOID ScrollVPort( struct ViewPort *vp ) (A0)
struct CopList *UCopperListInit( struct UCopList *uCopList, WORD n ) (A0,D0)
VOID FreeGBuffers( struct AnimOb *anOb, struct RastPort *rp, BOOL flag )
	(A0,A1,D0)
VOID BltBitMapRastPort( struct BitMap *srcBitMap, WORD xSrc, WORD ySrc,
	struct RastPort *destRP, WORD xDest, WORD yDest,
	WORD xSize, WORD ySize, UBYTE minterm ) (A0,D0,D1,A1,D2,D3,D4,D5,D6)
BOOL OrRegionRegion( struct Region *srcRegion,struct Region *destRegion )
	(A0,A1)
BOOL XorRegionRegion( struct Region *srcRegion, struct Region *destRegion )
	(A0,A1)
BOOL AndRegionRegion( struct Region *srcRegion, struct Region *destRegion )
	(A0,A1)
VOID SetRGB4CM( struct ColorMap *colorMap, WORD index,
	UBYTE red, UBYTE green, UBYTE blue ) (A0,D0,D1,D2,D3)
VOID BltMaskBitMapRastPort( struct BitMap *srcBitMap, WORD xSrc, WORD ySrc,
	struct RastPort *destRP, WORD xDest, WORD yDest,
	WORD xSize, WORD ySize, UBYTE minterm, PLANEPTR bltMask )
	(A0,D0,D1,A1,D2,D3,D4,D5,D6,A2)
==private
VOID GfxInternal1() ()
VOID GfxInternal2() ()
==public
BOOL AttemptLockLayerRom( struct Layer *layer ) (A5)
==version 36
APTR GfxNew( ULONG gfxNodeType ) (D0)
VOID GfxFree( APTR gfxNodePtr ) (A0)
VOID GfxAssociate( APTR associateNode, APTR gfxNodePtr ) (A0,A1)
VOID BitMapScale( struct BitScaleArgs *bitScaleArgs ) (A0)
UWORD ScalerDiv( UWORD factor, UWORD numerator, UWORD denominator ) (D0,D1,D2)
WORD TextExtent( struct RastPort *rp, STRPTR string, WORD count,
	struct TextExtent *textExtent ) (A1,A0,D0,A2)
ULONG TextFit( struct RastPort *rp, STRPTR string, UWORD strLen,
	struct TextExtent *textExtent, struct TextExtent *constrainingExtent,
	WORD strDirection,
	UWORD constrainingBitWidth, UWORD constrainingBitHeight )
	(A1,A0,D0,A2,A3,D1,D2,D3)
APTR GfxLookUp( APTR associateNode ) (A0)
BOOL VideoControl( struct ColorMap *colorMap, struct TagItem *tagarray ) 
	(A0,A1)
==varargs
BOOL VideoControlTags( struct ColorMap *colorMap, ULONG tag1Type, ... ) 
	(A0,A1)
struct MonitorSpec *OpenMonitor( STRPTR monitorName, ULONG displayID ) (A1,D0)
BOOL CloseMonitor( struct MonitorSpec *monitorSpec ) (A0)
DisplayInfoHandle FindDisplayInfo( ULONG displayID ) (D0)
ULONG NextDisplayInfo( ULONG displayID ) (D0)
==private
VOID AddDisplayInfo( APTR displayInfoRecord ) (A0)
VOID AddDisplayInfoData( DisplayInfoHandle handle, UBYTE *buf, ULONG size,
	ULONG tagID, ULONG displayID ) (A0,A1,D0,D1,D2)
VOID SetDisplayInfoData( DisplayInfoHandle handle, UBYTE *buf, ULONG size,
	ULONG tagID, ULONG displayID ) (A0,A1,D0,D1,D2)
==public
ULONG GetDisplayInfoData( DisplayInfoHandle handle, UBYTE *buf, ULONG size,
	ULONG tagID, ULONG displayID ) (A0,A1,D0,D1,D2)
VOID FontExtent( struct TextFont *font, struct TextExtent *fontExtent )
	(A0,A1)
LONG ReadPixelLine8( struct RastPort *rp, UWORD xstart, UWORD ystart,
	UWORD width, UBYTE *array, struct RastPort *tempRP )
	(A0,D0,D1,D2,A2,A1)
LONG WritePixelLine8( struct RastPort *rp, UWORD xstart, UWORD ystart,
	UWORD width, UBYTE *array, struct RastPort *tempRP )
	(A0,D0,D1,D2,A2,A1)
LONG ReadPixelArray8( struct RastPort *rp, UWORD xstart, UWORD ystart,
	UWORD xstop, UWORD ystop, UBYTE *array, struct RastPort *temprp )
	(A0,D0,D1,D2,D3,A2,A1)
LONG WritePixelArray8( struct RastPort *rp, UWORD xstart, UWORD ystart,
	UWORD xstop, UWORD ystop, UBYTE *array, struct RastPort *temprp )
	(A0,D0,D1,D2,D3,A2,A1)
LONG GetVPModeID( struct ViewPort *vp ) (A0)
LONG ModeNotAvailable( ULONG modeID ) (D0)
WORD WeighTAMatch( struct TextAttr *reqTextAttr,
	struct TextAttr *targetTextAttr, struct TagItem *targetTags )
	(A0,A1,A2)
==varargs
WORD WeighTAMatchTags( struct TextAttr *reqTextAttr,
	struct TextAttr *targetTextAttr, ULONG tag1Type, ...)
	(A0,A1,A2)
VOID EraseRect( struct RastPort *rp, WORD xMin, WORD yMin,
	WORD xMax, WORD yMax ) (A1,D0,D1,D2,D3)
ULONG ExtendFont( struct TextFont *font, struct TagItem *fontTags ) (A0,A1)
==varargs
ULONG ExtendFontTags( struct TextFont *font, ULONG tag1Type, ... ) (A0,A1)
VOID StripFont( struct TextFont *font ) (A0)
==version 39
UWORD CalcIVG(struct View *v,struct ViewPort *vp)(a0,a1)
LONG AttachPalExtra(struct ColorMap *cm,struct ViewPort *vp)(a0,a1)
LONG ObtainBestPenA(struct ColorMap *cm,ULONG r,ULONG g,ULONG b,struct TagItem *tags)(a0,d1,d2,d3,a1)
==varargs
LONG ObtainBestPen(struct ColorMap *cm,ULONG r,ULONG g,ULONG b,ULONG tag1Type, ... )(a0,d1,d2,d3,a1)
==private
VOID GfxInternal3() ()
==public
VOID SetRGB32(struct ViewPort *vp,ULONG n,ULONG r,ULONG g,ULONG b)(a0,d0,d1,d2,d3)
ULONG GetAPen(struct RastPort *rp)(a0)
ULONG GetBPen(struct RastPort *rp)(a0)
ULONG GetDrMd(struct RastPort *rp)(a0)
ULONG GetOutlinePen(struct RastPort *rp)(a0)
VOID LoadRGB32(struct ViewPort *vp,ULONG *table)(a0,a1)
ULONG SetChipRev(ULONG want)(d0)
VOID SetABPenDrMd(struct RastPort *rp,ULONG apen,ULONG bpen,ULONG drawmode)(a1,d0,d1,d2)
VOID GetRGB32(struct ColorMap *cm, ULONG firstcolor, ULONG ncolors, ULONG *table ) (a0,d0,d1,a1)
==private
VOID GfxSpare1() ()
BOOL SetDefaultMonitor(UWORD mon)(d0)
==public
struct BitMap *AllocBitMap(ULONG sizex,ULONG sizey,ULONG depth, ULONG flags, struct BitMap *friend_bitmap)(d0,d1,d2,d3,a0)
VOID FreeBitMap(struct BitMap *bm)(a0)
LONG GetExtSpriteA(struct ExtSprite *ss,struct TagItem *tags)(a2,a1)
==varargs
LONG GetExtSprite(struct ExtSprite *ss, ULONG tag1Type, ...)(a2,a1)
ULONG CoerceMode(struct ViewPort *vp, ULONG monitorid, ULONG flags)(a0,d0,d1)
VOID ChangeVPBitMap(struct ViewPort *vp, struct BitMap *bm, struct DBufInfo *db)(a0,a1,a2)
VOID ReleasePen(struct ColorMap *cm,ULONG n)(a0,d0)
ULONG ObtainPen(struct ColorMap *cm,ULONG n,ULONG r,ULONG g,ULONG b,LONG f)(a0,d0,d1,d2,d3,d4)
ULONG GetBitMapAttr(struct BitMap *bm,ULONG attrnum)(a0,d1)
struct DBufInfo *AllocDBufInfo(struct ViewPort *vp)(a0)
VOID FreeDBufInfo(struct DBufInfo *dbi)(a1)
ULONG SetOutlinePen(struct RastPort *rp,ULONG pen)(a0,d0)
ULONG SetWriteMask(struct RastPort *rp,ULONG msk)(a0,d0)
VOID SetMaxPen(struct RastPort *rp,ULONG maxpen)(a0,d0)
VOID SetRGB32CM(struct ColorMap *cm, ULONG n, ULONG r, ULONG g, ULONG b)(a0,d0,d1,d2,d3)
VOID ScrollRasterBF( struct RastPort *rp, WORD dx, WORD dy, WORD xMin, WORD yMin,
	WORD xMax, WORD yMax ) (A1,D0,D1,D2,D3,D4,D5)
LONG FindColor(struct ColorMap *cm,ULONG r,ULONG g,ULONG b,LONG maxcolor)(a3,d1,d2,d3,d4)
==private
VOID GfxSpare2() ()
==public
struct ExtSprite *AllocSpriteDataA(struct BitMap *bm,struct TagItem *tags)(a2,a1)
==varargs
struct ExtSprite *AllocSpriteData(struct BitMap *bm,ULONG tag1Type, ...)(a2,a1)
LONG ChangeExtSpriteA(struct ViewPort *vp,struct ExtSprite *oldsprite,struct ExtSprite *newsprite,struct TagItem *tags)(a0,a1,a2,a3)
==varargs
LONG ChangeExtSprite(struct ViewPort *vp,struct ExtSprite *oldsprite,struct ExtSprite *newsprite,ULONG tag1Type, ...)(a0,a1,a2,a3)
VOID FreeSpriteData(struct ExtSprite *sp)(a2)
VOID SetRPAttrsA(struct RastPort *rp,struct TagItem *tags)(a0,a1)
==varargs
VOID SetRPAttrs(struct RastPort *rp,ULONG tag1Type, ...)(a0,a1)
VOID GetRPAttrsA(struct RastPort *rp,struct TagItem *tags)(a0,a1)
==varargs
VOID GetRPAttrs(struct RastPort *rp,ULONG tag1Type, ...)(a0,a1)
ULONG BestModeIDA(struct TagItem *tags)(a0)
==varargs
ULONG BestModeID(ULONG tag1Type, ...)(a0)
==version 40
VOID WriteChunkyPixels( struct RastPort *rp, UWORD xstart, UWORD ystart,
	UWORD xstop, UWORD ystop, UBYTE *array, LONG bytesperrow )
	(A0,D0,D1,D2,D3,A2,D4)
==end
@


39.31
log
@added ==40
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.30 93/03/30 15:33:38 chrisg Exp Locker: chrisg $
d118 1
a118 1
struct TmpRas *InitTmpRas( struct TmpRas *tmpRas, PLANEPTR buffer, LONG size ) (A0,A1,D0)
@


39.30
log
@mail spence subject checkout &
new lvo.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.29 92/11/03 14:36:46 spence Exp Locker: chrisg $
d289 1
@


39.29
log
@MrgCop() returns ULONG
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.28 92/11/03 14:14:49 chrisg Exp Locker: spence $
d289 3
@


39.28
log
@fixed === -> ==
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.27 92/08/11 14:07:45 spence Exp Locker: chrisg $
d66 1
a66 1
VOID MrgCop( struct View *view ) (A1)
@


39.27
log
@killed VPOrigin()
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.26 92/08/08 11:13:00 chrisg Exp Locker: spence $
d163 1
d166 1
d235 1
d237 1
d247 1
a248 1
==private
d270 1
d272 1
@


39.26
log
@change "new" to "newsprite" so as not to confuse c++.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.25 92/06/03 18:12:08 spence Exp Locker: chrisg $
d266 1
a266 1
VOID VPOrigin(struct View *v,struct ViewPort *vp,Point *origin1,Point *origin2)(a0,a1,a2,a3)
@


39.25
log
@Added BestModeID() and BestModeIDA()
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.24 92/04/10 12:18:26 spence Exp Locker: spence $
d270 1
a270 1
LONG ChangeExtSpriteA(struct ViewPort *vp,struct ExtSprite *old,struct ExtSprite *new,struct TagItem *tags)(a0,a1,a2,a3)
d272 1
a272 1
LONG ChangeExtSprite(struct ViewPort *vp,struct ExtSprite *old,struct ExtSprite *new,ULONG tag1Type, ...)(a0,a1,a2,a3)
@


39.24
log
@Added SetDefaultMonitor()
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.23 92/04/09 16:28:52 chrisg Exp Locker: spence $
d280 3
@


39.23
log
@ made attachpalextra have a return type.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.22 92/04/08 17:07:42 chrisg Exp Locker: chrisg $
d244 3
a246 1
VOID GfxSpare2() ()
@


39.22
log
@fname changes.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.21 92/04/07 15:16:28 spence Exp Locker: chrisg $
d229 1
a229 1
VOID AttachPalExtra(struct ColorMap *cm,struct ViewPort *vp)(a0,a1)
@


39.21
log
@corrected varargs ordering (should be LVO, then ==varargs, then varargs
stub
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.20 92/04/06 14:12:36 chrisg Exp Locker: spence $
d230 4
a233 2
LONG PickBestColor(struct ColorMap *cm,ULONG r,ULONG g,ULONG b,ULONG precision,LONG maxcolor)(a0,d1,d2,d3,d4,d5)
LONG SearchColorMap(struct ColorMap *cm,ULONG p,ULONG r,ULONG g,ULONG b,ULONG maxerr,ULONG maxcolor)(a0,a1,d1,d2,d3,d4,d5)
@


39.20
log
@ getopen->GetOutlinePen
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.19 92/04/06 12:31:58 chrisg Exp Locker: chrisg $
d180 2
a184 2
BOOL VideoControl( struct ColorMap *colorMap, struct TagItem *tagarray ) 
	(A0,A1)
d214 3
a220 3
WORD WeighTAMatch( struct TextAttr *reqTextAttr,
	struct TextAttr *targetTextAttr, struct TagItem *targetTags )
	(A0,A1,A2)
d223 1
a225 1
ULONG ExtendFont( struct TextFont *font, struct TagItem *fontTags ) (A0,A1)
d245 1
a247 1
LONG GetExtSpriteA(struct ExtSprite *ss,struct TagItem *tags)(a2,a1)
d263 1
d266 1
a266 1
struct ExtSprite *AllocSpriteDataA(struct BitMap *bm,struct TagItem *tags)(a2,a1)
a268 1
LONG ChangeExtSpriteA(struct ViewPort *vp,struct ExtSprite *old,struct ExtSprite *new,struct TagItem *tags)(a0,a1,a2,a3)
d270 1
d272 2
a273 2
VOID SetRPAttr(struct RastPort *rp,ULONG tag1Type, ...)(a0,a1)
VOID SetRPAttrA(struct RastPort *rp,struct TagItem *tags)(a0,a1)
d275 1
a275 2
VOID GetRPAttr(struct RastPort *rp,ULONG tag1Type, ...)(a0,a1)
VOID GetRPAttrA(struct RastPort *rp,struct TagItem *tags)(a0,a1)
@


39.19
log
@ added get/set RpAttr.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.18 92/04/06 09:31:40 spence Exp Locker: chrisg $
d236 1
a236 1
ULONG GetOPen(struct RastPort *rp)(a0)
@


39.18
log
@added varargs functions
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.17 92/04/03 16:55:46 chrisg Exp Locker: spence $
d270 6
@


39.17
log
@ added new sprite functions.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.16 92/04/02 10:46:19 spence Exp Locker: chrisg $
d180 3
d214 4
d223 2
d245 2
d263 2
d266 2
@


39.16
log
@Added VPOrigin() to the function list
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.15 92/03/26 12:45:27 chrisg Exp Locker: spence $
d236 1
a236 1
LONG GetSpriteTags(struct SimpleSprite *ss,struct TagItem *tags)(a0,a1)
d252 3
@


39.15
log
@ added findcolor()
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.14 92/03/19 16:39:23 chrisg Exp Locker: chrisg $
d237 1
a237 1
ULONG CoerceMode(struct ViewPort *vp, ULONG MonitorID, ULONG Flags)(a0,d0,d1)
d251 1
@


39.14
log
@added scrollraterbf
changed case of setoutlinepen
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.13 92/03/03 13:26:55 chrisg Exp Locker: chrisg $
d250 1
@


39.13
log
@added setrgb32cm
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.12 92/02/28 14:17:50 spence Exp Locker: chrisg $
d244 1
a244 1
ULONG SetOutLinePen(struct RastPort *rp,ULONG pen)(a0,d0)
d248 2
@


39.12
log
@MakeGfxGreat() -> SetChipRev()
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.11 92/02/27 17:06:25 chrisg Exp Locker: spence $
d247 1
@


39.11
log
@  fixed LoadRGB32 and killed allocbidata and freebidata
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.10 92/02/24 14:04:37 chrisg Exp Locker: chrisg $
d229 1
a229 1
VOID MakeGfxGreat() ()
@


39.10
log
@fixed void and change f names.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.9 92/02/20 14:06:25 chrisg Exp Locker: chrisg $
d228 1
a228 1
VOID LoadRGB32(struct ViewPort *vp,ULONG c1, ULONG n, ULONG *table)(a0,d0,d1,a1)
d232 2
a233 2
ULONG AllocBitMapData(struct BitMap *bm,ULONG sizex,ULONG sizey,ULONG depth,ULONG flags)(a0,d0,d1,d2,d3)
VOID FreeBitMapData(struct BitMap *bm)(a0)
@


39.9
log
@added allocdbufinfo, freedbufinfo, setopen, setwrmsk, setmaxpen.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.8 92/02/14 15:50:08 chrisg Exp Locker: chrisg $
d244 3
a246 3
ULONG SetOPen(struct RastPort *rp,ULONG pen)(a0,d0)
ULONG SetWrMsk(struct RastPort *rp,ULONG msk)(a0,d0)
void SetMaxPen(struct RastPort *rp,ULONG maxpen)(a0,d0)
@


39.8
log
@added GteBMAttr function.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.7 92/01/30 16:06:32 chrisg Exp Locker: chrisg $
d242 5
@


39.7
log
@  fxied because of stupid sfd restriction
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.6 92/01/30 15:35:21 chrisg Exp Locker: chrisg $
d234 1
a234 1
ULONG AllocBitMap(ULONG sizex,ULONG sizey,ULONG depth, ULONG flags, struct BitMap *friend_bitmap)(d0,d1,d2,d3,a0)
d241 1
@


39.6
log
@  moved two vectors and added ==version 39 line.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.5 91/12/20 15:50:49 chrisg Exp Locker: chrisg $
d163 2
a164 2
VOID GfxInternal1()
VOID GfxInternal2()
@


39.5
log
@ added changevpbitmap.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.4 91/11/15 10:47:44 spence Exp Locker: chrisg $
d163 2
a164 2
VOID ReleasePen(struct ColorMap *cm,ULONG n)(a0,d0)
ULONG ObtainPen(struct ColorMap *cm,ULONG n,ULONG r,ULONG g,ULONG b,LONG f)(a0,d0,d1,d2,d3,d4)
d218 1
d239 2
@


39.4
log
@CoerceMode()
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.3 91/11/08 12:22:19 chrisg Exp Locker: spence $
d237 1
@


39.3
log
@  changed FreePalette->ReleasePen and AllocPalette->ObtainPen
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.2 91/11/04 15:38:47 chrisg Exp Locker: chrisg $
d236 1
@


39.2
log
@ fixed stupid /'s in file.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.1 91/10/29 10:21:37 chrisg Exp Locker: chrisg $
d163 2
a164 2
VOID FreePalette(struct ColorMap *cm,ULONG n)(a0,d0)
ULONG AllocPalette(struct ColorMap *cm,ULONG n,ULONG r,ULONG g,ULONG b,LONG f)(a0,d0,d1,d2,d3,d4)
@


39.1
log
@ added getspritetags
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 39.0 91/08/27 17:05:42 chrisg Exp Locker: chrisg $
d235 1
a235 1
LONG GetSpriteTags(struct SimpleSprite *ss,struct TagItem *tags)(a0/a1)
@


39.0
log
@fixed freebitmapdata
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 38.6 91/08/21 16:53:10 chrisg Exp Locker: chrisg $
d235 1
@


38.6
log
@fixed alllcbitmap (again)
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 38.5 91/08/21 16:05:22 chrisg Exp Locker: chrisg $
d232 1
a232 1
VOID FreeBitMap(struct BitMap *bm)(a0)
@


38.5
log
@ added missing registers for allocbitmap
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 38.4 91/08/20 16:07:56 chrisg Exp Locker: chrisg $
d233 1
a233 1
ULONG AllocBitMap(ULONG sizex,ULONG sizey,ULONG depth, ULONG flags, struct BitMap *friend_bitmap)(d0/d1/d2/d3/a0)
@


38.4
log
@ added allocbitmap-type calls
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 38.3 91/08/15 18:12:20 spence Exp Locker: chrisg $
d233 1
a233 1
ULONG AllocBitMap(ULONG sizex,ULONG sizey,ULONG depth, ULONG flags, struct BitMap *friend_bitmap)
@


38.3
log
@corrected SetABPenDrMd() and GetRGB32()
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 38.2 91/08/15 17:58:20 spence Exp Locker: spence $
d231 4
@


38.2
log
@corrected MakeGfxGreat().

@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 38.1 91/08/07 13:49:32 chrisg Exp Locker: spence $
d229 2
a230 2
VOID SetABPenDrMd(struct RastPort *rp,ULONG apen,ULONG bpen,ULONG drawmode)
VOID GetRGB32(struct ColorMap *cm, ULONG firstcolor, ULONG ncolors, ULONG *table )
@


38.1
log
@added SetRGB32 and SetABPenDrMd
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 38.0 91/07/22 15:05:18 spence Exp Locker: chrisg $
d228 1
a228 1
VOID MakeGfxGreat(void)
@


38.0
log
@MakeGfxGreat()
MakeVPort() now returns a ULONG instead of a VOID.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 37.3 91/07/12 16:31:59 chrisg Exp Locker: spence $
d164 1
a164 1
ULONG AllocPalette(struct ColorMa *cm,ULONG n,ULONG r,ULONG g,ULONG b,LONG f)(a0,d0,d1,d2,d3,d4)
d229 2
@


37.3
log
@added loadrgb32 call to vector table.
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 37.2 91/07/03 10:55:18 chrisg Exp Locker: chrisg $
d67 1
a67 1
VOID MakeVPort( struct View *view, struct ViewPort *vp ) (A0,A1)
d228 1
@


37.2
log
@  Added GetOPen
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 37.1 91/06/19 14:21:57 chrisg Exp Locker: chrisg $
d227 1
@


37.1
log
@added some V38 functions
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 37.0 91/01/07 15:14:30 spence Exp Locker: chrisg $
d226 1
@


37.0
log
@initial switchover from V36
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 36.5 90/07/27 16:29:16 bart Exp Locker: spence $
d163 2
a164 1
==reserve 2
d218 8
@


36.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 36.4 90/07/20 09:32:10 bart Exp Locker: bart $
@


36.4
log
@fix lc1 -ct errors
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 36.3 90/05/21 12:18:35 bart Exp Locker: bart $
@


36.3
log
@struct TmpRas *InitTmpRas
@
text
@d1 1
a1 1
==id $Id: graphics_lib.sfd,v 36.2 90/05/02 10:16:30 kodiak Exp Locker: bart $
d6 9
d52 1
a52 1
VOID AddAnimOb( struct AnimObj *anOb, struct AnimObj **anKey,
d54 2
a55 2
VOID Animate( struct AnimObj **anKey, struct RastPort *rp ) (A0,A1)
BOOL GetGBuffers( struct AnimObj *anOb, struct RastPort *rp, BOOL flag )
d57 1
a57 1
VOID InitGMasks( struct AnumObj *anOb ) (A0)
d78 1
a78 1
VOID InitArea( struct AreaInof *areaInfo, APTR vectorBuffer,
@


36.2
log
@add ==id line
@
text
@d1 1
a1 1
==id $Id$
d109 1
a109 1
VOID InitTmpRas( struct TmpRas *tmpRas, PLANEPTR buffer, LONG size ) (A0,A1,D0)
@


36.1
log
@GetDisplayInfoData returns ULONG, not VOID
@
text
@d1 1
@


36.0
log
@initial version
@
text
@d182 1
a182 1
VOID GetDisplayInfoData( DisplayInfoHandle handle, UBYTE *buf, ULONG size,
@
