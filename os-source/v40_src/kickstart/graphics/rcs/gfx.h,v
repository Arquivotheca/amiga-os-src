head     39.5;
branch   ;
access   ;
symbols  rel39_24:39.5 rel39_18:39.5 rel39_97:39.5 rel39_90:39.5 rel39_89:39.5 rel39_82:39.5 rel39_76:39.5 rel39_71:39.5 rel39_65:39.5 rel39_64:39.5 rel39_61:39.5 rel39_60:39.5 rel39_55:39.5 rel39_52:39.5 rel39_47:39.5 rel39_39:39.4 rel39_38:39.4 rel39_37:39.3 rel39_35:39.3 rel39_34:39.2 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_27:37.0 V37_25:37.0 V37_24:37.0 V37_23:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_18:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.9 V36_208:36.9 V36_207:36.9 V36_205:36.9 V36_203:36.9 V36_202:36.9 V36_201:36.9 V36_200:36.9 V36_199:36.9 V36_198:36.8 V36_196:36.7 V36_195:36.7 V36_194:36.7 V36_193:36.7 V36_192:36.7 V36_191:36.7 V36_190:36.7 V36_189:36.7 V36_188:36.7 V36_187:36.7 V36_186:36.6 V36_185:36.6 V36_184:36.6 V36_183:36.6 V36_182:36.6 V36_181:36.6 V36_180:36.6 V36_179:36.6 V36_161:36.5 V36_160:36.5 V36_158:36.5 V36_157:36.5 V36_153:36.5 V36_151:36.5 V36_147:36.5 V36_146:36.5 V36_144:36.5 V36_143:36.4 V36_142:36.4 V36_141:36.4 V36_139:36.4 V36_137:36.4 V36_136:36.4 V36_135:36.4 V36_133:36.4 V36_131:36.3 V36_130:36.3 V36_129:36.3 V36_128:36.3 V36_127:36.3 V36_126:36.3 V36_125:36.3 V36_123:36.3 V36_122:36.3 V36_121:36.3 V36_0:36.3 V36_118:36.3 V36_116:36.3 V36_115:36.3 V36_114:36.3 V36_112:36.3 V36_107:36.3 V36_106:36.3 V36_104:36.3 V36_103:36.3 V36_101:36.3 V36_100:36.3 V36_99:36.3 V36_95:36.3 V36_94:36.3 V36_92:36.3 V36_90:36.3 V36_89:36.3 V36_88:36.3 V36_83:36.3 V36_82:36.3 V36_79:36.3 V36_78:36.3 V36_77:36.3 V36_75:36.3 V36_74:36.3 V36_73:36.3 V36_72:36.3 V36_70:36.3 V36_69:36.3 V36_61:36.3 V36_60:36.3 V36_59:36.3 V36_57:36.2 V36_56:36.2 V36_55:36.2 V36_54:36.2 V36_52:36.2 V36_51:36.2 V36_50:36.2 V36_48:36.2 V36_47:36.2 V36_46:36.2 V36_45:36.2 V36_44:36.2 V36_43:36.2 V36_42:36.2 V36_41:36.2 V36_40:36.2 V36_37:36.2 V36_36:36.2 V36_35:36.2 V36_34:36.2 V36_33:36.2 V36_30:36.2 V36_29:36.2 V36_27:36.2;
locks    ; strict;
comment  @*   @;


39.5
date     92.03.19.16.36.45;  author chrisg;  state Exp;
branches ;
next     39.4;

39.4
date     92.03.03.10.44.07;  author spence;  state Exp;
branches ;
next     39.3;

39.3
date     92.02.20.13.38.11;  author chrisg;  state Exp;
branches ;
next     39.2;

39.2
date     92.02.14.15.49.18;  author chrisg;  state Exp;
branches ;
next     39.1;

39.1
date     91.11.15.12.03.25;  author chrisg;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.09.59;  author chrisg;  state Exp;
branches ;
next     38.0;

38.0
date     91.08.20.16.06.45;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.14.07;  author spence;  state Exp;
branches ;
next     36.9;

36.9
date     90.11.16.14.13.24;  author spence;  state Exp;
branches ;
next     36.8;

36.8
date     90.11.06.13.15.37;  author spence;  state Exp;
branches ;
next     36.7;

36.7
date     90.10.03.18.01.00;  author bart;  state Exp;
branches ;
next     36.6;

36.6
date     90.07.27.16.27.59;  author bart;  state Exp;
branches ;
next     36.5;

36.5
date     90.05.02.10.33.44;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     90.03.28.09.38.14;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     89.05.02.09.29.41;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     89.02.17.21.55.30;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     89.02.17.09.06.48;  author bart;  state Exp;
branches ;
next     36.0;

36.0
date     88.12.13.11.56.31;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.5
log
@changes.
@
text
@#ifndef	GRAPHICS_GFX_H
#define	GRAPHICS_GFX_H
/*
**	$Id: gfx.h,v 39.4 92/03/03 10:44:07 spence Exp Locker: chrisg $
**
**	general include file for application programs 
**
**	(C) Copyright 1985,1986,1987,1988,1989 Commodore-Amiga, Inc.
**	    All Rights Reserved
*/

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif

#define BITSET  0x8000
#define BITCLR  0

#define AGNUS
#ifdef AGNUS
#define TOBB(a)      ((long)(a))
#else
#define TOBB(a)      ((long)(a)>>1)  /* convert Chip adr to Bread Board Adr */
#endif

struct Rectangle
{
    WORD   MinX,MinY;
    WORD   MaxX,MaxY;
};

struct Rect32
{
    LONG    MinX,MinY;
    LONG    MaxX,MaxY;
};

typedef struct tPoint
{
    WORD x,y;
} Point;

typedef UBYTE *PLANEPTR;

struct BitMap
{
    UWORD   BytesPerRow;
    UWORD   Rows;
    UBYTE   Flags;
    UBYTE   Depth;
    UWORD   pad;
    PLANEPTR Planes[8];
};

/* This macro is obsolete as of V39. AllocBitMap() should be used for allocating
   bitmap data, since it knows about the machine's particular alignment
   restrictions.
*/
#define RASSIZE(w,h)    ((ULONG)(h)*( ((ULONG)(w)+15)>>3&0xFFFE))

/* flags for AllocBitMap, etc. */
#define BMB_CLEAR 0
#define BMB_DISPLAYABLE 1
#define BMB_INTERLEAVED 2
#define BMB_STANDARD 3
#define BMB_MINPLANES 4

#define BMF_CLEAR (1l<<BMB_CLEAR)
#define BMF_DISPLAYABLE (1l<<BMB_DISPLAYABLE)
#define BMF_INTERLEAVED (1l<<BMB_INTERLEAVED)
#define BMF_STANDARD (1l<<BMB_STANDARD)
#define BMF_MINPLANES (1l<<BMB_MINPLANES)

/* the following are for GetBitMapAttr() */
#define BMA_HEIGHT 0
#define BMA_DEPTH 4
#define BMA_WIDTH 8
#define BMA_FLAGS 12

#endif	/* GRAPHICS_GFX_H */
@


39.4
log
@ALLOCRASTER macro fixed.
@
text
@d4 1
a4 1
**	$Id: gfx.h,v 39.3 92/02/20 13:38:11 chrisg Exp Locker: spence $
d55 4
a58 3
/* This macro is obsolete as of V39. Use AllocBitMap() instead to allocate
 * your data.
 */
d64 4
a69 1
#define BMB_INTERLEAVED 2
a70 1
#define BMB_STANDARD 3
a71 1
#define BMB_MINPLANES 4
d74 1
@


39.3
log
@added BMx_MINPLANES
@
text
@d4 1
a4 1
**	$Id: gfx.h,v 39.2 92/02/14 15:49:18 chrisg Exp Locker: chrisg $
d55 4
a58 1
#define RASSIZE(w,h)    ((h)*( ((w)+15)>>3&0xFFFE))
@


39.2
log
@ added definitions of bitmap attributes and flags.
@
text
@d4 1
a4 1
**	$Id: gfx.h,v 39.1 91/11/15 12:03:25 chrisg Exp Locker: chrisg $
d66 2
@


39.1
log
@ added definition for BMF_INTERLEAVED
@
text
@d4 1
a4 1
**	$Id: gfx.h,v 39.0 91/08/21 17:09:59 chrisg Exp Locker: chrisg $
d64 8
@


39.0
log
@Bumped
@
text
@d4 1
a4 1
**	$Id: gfx.h,v 38.0 91/08/20 16:06:45 chrisg Exp Locker: chrisg $
d62 2
a63 1

@


38.0
log
@added BMF_flags
@
text
@d4 1
a4 1
**	$Id: gfx.h,v 37.0 91/01/07 15:14:07 spence Exp Locker: chrisg $
@


37.0
log
@initial switchover from V36
@
text
@d4 1
a4 1
**	$Id: gfx.h,v 36.9 90/11/16 14:13:24 spence Exp Locker: spence $
d56 6
@


36.9
log
@changed SHORT to WORD
@
text
@d4 1
a4 1
**	$Id: gfx.h,v 36.8 90/11/06 13:15:37 spence Exp Locker: spence $
@


36.8
log
@includes exec/types.h
@
text
@d4 1
a4 1
**	$Id: gfx.h,v 36.7 90/10/03 18:01:00 bart Exp Locker: spence $
d28 2
a29 2
    SHORT   MinX,MinY;
    SHORT   MaxX,MaxY;
@


36.7
log
@*** empty log message ***
@
text
@d4 1
a4 1
**	$Id: gfx.h,v 36.6 90/07/27 16:27:59 bart Exp Locker: bart $
d11 4
@


36.6
log
@*** empty log message ***
@
text
@d4 1
a4 1
**	$Id: gfx.h,v 36.5 90/05/02 10:33:44 kodiak Exp Locker: bart $
d51 1
a51 1
#define RASSIZE(w,h)    ((h)*( (w+15)>>3&0xFFFE))
@


36.5
log
@standardize include header
@
text
@d4 1
a4 1
**	$Id$
@


36.4
log
@*** empty log message ***
@
text
@d4 1
a4 4
**	$Filename: graphics/gfx.h $
**	$Release: 1.3 $
**	$Revision: 36.3 $
**	$Date: 89/05/02 09:29:41 $
@


36.3
log
@copyright 1989
@
text
@d6 2
a7 2
**	$Revision: 36.2 $
**	$Date: 89/02/17 21:55:30 $
@


36.2
log
@checkpoint
@
text
@d6 2
a7 2
**	$Revision: 36.1 $
**	$Date: 89/02/17 09:06:48 $
d11 1
a11 1
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
@


36.1
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.0 $
**	$Date: 88/12/13 11:56:31 $
@


36.0
log
@added to rcs for updating
@
text
@d6 2
a7 2
**	$Revision$
**	$Date$
d29 6
@
