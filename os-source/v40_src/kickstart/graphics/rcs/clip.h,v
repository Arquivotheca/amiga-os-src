head     39.1;
branch   ;
access   ;
symbols  rel39_24:39.1 rel39_18:39.1 rel39_97:39.1 rel39_90:39.1 rel39_89:39.1 rel39_82:39.1 rel39_76:39.1 rel39_71:39.1 rel39_65:39.1 rel39_64:39.1 rel39_61:39.1 rel39_60:39.1 rel39_55:39.1 rel39_52:39.1 rel39_47:39.1 rel39_39:39.1 rel39_38:39.1 rel39_37:39.1 rel39_35:39.1 rel39_34:39.1 V37_30:37.1 V37_29:37.1 V37_28:37.1 V37_27:37.1 V37_25:37.1 V37_24:37.1 V37_23:37.1 V37_22:37.1 V37_21:37.1 V37_20:37.1 V37_19:37.1 V37_18:37.1 V37_15:37.1 V37_14:37.1 V37_13:37.1 V37_12:37.1 V37_11:37.1 V37_10:37.1 V37_9:37.1 V37_8:37.1 V37_7:37.1 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.8 V36_208:36.8 V36_207:36.8 V36_205:36.8 V36_203:36.8 V36_202:36.8 V36_201:36.8 V36_200:36.8 V36_199:36.8 V36_198:36.7 V36_196:36.6 V36_195:36.6 V36_194:36.6 V36_193:36.6 V36_192:36.6 V36_191:36.6 V36_190:36.6 V36_189:36.6 V36_188:36.6 V36_187:36.6 V36_186:36.6 V36_185:36.6 V36_184:36.6 V36_183:36.6 V36_182:36.6 V36_181:36.6 V36_180:36.6 V36_179:36.6 V36_161:36.5 V36_160:36.5 V36_158:36.5 V36_157:36.5 V36_153:36.5 V36_151:36.5 V36_147:36.5 V36_146:36.5 V36_144:36.4 V36_143:36.3 V36_142:36.3 V36_141:36.3 V36_139:36.3 V36_137:36.3 V36_136:36.3 V36_135:36.3 V36_133:36.3 V36_131:36.2 V36_130:36.2 V36_129:36.2 V36_128:36.2 V36_127:36.2 V36_126:36.2 V36_125:36.2 V36_123:36.2 V36_122:36.2 V36_121:36.2 V36_0:36.2 V36_118:36.2 V36_116:36.2 V36_115:36.2 V36_114:36.2 V36_112:36.2 V36_107:36.2 V36_106:36.2 V36_104:36.2 V36_103:36.2 V36_101:36.2 V36_100:36.2 V36_99:36.2 V36_95:36.2 V36_94:36.2 V36_92:36.2 V36_90:36.2 V36_89:36.2 V36_88:36.1 V36_83:36.1 V36_82:36.1 V36_79:36.1 V36_78:36.1 V36_77:36.1 V36_75:36.1 V36_74:36.1 V36_73:36.1 V36_72:36.1 V36_70:36.1 V36_69:36.1 V36_61:36.1 V36_60:36.1 V36_59:36.1 V36_57:36.0 V36_56:36.0 V36_55:36.0 V36_54:36.0 V36_52:36.0 V36_51:36.0 V36_50:36.0 V36_48:36.0 V36_47:36.0 V36_46:36.0 V36_45:36.0 V36_44:36.0 V36_43:36.0 V36_42:36.0 V36_41:36.0 V36_40:36.0 V36_37:36.0 V36_36:36.0 V36_35:36.0 V36_34:36.0 V36_33:36.0 V36_30:36.0 V36_29:36.0 V36_27:36.0;
locks    ; strict;
comment  @*   @;


39.1
date     91.10.24.16.38.24;  author spence;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.08.28;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.01.28.14.15.39;  author bart;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.13.20;  author spence;  state Exp;
branches ;
next     36.8;

36.8
date     90.11.16.14.10.31;  author spence;  state Exp;
branches ;
next     36.7;

36.7
date     90.11.06.13.17.14;  author spence;  state Exp;
branches ;
next     36.6;

36.6
date     90.07.27.16.26.09;  author bart;  state Exp;
branches ;
next     36.5;

36.5
date     90.05.03.13.08.13;  author bart;  state Exp;
branches ;
next     36.4;

36.4
date     90.05.02.10.33.15;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     90.03.28.09.37.25;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     89.10.27.09.11.32;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     89.05.02.09.29.00;  author bart;  state Exp;
branches ;
next     36.0;

36.0
date     88.12.13.11.56.18;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.1
log
@changed definition of cr_p1 and cr_p2 for new layers (requested by mks)
@
text
@#ifndef	GRAPHICS_CLIP_H
#define	GRAPHICS_CLIP_H
/*
**	$Id: clip.h,v 39.0 91/08/21 17:08:28 chrisg Exp Locker: spence $
**
**	
**
**	(C) Copyright 1985,1986,1987,1988,1989 Commodore-Amiga, Inc.
**	    All Rights Reserved
*/

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif

#ifndef GRAPHICS_GFX_H
#include <graphics/gfx.h>
#endif
#ifndef EXEC_SEMAPHORES_H
#include <exec/semaphores.h>
#endif
#ifndef UTILITY_HOOKS_H
#include <utility/hooks.h>
#endif

/* structures used by and constructed by windowlib.a */
/* understood by rom software */

#define NEWLOCKS

struct Layer
{
    struct  Layer *front,*back;   
    struct  ClipRect    *ClipRect;  /* read by roms to find first cliprect */
    struct  RastPort    *rp;        
    struct  Rectangle   bounds;    
    UBYTE   reserved[4];
    UWORD   priority;               /* system use only */
    UWORD   Flags;                  /* obscured ?, Virtual BitMap? */
    struct  BitMap *SuperBitMap;
    struct  ClipRect *SuperClipRect; /* super bitmap cliprects if VBitMap != 0*/
                                  /* else damage cliprect list for refresh */
    APTR    Window;               /* reserved for user interface use */
    WORD   Scroll_X,Scroll_Y;
    struct  ClipRect *cr,*cr2,*crnew;	/* used by dedice */
    struct  ClipRect *SuperSaveClipRects; /* preallocated cr's */
    struct  ClipRect *_cliprects;   	/* system use during refresh */
    struct  Layer_Info  *LayerInfo; 	/* points to head of the list */
    struct  SignalSemaphore Lock;
    struct  Hook *BackFill;
    ULONG   reserved1;
    struct  Region *ClipRegion;
    struct  Region *saveClipRects;   	/* used to back out when in trouble*/
    WORD    Width,Height;		/* system use */
    UBYTE   reserved2[18];
    /* this must stay here */
    struct  Region  *DamageList;    /* list of rectangles to refresh 
                                       through */
};

struct ClipRect
{
    struct  ClipRect *Next;         /* roms used to find next ClipRect */
    struct  ClipRect *prev;         /* Temp use in layers (private) */
    struct  Layer   *lobs;          /* Private use for layers */
    struct  BitMap  *BitMap;	    /* Bitmap for layers private use */
    struct  Rectangle   bounds;     /* bounds of cliprect */
    void    *_p1;		    /* Layers private use!!! */
    void    *_p2;		    /* Layers private use!!! */
    LONG    reserved;               /* system use (Layers private) */
#ifdef NEWCLIPRECTS_1_1
    LONG    Flags;		    /* Layers private field for cliprects */
    				    /* that layers allocates... */
#endif				    /* MUST be multiple of 8 bytes to buffer */
};

/* internal cliprect flags */
#define CR_NEEDS_NO_CONCEALED_RASTERS  1
#define CR_NEEDS_NO_LAYERBLIT_DAMAGE   2

/* defines for code values for getcode */
#define ISLESSX 1
#define ISLESSY 2
#define ISGRTRX 4
#define ISGRTRY 8

#endif	/* GRAPHICS_CLIP_H */
@


39.0
log
@Bumped
@
text
@d4 1
a4 1
**	$Id: clip.h,v 37.1 91/01/28 14:15:39 bart Exp Locker: chrisg $
d64 7
a70 6
    struct  ClipRect *prev;         /* ignored by roms, used by windowlib */
    struct  Layer   *lobs;          /* ignored by roms, used by windowlib */
    struct  BitMap  *BitMap;
    struct  Rectangle   bounds;     /* set up by windowlib, used by roms */
    struct  ClipRect *_p1,*_p2;     /* system reserved */
    LONG    reserved;               /* system use */
d72 2
a73 1
    LONG    Flags;                  /* only exists in layer allocation */
@


37.1
log
@new internal flag bit for cliprects
@
text
@d4 1
a4 1
**	$Id: clip.h,v 37.0 91/01/07 15:13:20 spence Exp Locker: bart $
@


37.0
log
@initial switchover from V36
@
text
@d4 1
a4 1
**	$Id: clip.h,v 36.8 90/11/16 14:10:31 spence Exp Locker: spence $
d77 1
@


36.8
log
@changed SHORT to WORD
@
text
@d4 1
a4 1
**	$Id: clip.h,v 36.7 90/11/06 13:17:14 spence Exp Locker: spence $
@


36.7
log
@includes exec/types.h
@
text
@d4 1
a4 1
**	$Id: clip.h,v 36.6 90/07/27 16:26:09 bart Exp Locker: spence $
d44 1
a44 1
    SHORT   Scroll_X,Scroll_Y;
@


36.6
log
@*** empty log message ***
@
text
@d4 1
a4 1
**	$Id: clip.h,v 36.5 90/05/03 13:08:13 bart Exp Locker: bart $
d11 4
@


36.5
log
@struct  Hook *BackFill;
@
text
@d4 1
a4 1
**	$Id: clip.h,v 36.4 90/05/02 10:33:15 kodiak Exp Locker: bart $
@


36.4
log
@standardize include header
@
text
@d4 1
a4 1
**	$Id$
d18 3
d46 1
a46 1
    void    (*BackFill)();
@


36.3
log
@*** empty log message ***
@
text
@d4 1
a4 4
**	$Filename: graphics/clip.h $
**	$Release: 1.3 $
**	$Revision: 36.2 $
**	$Date: 89/10/27 09:11:32 $
@


36.2
log
@*** empty log message ***
@
text
@d6 2
a7 2
**	$Revision: 36.1 $
**	$Date: 89/05/02 09:29:00 $
@


36.1
log
@copyright 1989
@
text
@d6 2
a7 2
**	$Revision: 36.0 $
**	$Date: 88/12/13 11:56:18 $
d29 1
a29 1
    struct  Layer *front,*back;     /* ignored by roms */
d31 4
a34 4
    struct  RastPort    *rp;        /* ignored by roms, I hope */
    struct  Rectangle   bounds;     /* ignored by roms */
        UBYTE   reserved[4];
        UWORD   priority;                               /* system use only */
d37 1
a37 2
    struct  ClipRect *SuperClipRect; /* super bitmap cliprects if 
                                        VBitMap != 0*/
d39 1
a39 1
    APTR    Window;                 /* reserved for user interface use */
d41 12
a52 12
        struct  ClipRect *cr,*cr2,*crnew;  /* used by dedice */
        struct  ClipRect *SuperSaveClipRects; /* preallocated cr's */
        struct  ClipRect *_cliprects;   /* system use during refresh */
        struct  Layer_Info  *LayerInfo; /* points to head of the list */
        struct  SignalSemaphore Lock;
	void	(*BackFill)();
        ULONG	BackFillControl;	/* used by BackFill routine */
        struct Region *ClipRegion;
        struct Region *saveClipRects;   /* used to back out when in trouble*/
	WORD	Width,Height;		/* system use */
        UBYTE   reserved2[18];
        /* this must stay here */
@


36.0
log
@added to rcs for updating
@
text
@d6 2
a7 2
**	$Revision$
**	$Date$
d11 1
a11 1
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
@
