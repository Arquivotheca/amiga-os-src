head     37.2;
branch   ;
access   ;
symbols  rel39_24:37.2 rel39_18:37.2 rel39_97:37.2 rel39_90:37.2 rel39_89:37.2 rel39_82:37.2 rel39_76:37.2 rel39_71:37.2 rel39_65:37.2 rel39_64:37.2 rel39_61:37.2 rel39_60:37.2 rel39_55:37.2 rel39_47:37.2 rel39_39:37.2 rel39_38:37.2 rel39_37:37.2 rel39_35:37.2 rel39_34:37.2 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_25:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.8 V36_208:36.8 V36_207:36.8 V36_205:36.8 V36_203:36.8 V36_202:36.8 V36_201:36.8 V36_200:36.8 V36_199:36.8 V36_198:36.8 V36_196:36.8 V36_195:36.8 V36_194:36.8 V36_193:36.8 V36_192:36.8 V36_191:36.8 V36_190:36.8 V36_189:36.8 V36_188:36.8 V36_187:36.8 V36_186:36.8 V36_185:36.8 V36_184:36.8 V36_183:36.8 V36_182:36.8 V36_181:36.8 V36_67:36.8 V36_68:36.2 V36_66:36.2 V36_62:36.2 V36_56:36.2 V36_50:36.2 V36_45:36.2 V36_41:36.2 V36_38:36.2 V36_37:36.2;
locks    ; strict;
comment  @*   @;


37.2
date     91.05.15.12.58.00;  author spence;  state Exp;
branches ;
next     37.1;

37.1
date     91.05.09.14.47.16;  author spence;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.21.39;  author spence;  state Exp;
branches ;
next     36.8;

36.8
date     90.07.27.16.38.42;  author bart;  state Exp;
branches ;
next     36.7;

36.7
date     90.03.28.09.31.13;  author bart;  state Exp;
branches ;
next     36.6;

36.6
date     89.02.17.22.00.22;  author bart;  state Exp;
branches ;
next     36.5;

36.5
date     89.02.16.10.09.00;  author bart;  state Exp;
branches ;
next     36.4;

36.4
date     89.02.15.16.36.32;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     89.02.15.13.06.00;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     89.01.12.12.25.12;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     89.01.10.13.50.07;  author bart;  state Exp;
branches ;
next     36.0;

36.0
date     89.01.10.13.43.04;  author bart;  state Exp;
branches ;
next     ;


desc
@@


37.2
log
@Use protos. Registerized parameters. Removed compiler warnings
@
text
@/******************************************************************************
*
*   $Id: rem_record.c,v 37.1 91/05/09 14:47:16 spence Exp Locker: spence $
*
*   $Locker: spence $
*
******************************************************************************/

/* rem_record.c -- remove a record from a display */

#include    "/displayinfo_internal.h"
#include	"d.protos"

/***** display.library/RemRecord *********************************************
*
*   NAME
*       RemRecord -- remove a Record from a Display DataBase
*
*   SYNOPSIS
*       node = RemRecord( record )
*       d0                a0
*
*   FUNCTION
*
*   INPUTS
*       record - pointer to a RecordNode to delink from this Display DataBase.
*
*   RESULT
*       node - pointer to this RecordNode after delinking.
*
*   BUGS
*
*   NOTE
*       will remove a record and leave all its children attached but
*       will clear all this record's links to its parent and siblings.
*
*   SEE ALSO
*       display/record.h
*
*******************************************************************************/

#ifdef UNDEFINED

struct DisplayInfoRecord *rem_record( record )
struct RecordNode *record;
{
    if( record )
    {
	struct RecordNode  *parent  = record->rcn_Parent;
	struct RecordNode  *sibling = record->rcn_Pred;

	Forbid();

	/* leave subtree attached to the removed node */

	if( parent && (parent->rcn_Child == record) ) 
	{
	    parent->rcn_Child = record->rcn_Succ; /* child == first sibling */
	}
	else
	{
	    if( sibling )                          /* child != first sibling */
	    {
		sibling->rcn_Succ = record->rcn_Succ;
		if( record->rcn_Succ )
		{
		    record->rcn_Succ->rcn_Pred = sibling;
		}
	    }
	}

	record->rcn_Parent  = NULL; 
	record->rcn_Pred    = NULL;
	record->rcn_Succ    = NULL;

	Permit();
    }

    return( record );
}

#endif
@


37.1
log
@*** empty log message ***
@
text
@d3 1
a3 1
*   $Id: rem_record.c,v 37.0 91/01/07 15:21:39 spence Exp Locker: spence $
d12 1
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*   $Id: rem_record.c,v 36.8 90/07/27 16:38:42 bart Exp Locker: spence $
d11 1
a11 1
#include    "../displayinfo_internal.h"
@


36.8
log
@id
@
text
@d3 1
a3 1
*   $Id: $
d5 1
a5 1
*   $Locker: bart $
@


36.7
log
@*** empty log message ***
@
text
@d3 1
a3 1
*   $Header: /usr/commodore/amiga/V36/src/kickstart/graphics/d/RCS/rem_record.c,v 36.6 89/02/17 22:00:22 bart Exp Locker: bart $
@


36.6
log
@checkpoint
@
text
@d3 1
a3 1
*   $Header: rem_record.c,v 36.5 89/02/16 10:09:00 bart Exp $
@


36.5
log
@*** empty log message ***
@
text
@d3 1
a3 1
*   $Header: rem_record.c,v 36.4 89/02/15 16:36:32 bart Exp $
@


36.4
log
@DisplayInfoRecord
@
text
@d3 1
a3 1
*   $Header: rem_record.c,v 36.3 89/02/15 13:06:00 bart Exp $
d41 2
d80 2
@


36.3
log
@merge DisplayInfoDataBase with graphics
@
text
@d3 1
a3 1
*   $Header: rem_record.c,v 36.2 89/01/12 12:25:12 bart Exp $
d11 1
a11 1
#include    "record.h"
d13 1
a13 1
/****** display.library/RemRecord *********************************************
d41 1
a41 1
struct Record *rem_record( record )
@


36.2
log
@checkpoint
@
text
@d3 1
a3 1
*   $Header: rem_record.c,v 36.1 89/01/10 13:50:07 bart Exp $
@


36.1
log
@checkpoint
@
text
@d3 1
a3 1
*   $Header: rem_record.c,v 36.0 89/01/10 13:43:04 bart Exp $
@


36.0
log
@added to rcs for updating
@
text
@d3 1
a3 1
*   $Header: $
d5 1
a5 1
*   $Locker:  $
@
