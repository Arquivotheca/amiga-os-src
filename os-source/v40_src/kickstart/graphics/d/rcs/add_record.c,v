head     39.1;
branch   ;
access   ;
symbols  rel39_24:39.1 rel39_18:39.1 rel39_97:39.1 rel39_90:39.1 rel39_89:39.1 rel39_82:39.1 rel39_76:39.1 rel39_71:39.1 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_25:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.9 V36_208:36.9 V36_207:36.9 V36_205:36.9 V36_203:36.9 V36_202:36.9 V36_201:36.9 V36_200:36.9 V36_199:36.9 V36_198:36.9 V36_196:36.9 V36_195:36.9 V36_194:36.9 V36_193:36.9 V36_192:36.9 V36_191:36.9 V36_190:36.9 V36_189:36.9 V36_188:36.9 V36_187:36.9 V36_186:36.9 V36_185:36.9 V36_184:36.9 V36_183:36.9 V36_182:36.9 V36_181:36.9 V36_67:36.9 V36_68:36.2 V36_66:36.2 V36_62:36.2 V36_56:36.2 V36_50:36.2 V36_45:36.2 V36_41:36.2 V36_38:36.2 V36_37:36.2;
locks    ; strict;
comment  @*   @;


39.1
date     92.07.01.10.41.43;  author chrisg;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.30.05;  author chrisg;  state Exp;
branches ;
next     37.2;

37.2
date     91.05.15.12.59.49;  author spence;  state Exp;
branches ;
next     37.1;

37.1
date     91.05.09.14.28.54;  author spence;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.21.18;  author spence;  state Exp;
branches ;
next     36.9;

36.9
date     90.07.27.16.36.38;  author bart;  state Exp;
branches ;
next     36.8;

36.8
date     90.03.28.09.31.01;  author bart;  state Exp;
branches ;
next     36.7;

36.7
date     89.02.17.21.58.23;  author bart;  state Exp;
branches ;
next     36.6;

36.6
date     89.02.16.11.23.42;  author bart;  state Exp;
branches ;
next     36.5;

36.5
date     89.02.15.16.35.43;  author bart;  state Exp;
branches ;
next     36.4;

36.4
date     89.02.15.13.05.07;  author bart;  state Exp;
branches ;
next     36.3;

36.3
date     89.02.15.12.52.32;  author bart;  state Exp;
branches ;
next     36.2;

36.2
date     89.01.12.12.17.11;  author bart;  state Exp;
branches ;
next     36.1;

36.1
date     89.01.10.13.48.56;  author bart;  state Exp;
branches ;
next     36.0;

36.0
date     89.01.10.13.42.46;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.1
log
@include for pragmas.

@
text
@/******************************************************************************
*
*   $Id: add_record.c,v 39.0 91/08/21 17:30:05 chrisg Exp Locker: chrisg $
*
*   $Locker: chrisg $
*
******************************************************************************/

/* add_record.c -- add a record to a display */

#include "/macros.h"
#include    "/displayinfo_internal.h"
#include	"d.protos"
#include <pragmas/exec_pragmas.h>

/***** display.library/AddRecord *********************************************
*
*   NAME
*       AddRecord -- add a Record to a Display DataBase
*
*   SYNOPSIS
*       child = AddRecord( root, record )
*       d0                 a1       a0    
*
*   FUNCTION
*
*   INPUTS
*       root - pointer to a Display DataBase RecordNode ("effective root")
*       record   - pointer to a RecordNode to link to this Display DataBase.
*
*   RESULT
*       child - pointer to this Record after linking or NULL if the link failed.
*
*   BUGS
*       does not check to see if there is already a child with identical key.
*
*   SEE ALSO
*       display/record.h
*
*******************************************************************************/

struct DisplayInfoRecord __regargs *add_record( root, record )
struct RecordNode *root;
struct RecordNode *record;
{
    if( root && record )
    {
	struct RecordNode **sibling;
	
	/* does this root already have children? */
	for( sibling = &root->rcn_Child;
	   (*sibling && (*sibling)->rcn_Succ );
	     sibling = &(*sibling)->rcn_Succ );

	Forbid();

	record->rcn_Pred   = NULL;
	record->rcn_Parent = root;

	/* long identifier */
	((struct DisplayInfoRecord*)record)->rec_MajorKey = 
	((struct DisplayInfoRecord*)  root)->rec_MinorKey;

	if( *sibling )  /* one child among many */
	{
	    (*sibling)->rcn_Succ = record; 
	    record->rcn_Pred = (*sibling);
	}
	else            /* only child */
	{
	    root->rcn_Child = record;
	}

	Permit();
    }
    else
    {
	record = NULL;
    }

    return((struct DisplayInfoRecord *)record);
}
@


39.0
log
@Bumped
@
text
@d3 1
a3 1
*   $Id: add_record.c,v 37.2 91/05/15 12:59:49 spence Exp Locker: chrisg $
d11 1
d14 1
@


37.2
log
@Use protos. Registerized parameters. Removed compiler warnings
@
text
@d3 1
a3 1
*   $Id: add_record.c,v 37.1 91/05/09 14:28:54 spence Exp Locker: spence $
d5 1
a5 1
*   $Locker: spence $
@


37.1
log
@*** empty log message ***
@
text
@d3 1
a3 1
*   $Id: add_record.c,v 37.0 91/01/07 15:21:18 spence Exp Locker: spence $
d12 1
d40 1
a40 1
struct DisplayInfoRecord *add_record( root, record )
d79 1
a79 1
    return( record );
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*   $Id: add_record.c,v 36.9 90/07/27 16:36:38 bart Exp Locker: spence $
d11 1
a11 1
#include    "../displayinfo_internal.h"
@


36.9
log
@id
@
text
@d3 1
a3 1
*   $Id: $
d5 1
a5 1
*   $Locker: bart $
@


36.8
log
@*** empty log message ***
@
text
@d3 1
a3 1
*   $Header: /usr/commodore/amiga/V36/src/kickstart/graphics/d/RCS/add_record.c,v 36.7 89/02/17 21:58:23 bart Exp Locker: bart $
@


36.7
log
@checkpoint
@
text
@d3 1
a3 1
*   $Header: add_record.c,v 36.6 89/02/16 11:23:42 bart Exp $
@


36.6
log
@*** empty log message ***
@
text
@d3 1
a3 1
*   $Header: add_record.c,v 36.5 89/02/15 16:35:43 bart Exp $
@


36.5
log
@DisplayInfoRecord
@
text
@d3 1
a3 1
*   $Header: add_record.c,v 36.4 89/02/15 13:05:07 bart Exp $
d56 4
@


36.4
log
@merge DisplayInfoDataBase with graphics
@
text
@d3 1
a3 1
*   $Header: add_record.c,v 36.3 89/02/15 12:52:32 bart Exp $
d11 1
a11 1
#include    "record.h"
d13 1
a13 1
/****** display.library/AddRecord *********************************************
d39 1
a39 1
struct Record *add_record( root, record )
@


36.3
log
@merge DisplayInfoDataBase with graphics
@
text
@d3 1
a3 1
*   $Header: add_record.c,v 36.2 89/01/12 12:17:11 bart Exp $
@


36.2
log
@checkpoint
@
text
@d3 1
a3 1
*   $Header: add_record.c,v 36.1 89/01/10 13:48:56 bart Exp $
@


36.1
log
@checkpoint
@
text
@d3 1
a3 1
*   $Header: add_record.c,v 36.0 89/01/10 13:42:46 bart Exp $
@


36.0
log
@added to rcs for updating
@
text
@d3 1
a3 1
*   $Header: $
d5 1
a5 1
*   $Locker:  $
@
