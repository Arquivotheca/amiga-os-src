head     39.11;
branch   ;
access   ;
symbols  rel39_24:39.11 rel39_18:39.11 rel39_97:39.10 rel39_90:39.10 rel39_89:39.10 rel39_82:39.10 rel39_76:39.10 rel39_71:39.10 rel39_65:39.10 rel39_64:39.10 rel39_61:39.10 rel39_60:39.10 rel39_55:39.9 rel39_47:39.8 rel39_39:39.7 rel39_38:39.7 rel39_37:39.6 rel39_35:39.6 rel39_34:39.6;
locks    ; strict;
comment  @ * @;


39.11
date     93.02.10.19.46.31;  author spence;  state Exp;
branches ;
next     39.10;

39.10
date     92.05.13.11.40.28;  author spence;  state Exp;
branches ;
next     39.9;

39.9
date     92.04.27.11.59.15;  author spence;  state Exp;
branches ;
next     39.8;

39.8
date     92.03.13.15.47.19;  author spence;  state Exp;
branches ;
next     39.7;

39.7
date     92.02.28.13.40.36;  author spence;  state Exp;
branches ;
next     39.6;

39.6
date     92.01.31.14.36.48;  author spence;  state Exp;
branches ;
next     39.5;

39.5
date     92.01.29.16.56.00;  author spence;  state Exp;
branches ;
next     39.4;

39.4
date     91.12.31.14.31.46;  author spence;  state Exp;
branches ;
next     39.3;

39.3
date     91.11.08.11.37.22;  author spence;  state Exp;
branches ;
next     39.2;

39.2
date     91.10.30.15.51.49;  author chrisg;  state Exp;
branches ;
next     39.1;

39.1
date     91.10.28.17.23.27;  author spence;  state Exp;
branches ;
next     39.0;

39.0
date     91.10.18.17.04.31;  author spence;  state Exp;
branches ;
next     ;


desc
@ProgInfo for database
@


39.11
log
@Support for NTSC/PAL ScanDbl modes (Lores, HAM, EHB and HiresHAM).
@
text
@/******************************************************************************
*
*   $Id: proginfo.h,v 39.10 92/05/13 11:40:28 spence Exp Locker: spence $
*
*******************************************************************************/

#include <exec/types.h>
#include "/displayinfo.h"
#include "/vp_internal.h"

#define KILLEHB 0x200
#define PLFD_PRIO 0x24
#define BPLCON2 KILLEHB
#define VGAPLFD_PRIO 0x24
#define VGABPLCON2 KILLEHB

extern void InitMVP(struct View *c, struct ViewPort *vp, struct ViewPortExtra **vpe, struct ProgInfo *pinfo);
extern void CleanUpMVP(DRIVER_PARAMS);
extern void CalcDispWindow(DRIVER_PARAMS);
extern void CalcADispWindow(DRIVER_PARAMS);
extern void CalcDataFetch(DRIVER_PARAMS);
extern void CalcModulos(DRIVER_PARAMS);
extern void CalcScroll(DRIVER_PARAMS);
extern void CalcDPFScrollMods(DRIVER_PARAMS);
extern void MakeAABplcon(DRIVER_PARAMS);
extern void BuildAAColours(DRIVER_PARAMS);
extern void BuildNmlAACopList(DRIVER_PARAMS);
extern void MakeECSBplcon(DRIVER_PARAMS);
extern void BuildColours(DRIVER_PARAMS);
extern void BuildNmlACopList(DRIVER_PARAMS);
extern void Fudge(DRIVER_PARAMS);

extern void DefaultMoveSprite(void);
extern void ChangeSprite(void);
extern void scrollvport(void);
extern void GfxNewVPE(void);
extern void DefaultPokeColors(void);

#define BuildNmlECSCopList BuildNmlAACopList

/* Pointers to display drivers */

void (*MakeItAA[])() = 
{
	InitMVP,
	CalcDispWindow,
	CalcDataFetch,
	CalcScroll,
	Fudge,
	CalcModulos,
	MakeAABplcon,
	BuildAAColours,
	BuildNmlAACopList,
	CleanUpMVP,
	NULL,
};

void (*MakeItDPFAA[])() = 
{
	InitMVP,
	CalcDispWindow,
	CalcDataFetch,
	CalcDPFScrollMods,
	MakeAABplcon,
	BuildAAColours,
	BuildNmlAACopList,
	CleanUpMVP,
	NULL,
};

void (*MakeItECS[])() = 
{
	InitMVP,
	CalcDispWindow,
	CalcDataFetch,
	CalcScroll,
	Fudge,
	CalcModulos,
	MakeECSBplcon,
	BuildColours,
	BuildNmlECSCopList,
	CleanUpMVP,
	NULL,
};

void (*MakeItDPFECS[])() = 
{
	InitMVP,
	CalcDispWindow,
	CalcDataFetch,
	CalcDPFScrollMods,
	MakeECSBplcon,
	BuildColours,
	BuildNmlECSCopList,
	CleanUpMVP,
	NULL,
};

void (*MakeItA[])() = 
{
	InitMVP,
	CalcADispWindow,
	CalcDataFetch,
	CalcScroll,
	Fudge,
	CalcModulos,
	MakeECSBplcon,
	BuildColours,
	BuildNmlACopList,
	CleanUpMVP,
	NULL,
};

void (*MakeItDPFA[])() = 
{
	InitMVP,
	CalcADispWindow,
	CalcDataFetch,
	CalcDPFScrollMods,
	MakeECSBplcon,
	BuildColours,
	BuildNmlACopList,
	CleanUpMVP,
	NULL,
};

void (*VecAA[])() =
{
	DefaultMoveSprite,
	ChangeSprite,
	scrollvport,
	MakeItAA,
	DefaultPokeColors,
};

void (*VecDPFAA[])() =
{
	DefaultMoveSprite,
	ChangeSprite,
	scrollvport,
	MakeItDPFAA,
	DefaultPokeColors,
};

void (*VecECS[])() =
{
	DefaultMoveSprite,
	ChangeSprite,
	scrollvport,
	MakeItECS,
	DefaultPokeColors,
};

void (*VecDPFECS[])() =
{
	DefaultMoveSprite,
	ChangeSprite,
	scrollvport,
	MakeItDPFECS,
	DefaultPokeColors,
};

void (*VecA[])() =
{
	DefaultMoveSprite,
	ChangeSprite,
	scrollvport,
	MakeItA,
	DefaultPokeColors,
};

void (*VecDPFA[])() =
{
	DefaultMoveSprite,
	ChangeSprite,
	scrollvport,
	MakeItDPFA,
	DefaultPokeColors,
};


#define AAVECS 2
#define ECSVECS 2

void *VecLists[] =
{
    VecAA,
    VecDPFAA,
    VecECS,
    VecDPFECS,
    VecA,
    VecDPFA,
};

/* compressed database with data */

/* All SqueezedProgInfo assume AA machine - db_startup() can massage the entries
 * as necessary.
 */

struct ProgInfo ProgData[] =
{
    {	/* LORES ProgInfo */					/* 0 */
	0,			/* bplcon0 */
	BPLCON2,
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE,	/* Flags - may be massaged */
	0,			/* MakeItType */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* HIRES ProgInfo */					/* 1 */
	0x8000,			/* bplcon0 */
	BPLCON2,
	1,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SHIFT5,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	1,			/* To DIWResn */
	1,
    },
    {	/* SHIRES ProgInfo */					/* 2 */
	0x0040,			/* bplcon0 */
	BPLCON2,
	2,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | 
	PROGINFO_SHIFT3 | PROGINFO_SHIFT5,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	0,			/* To DIWResn */
	0,
    },
    {	/* LORES HAM ProgInfo */				/* 3 */
	0x800,			/* bplcon0 */
	BPLCON2,
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_HAM,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* HIRES HAM ProgInfo */				/* 4 */
	0x8800,			/* bplcon0 */
	BPLCON2,
	1,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SHIFT5 | PROGINFO_HAM,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	1,			/* To DIWResn */
	1,
    },
    {	/* SHIRES HAM ProgInfo */				/* 5 */
	0x0840,			/* bplcon0 */
	BPLCON2,
	2,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_HAM |
	PROGINFO_SHIFT3 | PROGINFO_SHIFT5,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	0,			/* To DIWResn */
	0,
    },
    {	/* LORES EHB ProgInfo */				/* 6 */
	0,			/* bplcon0 */
	PLFD_PRIO,		/* No KillEHB */
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* LORES DPF ProgInfo */				/* 7 */
	0x400,			/* bplcon0 */
	BPLCON2,
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE,	/* Flags - may be massaged */
	1,			/* MakeItType */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* HIRES DPF ProgInfo */				/* 8 */
	0x8400,			/* bplcon0 */
	BPLCON2,
	1,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SHIFT5,	/* Flags - may be massaged */
	1,			/* makeittype */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	1,			/* To DIWResn */
	1,
    },
    {	/* SHIRES DPF ProgInfo */				/* 9 */
	0x0440,			/* bplcon0 */
	BPLCON2,
	2,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | 
	PROGINFO_SHIFT3 | PROGINFO_SHIFT5,	/* Flags - may be massaged */
	1,			/* makeittype */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	0,			/* To DIWResn */
	0,
    },
    {	/* LORES DPF2 ProgInfo */				/* 10 */
	0x400,			/* bplcon0 */
	BPLCON2 | 0x40,
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE,	/* Flags - may be massaged */
	1,			/* MakeItType */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* HIRES DPF2 ProgInfo */				/* 11 */
	0x8400,			/* bplcon0 */
	BPLCON2 | 0x40,
	1,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SHIFT5,	/* Flags - may be massaged */
	1,			/* makeittype */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	1,			/* To DIWResn */
	1,
    },
    {	/* SHIRES DPF2 ProgInfo */				/* 12 */
	0x0440,			/* bplcon0 */
	BPLCON2 | 0x40,
	2,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | 
	PROGINFO_SHIFT3 | PROGINFO_SHIFT5,	/* Flags - may be massaged */
	1,			/* makeittype */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	0,			/* To DIWResn */
	0,
    },
    {	/* PRODUCTIVITY ProgInfo */				/* 13 */
	0x0041,			/* bplcon0 */
	VGABPLCON2,			/* bplcon2 */
	2,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_VARBEAM | 
	PROGINFO_SHIFT3 | PROGINFO_SHIFT5,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	0,			/* To DIWResn */
	0,
    },
    {	/* PRODUCTIVITY HAM ProgInfo */				/* 14 */
	0x0841,			/* bplcon0 */
	VGABPLCON2,			/* bplcon2 */
	2,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_VARBEAM | 
	PROGINFO_SHIFT3 | PROGINFO_SHIFT5 | PROGINFO_HAM,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	0,			/* To DIWResn */
	0,
    },
    {	/* VGAEXTRALORES ProgInfo */				/* 15 */
	1,			/* bplcon0 */
	VGABPLCON2,
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_VARBEAM,	/* Flags - may be massaged */
	0,			/* MakeItType */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* VGALORES ProgInfo */					/* 16 */
	0x8001,			/* bplcon0 */
	VGABPLCON2,
	1,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SHIFT3 |
	PROGINFO_VARBEAM,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	1,			/* To DIWResn */
	1,
    },
    {	/* VGAEXTRALORESHAM ProgInfo */				/* 17 */
	0x801,			/* bplcon0 */
	VGABPLCON2,
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_VARBEAM | PROGINFO_HAM,	/* Flags - may be massaged */
	0,			/* MakeItType */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* VGALORESHAM ProgInfo */				/* 18 */
	0x8801,			/* bplcon0 */
	VGABPLCON2,
	1,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SHIFT3 |
	PROGINFO_VARBEAM | PROGINFO_HAM,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	1,			/* To DIWResn */
	1,
    },
    {	/* VGAEXTRALORESEHB ProgInfo */				/* 19 */
	1,			/* bplcon0 */
	VGAPLFD_PRIO,
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_VARBEAM,	/* Flags - may be massaged */
	0,			/* MakeItType */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* VGAEXTRALORESDPF ProgInfo */				/* 20 */
	0x401,			/* bplcon0 */
	VGABPLCON2,
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_VARBEAM,	/* Flags - may be massaged */
	1,			/* MakeItType */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* VGALORESDPF ProgInfo */				/* 21 */
	0x8401,			/* bplcon0 */
	VGABPLCON2,
	1,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SHIFT3 |
	PROGINFO_VARBEAM,	/* Flags - may be massaged */
	1,			/* makeittype */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	1,			/* To DIWResn */
	1,
    },
    {	/* PRODUCTIVITYDPF ProgInfo */				/* 22 */
	0x0441,			/* bplcon0 */
	VGABPLCON2,			/* bplcon2 */
	2,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_VARBEAM | 
	PROGINFO_SHIFT3 | PROGINFO_SHIFT5,	/* Flags - may be massaged */
	1,			/* makeittype */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	0,			/* To DIWResn */
	0,
    },
    {	/* VGAEXTRALORESDPF2 ProgInfo */			/* 23 */
	0x401,			/* bplcon0 */
	VGABPLCON2 | 0x40,
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_VARBEAM,	/* Flags - may be massaged */
	1,			/* MakeItType */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* VGALORESDPF2 ProgInfo */				/* 24 */
	0x8401,			/* bplcon0 */
	VGABPLCON2 | 0x40,
	1,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SHIFT3 |
	PROGINFO_VARBEAM,	/* Flags - may be massaged */
	1,			/* makeittype */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	1,			/* To DIWResn */
	1,
    },
    {	/* PRODUCTIVITYDPF2 ProgInfo */				/* 25 */
	0x0441,			/* bplcon0 */
	VGABPLCON2 | 0x40,			/* bplcon2 */
	2,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_VARBEAM | 
	PROGINFO_SHIFT3 | PROGINFO_SHIFT5,	/* Flags - may be massaged */
	1,			/* makeittype */
	4,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	0,			/* To DIWResn */
	0,
    },
    {	/* HIRES EHB ProgInfo */				/* 26 */
	0x8000,			/* bplcon0 */
	PLFD_PRIO,		/* No KillEHB */
	1,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	1,			/* To DIWResn */
	1,
    },
    {	/* SHIRES EHB ProgInfo */				/* 27 */
	0x0040,			/* bplcon0 */
	PLFD_PRIO,		/* No KillEHB */
	2,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	0,			/* To DIWResn */
	0,
    },
    {	/* VGALORESEHB ProgInfo */				/* 28 */
	0x8001,			/* bplcon0 */
	VGAPLFD_PRIO,
	1,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SHIFT3| 
	PROGINFO_VARBEAM,	/* Flags - may be massaged */
	0,			/* MakeItType */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	1,			/* To DIWResn */
	1,
    },
    {	/* VGAEHB ProgInfo */					/* 29 */
	0x0041,			/* bplcon0 */
	VGAPLFD_PRIO,
	2,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SHIFT5 | PROGINFO_SHIFT3 |
	PROGINFO_VARBEAM,	/* Flags - may be massaged */
	0,			/* MakeItType */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	0,			/* To DIWResn */
	0,
    },
    {	/* LORES SDblProgInfo */				/* 30 */
	0,			/* bplcon0 */
	BPLCON2,
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SCANDBL,	/* Flags - may be massaged */
	0,			/* MakeItType */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* LORES HAM SDbl ProgInfo */				/* 31 */
	0x800,			/* bplcon0 */
	BPLCON2,
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_HAM |
	PROGINFO_SCANDBL,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* LORES EHB ProgInfo */				/* 32 */
	0,			/* bplcon0 */
	PLFD_PRIO,		/* No KillEHB */
	0,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SCANDBL,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	2,			/* To DIWResn */
	2,
    },
    {	/* HIRES HAM SDbl ProgInfo */				/* 33 */
	0x8800,			/* bplcon0 */
	BPLCON2,
	1,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_SHIFT5 | PROGINFO_HAM |
	PROGINFO_SCANDBL,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff8,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
	1,			/* To DIWResn */
	1,
    },
};
@


39.10
log
@added AA EHB info
@
text
@d3 1
a3 1
*   $Id: proginfo.h,v 39.9 92/04/27 11:59:15 spence Exp Locker: spence $
d606 54
@


39.9
log
@changed all DDFSTRT masks for new optimised DDFSTRT calculations
@
text
@d3 1
a3 1
*   $Id: proginfo.h,v 39.8 92/03/13 15:47:19 spence Exp Locker: spence $
d203 1
a203 1
    {	/* LORES ProgInfo */
d216 1
a216 1
    {	/* HIRES ProgInfo */
d229 1
a229 1
    {	/* SHIRES ProgInfo */
d243 1
a243 1
    {	/* LORES HAM ProgInfo */
d256 1
a256 1
    {	/* HIRES HAM ProgInfo */
d269 1
a269 1
    {	/* SHIRES HAM ProgInfo */
d283 1
a283 1
    {	/* LORES EHB ProgInfo */
d296 1
a296 1
    {	/* LORES DPF ProgInfo */
d309 1
a309 1
    {	/* HIRES DPF ProgInfo */
d322 1
a322 1
    {	/* SHIRES DPF ProgInfo */
d336 1
a336 1
    {	/* LORES DPF2 ProgInfo */
d349 1
a349 1
    {	/* HIRES DPF2 ProgInfo */
d362 1
a362 1
    {	/* SHIRES DPF2 ProgInfo */
d376 1
a376 1
    {	/* PRODUCTIVITY ProgInfo */
d390 1
a390 1
    {	/* PRODUCTIVITY HAM ProgInfo */
d404 1
a404 1
    {	/* VGAEXTRALORES ProgInfo */
d417 1
a417 1
    {	/* VGALORES ProgInfo */
d422 1
a422 1
	PROGINFO_NATIVE | PROGINFO_SHIFT5 |
d431 1
a431 1
    {	/* VGAEXTRALORESHAM ProgInfo */
d444 1
a444 1
    {	/* VGALORESHAM ProgInfo */
d449 1
a449 1
	PROGINFO_NATIVE | PROGINFO_SHIFT5 |
d458 1
a458 1
    {	/* VGAEXTRAHALFBRIGHT ProgInfo */
d471 1
a471 1
    {	/* VGAEXTRALORESDPF ProgInfo */
d484 1
a484 1
    {	/* VGALORESDPF ProgInfo */
d489 1
a489 1
	PROGINFO_NATIVE | PROGINFO_SHIFT5 |
d498 1
a498 1
    {	/* PRODUCTIVITYDPF ProgInfo */
d512 1
a512 1
    {	/* VGAEXTRALORESDPF2 ProgInfo */
d525 1
a525 1
    {	/* VGALORESDPF2 ProgInfo */
d530 1
a530 1
	PROGINFO_NATIVE | PROGINFO_SHIFT5 |
d539 1
a539 1
    {	/* PRODUCTIVITYDPF2 ProgInfo */
d548 54
@


39.8
log
@no longer enables the ECSENA bit in bplcon0
@
text
@d3 1
a3 1
*   $Id: proginfo.h,v 39.7 92/02/28 13:40:36 spence Exp Locker: spence $
d211 1
a211 1
	0xfff0,			/* DDFSTRTMask */
d224 1
a224 1
	0xfff0,			/* DDFSTRTMask */
d238 2
a239 2
	0xfff0,			/* DDFSTRTMask */
	0xfffc,			/* DDFSTOPMask */
d251 1
a251 1
	0xfff0,			/* DDFSTRTMask */
d264 1
a264 1
	0xfff0,			/* DDFSTRTMask */
d278 2
a279 2
	0xfff0,			/* DDFSTRTMask */
	0xfffc,			/* DDFSTOPMask */
d291 1
a291 1
	0xfff0,			/* DDFSTRTMask */
d304 1
a304 1
	0xfff0,			/* DDFSTRTMask */
d317 1
a317 1
	0xfff0,			/* DDFSTRTMask */
d331 2
a332 2
	0xfff0,			/* DDFSTRTMask */
	0xfffc,			/* DDFSTOPMask */
d344 1
a344 1
	0xfff0,			/* DDFSTRTMask */
d357 1
a357 1
	0xfff0,			/* DDFSTRTMask */
d371 2
a372 2
	0xfff0,			/* DDFSTRTMask */
	0xfffc,			/* DDFSTOPMask */
d385 1
a385 1
	0xfff0,			/* DDFSTRTMask */
d399 1
a399 1
	0xfff0,			/* DDFSTRTMask */
d412 1
a412 1
	0xfff0,			/* DDFSTRTMask */
d426 1
a426 1
	0xfff0,			/* DDFSTRTMask */
d439 1
a439 1
	0xfff0,			/* DDFSTRTMask */
d453 1
a453 1
	0xfff0,			/* DDFSTRTMask */
d466 1
a466 1
	0xfff0,			/* DDFSTRTMask */
d479 1
a479 1
	0xfff0,			/* DDFSTRTMask */
d493 1
a493 1
	0xfff0,			/* DDFSTRTMask */
d507 1
a507 1
	0xfff0,			/* DDFSTRTMask */
d520 1
a520 1
	0xfff0,			/* DDFSTRTMask */
d534 1
a534 1
	0xfff0,			/* DDFSTRTMask */
d548 1
a548 1
	0xfff0,			/* DDFSTRTMask */
@


39.7
log
@playfield-priority-wrt-sprites no longer stored in proginfo->bplcon2
(is read from vp->SpritePriorities instead.
@
text
@d3 1
a3 1
*   $Id: proginfo.h,v 39.6 92/01/31 14:36:48 spence Exp Locker: spence $
d204 1
a204 1
	1,			/* bplcon0 */
d217 1
a217 1
	0x8001,			/* bplcon0 */
d230 1
a230 1
	0x0041,			/* bplcon0 */
d244 1
a244 1
	0x801,			/* bplcon0 */
d257 1
a257 1
	0x8801,			/* bplcon0 */
d270 1
a270 1
	0x0841,			/* bplcon0 */
d284 1
a284 1
	1,			/* bplcon0 */
d297 1
a297 1
	0x401,			/* bplcon0 */
d310 1
a310 1
	0x8401,			/* bplcon0 */
d323 1
a323 1
	0x0441,			/* bplcon0 */
d337 1
a337 1
	0x401,			/* bplcon0 */
d350 1
a350 1
	0x8401,			/* bplcon0 */
d363 1
a363 1
	0x0441,			/* bplcon0 */
@


39.6
log
@Removed PRODUCTIVITYSCANDBL ProgInfo.
@
text
@d3 1
a3 1
*   $Id: proginfo.h,v 39.5 92/01/29 16:56:00 spence Exp Locker: spence $
d13 3
a15 3
#define BPLCON2 (PLFD_PRIO | KILLEHB) /* playfield priority and KillEHB */
#define VGAPLFD_PRIO 0x12
#define VGABPLCON2 (VGAPLFD_PRIO | KILLEHB)
@


39.5
log
@Replace BuildNmlECSCopList with BuildNmlAACopList
@
text
@d3 1
a3 1
*   $Id: proginfo.h,v 39.4 91/12/31 14:31:46 spence Exp Locker: spence $
a550 14
	0,
    },
    {	/* PRODUCTIVITYSCANDBL ProgInfo */
	0x0041,			/* bplcon0 */
	VGABPLCON2,			/* bplcon2 */
	2,			/* ToViewX */
	0,			/* pad */
	PROGINFO_NATIVE | PROGINFO_VARBEAM | 
	PROGINFO_SHIFT3 | PROGINFO_SHIFT5 |
	PROGINFO_SCANDBL,	/* Flags - may be massaged */
	0,			/* makeittype */
	6,			/* ScrollVPCount */
	0xfff0,			/* DDFSTRTMask */
	0xfff8,			/* DDFSTOPMask */
@


39.4
log
@Single A support
.,
@
text
@d3 1
a3 1
*   $Id: proginfo.h,v 39.3 91/11/08 11:37:22 spence Exp Locker: spence $
a29 1
extern void BuildNmlECSCopList(DRIVER_PARAMS);
d38 2
@


39.3
log
@Rename AAFudge() to Fudge(), and also called by ECS driver.
@
text
@d3 1
a3 1
*   $Id: proginfo.h,v 39.2 91/10/30 15:51:49 chrisg Exp Locker: spence $
d20 1
d31 1
d98 28
d162 18
d182 1
d190 2
@


39.2
log
@ added vector for pokecolor stuff
@
text
@d3 1
a3 1
*   $Id: proginfo.h,v 39.1 91/10/28 17:23:27 spence Exp Locker: chrisg $
d30 1
a30 1
extern void AAFudge(DRIVER_PARAMS);
d46 1
a46 1
	AAFudge,
d74 1
@


39.1
log
@Vector table now points to scrollvport entry.
AAFudge() called before CalcModulos().
@
text
@d3 1
a3 1
*   $Id: proginfo.h,v 39.0 91/10/18 17:04:31 spence Exp Locker: spence $
d32 1
a32 1
extern void MoveSprite(void);
d36 1
d97 1
a97 1
	MoveSprite,
d101 1
d106 1
a106 1
	MoveSprite,
d110 1
d115 1
a115 1
	MoveSprite,
d119 1
d124 1
a124 1
	MoveSprite,
d128 1
@


39.0
log
@Initial log in
@
text
@d3 1
a3 1
*   $Id: Exp $
d34 1
a34 1
extern void ScrollVPort(void);
d45 1
a46 1
	AAFudge,
a59 1
	AAFudge,
d98 1
a98 1
	ScrollVPort,
d106 1
a106 1
	ScrollVPort,
d114 1
a114 1
	ScrollVPort,
d122 1
a122 1
	ScrollVPort,
d245 1
a245 1
	5,			/* ScrollVPCount */
d258 1
a258 1
	5,			/* ScrollVPCount */
d272 1
a272 1
	5,			/* ScrollVPCount */
d285 1
a285 1
	5,			/* ScrollVPCount */
d298 1
a298 1
	5,			/* ScrollVPCount */
d312 1
a312 1
	5,			/* ScrollVPCount */
d420 1
a420 1
	5,			/* ScrollVPCount */
d434 1
a434 1
	5,			/* ScrollVPCount */
d448 1
a448 1
	5,			/* ScrollVPCount */
d461 1
a461 1
	5,			/* ScrollVPCount */
d475 1
a475 1
	5,			/* ScrollVPCount */
d489 1
a489 1
	5,			/* ScrollVPCount */
@
