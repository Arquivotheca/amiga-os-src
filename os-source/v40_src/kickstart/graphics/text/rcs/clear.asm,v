head     39.2;
branch   ;
access   ;
symbols  rel39_24:39.2 rel39_18:39.2 rel39_97:39.1 rel39_90:39.1 rel39_89:39.1 rel39_82:39.1 rel39_76:39.1 rel39_71:39.1 rel39_65:39.1 rel39_64:39.1 rel39_61:39.1 rel39_60:39.1 rel39_55:39.1 rel39_47:39.1 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.1 V37_29:37.1 V37_28:37.1 V37_25:37.1 V37_22:37.1 V37_21:37.1 V37_20:37.1 V37_19:37.1 V37_17:37.1 V37_15:37.1 V37_14:37.1 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.4 V36_208:36.4 V36_207:36.4 V36_205:36.4 V36_203:36.4 V36_202:36.4 V36_201:36.4 V36_200:36.4 V36_199:36.4 V36_198:36.4 V36_196:36.4 V36_195:36.4 V36_194:36.4 V36_193:36.4 V36_192:36.4 V36_191:36.4 V36_190:36.4 V36_189:36.4 V36_188:36.4 V36_187:36.4 V36_186:36.4 V36_185:36.4 V36_184:36.4 V36_183:36.4 V36_182:36.4 V36_181:36.4;
locks    ; strict;
comment  @*   @;


39.2
date     93.03.23.11.04.51;  author chrisg;  state Exp;
branches ;
next     39.1;

39.1
date     92.03.19.16.29.09;  author chrisg;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.35.48;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.02.12.15.51.40;  author spence;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.28.54;  author spence;  state Exp;
branches ;
next     36.4;

36.4
date     90.04.24.10.47.02;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     90.04.13.11.52.24;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     90.04.02.12.59.14;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     89.11.02.18.37.46;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     89.06.05.14.15.29;  author kodiak;  state Exp;
branches ;
next     35.0;

35.0
date     87.10.19.16.19.21;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


39.2
log
@fixed bug with interleaved bitmap.
@
text
@**
**	$Id: clear.asm,v 39.1 92/03/19 16:29:09 chrisg Exp Locker: chrisg $
**
**      clear functions for ABasic
**
**      (C) Copyright 1985,1989 Commodore-Amiga, Inc.
**          All Rights Reserved
**

	SECTION		graphics

*------ Included Files -----------------------------------------------

	INCLUDE		"exec/types.i"
	INCLUDE		"exec/nodes.i"
	INCLUDE		"exec/lists.i"
	INCLUDE		"exec/ports.i"
	INCLUDE		"exec/libraries.i"

	INCLUDE		"/gfx.i"
	INCLUDE		"/rastport.i"
	include		'/macros.i'

	INCLUDE		"text.i"

	INCLUDE		"macros.i"


*------ Imported Functions -------------------------------------------

	XLVO	ClearEOL		; Graphics
	XLVO	SetAPen			;
	XLVO	RectFill		;


*------ Exported Functions -------------------------------------------

	XDEF		_ClearEOL
	XDEF		_ClearScreen


******* graphics.library/ClearEOL ************************************
*
*   NAME
*	ClearEOL -- Clear from current position to end of line.
*
*   SYNOPSIS
*	ClearEOL(rp)
*	         A1
*
*	void ClearEOL(struct RastPort *);
*
*   FUNCTION
*	Clear a rectangular swath from the current position to the
*	right edge of the rastPort.  The height of the swath is taken
*	from that of the current text font, and the vertical
*	positioning of the swath is adjusted by the text baseline,
*	such that text output at this position would lie wholly on
*	this newly cleared area.
*	Clearing consists of setting the color of the swath to zero,
*	or, if the DrawMode is 2, to the BgPen.
*
*   INPUTS
*	rp - pointer to RastPort structure
*
*   RESULT
*
*   NOTES
*	o   This function may use the blitter.
*
*   SEE ALSO
*	Text()  ClearScreen()  SetRast()
*	graphics/text.h  graphics/rastport.h
*
**********************************************************************
_ClearEOL:
		MOVEM.L D2-D3,-(A7)
		MOVE.W	rp_cp_x(A1),D0
		EXT.L	D0
		MOVE.W	rp_cp_y(A1),D1
		SUB.W	rp_TxBaseline(A1),D1
		EXT.L	D1
		MOVEQ	#0,D2
		MOVE.L	rp_BitMap(A1),A0
		MOVE.W	bm_BytesPerRow(A0),D2
		cmp.w	#UNLIKELY_WORD,bm_Pad(a0)
		bne.s	no_interleaved
		move.l	bm_Planes+4(a0),d2
		sub.l	bm_Planes(a0),d2
no_interleaved:
		LSL.W	#3,D2
		SUBQ.W	#1,D2
		MOVE.L	D1,D3
		MOVE.L	rp_Font(A1),A0
		ADD.W	tf_YSize(A0),D3
		SUBQ.W	#1,D3
		BSR.s	clearRaster
		MOVEM.L (A7)+,D2-D3
		RTS


******* graphics.library/ClearScreen *********************************
*
*   NAME
*	ClearScreen -- Clear from current position to end of RastPort.
*
*   SYNOPSIS
*	ClearScreen(rp)
*	            A1
*
*	void ClearScreen(struct RastPort *);
*
*   FUNCTION
*	Clear a rectangular swath from the current position to the
*	right edge of the rastPort with ClearEOL, then clear the rest
*	of the screen from just beneath the swath to the bottom of
*	the rastPort.
*	Clearing consists of setting the color of the swath to zero,
*	or, if the DrawMode is 2, to the BgPen.
*
*   INPUTS
*	rp - pointer to RastPort structure
*
*   NOTES
*	o   This function may use the blitter.
*
*   SEE ALSO
*	ClearEOL()  Text()  SetRast()
*	graphics/text.h  graphics/rastport.h
*
**********************************************************************
_ClearScreen:
		MOVEM.L D2-D3,-(A7)
		MOVE.L	A1,-(A7)
		CALLLVO ClearEOL
		MOVE.L	(A7)+,A1
		MOVEQ	#0,D0
		MOVE.W	rp_cp_y(A1),D1
		SUB.W	rp_TxBaseline(A1),D1
		MOVE.L	rp_Font(A1),A0
		ADD.W	tf_YSize(A0),D1
		EXT.L	D1
		MOVEQ	#0,D2
		MOVE.L	rp_BitMap(A1),A0
		MOVE.W	bm_BytesPerRow(A0),D2
		cmp.w	#UNLIKELY_WORD,bm_Pad(a0)
		bne.s	no_interleaved1
		move.l	bm_Planes+4(a0),d2
		sub.l	bm_Planes(a0),d2
no_interleaved1:
		LSL.W	#3,D2
		SUBQ.W	#1,D2
		MOVEQ	#0,D3
		MOVE.W	bm_Rows(A0),D3
		SUBQ.W	#1,D3
		CMP.L	D1,D3
		BLT.S	csClipped
		BSR.S	clearRaster
csClipped:
		MOVEM.L (A7)+,D2-D3
		RTS


*------ clearRaster --------------------------------------------------
*
*   NAME
*	clearRaster - clear a rectangle of the raster port
*
*   SYNOPSIS
*	clearRaster(RastPort, xl, yl, xu, yu)
*		    A1	      D0  D1  D2  D3
*
*   FUNCTION
*	This function sets a rectangle in the RastPort to the
*	background color for DrawMode 1, or zero otherwise
*	rp - pointer to RastPort structure
*
**********************************************************************
clearRaster:
		MOVEM.L D4-D6/A2,-(A7)
		MOVE.L	A1,A2		    ; save RastPort
		MOVE.B	rp_FgPen(A1),D4	    ; save foreground pen
		MOVE.L	rp_AreaPtrn(A1),D5  ; save areafill pattern
		MOVE.L	D0,D6		    ; save xl
		MOVEQ	#0,D0
		CMP.B	#RP_JAM2,rp_DrawMode(A1)
		BNE.S	isClear
		MOVE.B	rp_BgPen(A1),D0
isClear:
		MOVE.L	D1,-(A7)
		CALLLVO SetAPen
		MOVE.L	(A7)+,D1
		MOVE.W	D6,D0		    ; xl
		MOVE.L	A2,A1
		CALLLVO RectFill

		MOVE.L	A2,A1
		MOVE.L	D5,rp_AreaPtrn(A1)
		MOVE.B	D4,D0
		CALLLVO SetAPen

		MOVEM.L (A7)+,D4-D6/A2
		RTS

		END
@


39.1
log
@short branches.
short branches.
@
text
@d2 1
a2 1
**	$Id: clear.asm,v 39.0 91/08/21 17:35:48 chrisg Exp Locker: chrisg $
d20 3
a22 2
	INCLUDE		"graphics/gfx.i"
	INCLUDE		"graphics/rastport.i"
d86 5
d146 5
@


39.0
log
@Bumped
@
text
@d2 1
a2 1
**	$Id: clear.asm,v 37.1 91/02/12 15:51:40 spence Exp Locker: chrisg $
d91 1
a91 1
		BSR	clearRaster
@


37.1
log
@autodoc
/.
@
text
@d2 1
a2 1
**	$Id: clear.asm,v 37.0 91/01/07 15:28:54 spence Exp Locker: spence $
@


37.0
log
@initial switchover from V36
@
text
@d2 1
a2 1
**	$Id: clear.asm,v 36.4 90/04/24 10:47:02 kodiak Exp Locker: spence $
d47 2
a48 2
*	ClearEOL( rp )
*		  a1
d50 1
a50 1
*	void ClearEOL( struct RastPort * );
d55 1
a55 1
*	from that of the current text font, and the vertical 
d57 1
a57 1
*	such that text output at this position would lie wholly on 
d65 2
d71 2
a72 1
*	Text ClearScreen SetRast graphics/text.h graphics/rastport.h
d102 2
a103 2
*	ClearScreen( rp )
*		     a1
d105 1
a105 1
*	void ClearScreen( struct RastPort * );
d122 2
a123 1
*       ClearEOL Text SetRast graphics/text.h graphics/rastport.h
@


36.4
log
@document blitter usage
@
text
@d2 1
a2 1
**	$Id: clear.asm,v 36.3 90/04/13 11:52:24 kodiak Exp Locker: kodiak $
@


36.3
log
@use Id instead of Header for 4.x rcs
@
text
@d2 1
a2 1
**	$Id$
d65 2
a66 1
*   BUGS
d115 2
a116 1
*   BUGS
@


36.2
log
@for rcs 4.x header change
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/graphics/text/RCS/clear.asm,v 36.1 89/11/02 18:37:46 kodiak Exp Locker: kodiak $
@


36.1
log
@recode to use gb_ExecBase
@
text
@d2 1
a2 1
**	$Header: clear.asm,v 36.0 89/06/05 14:15:29 kodiak Exp $
@


36.0
log
@autodoc changes
@
text
@d2 1
a2 1
**	$Header$
d30 3
a32 3
	XREF_GFX	ClearEOL
	XREF_GFX	SetAPen
	XREF_GFX	RectFill
d123 1
a123 1
		CALLGFX ClearEOL
d174 1
a174 1
		CALLGFX SetAPen
d178 1
a178 1
		CALLGFX RectFill
d183 1
a183 1
		CALLGFX SetAPen
@


35.0
log
@initial from V34
@
text
@d1 8
a8 23
	TTL    '$Header: clear.asm,v 1.1 87/10/19 15:14:21 kodiak Exp $'
**********************************************************************
*								     *
*   Copyright 1985, Commodore-Amiga Inc.   All rights reserved.	     *
*   No part of this program may be reproduced, transmitted,	     *
*   transcribed, stored in retrieval system, or translated into	     *
*   any language or computer language, in any form or by any	     *
*   means, electronic, mechanical, magnetic, optical, chemical,	     *
*   manual or otherwise, without the prior written permission of     *
*   Commodore-Amiga Incorporated, 983 University Ave. Building #D,   *
*   Los Gatos, California, 95030				     *
*								     *
**********************************************************************
*
*   Source Control
*   --------------
*   $Header: clear.asm,v 1.1 87/10/19 15:14:21 kodiak Exp $
*
*   $Locker:  $
*
*   $Log:	clear.asm,v $
*
**********************************************************************
d44 1
a44 1
*	ClearEOL - Clear from current position to end of line.
d50 1
a50 1
*	struct RastPort *rp;
d87 1
a87 1
		BSR	ClearRaster
d95 1
a95 1
*	ClearScreen - Clear from current position to end of RastPort.
d101 1
a101 1
*	struct RastPort *rp;
d141 1
a141 1
		BSR.S	ClearRaster
d147 1
a147 1
*------ ClearRaster --------------------------------------------------
d150 1
a150 1
*	ClearRaster - clear a rectangle of the raster port
d153 2
a154 2
*	error = ClearRaster(RastPort, xl, yl, xu, yu)
*			    A1	      D0  D1  D2  D3
d162 1
a162 1
ClearRaster:
@
