head     39.0;
branch   ;
access   ;
symbols  rel39_24:39.0 rel39_18:39.0 rel39_97:39.0 rel39_90:39.0 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_25:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.17 V36_208:36.17 V36_207:36.17 V36_205:36.17 V36_203:36.17 V36_202:36.17 V36_201:36.17 V36_200:36.17 V36_199:36.17 V36_198:36.17 V36_196:36.17 V36_195:36.17 V36_194:36.16 V36_193:36.16 V36_192:36.16 V36_191:36.15 V36_190:36.15 V36_189:36.15 V36_188:36.15 V36_187:36.15 V36_186:36.15 V36_185:36.15 V36_184:36.15 V36_183:36.15 V36_182:36.15 V36_181:36.15;
locks    ; strict;
comment  @*   @;


39.0
date     91.08.21.17.36.52;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.32.56;  author spence;  state Exp;
branches ;
next     36.17;

36.17
date     90.11.02.10.13.49;  author bart;  state Exp;
branches ;
next     36.16;

36.16
date     90.10.12.09.12.06;  author bart;  state Exp;
branches ;
next     36.15;

36.15
date     90.06.12.18.23.29;  author kodiak;  state Exp;
branches ;
next     36.14;

36.14
date     90.05.03.17.31.43;  author kodiak;  state Exp;
branches ;
next     36.13;

36.13
date     90.04.13.11.53.19;  author kodiak;  state Exp;
branches ;
next     36.12;

36.12
date     90.04.02.13.00.39;  author kodiak;  state Exp;
branches ;
next     36.11;

36.11
date     90.02.28.14.48.13;  author kodiak;  state Exp;
branches ;
next     36.10;

36.10
date     90.01.29.12.32.53;  author kodiak;  state Exp;
branches ;
next     36.9;

36.9
date     90.01.29.11.22.41;  author kodiak;  state Exp;
branches ;
next     36.8;

36.8
date     90.01.23.16.56.41;  author kodiak;  state Exp;
branches ;
next     36.7;

36.7
date     89.09.06.11.21.41;  author kodiak;  state Exp;
branches ;
next     36.6;

36.6
date     89.07.18.15.49.58;  author kodiak;  state Exp;
branches ;
next     36.5;

36.5
date     89.05.05.11.25.41;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     88.11.25.16.09.28;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     88.11.25.15.53.32;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     88.07.15.16.23.50;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     88.06.16.13.24.34;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     88.04.12.16.44.15;  author kodiak;  state Exp;
branches ;
next     35.3;

35.3
date     88.01.08.13.38.25;  author kodiak;  state Exp;
branches ;
next     35.2;

35.2
date     87.12.03.12.59.48;  author kodiak;  state Exp;
branches ;
next     35.1;

35.1
date     87.10.19.16.27.56;  author kodiak;  state Exp;
branches ;
next     35.0;

35.0
date     87.10.19.16.21.38;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@Bumped
@
text
@	IFND	GRAPHICS_TEXT_I
GRAPHICS_TEXT_I	SET	1
**
**	$Id: text.i,v 37.0 91/01/07 15:32:56 spence Exp Locker: chrisg $
**
**	graphics library text structures 
**
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
**	    All Rights Reserved
**
   
	IFND	EXEC_PORTS_I
	INCLUDE	"exec/ports.i"
	ENDC	; EXEC_PORTS_I

	IFND	UTILITY_TAGITEM_I
	INCLUDE	"utility/tagitem.i"
	ENDC	; UTILITY_TAGITEM_I

*------ Font Styles --------------------------------------------------
FS_NORMAL	EQU	0	; normal text (no style attributes set)
    BITDEF  FS,UNDERLINED,0	; underlined (under baseline)
    BITDEF  FS,BOLD,1		; bold face text (ORed w/ shifted right 1)
    BITDEF  FS,ITALIC,2		; italic (slanted 1:2 right)
    BITDEF  FS,EXTENDED,3	; extended face (must be designed)

    BITDEF  FS,COLORFONT,6	; this uses ColorTextFont structure
    BITDEF  FS,TAGGED,7		; the TextAttr is really an TTextAttr,

*------ Font Flags ---------------------------------------------------
    BITDEF  FP,ROMFONT,0	; font is in rom
    BITDEF  FP,DISKFONT,1	; font is from diskfont.library
    BITDEF  FP,REVPATH,2	; designed path is reversed (e.g. left)
    BITDEF  FP,TALLDOT,3	; designed for hires non-interlaced
    BITDEF  FP,WIDEDOT,4	; designed for lores interlaced
    BITDEF  FP,PROPORTIONAL,5	; character sizes vary from tf_XSize
    BITDEF  FP,DESIGNED,6	; size is "designed", not constructed
*				; note: if you do not set this bit in your
*				; textattr, then a font may be constructed
*				; for you by scaling an existing rom or disk
*				; font (under V36 and above).
    ;-- bit 7 is always clear for fonts on the graphics font list
    BITDEF  FP,REMOVED,7	; the font has been removed


******* TextAttr node ************************************************
 STRUCTURE  TextAttr,0
    APTR    ta_Name		; name of the desired font
    UWORD   ta_YSize		; height of the desired font
    UBYTE   ta_Style		; desired font style
    UBYTE   ta_Flags		; font preferences flags
    LABEL   ta_SIZEOF

 STRUCTURE  TTextAttr,0
    APTR    tta_Name		; name of the desired font
    UWORD   tta_YSize		; height of the desired font
    UBYTE   tta_Style		; desired font style
    UBYTE   tta_Flags		; font preferences flags
    APTR    tta_Tags		; extended attributes
    LABEL   tta_SIZEOF

******* Text Tags ****************************************************
TA_DeviceDPI	EQU	1!TAG_USER	; Tag value is Point union:
					; Hi word XDPI, Lo word YDPI


MAXFONTMATCHWEIGHT	EQU	32767	; perfect match from WeighTAMatch


******* TextFont node ************************************************
 STRUCTURE	TextFont,MN_SIZE ; reply message for font removal
				; font name in LN_NAME	\ used in this
    UWORD   tf_YSize		; font height		| order to best
    UBYTE   tf_Style		; font style		| match a font
    UBYTE   tf_Flags		; preference attributes	/ request.
    UWORD   tf_XSize		; nominal font width
    UWORD   tf_Baseline		; distance from the top of char to baseline
    UWORD   tf_BoldSmear	; smear to affect a bold enhancement

    UWORD   tf_Accessors	; access count

    UBYTE   tf_LoChar		; the first character described here
    UBYTE   tf_HiChar		; the last character described here
    APTR    tf_CharData		; the bit character data

    UWORD   tf_Modulo		; the row modulo for the strike font data
    APTR    tf_CharLoc		; ptr to location data for the strike font
				;   2 words: bit offset then size
    APTR    tf_CharSpace	; ptr to words of proportional spacing data
    APTR    tf_CharKern		; ptr to words of kerning data
    LABEL   tf_SIZEOF

tf_Extension	EQU	MN_REPLYPORT

;------	tfe_Flags0 (partial definition) ------------------------------
    BITDEF  TE0,NOREMFONT,0	; disallow RemFont for this font

 STRUCTURE	TextFontExtension,0	; this structure is read-only
    UWORD   tfe_MatchWord	; a magic cookie for the extension
    UBYTE   tfe_Flags0		; (system private flags)
    UBYTE   tfe_Flags1		; (system private flags)
    APTR    tfe_BackPtr		; validation of compilation
    APTR    tfe_OrigReplyPort	; original value in tf_Extension
    APTR    tfe_Tags		; Text Tags for the font
    APTR    tfe_OFontPatchS	; (system private use)
    APTR    tfe_OFontPatchK	; (system private use)
    ; this space is reserved for future expansion
    LABEL   tfe_SIZEOF		; (but allocated only by the system)


*******	ColorTextFont node *******************************************
;------	ctf_Flags ----------------------------------------------------
CT_COLORFONT	EQU	$0001	; color map contains designer's colors
CT_GREYFONT	EQU	$0002	; color map describes even-stepped brightnesses
				; from low to high
CT_ANTIALIAS	EQU	$0004	; zero background thru fully saturated char

	BITDEF	CT,MAPCOLOR,0	; map ctf_FgColor to the rp_FgPen if the former
				; is a valid color within ctf_Low..ctf_High

;------ ColorFontColors ----------------------------------------------
 STRUCTURE	ColorFontColors,0
    UWORD   cfc_Reserved	; must be zero
    UWORD   cfc_Count		; number of entries in cfc_ColorTable
    APTR    cfc_ColorTable	; 4 bit per component color map packed xRGB
    LABEL   cfc_SIZEOF

;------	ColorTextFont ------------------------------------------------
 STRUCTURE	ColorTextFont,tf_SIZEOF
    UWORD   ctf_Flags		; extended flags
    UBYTE   ctf_Depth		; number of bit planes
    UBYTE   ctf_FgColor		; color that is remapped to FgPen
    UBYTE   ctf_Low		; lowest color represented here
    UBYTE   ctf_High		; highest color represented here
    UBYTE   ctf_PlanePick	; PlanePick ala Images
    UBYTE   ctf_PlaneOnOff	; PlaneOnOff ala Images
    APTR    ctf_ColorFontColors	; struct ColorFontColors * for font
    STRUCT  ctf_CharData,8*4	; pointers to bit planes ala tf_CharData
    LABEL   ctf_SIZEOF

******* TextExtent node **********************************************
 STRUCTURE	TextExtent,0
    UWORD   te_Width		; same as TextLength
    UWORD   te_Height		; same as tf_YSize
    STRUCT  te_Extent,8		; WORD MinX, MinY, MaxX, MaxY relative to CP
    LABEL   te_SIZEOF

	ENDC	; GRAPHICS_TEXT_I
@


37.0
log
@initial switchover from V36
@
text
@d4 1
a4 1
**	$Id: text.i,v 36.17 90/11/02 10:13:49 bart Exp Locker: spence $
@


36.17
log
@comments for designed
@
text
@d4 1
a4 1
**	$Id: text.i,v 36.16 90/10/12 09:12:06 bart Exp Locker: bart $
@


36.16
log
@tagged only applies to textattr
@
text
@d4 1
a4 1
**	$Id: text.i,v 36.15 90/06/12 18:23:29 kodiak Exp Locker: bart $
d38 4
@


36.15
log
@add and implement TF0._NOREMFONT
@
text
@d4 1
a4 1
**	$Id: text.i,v 36.14 90/05/03 17:31:43 kodiak Exp Locker: kodiak $
a28 1
				; or the TextFont tf_Extension is valid
@


36.14
log
@spell "saturated" right
@
text
@d4 1
a4 1
**	$Id: text.i,v 36.13 90/04/13 11:53:19 kodiak Exp Locker: kodiak $
d91 3
@


36.13
log
@use Id instead of Header for 4.x rcs
@
text
@d4 1
a4 1
**	$Id$
d110 1
a110 1
CT_ANTIALIAS	EQU	$0004	; zero background thru fully staurated char
@


36.12
log
@for rcs 4.x header change
@
text
@d4 1
a4 1
**	$Header: /usr2/kodiak/src/KS/graphics/text/RCS/text.i,v 36.11 90/02/28 14:48:13 kodiak Exp Locker: kodiak $
@


36.11
log
@convert obsolete fonts into valid fonts automatically
@
text
@d4 1
a4 1
**	$Header: text.i,v 36.10 90/01/29 12:32:53 kodiak Exp $
@


36.10
log
@add another warning about future extension of TextFontExtension
@
text
@d4 1
a4 1
**	$Header: text.i,v 36.9 90/01/29 11:22:41 kodiak Exp $
d99 2
@


36.9
log
@rename and move TTEXTATTR in flags to TAGGED in style
@
text
@d4 1
a4 1
**	$Header: text.i,v 36.8 90/01/23 16:56:41 kodiak Exp $
d99 1
@


36.8
log
@first cut at TextFont tag extension (tf_Extension)
@
text
@d4 1
a4 1
**	$Header: text.i,v 36.7 89/09/06 11:21:41 kodiak Exp $
d28 2
a29 1
    BITDEF  FS,COMPILED,7	; this bit must only be set by the system
a39 1
    BITDEF  FP,TTEXTATTR,7	; the TextAttr is really an TTextAttr
@


36.7
log
@MAXFONTMATCHWEIGHT defined in text.[hi]
minfontmatchweight changed to 0, not -1
@
text
@d4 1
a4 1
**	$Header: text.i,v 36.6 89/07/18 15:49:58 kodiak Exp $
d16 4
d39 1
a39 1
    BITDEF  FP,XTEXTATTR,7	; the TextAttr is really an XTextAttr
d51 7
a57 7
 STRUCTURE  XTextAttr,0
    APTR    xta_Name		; name of the desired font
    UWORD   xta_YSize		; height of the desired font
    UBYTE   xta_Style		; desired font style
    UBYTE   xta_Flags		; font preferences flags
    UWORD   xta_XSize		; nominal X size of the desired font
    LABEL   xta_SIZEOF
d59 3
a62 1
MAXFONTMATCHWEIGHT	EQU	32767	; perfect match from WeighFontMatch
d64 1
d66 1
d89 12
@


36.6
log
@CT_ANTIALIAS
@
text
@d4 1
a4 1
**	$Header: text.i,v 36.5 89/05/05 11:25:41 kodiak Exp $
d54 3
@


36.5
log
@rework mechanism for storing speedup bits
just Header line
@
text
@d4 1
a4 1
**	$Header$
d84 2
@


36.4
log
@make that "ColorFontColors"
@
text
@d4 1
a4 4
**	$Filename: graphics/text.i $
**	$Release: 1.3 $
**	$Revision: 36.3 $
**	$Date: 88/11/25 15:53:32 $
a22 5
    ;-- these are more appropriately flags, but there is no room there
    ;------ kernless & bytefont will be set at SetFont time, if appropriate
    BITDEF  FS,KERNLESS,4	; char bits fit completely within each cell
    BITDEF  FS,BYTEFONT,5	; the char data is all byte aligned

d24 1
@


36.3
log
@add TextColorMap description to refer to instead of ColorMap
@
text
@d6 2
a7 2
**	$Revision: 36.2 $
**	$Date: 88/07/15 16:23:50 $
d94 6
a99 6
;------ TextColorMap -------------------------------------------------
 STRUCTURE	TextColorMap,0
    UWORD   tcm_Reserved	; must be zero
    UWORD   tcm_Count		; number of entries in tcm_ColorTable
    APTR    tcm_ColorTable	; 4 bit per component color map packed xRGB
    LABEL   tcm_SIZEOF
d110 1
a110 1
    APTR    ctf_TextColorMap	; struct TextColorMap * for font
@


36.2
log
@add KERNLESS support
@
text
@d6 2
a7 2
**	$Revision: 36.1 $
**	$Date: 88/06/16 13:24:34 $
d94 7
d110 1
a110 1
    APTR    ctf_ColorMap	; struct ColorMap * for font
d114 1
a114 1
;------ TextExtent node ----------------------------------------------
@


36.1
log
@add extended text attributes (XAttr) to deal with X size specification
@
text
@d6 2
a7 2
**	$Revision$
**	$Date$
d15 3
a17 3
   IFND     EXEC_PORTS_I
   INCLUDE  "exec/ports.i"
   ENDC
d21 4
a24 4
	BITDEF	FS,UNDERLINED,0	; underlined (under baseline)
	BITDEF	FS,BOLD,1	; bold face text (ORed w/ shifted right 1)
	BITDEF	FS,ITALIC,2	; italic (slanted 1:2 right)
	BITDEF	FS,EXTENDED,3	; extended face (must be designed)
d26 4
a29 2
	BITDEF	FS,COLORFONT,6	; this uses ColorTextFont structure
	BITDEF	FS,BYTEFONT,7	; the char data is all byte aligned
d31 2
d34 8
a41 7
   BITDEF   FP,ROMFONT,0      ;font is in rom
   BITDEF   FP,DISKFONT,1     ;font is from diskfont.library
   BITDEF   FP,REVPATH,2      ;designed path is reversed (e.g. left)
   BITDEF   FP,TALLDOT,3      ;designed for hires non-interlaced
   BITDEF   FP,WIDEDOT,4      ;designed for lores interlaced
   BITDEF   FP,PROPORTIONAL,5 ;character sizes can vary from nominal
   BITDEF   FP,DESIGNED,6     ;size is "designed", not constructed
d43 1
a43 1
   BITDEF   FP,REMOVED,7      ; the font has been removed
d64 8
a71 8
 STRUCTURE  TextFont,MN_SIZE
*                             ;font name in LN        \ used in this
   UWORD    tf_YSize          ;font height            | order to best
   UBYTE    tf_Style          ;font style             | match a font
   UBYTE    tf_Flags          ;preference attributes  / request.
   UWORD    tf_XSize          ;nominal font width
   UWORD    tf_Baseline       ;distance from the top of char to baseline
   UWORD    tf_BoldSmear      ;smear to affect a bold enhancement
d73 1
a73 1
   UWORD    tf_Accessors      ;access count
d75 3
a77 3
   UBYTE    tf_LoChar         ;the first character described here
   UBYTE    tf_HiChar         ;the last character described here
   APTR     tf_CharData       ;the bit character data
d79 6
a84 6
   UWORD    tf_Modulo         ;the row modulo for the strike font data
   APTR     tf_CharLoc        ;ptr to location data for the strike font
*           ;  2 words: bit offset then size
   APTR     tf_CharSpace      ;ptr to words of proportional spacing data
   APTR     tf_CharKern       ;ptr to words of kerning data
   LABEL    tf_SIZEOF
d96 10
a105 10
	UWORD	ctf_Flags	; extended flags
	UBYTE	ctf_Depth	; number of bit planes
	UBYTE	ctf_FgColor	; color that is remapped to FgPen
	UBYTE	ctf_Low		; lowest color represented here
	UBYTE	ctf_High	; highest color represented here
	UBYTE	ctf_PlanePick	; PlanePick ala Images
	UBYTE	ctf_PlaneOnOff	; PlaneOnOff ala Images
	APTR	ctf_ColorMap	; struct ColorMap * for font
	STRUCT	ctf_CharData,8*4 ;pointers to bit planes ala tf_CharData
	LABEL	ctf_SIZEOF
d109 4
a112 4
	UWORD	te_Width	; same as TextLength
	UWORD	te_Height	; same as tf_YSize
	STRUCT	te_Extent,8	; WORD MinX, MinY, MaxX, MaxY relative to CP
	LABEL	te_SIZEOF
d114 1
a114 1
	ENDC	GRAPHICS_TEXT_I
@


36.0
log
@phase out CTF_NORMALFONT
@
text
@d1 13
a13 11
   IFND  GRAPHICS_TEXT_I
GRAPHICS_TEXT_I      SET   1
********************************************************************
*               Commodore-Amiga, Inc.                              *
*               text.i                                             *
********************************************************************
********************************************************************
*
*  graphics library text structures
*
********************************************************************
d37 1
d43 5
a47 5
   APTR     ta_Name           ;name of the desired font
   UWORD    ta_YSize          ;size of the desired font
   UBYTE    ta_Style          ;desired font style
   UBYTE    ta_Flags          ;font preferences
   LABEL    ta_SIZEOF
d49 7
d57 1
d109 1
a109 1
	ENDC
@


35.3
log
@new TextExtent structure
@
text
@a76 2
	BITDEF	CT,NORMALFONT,15 ;ignoring the ColorTextFont extension yields
				; the same output as using it.
@


35.2
log
@support color text
@
text
@d93 7
@


35.1
log
@text speed enhancements
@
text
@a71 1
CT_COLORMASK	EQU	$000F	; mask to get to following color styles
d75 2
@


35.0
log
@initial from V34
@
text
@d18 5
a22 5
FS_NORMAL   EQU 0             ;normal text (no style attributes set)
   BITDEF   FS,EXTENDED,3     ;extended face (must be designed)
   BITDEF   FS,ITALIC,2       ;italic (slanted 1:2 right)
   BITDEF   FS,BOLD,1         ;bold face text (ORed w/ shifted right 1)
   BITDEF   FS,UNDERLINED,0   ;underlined (under baseline)
d24 3
d70 23
a92 1
   ENDC
@
