head     39.0;
branch   ;
access   ;
symbols  rel39_24:39.0 rel39_18:39.0 rel39_97:39.0 rel39_90:39.0 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_25:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:36.20 V36_208:36.20 V36_207:36.20 V36_205:36.20 V36_203:36.20 V36_202:36.20 V36_201:36.20 V36_200:36.20 V36_199:36.20 V36_198:36.20 V36_196:36.20 V36_195:36.20 V36_194:36.19 V36_193:36.19 V36_192:36.19 V36_191:36.18 V36_190:36.18 V36_189:36.18 V36_188:36.18 V36_187:36.18 V36_186:36.18 V36_185:36.18 V36_184:36.18 V36_183:36.18 V36_182:36.18 V36_181:36.18;
locks    ; strict;
comment  @ *  @;


39.0
date     91.08.21.17.36.44;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.30.48;  author spence;  state Exp;
branches ;
next     36.20;

36.20
date     90.11.02.10.12.43;  author bart;  state Exp;
branches ;
next     36.19;

36.19
date     90.10.12.09.11.35;  author bart;  state Exp;
branches ;
next     36.18;

36.18
date     90.06.12.18.23.26;  author kodiak;  state Exp;
branches ;
next     36.17;

36.17
date     90.05.03.17.31.33;  author kodiak;  state Exp;
branches ;
next     36.16;

36.16
date     90.04.13.11.52.52;  author kodiak;  state Exp;
branches ;
next     36.15;

36.15
date     90.04.02.13.00.29;  author kodiak;  state Exp;
branches ;
next     36.14;

36.14
date     90.02.28.14.47.59;  author kodiak;  state Exp;
branches ;
next     36.13;

36.13
date     90.01.29.12.32.15;  author kodiak;  state Exp;
branches ;
next     36.12;

36.12
date     90.01.29.11.22.38;  author kodiak;  state Exp;
branches ;
next     36.11;

36.11
date     90.01.23.19.32.51;  author kodiak;  state Exp;
branches ;
next     36.10;

36.10
date     90.01.23.16.56.37;  author kodiak;  state Exp;
branches ;
next     36.9;

36.9
date     89.09.06.11.21.32;  author kodiak;  state Exp;
branches ;
next     36.8;

36.8
date     89.07.18.15.49.44;  author kodiak;  state Exp;
branches ;
next     36.7;

36.7
date     89.05.22.11.45.10;  author kodiak;  state Exp;
branches ;
next     36.6;

36.6
date     89.05.05.11.25.15;  author kodiak;  state Exp;
branches ;
next     36.5;

36.5
date     88.11.25.16.09.06;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     88.11.25.15.53.02;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     88.07.18.11.35.34;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     88.07.15.16.23.43;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     88.06.16.13.23.54;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     88.04.12.16.43.56;  author kodiak;  state Exp;
branches ;
next     35.4;

35.4
date     88.01.23.10.11.20;  author kodiak;  state Exp;
branches ;
next     35.3;

35.3
date     88.01.08.13.38.12;  author kodiak;  state Exp;
branches ;
next     35.2;

35.2
date     87.12.03.12.59.43;  author kodiak;  state Exp;
branches ;
next     35.1;

35.1
date     87.11.24.17.58.23;  author kodiak;  state Exp;
branches ;
next     35.0;

35.0
date     87.10.19.16.21.10;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@Bumped
@
text
@#ifndef	GRAPHICS_TEXT_H
#define	GRAPHICS_TEXT_H
/*
**	$Id: text.h,v 37.0 91/01/07 15:30:48 spence Exp Locker: chrisg $
**
**	graphics library text structures 
**
**	(C) Copyright 1985,1986,1987,1988,1989 Commodore-Amiga, Inc.
**	    All Rights Reserved
*/

#ifndef	EXEC_PORTS_H
#include	"exec/ports.h"
#endif	/* EXEC_PORTS_H */

#ifndef	GRAPHICS_GFX_H
#include	"graphics/gfx.h"
#endif	/* GRAPHICS_GFX_H */

#ifndef	UTILITY_TAGITEM_H
#include	"utility/tagitem.h"
#endif	/* UTILITY_TAGITEM_H */

/*------ Font Styles ------------------------------------------------*/
#define	FS_NORMAL	0	/* normal text (no style bits set) */
#define	FSB_UNDERLINED	0	/* underlined (under baseline) */
#define	FSF_UNDERLINED	0x01
#define	FSB_BOLD	1	/* bold face text (ORed w/ shifted) */
#define	FSF_BOLD	0x02
#define	FSB_ITALIC	2	/* italic (slanted 1:2 right) */
#define	FSF_ITALIC	0x04
#define	FSB_EXTENDED	3	/* extended face (wider than normal) */
#define	FSF_EXTENDED	0x08

#define	FSB_COLORFONT	6	/* this uses ColorTextFont structure */
#define	FSF_COLORFONT	0x40
#define	FSB_TAGGED	7	/* the TextAttr is really an TTextAttr, */
#define	FSF_TAGGED	0x80

/*------ Font Flags -------------------------------------------------*/
#define	FPB_ROMFONT	0	/* font is in rom */
#define	FPF_ROMFONT	0x01
#define	FPB_DISKFONT	1	/* font is from diskfont.library */
#define	FPF_DISKFONT	0x02
#define	FPB_REVPATH	2	/* designed path is reversed (e.g. left) */
#define	FPF_REVPATH	0x04
#define	FPB_TALLDOT	3	/* designed for hires non-interlaced */
#define	FPF_TALLDOT	0x08
#define	FPB_WIDEDOT	4	/* designed for lores interlaced */
#define	FPF_WIDEDOT	0x10
#define	FPB_PROPORTIONAL 5	/* character sizes can vary from nominal */
#define	FPF_PROPORTIONAL 0x20
#define	FPB_DESIGNED	6	/* size explicitly designed, not constructed */
				/* note: if you do not set this bit in your */
				/* textattr, then a font may be constructed */
				/* for you by scaling an existing rom or disk */
				/* font (under V36 and above). */
#define	FPF_DESIGNED	0x40
    /* bit 7 is always clear for fonts on the graphics font list */
#define	FPB_REMOVED	7	/* the font has been removed */
#define	FPF_REMOVED	(1<<7)

/****** TextAttr node, matches text attributes in RastPort **********/
struct TextAttr {
    STRPTR  ta_Name;		/* name of the font */
    UWORD   ta_YSize;		/* height of the font */
    UBYTE   ta_Style;		/* intrinsic font style */
    UBYTE   ta_Flags;		/* font preferences and flags */
};

struct TTextAttr {
    STRPTR  tta_Name;		/* name of the font */
    UWORD   tta_YSize;		/* height of the font */
    UBYTE   tta_Style;		/* intrinsic font style */
    UBYTE   tta_Flags;		/* font preferences and flags */
    struct TagItem *tta_Tags;	/* extended attributes */
};


/****** Text Tags ***************************************************/
#define	TA_DeviceDPI	(1|TAG_USER)	/* Tag value is Point union: */
					/* Hi word XDPI, Lo word YDPI */

#define	MAXFONTMATCHWEIGHT	32767	/* perfect match from WeighTAMatch */


/****** TextFonts node **********************************************/
struct TextFont {
    struct Message tf_Message;	/* reply message for font removal */
				/* font name in LN        \    used in this */
    UWORD   tf_YSize;		/* font height            |    order to best */
    UBYTE   tf_Style;		/* font style             |    match a font */
    UBYTE   tf_Flags;		/* preferences and flags  /    request. */
    UWORD   tf_XSize;		/* nominal font width */
    UWORD   tf_Baseline;	/* distance from the top of char to baseline */
    UWORD   tf_BoldSmear;	/* smear to affect a bold enhancement */

    UWORD   tf_Accessors;	/* access count */

    UBYTE   tf_LoChar;		/* the first character described here */
    UBYTE   tf_HiChar;		/* the last character described here */
    APTR    tf_CharData;	/* the bit character data */

    UWORD   tf_Modulo;		/* the row modulo for the strike font data */
    APTR    tf_CharLoc;		/* ptr to location data for the strike font */
				/*   2 words: bit offset then size */
    APTR    tf_CharSpace;	/* ptr to words of proportional spacing data */
    APTR    tf_CharKern;	/* ptr to words of kerning data */
};

/* unfortunately, this needs to be explicitly typed */
#define	tf_Extension	tf_Message.mn_ReplyPort

/*-----	tfe_Flags0 (partial definition) ----------------------------*/
#define TE0B_NOREMFONT	0	/* disallow RemFont for this font */
#define TE0F_NOREMFONT	0x01

struct TextFontExtension {	/* this structure is read-only */
    UWORD   tfe_MatchWord;		/* a magic cookie for the extension */
    UBYTE   tfe_Flags0;			/* (system private flags) */
    UBYTE   tfe_Flags1;			/* (system private flags) */
    struct TextFont *tfe_BackPtr;	/* validation of compilation */
    struct MsgPort *tfe_OrigReplyPort;	/* original value in tf_Extension */
    struct TagItem *tfe_Tags;		/* Text Tags for the font */
    UWORD  *tfe_OFontPatchS;		/* (system private use) */
    UWORD  *tfe_OFontPatchK;		/* (system private use) */
    /* this space is reserved for future expansion */
};

/******	ColorTextFont node ******************************************/
/*-----	ctf_Flags --------------------------------------------------*/
#define	CT_COLORMASK	0x000F	/* mask to get to following color styles */
#define	CT_COLORFONT	0x0001	/* color map contains designer's colors */
#define	CT_GREYFONT	0x0002	/* color map describes even-stepped */
				/* brightnesses from low to high */
#define	CT_ANTIALIAS	0x0004	/* zero background thru fully saturated char */

#define	CTB_MAPCOLOR	0	/* map ctf_FgColor to the rp_FgPen if it's */
#define	CTF_MAPCOLOR	0x0001	/* is a valid color within ctf_Low..ctf_High */

/*----- ColorFontColors --------------------------------------------*/
struct ColorFontColors {
    UWORD   cfc_Reserved;	/* *must* be zero */
    UWORD   cfc_Count;		/* number of entries in cfc_ColorTable */
    UWORD  *cfc_ColorTable;	/* 4 bit per component color map packed xRGB */
};

/*-----	ColorTextFont ----------------------------------------------*/
struct ColorTextFont {
    struct TextFont ctf_TF;
    UWORD   ctf_Flags;		/* extended flags */
    UBYTE   ctf_Depth;		/* number of bit planes */
    UBYTE   ctf_FgColor;	/* color that is remapped to FgPen */
    UBYTE   ctf_Low;		/* lowest color represented here */
    UBYTE   ctf_High;		/* highest color represented here */
    UBYTE   ctf_PlanePick;	/* PlanePick ala Images */
    UBYTE   ctf_PlaneOnOff;	/* PlaneOnOff ala Images */
    struct ColorFontColors *ctf_ColorFontColors; /* colors for font */
    APTR    ctf_CharData[8];	/*pointers to bit planes ala tf_CharData */
};

/****** TextExtent node *********************************************/
struct TextExtent {
    UWORD   te_Width;		/* same as TextLength */
    UWORD   te_Height;		/* same as tf_YSize */
    struct Rectangle te_Extent;	/* relative to CP */
};

#endif	/* GRAPHICS_TEXT_H */
@


37.0
log
@initial switchover from V36
@
text
@d4 1
a4 1
**	$Id: text.h,v 36.20 90/11/02 10:12:43 bart Exp Locker: spence $
@


36.20
log
@comments for designed
@
text
@d4 1
a4 1
**	$Id: text.h,v 36.19 90/10/12 09:11:35 bart Exp Locker: bart $
@


36.19
log
@tagged only applies to textattr
@
text
@d4 1
a4 1
**	$Id: text.h,v 36.18 90/06/12 18:23:26 kodiak Exp Locker: bart $
d53 5
a57 1
#define	FPB_DESIGNED	6	/* size is "designed", not constructed */
@


36.18
log
@add and implement TF0._NOREMFONT
@
text
@d4 1
a4 1
**	$Id: text.h,v 36.17 90/05/03 17:31:33 kodiak Exp Locker: kodiak $
d38 1
a38 1
#define	FSF_TAGGED	0x80	/* or the TextFont tf_Extension is valid */
@


36.17
log
@spell "saturated" right
@
text
@d4 1
a4 1
**	$Id: text.h,v 36.16 90/04/13 11:52:52 kodiak Exp Locker: kodiak $
d109 4
@


36.16
log
@use Id instead of Header for 4.x rcs
@
text
@d4 1
a4 1
**	$Id$
d128 1
a128 1
#define	CT_ANTIALIAS	0x0004	/* zero background thru fully staurated char */
@


36.15
log
@for rcs 4.x header change
@
text
@d4 1
a4 1
**	$Header: /usr2/kodiak/src/KS/graphics/text/RCS/text.h,v 36.14 90/02/28 14:47:59 kodiak Exp Locker: kodiak $
@


36.14
log
@convert obsolete fonts into valid fonts automatically
@
text
@d4 1
a4 1
**	$Header: text.h,v 36.13 90/01/29 12:32:15 kodiak Exp $
@


36.13
log
@add another warning about future extension of TextFontExtension
@
text
@d4 1
a4 1
**	$Header: text.h,v 36.12 90/01/29 11:22:38 kodiak Exp $
d117 2
@


36.12
log
@rename and move TTEXTATTR in flags to TAGGED in style
@
text
@d4 1
a4 1
**	$Header: text.h,v 36.11 90/01/23 19:32:51 kodiak Exp $
d117 1
@


36.11
log
@(forgot ;)
@
text
@d4 1
a4 1
**	$Header: text.h,v 36.10 90/01/23 16:56:37 kodiak Exp $
d37 2
a38 2
#define	FSB_COMPILED	7	/* this bit must only be set by the system */
#define	FSF_COMPILED	0x80
a55 2
#define	FPB_TTEXTATTR	7	/* the TextAttr is really an TTextAttr */
#define	FPF_TTEXTATTR	0x80
d107 1
@


36.10
log
@first cut at TextFont tag extension (tf_Extension)
@
text
@d4 1
a4 1
**	$Header: text.h,v 36.9 89/09/06 11:21:32 kodiak Exp $
d118 1
a118 1
}
@


36.9
log
@MAXFONTMATCHWEIGHT defined in text.[hi]
minfontmatchweight changed to 0, not -1
@
text
@d4 1
a4 1
**	$Header: text.h,v 36.8 89/07/18 15:49:44 kodiak Exp $
d20 4
d56 2
a57 2
#define	FPB_XTEXTATTR	7	/* the TextAttr is really an XTextAttr */
#define	FPF_XTEXTATTR	0x80
d69 6
a74 6
struct XTextAttr {
    STRPTR  xta_Name;		/* name of the font */
    UWORD   xta_YSize;		/* height of the font */
    UBYTE   xta_Style;		/* intrinsic font style */
    UBYTE   xta_Flags;		/* font preferences and flags */
    UWORD   xta_XSize;		/* nominal width of the font */
d78 3
a80 1
#define	MAXFONTMATCHWEIGHT	32767	/* perfect match from WeighFontMatch */
d82 1
d84 1
d109 10
@


36.8
log
@CT_ANTIALIAS
@
text
@d4 1
a4 1
**	$Header: text.h,v 36.7 89/05/22 11:45:10 kodiak Exp $
d72 3
@


36.7
log
@ColorFontColors is a pointer, not an instance.
@
text
@d4 1
a4 1
**	$Header: text.h,v 36.6 89/05/05 11:25:15 kodiak Exp $
d105 2
@


36.6
log
@rework mechanism for storing speedup bits
just Header line
@
text
@d4 1
a4 1
**	$Header$
d125 1
a125 1
    struct ColorFontColors ctf_ColorFontColors; /* colors for font */
@


36.5
log
@make that "ColorFontColors"
@
text
@d4 1
a4 4
**	$Filename: graphics/text.h $
**	$Release: 1.3 $
**	$Revision: 36.4 $
**	$Date: 88/11/25 15:53:02 $
d8 1
a8 1
**	(C) Copyright 1985,1986,1987,1988 Commodore-Amiga, Inc.
a30 7
    /* these are more appropriately flags, but there is no room there */
    /*	kernless & bytefont will be set at SetFont time, if appropriate */
#define	FSB_KERNLESS	4	/* char bits fit completely within each cell */
#define	FSF_KERNLESS	0x10
#define	FSB_BYTEFONT	5	/* the char data is all byte aligned */
#define	FSF_BYTEFONT	0x20

d33 2
@


36.4
log
@add TextColorMap description to refer to instead of ColorMap
@
text
@d6 2
a7 2
**	$Revision: 36.3 $
**	$Date: 88/07/18 11:35:34 $
d116 5
a120 5
/*----- TextColorMap -----------------------------------------------*/
struct TextColorMap {
    UWORD   tcm_Reserved;	/* must be zero */
    UWORD   tcm_Count;		/* number of entries in tcm_ColorTable */
    UWORD  *tcm_ColorTable;	/* 4 bit per component color map packed xRGB */
d133 1
a133 1
    struct TextColorMap ctf_TextColorMap; /* struct TextColorMap * for font */
@


36.3
log
@(make compilable)
@
text
@d6 2
a7 2
**	$Revision: 36.2 $
**	$Date: 88/07/15 16:23:43 $
d116 7
d133 1
a133 1
    APTR    ctf_ColorMap;	/* struct ColorMap * for font */
d136 1
@


36.2
log
@add KERNLESS support
@
text
@d6 2
a7 2
**	$Revision: 36.1 $
**	$Date: 88/06/16 13:23:54 $
d37 1
a37 1
#define	FSB_KERNLESS	0x10
d102 2
a103 2
    APTR    tf_CharSpace	/* ptr to words of proportional spacing data */
    APTR    tf_CharKern		/* ptr to words of kerning data */
@


36.1
log
@add extended text attributes (XAttr) to deal with X size specification
@
text
@d6 2
a7 2
**	$Revision$
**	$Date$
d15 3
a17 3
#ifndef     EXEC_PORTS_H
#include "exec/ports.h"
#endif
d19 3
a21 3
#ifndef     GRAPHICS_GFX_H
#include "graphics/gfx.h"
#endif
d24 17
a40 9
#define FS_NORMAL    0        /* normal text (no style bits set) */
#define FSB_UNDERLINED  0     /* underlined (under baseline) */
#define FSF_UNDERLINED  (1<<0)
#define FSB_BOLD     1        /* bold face text (ORed w/ shifted) */
#define FSF_BOLD     (1<<1)
#define FSB_ITALIC   2        /* italic (slanted 1:2 right) */
#define FSF_ITALIC   (1<<2)
#define FSB_EXTENDED 3        /* extended face (wider than normal) */
#define FSF_EXTENDED (1<<3)
a42 2
#define	FSB_BYTEFONT	7	/* the char data is all byte aligned */
#define	FSF_BYTEFONT	0x80
d45 15
a59 15
#define FPB_ROMFONT  0        /* font is in rom */
#define FPF_ROMFONT  (1<<0)
#define FPB_DISKFONT 1        /* font is from diskfont.library */
#define FPF_DISKFONT (1<<1)
#define FPB_REVPATH  2        /* designed path is reversed (e.g. left) */
#define FPF_REVPATH  (1<<2)
#define FPB_TALLDOT  3        /* designed for hires non-interlaced */
#define  FPF_TALLDOT (1<<3)
#define  FPB_WIDEDOT 4        /* designed for lores interlaced */
#define  FPF_WIDEDOT (1<<4)
#define FPB_PROPORTIONAL   5  /* character sizes can vary from nominal */
#define FPF_PROPORTIONAL   (1<<5)
#define FPB_DESIGNED 6        /* size is "designed", not constructed */
#define FPF_DESIGNED (1<<6)
/* bit 7 is always clear for fonts on the graphics font list */
d67 4
a70 4
   STRPTR   ta_Name;          /* name of the font */
   UWORD    ta_YSize;         /* height of the font */
   UBYTE    ta_Style;         /* intrinsic font style */
   UBYTE    ta_Flags;         /* font preferences and flags */
d74 5
a78 5
   STRPTR   xta_Name;		/* name of the font */
   UWORD    xta_YSize;		/* height of the font */
   UBYTE    xta_Style;		/* intrinsic font style */
   UBYTE    xta_Flags;		/* font preferences and flags */
   UWORD    xta_XSize;		/* nominal width of the font */
d84 8
a91 8
   struct Message tf_Message;       /* reply message for font removal */
                              /* font name in LN        \    used in this */
   UWORD    tf_YSize;         /* font height            |    order to best */
   UBYTE    tf_Style;         /* font style             |    match a font */
   UBYTE    tf_Flags;         /* preferences and flags  /    request. */
   UWORD    tf_XSize;         /* nominal font width */
   UWORD    tf_Baseline;      /* distance from the top of char to baseline */
   UWORD    tf_BoldSmear;     /* smear to affect a bold enhancement */
d93 1
a93 1
   UWORD    tf_Accessors;     /* access count */
d95 3
a97 3
   UBYTE    tf_LoChar;        /* the first character described here */
   UBYTE    tf_HiChar;        /* the last character described here */
   APTR     tf_CharData;      /* the bit character data */
d99 5
a103 5
   UWORD    tf_Modulo;        /* the row modulo for the strike font data */
   APTR     tf_CharLoc;       /* ptr to location data for the strike font */
             /*    2 words: bit offset then size */
   APTR     tf_CharSpace;     /* ptr to words of proportional spacing data */
   APTR     tf_CharKern;      /* ptr to words of kerning data */
d119 9
a127 9
    UWORD	ctf_Flags;	/* extended flags */
    UBYTE	ctf_Depth;	/* number of bit planes */
    UBYTE	ctf_FgColor;	/* color that is remapped to FgPen */
    UBYTE	ctf_Low;	/* lowest color represented here */
    UBYTE	ctf_High;	/* highest color represented here */
    UBYTE	ctf_PlanePick;	/* PlanePick ala Images */
    UBYTE	ctf_PlaneOnOff;	/* PlaneOnOff ala Images */
    APTR	ctf_ColorMap;	/* struct ColorMap * for font */
    APTR	ctf_CharData[8]; /*pointers to bit planes ala tf_CharData */
d131 2
a132 2
    UWORD	te_Width;	/* same as TextLength */
    UWORD	te_Height;	/* same as tf_YSize */
d136 1
a136 1
#endif	GRAPHICS_TEXT_H
@


36.0
log
@phase out CTF_NORMALFONT
@
text
@d1 13
a13 10
#ifndef  GRAPHICS_TEXT_H
#define  GRAPHICS_TEXT_H
/********************************************************************/
/*               Commodore-Amiga, Inc.                              */
/*               file.h                                             */
/********************************************************************/
/********************************************************************
*  graphics library text structures
*
*********************************************************************/
d53 5
a57 2
#define FPB_REMOVED  7        /* the font has been removed */
#define FPF_REMOVED  (1<<7)
d67 7
d75 1
d129 2
a130 1
#endif
@


35.4
log
@add dependency to graphics/gfx.h for Rectangle
@
text
@a94 2
#define	CTB_NORMALFONT	15	/* ignoring the ColorTextFont extension */
#define	CTF_NORMALFONT	0x8000	/*   yields the same output as using it. */
@


35.3
log
@new TextExtent structure
@
text
@d16 4
d42 1
a42 1
#define  FPB_TALLDOT 3        /* designed for hires non-interlaced */
@


35.2
log
@support color text
@
text
@d107 6
@


35.1
log
@ColorFonts equates
@
text
@d18 6
d26 4
a29 6
#define FSB_ITALIC   2        /* italic (slanted 1:2 right) */
#define FSF_ITALIC   (1<<2)
#define FSB_BOLD     1        /* bold face text (ORed w/ shifted) */
#define FSF_BOLD     (1<<1)
#define FSB_UNDERLINED  0     /* underlined (under baseline) */
#define FSF_UNDERLINED  (1<<0)
d89 3
a91 1
#define	CTF_NORMALFONT	15	/* ignoring the ColorTextFont extension */
d106 1
a106 1

@


35.0
log
@initial from V34
@
text
@d78 23
@
