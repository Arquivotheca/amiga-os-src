head     39.0;
branch   ;
access   ;
symbols  rel39_24:39.0 rel39_18:39.0 rel39_97:39.0 rel39_90:39.0 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_25:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:33.2 V36_208:33.2 V36_207:33.2 V36_205:33.2 V36_203:33.2 V36_202:33.2 V36_201:33.2 V36_200:33.2 V36_199:33.2 V36_198:33.2 V36_196:33.2 V36_195:33.2 V36_194:33.2 V36_193:33.2 V36_192:33.2 V36_191:33.2 V36_190:33.2 V36_189:33.2 V36_188:33.2 V36_187:33.2 V36_186:33.2 V36_185:33.2 V36_184:33.2 V36_183:33.2 V36_182:33.2 V36_181:33.2;
locks    ; strict;
comment  @*   @;


39.0
date     91.08.21.17.33.23;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.32.44;  author spence;  state Exp;
branches ;
next     33.2;

33.2
date     90.07.27.16.35.50;  author bart;  state Exp;
branches ;
next     33.1;

33.1
date     90.03.28.09.27.39;  author bart;  state Exp;
branches ;
next     33.0;

33.0
date     86.05.17.15.23.38;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@Bumped
@
text
@*******************************************************************************
*
*	Source Control
*	--------------
*	$Id: asgel3.i,v 37.0 91/01/07 15:32:44 spence Exp Locker: chrisg $
*
*	$Locker: chrisg $
*
*	$Log:	asgel3.i,v $
*   Revision 37.0  91/01/07  15:32:44  spence
*   initial switchover from V36
*   
*   Revision 33.2  90/07/27  16:35:50  bart
*   id
*   
*   Revision 33.1  90/03/28  09:27:39  bart
*   *** empty log message ***
*   
*   Revision 33.0  86/05/17  15:23:38  bart
*   added to rcs for updating
*   
*
*******************************************************************************


	include 'types.i'
	include 'gfx/rastport.i'
	include 'gfx/blit.i'
	include 'gfx/asbob.i'

	xdef	_qBlissIt
* qBlissIt
*	interrupt-queued bob blitter-driver
*
*	a1 pointer to blissObj
*	a0 pointer to i/o space "a00000"
*	d0/d1/a0/a1/a5	can be scratch registers
_qBlissIt:

*	load d0 with pass index
	move.b	BLISSINDEX(a1),d0

*	if this is pass 0, set up the blitter
	if =
		move.w	BCN1(a1),BLTCON1(a0)	* set blitter control word 1
		move.l	FWM(a1),FWMASK(a0)		* set the first-wrod mask

		move.w	BMDSRC(a1),d1			* get the source modulo
		ifeq	AGNUS
			asr.w	#1,d1				* if not new aggie, make into byte addr
		endc
		move.w	d1,BLTMDA(a0)			* set source a/b modulo
		move.w	d1,BLTMDB(a0)
		move.w	BMDDST(a1),d1			* get dest modulo and do the same
		ifeq	AGNUS
			asr.w	#1,d1
		endc
		move.w	d1,BLTMDC(a0)
		move.w	d1,BLTMDD(a0)
	endif

*	test the write-mask for this bit (pass number)
	btst	d0,BLTMASK(a1)
*	if set then blit this plane
	if <>

*		set up address of a-source
		ifeq	AGNUS
			move.l	ASRC(a1),d1			* if not aggie, shift address
			asr.l	#1,d1
			move.l	d1,BLTPTA(a0)
		endc
		ifne	AGNUS
			move.l	ASRC(a1),BLTPTA(a0)	* else do it direct
		endc
		move.w	#$ffff,ADATA(a0)
		ext.w	d0
		move.w	d0,d1
		asl.w	#2,d1
		move.l	DESTPTR(a1,d1.w),d1
		ifeq	AGNUS
			asr.l	#1,d1
		endc
		move.l	d1,BLTPTC(a0)
		move.l	d1,BLTPTD(a0)

		if	#B2BOBBER<>BLITTYPE(a1).w
doother:
			move.b	SRCINDEX(a1),d1
			ext.w	d1
			ifeq	AGNUS
				move.l	SRCPTR(a1,d1.w),d1
				add.b	#4,SRCINDEX(a1)
				asr.l	#1,d1
				move.l	d1,BLTPTB(a0)
			endc
			ifne	AGNUS
				move.l	SRCPTR(a1,d1.w),BLTPTB(a0)
				addq.b	#4,d1
				move.b	d1,SRCINDEX(a1)
			endc
			move.w	MINTERM(a1),d1
		else
			btst	d0,PPICK+1(a1)
			bne		doother
			btst	d0,PONOFF+1(a1)
			if <>
				move.w	#FILLSHADOW,d1
			else
				move.w	#CLEARSHADOW,d1
			endif
		endif
		or.w	PBCN0(a1),d1
		move.w	d1,BLTCON0(a0)
		move.w	BLITSIZE(a1),BLTSIZE(a0)
	endif
	addq.b	#1,d0
	move.b	d0,BLISSINDEX(a1)
	sub.b	#1,BLITCNT(a1)
*	condition codes set up for blitter routine based on the above instruction
	rts

	xdef _BlsDn
	xref	_blissDone
_BlsDn:
	move.l	a1,-(sp)	* stack the arg
	jsr	_blissDone
	addq.l	#4,sp
	rts

@


37.0
log
@initial switchover from V36
@
text
@d5 1
a5 1
*	$Id: asgel3.i,v 33.2 90/07/27 16:35:50 bart Exp Locker: spence $
d7 1
a7 1
*	$Locker: spence $
d10 3
@


33.2
log
@id
@
text
@d5 1
a5 1
*	$Id: $
d7 1
a7 1
*	$Locker: bart $
d10 3
@


33.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/gels/RCS/asgel3.i,v 33.0 86/05/17 15:23:38 bart Exp Locker: bart $
d10 3
@


33.0
log
@added to rcs for updating
@
text
@d5 1
a5 1
*	$Header: $
d7 1
a7 1
*	$Locker: $
d9 4
a12 1
*	$Log: $
@
