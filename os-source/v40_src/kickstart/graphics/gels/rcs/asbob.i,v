head     39.0;
branch   ;
access   ;
symbols  rel39_24:39.0 rel39_18:39.0 rel39_97:39.0 rel39_90:39.0 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.0 V37_29:37.0 V37_28:37.0 V37_25:37.0 V37_22:37.0 V37_21:37.0 V37_20:37.0 V37_19:37.0 V37_17:37.0 V37_15:37.0 V37_14:37.0 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:33.3 V36_208:33.3 V36_207:33.3 V36_205:33.3 V36_203:33.3 V36_202:33.3 V36_201:33.3 V36_200:33.3 V36_199:33.3 V36_198:33.3 V36_196:33.3 V36_195:33.3 V36_194:33.3 V36_193:33.3 V36_192:33.3 V36_191:33.3 V36_190:33.3 V36_189:33.3 V36_188:33.3 V36_187:33.3 V36_186:33.3 V36_185:33.3 V36_184:33.3 V36_183:33.3 V36_182:33.3 V36_181:33.3;
locks    ; strict;
comment  @*   @;


39.0
date     91.08.21.17.33.11;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.32.41;  author spence;  state Exp;
branches ;
next     33.3;

33.3
date     90.07.27.16.35.32;  author bart;  state Exp;
branches ;
next     33.2;

33.2
date     90.03.28.09.27.34;  author bart;  state Exp;
branches ;
next     33.1;

33.1
date     88.11.16.09.16.29;  author bart;  state Exp;
branches ;
next     33.0;

33.0
date     86.05.17.15.23.27;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@Bumped
@
text
@*******************************************************************************
*
*	Source Control
*	--------------
*	$Id: asbob.i,v 37.0 91/01/07 15:32:41 spence Exp Locker: chrisg $
*
*	$Locker: chrisg $
*
*	$Log:	asbob.i,v $
*   Revision 37.0  91/01/07  15:32:41  spence
*   initial switchover from V36
*   
*   Revision 33.3  90/07/27  16:35:32  bart
*   id
*   
*   Revision 33.2  90/03/28  09:27:34  bart
*   *** empty log message ***
*   
*   Revision 33.1  88/11/16  09:16:29  bart
*   *** empty log message ***
*   
*   Revision 33.0  86/05/17  15:23:27  bart
*   added to rcs for updating
*   
*
*******************************************************************************


* ***************************************************************************
*																			*
* GELS HEADER FILE															*
*	ASSEMBLY-LANGUAGE DEFINITIONS											*
*																			*
* AMIGA CORPORATION  COPYRIGHT 1984  CONFIDENTIAL PROPRIETARY INFORMATION	*
*																			*
* ***************************************************************************

*
* these are the define	s for struct blissObj
*

NEXTBLIT	equ		0
BLITROUTINE	equ		NEXTBLIT+4
BLITSTAT	equ		BLITROUTINE+4
BLITCNT		equ		BLITSTAT+1
BLITSIZE	equ		BLITCNT+1
BEAMSYNC	equ		BLITSIZE+2
CLEANUP		equ		BEAMSYNC+2
* thats all for the system-required memory locations
PPICK		equ		CLEANUP+4
PONOFF		equ		PPICK+2
BLISSINDEX	equ		PONOFF+2
SRCINDEX	equ		BLISSINDEX+1
FWM		equ		SRCINDEX+1
LWM		equ		FWM+2
PBCN0		equ		LWM+2
MINTERM		equ		PBCN0+2
BCN1		equ		MINTERM+2
BMDSRC		equ		BCN1+2
BMDDST		equ		BMDSRC+2
BLITTYPE	equ		BMDDST+2
WRITEMASK	equ		BLITTYPE+2
DUMMY		equ		WRITEMASK+1
ASRC		equ		DUMMY+1
SRCPTR		equ		ASRC+4
DESTPTR		equ		SRCPTR+32
SHADOW		equ		DESTPTR+32
SHADOWSIZE	equ		SHADOW+4
WHOSENTME	equ		SHADOWSIZE+4	* bart - 04.03.86 was +2
NEXT		equ		WHOSENTME+4
BLITSIZV	equ		NEXT+4	
BLITSIZH	equ		BLITSIZV+2


*
* flag bits for bobFlags
*
SAVEBOB	equ	$01
BWAITING	equ	$02
BDRAWN	equ		$04
BOBISCOMP	equ	$08
BOBSAWAY	equ	$10

*
* flag bits for sprFlags
*
IS_SPRITE	equ	$0001	/* set if sprite, clear if bob */
PRSRV_RAS	equ	$0002	/* set if raster is to be saved */
OVERLAY	equ	$0004	/* set to mask image of bob onto background */
MUSTDRAW	equ	$0008	/* set if virtSprite must be drawn */
BOB_PRSRVD	equ	$0100	/* copied by DrawSList, cleared by ClrBob */
BOB_UPDATE	equ	$0200	/* set by DrawBob */
GEL_GONE	equ	$0400	/* set if gel is completely clipped (offscreen) */
OVERFLOW	equ	$0800	/* set on virtual sprite overflow */

*
* bob-blit types
*
B2NORM equ 0
B2SWAP equ 1
B2BOBBER equ 2

*
* some minterms for various types of blit operations
*
FILLSHADOW	equ	ABC+ABNC+ANBC+ANBNC+NABC+NANBC+SRCA+SRCC+DEST
CLEARSHADOW	equ	NABC+NANBC+SRCA+SRCC+DEST
BLOCKCUT	equ	ABC+ABNC+NABC+NANBC+SRCB+SRCC+DEST
SHADOWCUT	equ	ABC+ABNC+NABC+NANBC+SRCA+SRCB+SRCC+DEST

* will need this when down-coding blisser
*  rastoff(r) ((umuls(r->rY , r->rRealWW)) + (r->rX >> 4))
@


37.0
log
@initial switchover from V36
@
text
@d5 1
a5 1
*	$Id: asbob.i,v 33.3 90/07/27 16:35:32 bart Exp Locker: spence $
d7 1
a7 1
*	$Locker: spence $
d10 3
@


33.3
log
@id
@
text
@d5 1
a5 1
*	$Id: $
d7 1
a7 1
*	$Locker: bart $
d10 3
@


33.2
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/gels/RCS/asbob.i,v 33.1 88/11/16 09:16:29 bart Exp Locker: bart $
d10 3
@


33.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: asbob.i,v 33.0 86/05/17 15:23:27 bart Exp $
d10 3
@


33.0
log
@added to rcs for updating
@
text
@d5 1
a5 1
*	$Header: $
d7 1
a7 1
*	$Locker: $
d9 4
a12 1
*	$Log: $
d59 2
@
