head     39.1;
branch   ;
access   ;
symbols  rel39_24:39.1 rel39_18:39.1 rel39_97:39.1 rel39_90:39.1 rel39_89:39.1 rel39_82:39.1 rel39_76:39.1 rel39_71:39.1 rel39_65:39.1 rel39_64:39.1 rel39_61:39.1 rel39_60:39.1 rel39_55:39.1 rel39_47:39.1 rel39_39:39.1 rel39_38:39.1 rel39_37:39.1 rel39_35:39.1 rel39_34:39.1 V37_30:37.1 V37_29:37.1 V37_28:37.1 V37_25:37.1 V37_22:37.1 V37_21:37.1 V37_20:37.1 V37_19:37.1 V37_17:37.1 V37_15:37.1 V37_14:37.1 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:33.2 V36_208:33.2 V36_207:33.2 V36_205:33.2 V36_203:33.2 V36_202:33.2 V36_201:33.2 V36_200:33.2 V36_199:33.2 V36_198:33.2 V36_196:33.2 V36_195:33.2 V36_194:33.2 V36_193:33.2 V36_192:33.2 V36_191:33.2 V36_190:33.2 V36_189:33.2 V36_188:33.2 V36_187:33.2 V36_186:33.2 V36_185:33.2 V36_184:33.2 V36_183:33.2 V36_182:33.2 V36_181:33.2;
locks    ; strict;
comment  @*   @;


39.1
date     92.01.21.14.51.19;  author chrisg;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.33.52;  author chrisg;  state Exp;
branches ;
next     37.3;

37.3
date     91.05.14.16.10.20;  author chrisg;  state Exp;
branches ;
next     37.2;

37.2
date     91.05.13.14.36.02;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.02.12.15.48.25;  author spence;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.22.07;  author spence;  state Exp;
branches ;
next     33.2;

33.2
date     90.07.27.16.37.06;  author bart;  state Exp;
branches ;
next     33.1;

33.1
date     90.03.28.09.27.17;  author bart;  state Exp;
branches ;
next     33.0;

33.0
date     86.05.17.15.22.41;  author bart;  state Exp;
branches ;
next     ;


desc
@@


39.1
log
@ changed for utility protos
@
text
@/******************************************************************************
*
*	Source Control
*	--------------
*	$Id: freegbuffers.c,v 39.0 91/08/21 17:33:52 chrisg Exp Locker: chrisg $
*
*	$Locker: chrisg $
*
*	$Log:	freegbuffers.c,v $
*   Revision 39.0  91/08/21  17:33:52  chrisg
*   Bumped
*   
*   Revision 37.3  91/05/14  16:10:20  chrisg
*    added #include for exec protos
*   
*   Revision 37.2  91/05/13  14:36:02  chrisg
*   removed compiler warnings for lattice
*   made use prototypes
*   got rid of interface code.. made routines take
*   arguments in registers.
*   
*   Revision 37.1  91/02/12  15:48:25  spence
*   autodocs.
*   
*   
*   Revision 37.0  91/01/07  15:22:07  spence
*   initial switchover from V36
*   
*   Revision 33.2  90/07/27  16:37:06  bart
*   id
*   
*   Revision 33.1  90/03/28  09:27:17  bart
*   *** empty log message ***
*   
*   Revision 33.0  86/05/17  15:22:41  bart
*   added to rcs for updating
*   
*
******************************************************************************/


#include <exec/types.h>
#include <graphics/rastport.h>
#include <graphics/gels.h>
#include <graphics/gfxbase.h>
#include "/macros.h"
#include "gels.protos"

/****** graphics.library/FreeGBuffers ******************************************
*
*   NAME
*	FreeGBuffers -- Deallocate memory obtained by GetGBufers.
*
*   SYNOPSIS
*	FreeGBuffers(anOb, rp, db)
*	             A0    A1  D0
*
*	void FreeGBuffers(struct AnimOb *, struct RastPort *, BOOL);
*
*   FUNCTION
*	For each sequence of each component of the AnimOb,
*	deallocate memory for:
*	    SaveBuffer
*	    BorderLine
*	    CollMask and ImageShadow (point to same buffer)
*	    if db is set (user had used double-buffering) deallocate:
*	        DBufPacket
*	        BufBuffer
*
*   INPUTS
*	anOb = pointer to the AnimOb structure
*	rp   = pointer to the current RastPort
*	db   = double-buffer indicator (set TRUE for double-buffering)
*
*   RESULT
*
*   BUGS
*
*   SEE ALSO
*	GetGBuffers()  graphics/gels.h  graphics/rastport.h
*
*****************************************************************************/
void __asm FreeGBuffers(register __a0 struct AnimOb *anOb,
						register __a1 struct RastPort *RPort,
						register __d0 BOOL dbuf)
{
    struct AnimComp *acptr;
    struct AnimComp *seqptr;
    struct Bob *bptr;
    struct VSprite *sptr;
    WORD sw;
    WORD ibufsize, pbufsize;
 
    for(acptr = anOb->HeadComp; acptr; acptr = acptr->NextComp)
    {
        seqptr = acptr;

        do
	{
            bptr = seqptr->AnimBob;
            sptr = bptr->BobVSprite;

            sw = sptr->Width << 1; /* byte count of row */

            ibufsize = umuls(sptr->Height, sw);

            pbufsize = umuls(RPort->BitMap->Depth,ibufsize);
 
            FreeMem(bptr->SaveBuffer,pbufsize);
            if (dbuf)
	    {      
                FreeMem(bptr->DBuffer->BufBuffer,pbufsize);
                FreeMem(bptr->DBuffer,sizeof(struct DBufPacket));
	    };
            FreeMem(sptr->BorderLine,sw);
 
            FreeMem(sptr->CollMask,ibufsize);
            seqptr = seqptr->NextSeq;
	}
        while ((seqptr != acptr) && (seqptr));
    }
}
 
@


39.0
log
@Bumped
@
text
@d5 1
a5 1
*	$Id: freegbuffers.c,v 37.3 91/05/14 16:10:20 chrisg Exp Locker: chrisg $
d10 3
d45 1
a46 1
#include <graphics/gfxbase.h>
@


37.3
log
@ added #include for exec protos
@
text
@d5 1
a5 1
*	$Id: freegbuffers.c,v 37.2 91/05/13 14:36:02 chrisg Exp Locker: chrisg $
d10 3
@


37.2
log
@removed compiler warnings for lattice
made use prototypes
got rid of interface code.. made routines take
arguments in registers.
@
text
@d5 1
a5 1
*	$Id: freegbuffers.c,v 37.1 91/02/12 15:48:25 spence Exp Locker: chrisg $
d10 6
d39 2
@


37.1
log
@autodocs.

@
text
@d5 1
a5 1
*	$Id: freegbuffers.c,v 37.0 91/01/07 15:22:07 spence Exp Locker: spence $
d7 1
a7 1
*	$Locker: spence $
d10 4
d33 1
d69 3
a71 4
freegbuffers(anOb, RPort, dbuf)
struct AnimOb *anOb;
struct RastPort *RPort;
BOOL dbuf;
d77 1
a77 1
    WORD i, sw;
@


37.0
log
@initial switchover from V36
@
text
@d5 1
a5 1
*	$Id: freegbuffers.c,v 33.2 90/07/27 16:37:06 bart Exp Locker: spence $
d10 3
d32 11
a42 13
*    NAME
*       FreeGBuffers -- Deallocate memory obtained by GetGBufers.
*    
*    SYNOPSIS
*       FreeGBuffers(anOb, rp, db)
*                    a0    a1  d0  
*   
*	struct AnimOb *anOb;
*	struct RastPort *rp;
*	BOOL db;
* 
*    FUNCTION
*       For each sequence of each component of the AnimOb, 
d44 19
a62 16
*           SaveBuffer
*           BorderLine
*           CollMask and ImageShadow (point to same buffer)
*           if db is set (user had used double-buffering) deallocate:
*               DBufPacket
*               BufBuffer
*    
*    INPUTS
*       anOb = pointer to the AnimOb structure
*       rp = pointer to the current RastPort
*       db = double-buffer indicator (set TRUE for double-buffering)
*    
*    BUGS
*    
*    SEE ALSO
*       GetGBuffers  graphics/gels.h  graphics/rastport.h
@


33.2
log
@id
@
text
@d5 1
a5 1
*	$Id: $
d7 1
a7 1
*	$Locker: bart $
d10 3
@


33.1
log
@*** empty log message ***
@
text
@d5 1
a5 1
*	$Header: /usr/commodore/amiga/V36/src/kickstart/graphics/gels/RCS/freegbuffers.c,v 33.0 86/05/17 15:22:41 bart Exp Locker: bart $
d10 3
@


33.0
log
@added to rcs for updating
@
text
@d5 1
a5 1
*	$Header: $
d7 1
a7 1
*	$Locker: $
d9 4
a12 1
*	$Log: $
@
