head     39.1;
branch   ;
access   ;
symbols  rel39_24:39.1 rel39_18:39.1 rel39_97:39.1 rel39_90:39.1 rel39_89:39.1 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_52:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.2 V37_29:37.2 V37_28:37.2 V37_27:37.2 V37_25:37.2 V37_24:37.2 V37_23:37.2 V37_22:37.2 V37_21:37.2 V37_20:37.2 V37_19:37.2 V37_18:37.2 V37_17:37.2 V37_15:37.2 V37_14:37.2 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:1.3 V36_208:1.3 V36_207:1.3 V36_205:1.3 V36_203:1.3 V36_202:1.3 V36_201:1.3 V36_200:1.3 V36_199:1.3 V36_198:1.3 V36_196:1.3 V36_195:1.3 V36_194:1.3 V36_193:1.3 V36_192:1.3 V36_191:1.3 V36_190:1.3 V36_189:1.3 V36_188:1.3 V36_187:1.3 V36_186:1.3 V36_185:1.3 V36_184:1.3 V36_183:1.3 V36_182:1.3 V36_181:1.3 V36_180:1.3;
locks    ; strict;
comment  @@;


39.1
date     92.09.03.15.34.38;  author spence;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.23.57;  author chrisg;  state Exp;
branches ;
next     37.3;

37.3
date     91.05.08.11.58.14;  author chrisg;  state Exp;
branches ;
next     37.2;

37.2
date     91.02.12.17.04.53;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.02.12.12.17.56;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.24.03;  author spence;  state Exp;
branches ;
next     1.3;

1.3
date     90.07.27.16.36.43;  author bart;  state Exp;
branches ;
next     1.2;

1.2
date     90.03.27.17.27.24;  author bart;  state Exp;
branches ;
next     1.1;

1.1
date     88.05.01.15.36.05;  author dale;  state Exp;
branches ;
next     ;


desc
@@


39.1
log
@Autodoc spelling corrections
@
text
@*******************************************************************************
*
*	$Id: AttemptLockLayerRom.asm,v 39.0 91/08/21 17:23:57 chrisg Exp Locker: spence $
*
*******************************************************************************

	section	graphics
    xdef    _AttemptLockLayerRom
******* graphics.library/AttemptLockLayerRom *******************************
*                           *
*   NAME
*	AttemptLockLayerRom -- Attempt to Lock Layer structure
*					 by ROM(gfx lib) code
*
*   SYNOPSIS
*	gotit = AttemptLockLayerRom( layer )
*	 d0			      a5
*
*	BOOL AttempLockLayerRom( struct Layer * );
*
*   FUNCTION
*	Query the current state of the lock on this Layer. If it is
*	already locked then return FALSE, could not lock. If the
*	Layer was not locked then lock it and return TRUE.
*	This call does not destroy any registers.
*	This call nests so that callers in this chain will not lock
*	themselves out.
*
*   INPUTS
*	layer - pointer to Layer structure
*
*   RESULT
*	gotit - TRUE or FALSE depending on whether the Layer was
*		successfully locked by the caller.
*
*   SEE ALSO
*	LockLayerRom() UnlockLayerRom()
*
*********************************************************************
	include 'exec/types.i'
	include 'graphics/clip.i'

EXECSEMAPHORES	equ 1

_AttemptLockLayerRom:
	move.l	a0,-(sp)
	lea		lr_Lock(a5),a0

	ifd	EXECSEMAPHORES
		xref	_LVOAttemptSemaphore
		move.l	a6,-(sp)
		move.l	4,a6
		jsr		_LVOAttemptSemaphore(a6)
		move.l	(sp)+,a6
	endc

	move.l	(sp)+,a0
	rts


	end
@


39.0
log
@Bumped
@
text
@d3 1
a3 1
*	$Id: AttemptLockLayerRom.asm,v 37.3 91/05/08 11:58:14 chrisg Exp Locker: chrisg $
d13 1
a13 1
*					 by rom(gfx lib) code
@


37.3
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Id: attemptlocklayerrom.asm,v 37.2 91/02/12 17:04:53 chrisg Exp Locker: chrisg $
@


37.2
log
@autodoc - spacing
@
text
@d3 1
a3 1
*	$Id: AttemptLockLayerRom.asm,v 37.1 91/02/12 12:17:56 chrisg Exp Locker: chrisg $
@


37.1
log
@Cleaned up autodoc
@
text
@d3 1
a3 1
*	$Id: AttemptLockLayerRom.asm,v 37.0 91/01/07 15:24:03 spence Exp Locker: chrisg $
d19 1
a19 1
*	BOOL AttempLockLayerRom(struct Layer *);
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: AttemptLockLayerRom.asm,v 1.3 90/07/27 16:36:43 bart Exp Locker: spence $
d19 1
a19 2
*	BOOLEAN gotit;
*	struct Layer *layer;
d32 3
a34 3
*    RESULT
*	returns TRUE or FALSE depending on whether the Layer is now
*	locked by the caller.
d36 2
a37 2
*SEE ALSO
*	LockLayerRom UnlockLayerRom
@


1.3
log
@id
@
text
@d3 1
a3 1
*	$Id: $
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Header: AttemptLockLayerRom.asm,v 1.1 88/05/01 15:36:05 dale Exp $
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
*	$Header: AttemptLockLayerRom.asm,v 33.0 86/05/17 15:04:20 bart Exp $
@
