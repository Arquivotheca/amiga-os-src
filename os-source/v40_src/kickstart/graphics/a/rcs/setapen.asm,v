head     38.4;
branch   ;
access   ;
symbols  rel39_24:38.2 rel39_18:38.2 rel39_97:38.2 rel39_90:38.2 rel39_89:38.2 rel39_82:38.1 rel39_76:38.1 rel39_71:38.1 rel39_65:38.1 rel39_64:38.1 rel39_61:38.1 rel39_60:38.1 rel39_55:38.1 rel39_52:38.1 rel39_47:38.1 rel39_39:38.1 rel39_38:38.1 rel39_37:38.1 rel39_35:38.1 rel39_34:38.1 V37_30:37.1 V37_29:37.1 V37_28:37.1 V37_27:37.1 V37_25:37.1 V37_24:37.1 V37_23:37.1 V37_22:37.1 V37_21:37.1 V37_20:37.1 V37_19:37.1 V37_18:37.1 V37_17:37.1 V37_15:37.1 V37_14:37.1 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:1.3 V36_208:1.3 V36_207:1.3 V36_205:1.3 V36_203:1.3 V36_202:1.3 V36_201:1.3 V36_200:1.3 V36_199:1.3 V36_198:1.3 V36_196:1.3 V36_195:1.3 V36_194:1.3 V36_193:1.3 V36_192:1.3 V36_191:1.3 V36_190:1.3 V36_189:1.3 V36_188:1.3 V36_187:1.3 V36_186:1.3 V36_185:1.3 V36_184:1.3 V36_183:1.3 V36_182:1.3 V36_181:1.3 V36_180:1.3;
locks    ; strict;
comment  @@;


38.4
date     93.06.16.08.05.29;  author chrisg;  state Exp;
branches ;
next     38.3;

38.3
date     93.06.16.07.54.34;  author chrisg;  state Exp;
branches ;
next     38.2;

38.2
date     92.09.03.15.36.57;  author spence;  state Exp;
branches ;
next     38.1;

38.1
date     91.08.07.13.41.49;  author chrisg;  state Exp;
branches ;
next     38.0;

38.0
date     91.08.02.15.03.14;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.02.12.15.42.30;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.26.13;  author spence;  state Exp;
branches ;
next     1.3;

1.3
date     90.08.24.11.28.30;  author bart;  state Exp;
branches ;
next     1.2;

1.2
date     90.03.22.16.54.37;  author bart;  state Exp;
branches ;
next     1.1;

1.1
date     88.05.01.15.38.00;  author dale;  state Exp;
branches ;
next     ;


desc
@@


38.4
log
@autodoc.
@
text
@*******************************************************************************
*
*	$Id: setapen.asm,v 38.3 93/06/16 07:54:34 chrisg Exp Locker: chrisg $
*
*******************************************************************************

	include 'exec/types.i'                  * Data type definitions
	include 'graphics/rastport.i'           * RastPort/AreaInfo structures
	include 'submacs.i'                     * Subroutine/function macros

	section	graphics
	xdef    _SetAPen                * Define public entry points
	xdef    _SetBPen
	xdef    _SetDrMd
	xdef    _VBeamPos

	xref    GenMinTerms                     * Define external symbols used
	xref    _vposr



	PAGE

******* graphics.library/SetAPen ***************************************
* 
*   NAME   
*	SetAPen -- Set the primary pen for a RastPort.
*
*   SYNOPSIS
*	SetAPen( rp, pen )
*		 a1  d0
*
*	void SetAPen( struct RastPort *, UBYTE );
*
*   FUNCTION
*	Set the primary drawing pen for lines, fills, and text.
*
*   INPUTS
*	rp - pointer to RastPort structure.
*	pen - (0-255)
*
*   RESULT
*	Changes the minterms in the RastPort to reflect new primary pen.
*	Sets line drawer to restart pattern.
*
*   BUGS
*
*   SEE ALSO
*	SetBPen() graphics/rastport.h
*
**************************************************************************


SetAPen:
_SetAPen:
	move.b  d0,rp_FgPen(a1)             * w->FgPen = p;
	bra.s   Com_Code_1                  * Execute common code



******* graphics.library/SetBPen ***************************************
* 
*   NAME   
*	SetBPen -- Set secondary pen for a RastPort
*
*   SYNOPSIS
*	SetBPen( rp, pen )
*		 a1  d0
*
*	void SetBPen( struct RastPort *, UBYTE );
*
*   FUNCTION
*	Set the secondary drawing pen for lines, fills, and text.
*
*   INPUTS
*	rp - pointer to RastPort structure.
*	pen - (0-255)
*
*   RESULT
*	Changes the minterms in the RastPort to reflect new secondary pen.
*	Sets line drawer to restart pattern.
*
*   BUGS
*
*    SEE ALSO
*	SetAPen() graphics/rastport.h
*
**************************************************************************

SetBPen:
_SetBPen:
	move.b  d0,rp_BgPen(a1)             * w->BgPen = p;
	bra.s   Com_Code_1                  * Execute common code


******* graphics.library/SetDrMd ***************************************
* 
*   NAME   
* 	SetDrMd -- Set drawing mode for a RastPort
*
*   SYNOPSIS
*	SetDrMd( rp, mode )
*		 a1  d0:8
*
*	void SetDrMd( struct RastPort *, UBYTE );
*
*   FUNCTION
*	Set the drawing mode for lines, fills and text.
*	Get the bit definitions from rastport.h
*
*   INPUTS
*	rp - pointer to RastPort structure.
*	mode - 0-255, some combinations may not make much sense.
*
*   RESULT
*	The mode set is dependent on the bits selected.
*	Changes minterms to reflect new drawing mode.
*	Sets line drawer to restart pattern.
*
*   BUGS
*
*   SEE ALSO
*	SetAPen() SetBPen() graphics/rastport.h
*
**************************************************************************


SetDrMd:
_SetDrMd:
	move.b  d0,rp_DrawMode(a1)          * w->DrawMode = m;

Com_Code_1:
	move.b  #15,rp_linpatcnt(a1)        * w->linpatcnt = 15;
	or      #RPF_FRST_DOT,rp_Flags(a1)  * w->Flags |= FRST_DOT;

	GENMINTERMS                         * genminterms(w);

	rts                                 * Exit to caller

	xdef    _vbeampos

	xdef	_SetABPenDrMd

_SetABPenDrMd:
******* graphics.library/SetABPenDrMd ***************************************
* 
*   NAME   
* 	SetABPenDrMd -- Set pen colors and draw mode for a RastPort (V39).
*
*   SYNOPSIS
*	SetABPenDrMd( rp, apen, bpen, mode )
* 		      a1  d0     d1    d2
*
*	void SetABPenDrMd( struct RastPort *, ULONG, ULONG, ULONG );
*
*   FUNCTION
*	Set the pen values and drawing mode for lines, fills and text.
*	Get the bit definitions from rastport.h
*
*   INPUTS
*	rp - pointer to RastPort structure.
*	apen - primary pen value
*	bpen - secondary pen value
*	mode - 0-255, some combinations may not make much sense.
*
*   RESULT
*	The mode set is dependent on the bits selected.
*	Changes minterms to reflect new drawing mode and colors.
*	Sets line drawer to restart pattern.
*
*   NOTES
*	This call is essentially the same as a sequence of
*	SetAPen()/SetBPen()/SetDrMD() calls, except that it is
*	significantly faster. The minterms will only be generated
*	once, or not at all if nothing changed (warning to illegal
*	RastPort pokers!).
*
*   BUGS
*
*   SEE ALSO
*	SetAPen() SetBPen() SetDrMd() graphics/rastport.h
*
**************************************************************************
	cmp.b	rp_DrawMode(a1),d2
	bne.s	something_changed
	cmp.b	rp_BgPen(a1),d1
	bne.s	something_changed_1
	cmp.b	rp_FgPen(a1),d0
	bne.s	something_changed_2
	rts
something_changed:
	move.b	d2,rp_DrawMode(a1)
something_changed_1:
	move.b	d1,rp_BgPen(a1)
something_changed_2:
	move.b	d0,rp_FgPen(a1)
	bra.s	Com_Code_1

	
******* graphics.library/VBeamPos **************************************
* 
*   NAME   
*	VBeamPos -- Get vertical beam position at this instant.
*
*   SYNOPSIS
*	pos = VBeamPos()
*	 d0
*
*	LONG VBeamPos( void );
*
*   FUNCTION
*	Get the vertical beam position from the hardware.
*
*   INPUTS
*	none
*
*   RESULT
*	interrogates hardware for beam position and returns value.
*	valid results in are the range of 0-511.
*	Because of multitasking, the actual value returned may have
*	no use. If you are the highest priority task then the value
*	returned should be close, within 1 line.
*
*   BUGS
*
*   SEE ALSO
*
*
**************************************************************************
_vbeampos:
_VBeamPos:
	move.l  _vposr,d0                   * d0.l = (*(long *) (&vposr))
	asr.l   #8,d0                       * d0.l = (*(long *)(&vposr))>>8
	and.l   #$7FF,d0                    * return(t &= 0x1ff); 

	rts                                 * Exit to caller


	end                                 * End of _InitRast
@


38.3
log
@autodoc.
@
text
@d3 1
a3 1
*	$Id: setapen.asm,v 38.2 92/09/03 15:36:57 spence Exp Locker: chrisg $
d152 1
a152 1
*		 		  a1  d0     d1    d2
d171 1
a171 1
*	NOTES
@


38.2
log
@Autodoc spelling corrections
@
text
@d3 1
a3 1
*	$Id: setapen.asm,v 38.1 91/08/07 13:41:49 chrisg Exp Locker: spence $
d148 1
a148 1
* 	SetABPenDrMd -- Set pen colors and draw mode for a RastPort.
@


38.1
log
@fixed comment and added xdef
@
text
@d3 1
a3 1
*	$Id: setapen.asm,v 38.0 91/08/02 15:03:14 chrisg Exp Locker: chrisg $
d116 1
a116 1
*	The mode set is dependant on the bits selected.
@


38.0
log
@added SetABPenDrMd call and bumped rev to 38.0
@
text
@d3 1
a3 1
*	$Id: SetAPen.asm,v 37.1 91/02/12 15:42:30 chrisg Exp Locker: chrisg $
d142 4
a145 1
******* graphics.library/SetDrMd ***************************************
d167 1
a167 1
*	The mode set is dependant on the bits selected.
@


37.1
log
@ edited autodoc.
@
text
@d3 1
a3 1
*	$Id: SetAPen.asm,v 37.0 91/01/07 15:26:13 spence Exp Locker: chrisg $
d142 55
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: SetAPen.asm,v 1.3 90/08/24 11:28:30 bart Exp Locker: spence $
d27 1
a27 1
*	SetAPen -- Set primary pen
d33 1
a33 2
*	struct RastPort *rp;
*	UBYTE pen;
d44 1
a44 1
*	Set line drawer to restart pattern.
d48 2
a49 2
*SEE ALSO
*	SetBPen graphics/rastport.h
d64 1
a64 1
*	SetBPen -- Set secondary pen
d70 1
a70 2
*	struct RastPort *rp;
*	UBYTE pen;
d81 1
a81 1
*	Set line drawer to restart pattern.
d85 2
a86 2
*SEE ALSO
*	SetAPen graphics/rastport.h
d99 1
a99 1
* 	SetDrMd -- Set drawing mode
d105 1
a105 2
*	struct RastPort *rp;
*	UBYTE mode;
d117 2
a118 2
*	Change minterms to reflect new drawing mode.
*	Set line drawer to restart pattern.
d123 1
a123 1
*	SetAPen graphics/rastport.h
d151 1
a151 1
*	LONG pos;
d161 1
a161 1
*	valid results in the range of 0-511
@


1.3
log
@id
@
text
@d3 1
a3 1
*	$Id: $
@


1.2
log
@vposr masking for ecs
@
text
@d3 1
a3 1
*	$Header: SetAPen.asm,v 1.1 88/05/01 15:38:00 dale Exp $
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
*	$Header: SetAPen.asm,v 33.0 86/05/17 15:10:25 bart Exp $
d179 1
a179 1
	and.l   #$1FF,d0                    * return(t &= 0x1ff); 
@
