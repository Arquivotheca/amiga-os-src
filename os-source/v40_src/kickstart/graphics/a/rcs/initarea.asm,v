head     39.0;
branch   ;
access   ;
symbols  rel39_24:39.0 rel39_18:39.0 rel39_97:39.0 rel39_90:39.0 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_52:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.1 V37_29:37.1 V37_28:37.1 V37_27:37.1 V37_25:37.1 V37_24:37.1 V37_23:37.1 V37_22:37.1 V37_21:37.1 V37_20:37.1 V37_19:37.1 V37_18:37.1 V37_17:37.1 V37_15:37.1 V37_14:37.1 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:1.3 V36_208:1.3 V36_207:1.3 V36_205:1.3 V36_203:1.3 V36_202:1.3 V36_201:1.3 V36_200:1.3 V36_199:1.3 V36_198:1.3 V36_196:1.3 V36_195:1.3 V36_194:1.3 V36_193:1.3 V36_192:1.3 V36_191:1.3 V36_190:1.3 V36_189:1.3 V36_188:1.3 V36_187:1.3 V36_186:1.3 V36_185:1.3 V36_184:1.3 V36_183:1.3 V36_182:1.3 V36_181:1.3 V36_180:1.3;
locks    ; strict;
comment  @@;


39.0
date     91.08.21.17.25.55;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.02.12.14.41.26;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.25.06;  author spence;  state Exp;
branches ;
next     1.3;

1.3
date     90.08.24.11.27.21;  author bart;  state Exp;
branches ;
next     1.2;

1.2
date     90.03.27.16.20.02;  author bart;  state Exp;
branches ;
next     1.1;

1.1
date     88.05.01.15.36.25;  author dale;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@Bumped
@
text
@*******************************************************************************
*
*	$Id: InitArea.asm,v 37.1 91/02/12 14:41:26 chrisg Exp Locker: chrisg $
*
*******************************************************************************

	include 'exec/types.i'      * Required data type definitions
	include 'graphics/rastport.i'       * RastPort/AreaInfo structures

	section	graphics
	xdef    InitArea,_InitArea          * Define entry as public symbol

******* graphics.library/InitArea ********************************************
* 
*   NAME   
* 
*	InitArea -- Initialize vector collection matrix
* 
*   SYNOPSIS
* 
*   	InitArea( areainfo, buffer, maxvectors )
*		    a0          a1      d0
*
*	void InitArea(struct AreaInfo *, void *, SHORT);
*	
*   FUNCTION
*	This function provides initialization for the vector collection matrix
*	such that it has a size of (max vectors ).  The size of the region
*	pointed to by buffer (short pointer) should be five (5) times as large
*	as maxvectors. This size is in bytes.  Areafills done by using AreaMove,
*	AreaDraw, and AreaEnd must have enough space allocated in this table to
*	store all the points of the largest fill. AreaEllipse takes up two
*	vectors for every call. If AreaMove/Draw/Ellipse detect too many
*	vectors going into the buffer they will return -1.
*
*   INPUTS
*	areainfo - pointer to AreaInfo structure
*	buffer - pointer to chunk of memory to collect vertices
*	maxvectors - max number of vectors this buffer can hold
*
*   RESULT
*	Pointers are set up to begin storage of vectors done by
*	AreaMove, AreaDraw, and AreaEllipse.
* 
*   BUGS
*
*   SEE ALSO
*	AreaEnd() AreaMove() AreaDraw() AreaEllipse() graphics/rastport.h
* 
******************************************************************************
*                                       INITIALIZE VECTOR COLLECTION MATRIX
InitArea:
_InitArea:
	    move.l  a1,ai_VctrPtr(a0)           * ai->VctrPtr = v;
	    move.l  a1,ai_VctrTbl(a0)           * ai->VctrTbl = v;
	    move    d0,ai_MaxCount(a0)          * ai->MaxCount = nv;
	    asl.l   #2,d0                       * nv = nv + nv (v is short)
	    adda    d0,a1                       * A1 = &v[nv+nv]
	    move.l  a1,ai_FlagPtr(a0)           * ai->FlagPtr = &v[nv+nv];
	    move.l  a1,ai_FlagTbl(a0)           * ai->FlagTbl = &v[nv+nv];
	    clr     ai_Count(a0)                * ai->Count = 0;
	    rts                                 * Exit to caller

	    end                                 * End of _InitArea
@


37.1
log
@edited autodoc
@
text
@d3 1
a3 1
*	$Id: InitArea.asm,v 37.0 91/01/07 15:25:06 spence Exp Locker: chrisg $
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: InitArea.asm,v 1.3 90/08/24 11:27:21 bart Exp Locker: spence $
d24 1
a24 3
*	struct AreaInfo *areainfo;
*	APTR buffer;
*	SHORT maxvectors;
d48 1
a48 1
*	AreaEnd AreaMove AreaDraw AreaEllipse graphics/rastport.h
@


1.3
log
@id
@
text
@d3 1
a3 1
*	$Id: $
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Header: InitArea.asm,v 1.1 88/05/01 15:36:25 dale Exp $
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
*	$Header: InitArea.asm,v 33.0 86/05/17 15:07:08 bart Exp $
@
