head     39.0;
branch   ;
access   ;
symbols  rel39_24:39.0 rel39_18:39.0 rel39_97:39.0 rel39_90:39.0 rel39_89:39.0 rel39_82:39.0 rel39_76:39.0 rel39_71:39.0 rel39_65:39.0 rel39_64:39.0 rel39_61:39.0 rel39_60:39.0 rel39_55:39.0 rel39_52:39.0 rel39_47:39.0 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.2 V37_29:37.2 V37_28:37.2 V37_27:37.2 V37_25:37.2 V37_24:37.2 V37_23:37.2 V37_22:37.2 V37_21:37.2 V37_20:37.2 V37_19:37.2 V37_18:37.2 V37_17:37.2 V37_15:37.2 V37_14:37.2 V37_13:37.1 V37_12:37.1 V37_11:37.1 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:1.4 V36_208:1.4 V36_207:1.4 V36_205:1.4 V36_203:1.4 V36_202:1.4 V36_201:1.4 V36_200:1.4 V36_199:1.4 V36_198:1.4 V36_196:1.4 V36_195:1.4 V36_194:1.4 V36_193:1.4 V36_192:1.4 V36_191:1.4 V36_190:1.4 V36_189:1.4 V36_188:1.4 V36_187:1.4 V36_186:1.4 V36_185:1.4 V36_184:1.4 V36_183:1.4 V36_182:1.4 V36_181:1.4 V36_180:1.4;
locks    ; strict;
comment  @@;


39.0
date     91.08.21.17.25.26;  author chrisg;  state Exp;
branches ;
next     37.3;

37.3
date     91.05.01.14.07.42;  author chrisg;  state Exp;
branches ;
next     37.2;

37.2
date     91.02.12.13.46.50;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.02.04.19.35.30;  author spence;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.24.50;  author spence;  state Exp;
branches ;
next     1.4;

1.4
date     90.07.27.16.38.58;  author bart;  state Exp;
branches ;
next     1.3;

1.3
date     90.03.27.16.29.41;  author bart;  state Exp;
branches ;
next     1.2;

1.2
date     89.05.03.15.32.47;  author bart;  state Exp;
branches ;
next     1.1;

1.1
date     88.05.01.15.36.20;  author dale;  state Exp;
branches ;
next     ;


desc
@@


39.0
log
@Bumped
@
text
@*******************************************************************************
*
*	$Id: FreeRaster.asm,v 37.3 91/05/01 14:07:42 chrisg Exp Locker: chrisg $
*
*******************************************************************************

	section	graphics
    xdef    _FreeRaster
******* graphics.library/FreeRaster ********************************************
*
*   NAME
*       FreeRaster -- Release an allocated area to the system free memory pool.
*
*
*   SYNOPSIS
*       FreeRaster( p, width, height)
*		   a0   d0:16  d1:16
*
*	void FreeRaster( PLANEPTR, USHORT, USHORT);
*
*   FUNCTION
*	Return the memory associated with this PLANEPTR of size
*	width and height to the MEMF_CHIP memory pool.
*
*   INPUTS
*       p  =  a pointer to a memory space  returned  as  a
*             result of a call to AllocRaster.
*
*	width - the width in bits of the bitplane.
*	height - number of rows in bitplane.
*
*   BUGS
*
*   NOTES
*       Width and height should be the same values with which you
*       called AllocRaster in the first place.
*
*   SEE ALSO
*	AllocRaster() graphics/gfx.h
*
******************************************************************************
	include '/macros.i'
	xref	rassize
_FreeRaster:
*               current routine calls a C subroutine to do the work
	bsr		rassize
	move.l	a0,a1
	CALLEXEC	FreeMem
    rts

	end
@


37.3
log
@killed ".." for cape
@
text
@d3 1
a3 1
*	$Id: FreeRaster.asm,v 37.2 91/02/12 13:46:50 chrisg Exp Locker: chrisg $
@


37.2
log
@edited autodoc
@
text
@d3 1
a3 1
*	$Id: FreeRaster.asm,v 37.1 91/02/04 19:35:30 spence Exp Locker: chrisg $
d42 1
a42 1
	include '../macros.i'
@


37.1
log
@AutoDocs
@
text
@d3 1
a3 1
*	$Id: FreeRaster.asm,v 37.0 91/01/07 15:24:50 spence Exp Locker: spence $
d11 1
a11 1
*NAME
d15 1
a15 1
*SYNOPSIS
d19 1
a19 2
*	PLANEPTR p;
*	USHORT width,height;
d27 1
a27 1
*                       result of a call to AllocRaster.
d32 1
a32 5
*       the same values of width and height with which you
*       called AllocRaster in the first place, when the
*       pointer p returned. This defines the size of the
*       memory space which is to be returned to the free
*       memory pool.
d34 3
a36 1
*    BUGS
d38 2
a39 2
*    SEE ALSO
*	AllocRaster graphics/gfx.h
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: FreeRaster.asm,v 1.4 90/07/27 16:38:58 bart Exp Locker: spence $
d33 4
a36 4
*       the same values of width and height with which  you
*       called AllocRaster in the first  place,  when  the
*       pointer p returned.   This defines the size of the
*       memory  space which is to be returned to the  free
@


1.4
log
@id
@
text
@d3 1
a3 1
*	$Id: $
@


1.3
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Header: FreeRaster.asm,v 1.2 89/05/03 15:32:47 bart Exp $
@


1.2
log
@doc
@
text
@d3 1
a3 1
*	$Header: FreeRaster.asm,v 1.1 88/05/01 15:36:20 dale Exp $
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
*	$Header: FreeRaster.asm,v 33.0 86/05/17 15:06:32 bart Exp $
d26 1
a26 1
*INPUTS
@
