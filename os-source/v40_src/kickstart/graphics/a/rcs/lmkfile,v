head     39.16;
branch   ;
access   ;
symbols  rel39_24:39.16 rel39_18:39.16 rel39_97:39.11 rel39_90:39.11 rel39_89:39.11 rel39_82:39.11 rel39_76:39.10 rel39_71:39.10 rel39_65:39.10 rel39_64:39.10 rel39_61:39.10 rel39_60:39.9 rel39_55:39.9 rel39_52:39.9 rel39_47:39.9 rel39_39:39.7 rel39_38:39.6 rel39_37:39.6 rel39_35:39.5 rel39_34:39.5;
locks    ; strict;
comment  @# @;


39.16
date     93.04.01.15.23.37;  author chrisg;  state Exp;
branches ;
next     39.15;

39.15
date     93.03.12.16.21.41;  author chrisg;  state Exp;
branches ;
next     39.14;

39.14
date     93.03.09.10.28.17;  author chrisg;  state Exp;
branches ;
next     39.13;

39.13
date     93.03.09.10.10.06;  author chrisg;  state Exp;
branches ;
next     39.12;

39.12
date     93.03.08.13.11.48;  author chrisg;  state Exp;
branches ;
next     39.11;

39.11
date     92.08.11.13.56.40;  author spence;  state Exp;
branches ;
next     39.10;

39.10
date     92.06.03.16.28.03;  author chrisg;  state Exp;
branches ;
next     39.9;

39.9
date     92.04.02.11.03.32;  author spence;  state Exp;
branches ;
next     39.8;

39.8
date     92.03.19.16.00.24;  author chrisg;  state Exp;
branches ;
next     39.7;

39.7
date     92.03.05.10.44.48;  author chrisg;  state Exp;
branches ;
next     39.6;

39.6
date     92.02.21.13.58.59;  author bart;  state Exp;
branches ;
next     39.5;

39.5
date     92.01.29.17.01.09;  author chrisg;  state Exp;
branches ;
next     39.4;

39.4
date     92.01.07.14.27.30;  author chrisg;  state Exp;
branches ;
next     39.3;

39.3
date     91.12.20.15.38.48;  author chrisg;  state Exp;
branches ;
next     39.2;

39.2
date     91.10.30.19.12.42;  author spence;  state Exp;
branches ;
next     39.1;

39.1
date     91.10.04.12.18.41;  author chrisg;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.27.16.23.34;  author chrisg;  state Exp;
branches ;
next     38.4;

38.4
date     91.08.20.16.03.45;  author chrisg;  state Exp;
branches ;
next     38.3;

38.3
date     91.06.03.16.47.28;  author chrisg;  state Exp;
branches ;
next     38.2;

38.2
date     91.05.29.16.47.52;  author spence;  state Exp;
branches ;
next     38.1;

38.1
date     91.05.29.16.40.02;  author chrisg;  state Exp;
branches ;
next     38.0;

38.0
date     91.05.21.12.22.32;  author spence;  state Exp;
branches ;
next     1.1;

1.1
date     91.05.07.16.36.10;  author chrisg;  state Exp;
branches ;
next     ;


desc
@makefile for lattice
@


39.16
log
@added yet another variant build. wpa8.nt.obj supports chunkytoplanar hardware,
but does not test for it!
@
text
@##########################################################################
#
# $Id: lmkfile,v 39.15 93/03/12 16:21:41 chrisg Exp Locker: chrisg $
#
##########################################################################

VERSION=        39
V=              v$(VERSION):
MAKEMETA=       v:nativemakemeta/nmakemeta
#SRCDIRPATH=     kickstart/graphics
SRCDIR=         a
SUBSYSNAME=     a
SUBSYSGROUP=    graphics
MAKEFILE=       Makefile
MODULE=graphics
OBJDIR=ram:$(SUBSYSNAME)objs
OBJSTORE=objs
DESTDIR=v$(VERSION):src/kickstart/graphics/$(SUBSYSNAME)

.asm.obj:
	spp $*.asm >ram:tmp1.asm
	hx68 from ram:tmp1.asm TO $(OBJDIR)/$*.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM


AFILES1=AreaMove.asm BltClear.asm Draw.asm InitArea.asm
AFILES2=Move.asm MrgCop.asm MustMem.asm QBlit.asm RectFill.asm
AFILES3=SetRGB4.asm WaitBlit.asm WaitTOF.asm clip.asm
AFILES4=Flood.asm PolyDraw.asm gasm.asm ScrollRaster.asm
AFILES5=InitRastPort.asm LoadRGB4.asm SetRast.asm BltPattern.asm ClearMem.asm
AFILES6=WaitBOVP.asm SimpleSprites.asm InitTmpRas.asm
AFILES7=SetAPen.asm AreaDraw.asm AreaEnd.asm 
AFILES8=AllocRaster.asm FreeRaster.asm
AFILES9=InitView.asm InitVPort.asm LockLayerRom.asm UnlockLayerRom.asm
AFILESA=MakeVPort.asm LoadView.asm QBSBlit.asm InitBitMap.asm
AFILESB=FreeVPortCopLists.asm FreeCopList.asm OwnBlitter.asm
AFILESC=FreeCprList.asm GetColorMap.asm FreeColorMap.asm GetRGB4.asm
AFILESD=ScrollVPort.asm ReadPixel.asm WritePixel.asm BltRastPort.asm
AFILESE=BltBitMapRastPort.asm BltMaskRastPort.asm CalcIVG.asm
AFILESF=cdraw.asm SetRGB4CM.asm Circle.asm Ellipse.asm AttemptLockLayerRom.asm
AFILESG=AreaCircle.asm AreaEllipse.asm GfxMem.asm VideoControl.asm Monitor.asm
AFILESH=rpa8.asm wpa8.asm GetVPModeID.asm EraseRect.asm NewColorStuff.asm GetSet.asm
AFILESI=allocbitmap.asm GetVec.asm changevpbitmap.asm
AFILES=$(AFILES1) $(AFILES2) $(AFILES3) $(AFILES4) $(AFILES5) $(AFILES6) $(AFILES7) $(AFILES8) \
	$(AFILES9) $(AFILESA) $(AFILESB) $(AFILESC) $(AFILESD) $(AFILESE) $(AFILESF) $(AFILESG) \
	$(AFILESH) $(AFILESI)


CFILES=
OTHERFILES=lmkfile $(SUBSYSNAME).lib GetColorMap_aa.obj

EXTERNIFILES=
IFILES=	submacs.i $(EXTERNIFILES)

EXTERNHFILES=
HFILES=	$(EXTERNHFILES)

OFILES1=$(OBJDIR)/AreaMove.obj $(OBJDIR)/BltClear.obj $(OBJDIR)/Draw.obj $(OBJDIR)/InitArea.obj
OFILES2=$(OBJDIR)/Move.obj $(OBJDIR)/MrgCop.obj $(OBJDIR)/MustMem.obj $(OBJDIR)/QBlit.obj $(OBJDIR)/RectFill.obj
OFILES3=$(OBJDIR)/SetRGB4.obj $(OBJDIR)/WaitBlit.obj $(OBJDIR)/WaitTOF.obj $(OBJDIR)/clip.obj
OFILES4=$(OBJDIR)/Flood.obj $(OBJDIR)/PolyDraw.obj $(OBJDIR)/gasm.obj $(OBJDIR)/ScrollRaster.obj
OFILES5=$(OBJDIR)/InitRastPort.obj $(OBJDIR)/LoadRGB4.obj $(OBJDIR)/SetRast.obj $(OBJDIR)/BltPattern.obj $(OBJDIR)/ClearMem.obj
OFILES6=$(OBJDIR)/WaitBOVP.obj $(OBJDIR)/SimpleSprites.obj $(OBJDIR)/InitTmpRas.obj
OFILES7=$(OBJDIR)/SetAPen.obj $(OBJDIR)/AreaDraw.obj $(OBJDIR)/AreaEnd.obj
OFILES8=$(OBJDIR)/AllocRaster.obj $(OBJDIR)/FreeRaster.obj
OFILES9=$(OBJDIR)/InitView.obj $(OBJDIR)/InitVPort.obj $(OBJDIR)/LockLayerRom.obj $(OBJDIR)/UnlockLayerRom.obj
OFILESa=$(OBJDIR)/MakeVPort.obj $(OBJDIR)/LoadView.obj $(OBJDIR)/QBSBlit.obj $(OBJDIR)/InitBitMap.obj
OFILESb=$(OBJDIR)/FreeVPortCopLists.obj $(OBJDIR)/FreeCopList.obj $(OBJDIR)/OwnBlitter.obj
OFILESc=$(OBJDIR)/FreeCprList.obj $(OBJDIR)/GetColorMap.obj $(OBJDIR)/FreeColorMap.obj $(OBJDIR)/GetRGB4.obj
OFILESd=$(OBJDIR)/ScrollVPort.obj $(OBJDIR)/ReadPixel.obj $(OBJDIR)/WritePixel.obj $(OBJDIR)/BltRastPort.obj
OFILESe=$(OBJDIR)/BltBitMapRastPort.obj $(OBJDIR)/BltMaskRastPort.obj $(OBJDIR)/CalcIVG.obj
OFILESf=$(OBJDIR)/cdraw.obj $(OBJDIR)/SetRGB4CM.obj $(OBJDIR)/Circle.obj $(OBJDIR)/Ellipse.obj $(OBJDIR)/AttemptLockLayerRom.obj
OFILESg=$(OBJDIR)/AreaCircle.obj $(OBJDIR)/AreaEllipse.obj $(OBJDIR)/GfxMem.obj $(OBJDIR)/VideoControl.obj $(OBJDIR)/Monitor.obj
OFILESh=$(OBJDIR)/rpa8.obj $(OBJDIR)/wpa8.obj $(OBJDIR)/GetVPModeID.obj $(OBJDIR)/EraseRect.obj $(OBJDIR)/NewColorStuff.obj $(OBJDIR)/GetSet.obj
OFILESi=$(OBJDIR)/allocbitmap.obj $(OBJDIR)/GetVec.obj $(OBJDIR)/changevpbitmap.obj

OFILES= $(OFILES1) $(OFILES2) $(OFILES3) $(OFILES4) $(OFILES5) $(OFILES6) \
		$(OFILES7) $(OFILES8) $(OFILES9) $(OFILESa) $(OFILESb) $(OFILESc) \
		$(OFILESd) $(OFILESe) $(OFILESf) $(OFILESg) $(OFILESh) $(OFILESi)

all :	$(SUBSYSNAME).lib newcolorstuff.aa.obj wpa8.emul.obj wpa8.hw.obj wpa8.nt.obj getcolormap_aa.obj

getcolormap_aa.obj : GetColorMap.asm	/view.i
	hx68 from GetColorMap.asm to GetColorMap_aa.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE SUPPORT_HW=1 DEFINE AA_ONLY=1

wpa8.emul.obj : wpa8.asm
	hx68 from wpa8.asm to wpa8.emul.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE SUPPORT_HW=1 DEFINE EMULATE_HW=1

wpa8.hw.obj : wpa8.asm
	hx68 from wpa8.asm to wpa8.hw.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE SUPPORT_HW=1 DEFINE TEST_HW=1

wpa8.nt.obj : wpa8.asm
	hx68 from wpa8.asm to wpa8.nt.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE SUPPORT_HW=1

$(SUBSYSNAME).lib : $(OBJDIR) $(OFILES)
	join $(OBJDIR)/*.obj as a.lib

$(OBJDIR):
	makedir $(OBJDIR)
	copy $(OBJSTORE)/*.obj $(OBJDIR) clone quiet


newcolorstuff.aa.obj : NewColorStuff.asm	/view.i	/gfx.i	/gfxbase.i	/displayinfo.i	/vp_internal.i	/macros.i
	hx68 from newcolorstuff.asm TO newcolorstuff.aa.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE AA_ONLY=1

internal:
	@@echo "copying a/"
	copy $(AFILES1) $(DESTDIR) nopro
	copy $(AFILES2) $(DESTDIR) nopro
	copy $(AFILES3) $(DESTDIR) nopro
	copy $(AFILES4) $(DESTDIR) nopro
	copy $(AFILES5) $(DESTDIR) nopro
	copy $(AFILES6) $(DESTDIR) nopro
	copy $(AFILES7) $(DESTDIR) nopro
	copy $(AFILES8) $(DESTDIR) nopro
	copy $(AFILES9) $(DESTDIR) nopro
	copy $(AFILESA) $(DESTDIR) nopro
	copy $(AFILESB) $(DESTDIR) nopro
	copy $(AFILESC) $(DESTDIR) nopro
	copy $(AFILESD) $(DESTDIR) nopro
	copy $(AFILESE) $(DESTDIR) nopro
	copy $(AFILESF) $(DESTDIR) nopro
	copy $(AFILESG) $(DESTDIR) nopro
	copy $(AFILESH) $(DESTDIR) nopro
	copy $(AFILESI) $(DESTDIR) nopro
	copy $(IFILES) $(DESTDIR) nopro
	copy $(OTHERFILES) $(DESTDIR) nopro

saveobjs: $(OBJDIR) $(OFILES)
	copy $(OBJDIR)/*.obj $(OBJSTORE) clone quiet

protos:
	search >ram:a.protos *.asm "__asm" nonum
	search >a.protos ram:a.protos "__asm" nonum
	splat -o "^;" "" a.protos
	splat -o "^ " "" a.protos

clean:
	-delete $(OBJSTORE)/*.obj quiet
	-delete $(OBJDIR) all quiet
	-delete a.lib quiet

depend:
	copy to maked0 from < <
$(AFILES)
<
	splat -o "[\t ]+" "\n" maked0
	splat -o "^..+" "dep1 &" maked0
	echo >ram:maked1 "alias dep1 depend [] makedx"
	join ram:maked1 maked0 as maked1
	splat -o "\x0d" "" maked1
	execute maked1
	splat -o "^" "$(OBJDIR)/&" makedx
	splat -o "^$(OBJDIR)/\n" "\n" makedx
	splat -o ".o " ".obj " makedx
	copy makedx graphics$(VERSION).depend
	delete maked? quiet

doc:
	copy to maked0 from < <
$(AFILES)
$(CFILES)
<
	splat -o "[\t ]+" "\n" maked0
	splat -o "^..+" "type >>$(SUBSYSNAME).doc &" maked0
	splat -o "\x0d" "" maked0
	splat -o "^type >>$(SUBSYSNAME).doc \n" "\n" maked0
	echo >maked1 "if exists $(SUBSYSNAME).doc"
	echo >>maked1 "delete $(SUBSYSNAME).doc quiet"
	echo >>maked1 "endif"
	join maked1 maked0 as ram:x
	execute ram:x
	delete maked? quiet



ram:aobjs/AreaMove.obj : AreaMove.asm	/c/areafill.i

ram:aobjs/BltClear.obj : BltClear.asm	submacs.i	/sane_names.i

ram:aobjs/Draw.obj : Draw.asm	submacs.i	/sane_names.i

ram:aobjs/InitArea.obj : InitArea.asm

ram:aobjs/Move.obj : Move.asm

ram:aobjs/MrgCop.obj : MrgCop.asm	/monitor.i	/macros.i	/gfxbase.i

ram:aobjs/MustMem.obj : MustMem.asm

ram:aobjs/QBlit.obj : QBlit.asm	submacs.i	/sane_names.i

ram:aobjs/RectFill.obj : RectFill.asm	submacs.i

ram:aobjs/SetRGB4.obj : SetRGB4.asm	/view.i	/gfxbase.i

ram:aobjs/WaitBlit.obj : WaitBlit.asm

ram:aobjs/WaitTOF.obj : WaitTOF.asm	submacs.i

ram:aobjs/clip.obj : clip.asm

ram:aobjs/Flood.obj : Flood.asm

ram:aobjs/PolyDraw.obj : PolyDraw.asm

ram:aobjs/gasm.obj : gasm.asm

ram:aobjs/ScrollRaster.obj : ScrollRaster.asm

ram:aobjs/InitRastPort.obj : InitRastPort.asm	/macros.i	submacs.i

ram:aobjs/LoadRGB4.obj : LoadRGB4.asm	/view.i

ram:aobjs/SetRast.obj : SetRast.asm	submacs.i	/sane_names.i	/macros.i

ram:aobjs/BltPattern.obj : BltPattern.asm	/rastport.i	/gfxbase.i	/sane_names.i	submacs.i	/c/gfxblit.i	/macros.i

ram:aobjs/ClearMem.obj : ClearMem.asm

ram:aobjs/WaitBOVP.obj : WaitBOVP.asm

ram:aobjs/SimpleSprites.obj : SimpleSprites.asm	/gfxbase.i	/view.i	/sprite.i	/monitor.i	/macros.i	/copper.i	/gels/gelsinternal.i	/vp_internal.i

ram:aobjs/InitTmpRas.obj : InitTmpRas.asm

ram:aobjs/SetAPen.obj : SetAPen.asm	submacs.i

ram:aobjs/AreaDraw.obj : AreaDraw.asm	/c/areafill.i

ram:aobjs/AreaEnd.obj : AreaEnd.asm	/macros.i	/c/areafill.i	/sane_names.i	submacs.i

ram:aobjs/AllocRaster.obj : AllocRaster.asm	/macros.i

ram:aobjs/FreeRaster.obj : FreeRaster.asm	/macros.i

ram:aobjs/InitView.obj : InitView.asm

ram:aobjs/InitVPort.obj : InitVPort.asm

ram:aobjs/LockLayerRom.obj : LockLayerRom.asm

ram:aobjs/UnlockLayerRom.obj : UnlockLayerRom.asm

ram:aobjs/MakeVPort.obj : MakeVPort.asm

ram:aobjs/LoadView.obj : LoadView.asm	/monitor.i	/view.i	/macros.i

ram:aobjs/QBSBlit.obj : QBSBlit.asm	/cia8520.i	submacs.i	/sane_names.i

ram:aobjs/InitBitMap.obj : InitBitMap.asm

ram:aobjs/FreeVPortCopLists.obj : FreeVPortCopLists.asm

ram:aobjs/FreeCopList.obj : FreeCopList.asm

ram:aobjs/OwnBlitter.obj : OwnBlitter.asm	/a/submacs.i	/sane_names.i

ram:aobjs/FreeCprList.obj : FreeCprList.asm

ram:aobjs/GetColorMap.obj : GetColorMap.asm	/view.i
	hx68 from getcolormap.asm TO $(OBJDIR)/getcolormap.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM

ram:aobjs/FreeColorMap.obj : FreeColorMap.asm	/view.i

ram:aobjs/GetRGB4.obj : GetRGB4.asm

ram:aobjs/ScrollVPort.obj : ScrollVPort.asm	/view.i	/vp_internal.i	/macros.i

ram:aobjs/ReadPixel.obj : ReadPixel.asm	submacs.i	/sane_names.i

ram:aobjs/WritePixel.obj : WritePixel.asm	submacs.i	/sane_names.i

ram:aobjs/BltRastPort.obj : BltRastPort.asm

ram:aobjs/BltBitMapRastPort.obj : BltBitMapRastPort.asm

ram:aobjs/BltMaskRastPort.obj : BltMaskRastPort.asm

ram:aobjs/CalcIVG.obj : CalcIVG.asm	/displayinfo.i	/gfxbase.i	/view.i	/displayinfo_internal.i	/macros.i

ram:aobjs/cdraw.obj : cdraw.asm	/c/cdrawinfo.i	submacs.i

ram:aobjs/SetRGB4CM.obj : SetRGB4CM.asm

ram:aobjs/Circle.obj : Circle.asm

ram:aobjs/Ellipse.obj : Ellipse.asm

ram:aobjs/AttemptLockLayerRom.obj : AttemptLockLayerRom.asm

ram:aobjs/AreaCircle.obj : AreaCircle.asm	/c/areafill.i

ram:aobjs/AreaEllipse.obj : AreaEllipse.asm	/c/areafill.i

ram:aobjs/GfxMem.obj : GfxMem.asm

ram:aobjs/VideoControl.obj : VideoControl.asm

ram:aobjs/Monitor.obj : Monitor.asm

ram:aobjs/rpa8.obj : rpa8.asm

ram:aobjs/wpa8.obj : wpa8.asm

ram:aobjs/GetVPModeID.obj : GetVPModeID.asm

ram:aobjs/EraseRect.obj : EraseRect.asm	/gfxbase.i	submacs.i

ram:aobjs/NewColorStuff.obj : NewColorStuff.asm	/view.i	/gfx.i	/gfxbase.i	/displayinfo.i	/vp_internal.i	/macros.i
	hx68 from newcolorstuff.asm TO $(OBJDIR)/NewColorStuff.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM

ram:aobjs/GetSet.obj : GetSet.asm	/rastport.i

ram:aobjs/allocbitmap.obj : allocbitmap.asm	/gfxbase.i	/gfx.i	/macros.i

ram:aobjs/GetVec.obj : GetVec.asm	/gfxbase.i	/view.i	/displayinfo.i

ram:aobjs/changevpbitmap.obj : changevpbitmap.asm	/gfxbase.i	/view.i	/macros.i

@


39.15
log
@added variant getcolormap build
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.14 93/03/09 10:28:17 chrisg Exp Locker: chrisg $
d80 1
a80 1
all :	$(SUBSYSNAME).lib newcolorstuff.aa.obj wpa8.emul.obj wpa8.hw.obj getcolormap_aa.obj
d89 4
a92 1
	hx68 from wpa8.asm to wpa8.hw.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE SUPPORT_HW=1
@


39.14
log
@whoops defined AA_ONLY on both builds!!
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.13 93/03/09 10:10:06 chrisg Exp Locker: chrisg $
d49 1
a49 1
OTHERFILES=lmkfile $(SUBSYSNAME).lib
d80 1
a80 1
all :	$(SUBSYSNAME).lib newcolorstuff.aa.obj wpa8.emul.obj wpa8.hw.obj
d82 3
d258 1
@


39.13
log
@direct assemble newcolorstuff without preprocessor, cause
it dont work otherwise.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.12 93/03/08 13:11:48 chrisg Exp Locker: chrisg $
d303 1
a303 1
	hx68 from newcolorstuff.asm TO $(OBJDIR)/NewColorStuff.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE AA_ONLY=1
@


39.12
log
@run q :RelNotes/rel40.4
added conditional code support in wpa8.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.11 92/08/11 13:56:40 spence Exp Locker: chrisg $
d303 1
@


39.11
log
@removed vporigin.c from build
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.10 92/06/03 16:28:03 chrisg Exp Locker: spence $
d24 1
d80 4
a83 1
all :	$(SUBSYSNAME).lib
d85 3
d95 3
@


39.10
log
@rebuilt depends.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.9 92/04/02 11:03:32 spence Exp Locker: chrisg $
d41 1
a41 1
AFILESI=allocbitmap.asm GetVec.asm changevpbitmap.asm vporigin.asm
d73 1
a73 1
OFILESi=$(OBJDIR)/allocbitmap.obj $(OBJDIR)/GetVec.obj $(OBJDIR)/changevpbitmap.obj $(OBJDIR)/vporigin.obj
a300 2

ram:aobjs/vporigin.obj : vporigin.asm	/view.i
@


39.9
log
@added VPOrigin().
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.8 92/03/19 16:00:24 chrisg Exp Locker: spence $
d159 1
d170 1
a170 1
ram:aobjs/MrgCop.obj : MrgCop.asm
d200 1
a200 1
ram:aobjs/BltPattern.obj : BltPattern.asm	/sane_names.i	submacs.i	/c/gfxblit.i
d230 1
a230 1
ram:aobjs/LoadView.obj : LoadView.asm
d250 1
a250 1
ram:aobjs/ScrollVPort.obj : ScrollVPort.asm	/view.i	/vp_internal.i
d262 1
a262 1
ram:aobjs/CalcIVG.obj : CalcIVG.asm	/displayinfo.i	/gfxbase.i	/view.i	/displayinfo_internal.i
d290 1
a290 1
ram:aobjs/EraseRect.obj : EraseRect.asm	submacs.i
d300 3
a302 1
ram:aobjs/changevpbitmap.obj : changevpbitmap.asm
a303 1
ram:aobjs/vporigin.obj : vporigin.asm /view.i
@


39.8
log
@now uses hx68 and OPTIMON.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.7 92/03/05 10:44:48 chrisg Exp Locker: chrisg $
d41 1
a41 1
AFILESI=allocbitmap.asm GetVec.asm changevpbitmap.asm
d73 1
a73 1
OFILESi=$(OBJDIR)/allocbitmap.obj $(OBJDIR)/GetVec.obj $(OBJDIR)/changevpbitmap.obj
d300 2
@


39.7
log
@massive changes to make internal. now each directory knows how to copy
all files (and no more) needed.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.6 92/02/21 13:58:59 bart Exp Locker: chrisg $
d22 1
a22 1
	arg ram:tmp1.asm -iinclude: -o$(OBJDIR)/$*.obj
@


39.6
log
@changed grep to search in protos
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.5 92/01/29 17:01:09 chrisg Exp Locker: bart $
d8 1
a8 1
V=              v:
d18 1
d24 21
a44 19
AFILES= \
	AreaMove.asm BltClear.asm Draw.asm InitArea.asm \
	Move.asm MrgCop.asm MustMem.asm QBlit.asm RectFill.asm\
	SetRGB4.asm WaitBlit.asm WaitTOF.asm clip.asm\
	Flood.asm PolyDraw.asm gasm.asm ScrollRaster.asm\
	InitRastPort.asm LoadRGB4.asm SetRast.asm BltPattern.asm ClearMem.asm\
	WaitBOVP.asm SimpleSprites.asm InitTmpRas.asm\
	SetAPen.asm AreaDraw.asm AreaEnd.asm \
	AllocRaster.asm FreeRaster.asm\
	InitView.asm InitVPort.asm LockLayerRom.asm UnlockLayerRom.asm\
	MakeVPort.asm LoadView.asm QBSBlit.asm InitBitMap.asm\
	FreeVPortCopLists.asm FreeCopList.asm OwnBlitter.asm\
	FreeCprList.asm GetColorMap.asm FreeColorMap.asm GetRGB4.asm\
	ScrollVPort.asm ReadPixel.asm WritePixel.asm BltRastPort.asm\
	BltBitMapRastPort.asm BltMaskRastPort.asm CalcIVG.asm\
	cdraw.asm SetRGB4CM.asm Circle.asm Ellipse.asm AttemptLockLayerRom.asm\
	AreaCircle.asm AreaEllipse.asm GfxMem.asm VideoControl.asm Monitor.asm\
	rpa8.asm wpa8.asm GetVPModeID.asm EraseRect.asm NewColorStuff.asm GetSet.asm\
	allocbitmap.asm GetVec.asm changevpbitmap.asm
d48 1
d51 1
a51 2
IFILES=	submacs.i \
	$(EXTERNIFILES)
d54 1
a54 2
HFILES=	\
	$(EXTERNHFILES)
d88 23
@


39.5
log
@fixed make doc. uggh.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.4 92/01/07 14:27:30 chrisg Exp Locker: chrisg $
d92 1
a92 1
	grep >a.protos -f -v \.asm.. ram:a.protos
@


39.4
log
@ removed obsolete files.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.3 91/12/20 15:38:48 chrisg Exp Locker: chrisg $
d117 15
@


39.3
log
@ added changevpbitmap
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.2 91/10/30 19:12:42 spence Exp Locker: chrisg $
d30 2
a31 2
	SetAPen.asm AreaDraw.asm AreaEnd.asm Regions.asm\
	AllocRaster.asm FreeRaster.asm CopySBitMap.asm SyncSBitMap.asm\
d60 2
a61 2
OFILES7=$(OBJDIR)/SetAPen.obj $(OBJDIR)/AreaDraw.obj $(OBJDIR)/AreaEnd.obj $(OBJDIR)/Regions.obj
OFILES8=$(OBJDIR)/AllocRaster.obj $(OBJDIR)/FreeRaster.obj $(OBJDIR)/CopySBitMap.obj $(OBJDIR)/SyncSBitMap.obj
a174 2
ram:aobjs/Regions.obj : Regions.asm

a177 4

ram:aobjs/CopySBitMap.obj : CopySBitMap.asm

ram:aobjs/SyncSBitMap.obj : SyncSBitMap.asm
@


39.2
log
@GetVec.as,
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.1 91/10/04 12:18:41 chrisg Exp Locker: spence $
d41 1
a41 1
	allocbitmap.asm GetVec.asm
d71 1
a71 1
OFILESi=$(OBJDIR)/allocbitmap.obj $(OBJDIR)/GetVec.obj
d118 1
d137 1
a137 1
ram:aobjs/SetRGB4.obj : SetRGB4.asm	/view.i
d157 1
a157 1
ram:aobjs/SetRast.obj : SetRast.asm	submacs.i	/sane_names.i
d165 1
a165 1
ram:aobjs/SimpleSprites.obj : SimpleSprites.asm	/gfxbase.i	/view.i	/sprite.i	/monitor.i	/gels/gelsinternal.i
d215 1
a215 1
ram:aobjs/ScrollVPort.obj : ScrollVPort.asm
d227 1
a227 1
ram:aobjs/CalcIVG.obj : CalcIVG.asm	/gfxbase.i	/view.i	/displayinfo.i
d257 1
a257 1
ram:aobjs/NewColorStuff.obj : NewColorStuff.asm	/view.i	/gfx.i	/gfxbase.i	/displayinfo.i
d261 3
a263 1
ram:aobjs/allocbitmap.obj : allocbitmap.asm	/gfxbase.i	/gfx.i
d265 1
a265 1
ram:aobjs/GetVec.obj : GetVec.asm /gfxbase.i /view.i /displayinfo.i
@


39.1
log
@ added proto generation
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.0 91/08/27 16:23:34 chrisg Exp Locker: chrisg $
d41 1
a41 1
	allocbitmap.asm
d71 1
a71 1
OFILESi=$(OBJDIR)/allocbitmap.obj
d261 2
@


39.0
log
@bumped to v39
@
text
@d3 1
a3 1
# $Id: lmkfile,v 38.4 91/08/20 16:03:45 chrisg Exp Locker: chrisg $
d89 6
@


38.4
log
@added allocbitmap and re-did dependencies
@
text
@d3 1
a3 1
# $Id: lmkfile,v 38.3 91/06/03 16:47:28 chrisg Exp Locker: chrisg $
d7 1
a7 1
VERSION=        38
@


38.3
log
@  added getSet.asm to the file list and remade depends.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 38.2 91/05/29 16:47:52 spence Exp Locker: chrisg $
d40 2
a41 1
	rpa8.asm wpa8.asm GetVPModeID.asm EraseRect.asm NewColorStuff.asm GetSet.asm
d71 1
d75 1
a75 1
		$(OFILESd) $(OFILESe) $(OFILESf) $(OFILESg) $(OFILESh)
a111 3



d130 1
a130 1
ram:aobjs/SetRGB4.obj : SetRGB4.asm
d148 1
a148 1
ram:aobjs/LoadRGB4.obj : LoadRGB4.asm
d158 1
a158 1
ram:aobjs/SimpleSprites.obj : SimpleSprites.asm	/gels/gelsinternal.i
d220 1
a220 1
ram:aobjs/CalcIVG.obj : CalcIVG.asm	/view.i	/displayinfo.i
d250 1
a250 1
ram:aobjs/NewColorStuff.obj : NewColorStuff.asm	/view.i	/gfx.i
d253 2
@


38.2
log
@CalcIVG.asm added
@
text
@d3 1
a3 1
# $Id: lmkfile,v 38.1 91/05/29 16:40:02 chrisg Exp Locker: spence $
d40 1
a40 1
	rpa8.asm wpa8.asm GetVPModeID.asm EraseRect.asm NewColorStuff.asm
d69 1
a69 1
OFILESh=$(OBJDIR)/rpa8.obj $(OBJDIR)/wpa8.obj $(OBJDIR)/GetVPModeID.obj $(OBJDIR)/EraseRect.obj $(OBJDIR)/NewColorStuff.obj
d112 1
d203 1
a203 1
ram:aobjs/GetColorMap.obj : GetColorMap.asm
d221 2
d251 1
a251 1
ram:aobjs/NewColorStuff.obj : NewColorStuff.asm	/view.i
d253 1
a253 1
ram:aobjs/CalcIVG.obj : CalcIVG.asm /view.i /displayinfo.i
@


38.1
log
@  Added newcolorstuff.asm to file list.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 38.0 91/05/21 12:22:32 spence Exp Locker: chrisg $
d37 1
a37 1
	BltBitMapRastPort.asm BltMaskRastPort.asm \
d66 1
a66 1
OFILESe=$(OBJDIR)/BltBitMapRastPort.obj $(OBJDIR)/BltMaskRastPort.obj
d249 2
@


38.0
log
@VERSION = 38
@
text
@d3 1
a3 1
# $Id: lmkfile,v 1.1 91/05/07 16:36:10 chrisg Exp Locker: spence $
d40 1
a40 1
	rpa8.asm wpa8.asm GetVPModeID.asm EraseRect.asm
d42 1
d69 1
a69 1
OFILESh=$(OBJDIR)/rpa8.obj $(OBJDIR)/wpa8.obj $(OBJDIR)/GetVPModeID.obj $(OBJDIR)/EraseRect.obj
d111 1
d204 1
a204 1
ram:aobjs/FreeColorMap.obj : FreeColorMap.asm
d248 1
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
# $Id: makefile,v 37.5 91/05/07 14:37:47 chrisg Exp $
d7 1
a7 1
VERSION=        37
@
