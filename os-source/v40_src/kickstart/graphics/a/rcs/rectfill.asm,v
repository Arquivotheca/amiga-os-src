head     39.1;
branch   ;
access   ;
symbols  rel39_24:39.1 rel39_18:39.1 rel39_97:39.1 rel39_90:39.1 rel39_89:39.1 rel39_82:39.1 rel39_76:39.1 rel39_71:39.1 rel39_65:39.1 rel39_64:39.1 rel39_61:39.1 rel39_60:39.1 rel39_55:39.1 rel39_52:39.1 rel39_47:39.1 rel39_39:39.0 rel39_38:39.0 rel39_37:39.0 rel39_35:39.0 rel39_34:39.0 V37_30:37.1 V37_29:37.1 V37_28:37.1 V37_27:37.1 V37_25:37.1 V37_24:37.1 V37_23:37.1 V37_22:37.1 V37_21:37.1 V37_20:37.1 V37_19:37.1 V37_18:37.1 V37_17:37.1 V37_15:37.1 V37_14:37.1 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:1.3 V36_208:1.3 V36_207:1.3 V36_205:1.3 V36_203:1.3 V36_202:1.3 V36_201:1.3 V36_200:1.3 V36_199:1.3 V36_198:1.3 V36_196:1.3 V36_195:1.3 V36_194:1.3 V36_193:1.3 V36_192:1.3 V36_191:1.3 V36_190:1.3 V36_189:1.3 V36_188:1.3 V36_187:1.3 V36_186:1.3 V36_185:1.3 V36_184:1.3 V36_183:1.3 V36_182:1.3 V36_181:1.3 V36_180:1.3;
locks    ; strict;
comment  @@;


39.1
date     92.03.20.10.02.11;  author chrisg;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.27.23;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.02.12.15.24.19;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.25.59;  author spence;  state Exp;
branches ;
next     1.3;

1.3
date     90.08.24.11.28.16;  author bart;  state Exp;
branches ;
next     1.2;

1.2
date     90.03.27.16.21.08;  author bart;  state Exp;
branches ;
next     1.1;

1.1
date     88.05.01.15.37.56;  author dale;  state Exp;
branches ;
next     ;


desc
@@


39.1
log
@ added proto
@
text
@*******************************************************************************
*
*	$Id: rectfill.asm,v 39.0 91/08/21 17:27:23 chrisg Exp Locker: chrisg $
*
*******************************************************************************

    xdef    _RectFill
******* graphics.library/RectFill *******************************************
*
*   NAME
*       RectFill -- Fill a rectangular region in a RastPort.
*
*   SYNOPSIS
*
*	RectFill( rp, xmin, ymin, xmax, ymax)
*                 a1  d0:16 d1:16 d2:16 d3:16
*
*	void RectFill( struct RastPort *, SHORT, SHORT, SHORT, SHORT );
*
*   FUNCTION
*	Fills  the  rectangular  region  specified  by  the
*	parameters  with the chosen pen  colors,  areafill
*	pattern, and drawing mode. If no areafill pattern is
*	specified, fill the rectangular region with the FgPen
*	color, taking into account the drawing mode.
*
*   INPUTS
*	rp - pointer to a RastPort structure
*	(xmin,ymin) (xmax,ymax) are the coordinates of the upper
*		left corner and the lower right corner, respectively, of the
*	        rectangle.
*   NOTE
*
*	The following relation MUST be true:
*		(xmax >= xmin) and (ymax >= ymin)  
*
*   BUGS
*	Complement mode with FgPen complements all bitplanes.
*
*   SEE ALSO
*	AreaEnd() graphics/rastport.h
*
******************************************************************************

	include		'exec/types.i'
	include		'exec/nodes.i'
	include		'exec/lists.i'
	include		'graphics/rastport.i'
	include		'submacs.i'

	section	graphics
	xref	_LVOMove
	xref	_LVODraw
	xref	_LVOBltPattern
	xref	GenMinTerms

*LAYERNEEDED	equ 1

; void __asm RectFill(register __a1 struct RastPort *r,register __d0 int x1,register __d1 int y1,
; 		      register __d2 int x2,register __d3 int y2); /* __asm */

_RectFill:
	movem.l	d4/d5/a2,-(sp)
	move.l	a1,a2			* save RastPort ptr in a2

	ifd		LAYERNEEDED
	move.l	rp_Layer(a1),d4	* is there a Layer for this RastPort?
	if	<>
		exg.l	d4,a5
		LOCKLAYER
		exg.l	d4,a5
	endif
	endc

	clr.l	d4
	move.l	d4,a0		* clear a0
	btst	#RPB_AREAOUTLINE,rp_Flags+1(a2)
	if =
	    jsr	_LVOBltPattern(a6)		* use current rp_Mask
	else	.extend
		movem.l	d0/d1,-(sp)

		btst	#1,rp_DrawMode(a2) 		* bart - 05.07.86
		if <>					* COMPLEMENT mode ?
			movem.l	d2/d3,-(sp)		* save regs
			addq.w	#1,d0			* blit rectangle
			addq.w	#1,d1			* smaller in each
			subq.w	#1,d2			* dimension if not
			subq.w	#1,d3			* "negative"
			cmp.w	d0,d2
			if >=
			    cmp.w	d1,d3
			    if >=
					jsr	_LVOBltPattern(a6)		* use current rp_Mask
			    endif
			endif
			movem.l	(sp)+,d2/d3		* restore regs
		else
			jsr	_LVOBltPattern(a6)	* not COMPLEMENT mode
		endif					* end bart - 05.07.86

		movem.l	(sp)+,d4/d5
		move.l	rp_minterms(a2),-(sp)
		move.l	rp_minterms+4(a2),-(sp)
		move.b	rp_FgPen(a2),-(sp)
		move.b	rp_DrawMode(a2),-(sp)
		move.b	rp_AOLPen(a2),rp_FgPen(a2)
		clr.b	rp_DrawMode(a2)
		move.l	a2,a1
		GENMINTERMS
		move.l	a2,a1
		move.l	d4,d0		*xmin,ymin
		move.l	d5,d1
		jsr		_LVOMove(a6)
		move.l	a2,a1
		move.l	d4,d0		*xmin,ymax
		move.l	d3,d1
		jsr		_LVODraw(a6)
		move.l	a2,a1
		move.l	d2,d0		*xmax,ymax
		move.l	d3,d1
		jsr		_LVODraw(a6)
		move.l	a2,a1
		move.l	d2,d0		*xmax,ymin
		move.l	d5,d1
		jsr		_LVODraw(a6)
		move.l	a2,a1
		move.l	d4,d0		*xmin,ymin
		move.l	d5,d1
		jsr		_LVODraw(a6)
		move.b	(sp)+,rp_DrawMode(a2)
		move.b	(sp)+,rp_FgPen(a2)
		move.l	(sp)+,rp_minterms+4(a2)
		move.l	(sp)+,rp_minterms(a2)
	endif

	ifd	LAYERNEEDED
	move.l	rp_Layer(a2),d4		* on the way out check for layer again
	if <>
		exg.l	d4,a5
		UNLOCKLAYER
		exg.l	d4,a5
	endif
	endc

	movem.l	(sp)+,d4/d5/a2
    rts

	end
@


39.0
log
@Bumped
@
text
@d3 1
a3 1
*	$Id: RectFill.asm,v 37.1 91/02/12 15:24:19 chrisg Exp Locker: chrisg $
d58 3
@


37.1
log
@edited autodoc
@
text
@d3 1
a3 1
*	$Id: RectFill.asm,v 37.0 91/01/07 15:25:59 spence Exp Locker: chrisg $
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: RectFill.asm,v 1.3 90/08/24 11:28:16 bart Exp Locker: spence $
d11 1
a11 3
*       RectFill -- Fill a defined rectangular area with
*               the current drawing pen color, outline color,
*               secondary color, and pattern.
d14 2
a15 1
*		RectFill( rp, xmin, ymin, xmax, ymax)
d18 1
a18 3
*	struct RastPort *rp;
*	SHORT xmin,ymin;
*	SHORT xmax,ymax;
d21 5
a25 5
*		Fill  the  rectangular  region  specified  by  the
*		parameters  with the chosen pen  colors,  areafill
*		pattern, and drawing mode. If no areafill pattern is
*		specified, fill the rectangular region with the FgPen
*		color, taking into account the drawing mode.
d28 2
a29 2
*		rp - pointer to a RastPort structure
*		(xmin,ymin) (xmax,ymax) are the coordinates of the upper
d31 4
a34 2
*       rectangle.
*		The following relation MUST be true:
d38 1
a38 1
*		Complement mode with FgPen complements all bitplanes.
d41 1
a41 1
*	AreaEnd graphics/rastport.h
@


1.3
log
@id
@
text
@d3 1
a3 1
*	$Id: $
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Header: RectFill.asm,v 1.1 88/05/01 15:37:56 dale Exp $
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
*	$Header: RectFill.asm,v 33.2 86/07/07 10:04:16 bart Exp $
@
