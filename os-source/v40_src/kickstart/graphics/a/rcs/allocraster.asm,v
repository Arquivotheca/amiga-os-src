head     37.5;
branch   ;
access   ;
symbols  rel39_24:37.4 rel39_18:37.4 rel39_97:37.4 rel39_90:37.4 rel39_89:37.4 rel39_82:37.4 rel39_76:37.4 rel39_71:37.4 rel39_65:37.4 rel39_64:37.4 rel39_61:37.4 rel39_60:37.4 rel39_55:37.4 rel39_52:37.4 rel39_47:37.4 rel39_39:37.4 rel39_38:37.4 rel39_37:37.4 rel39_35:37.4 rel39_34:37.4 V37_30:37.3 V37_29:37.3 V37_28:37.3 V37_27:37.3 V37_25:37.3 V37_24:37.3 V37_23:37.3 V37_22:37.3 V37_21:37.3 V37_20:37.3 V37_19:37.3 V37_18:37.3 V37_17:37.3 V37_15:37.3 V37_14:37.3 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:1.3 V36_208:1.3 V36_207:1.3 V36_205:1.3 V36_203:1.3 V36_202:1.3 V36_201:1.3 V36_200:1.3 V36_199:1.3 V36_198:1.3 V36_196:1.3 V36_195:1.3 V36_194:1.3 V36_193:1.3 V36_192:1.3 V36_191:1.3 V36_190:1.3 V36_189:1.3 V36_188:1.3 V36_187:1.3 V36_186:1.3 V36_185:1.3 V36_184:1.3 V36_183:1.3 V36_182:1.3 V36_181:1.3 V36_180:1.3;
locks    ; strict;
comment  @@;


37.5
date     93.05.31.14.38.31;  author chrisg;  state Exp;
branches ;
next     37.4;

37.4
date     91.05.01.13.54.23;  author chrisg;  state Exp;
branches ;
next     37.3;

37.3
date     91.02.12.16.57.48;  author chrisg;  state Exp;
branches ;
next     37.2;

37.2
date     91.02.12.12.02.43;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.02.12.11.35.38;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.15.34;  author spence;  state Exp;
branches ;
next     1.3;

1.3
date     90.07.27.16.35.45;  author bart;  state Exp;
branches ;
next     1.2;

1.2
date     90.03.27.16.29.25;  author bart;  state Exp;
branches ;
next     1.1;

1.1
date     88.05.01.15.35.57;  author dale;  state Exp;
branches ;
next     ;


desc
@@


37.5
log
@massive fixes to includes & autodocs.
@
text
@*******************************************************************************
*
*	$Id: allocraster.asm,v 37.4 91/05/01 13:54:23 chrisg Exp Locker: chrisg $
*
*******************************************************************************


	section	graphics
    xdef    _AllocRaster
******* graphics.library/AllocRaster ******************************************
*
*   NAME
*	AllocRaster -- Allocate space for a bitplane.
*
*   SYNOPSIS
*	planeptr = AllocRaster( width, height )
*	   d0                    d0     d1
*
*	PLANEPTR AllocRaster(ULONG,ULONG);
*
*   FUNCTION
*	This function calls the memory allocation routines
*	to allocate memory space for a bitplane "width" bits
*	wide and "height" bits high.
*
*   INPUTS
*	width	- number of columns in bitplane
*	height	- number of rows in bitplane
*
*   RESULT
*	planeptr - pointer to first word in bitplane, or NULL if
*		   it was not possible to allocate the desired
*		   amount of memory.
*
*   NOTES
*	In order to assure proper alignment of display memory, the
*	AllocBitMap() function should be used instead of AllocRaster
*	when you wish to allocate display memory (rasters which are
*	attached to a ViewPort or Screen).
*
*   BUGS
*
*   SEE ALSO
*	FreeRaster() graphics/gfx.h
*
******************************************************************************

	include	'exec/types.i'
	include 'exec/nodes.i'
	include 'exec/lists.i'
	include 'exec/memory.i'
	include '/macros.i'
_AllocRaster:
*	        current routine calls a C subroutine to do the work
	bsr.s	rassize
	moveq.l	#MEMF_CHIP+MEMF_PUBLIC,d1
	CALLEXEC	AllocMem
    rts

	xdef  rassize
*	input d0,d1 return number of bytes for this bitplane
rassize:
	add.w	#15,d0
	asr.w	#3,d0
	and.w	#$FFFE,d0
	mulu	d1,d0
	rts

	end
@


37.4
log
@killed ".." for cape
@
text
@d3 1
a3 1
*	$Id: AllocRaster.asm,v 37.3 91/02/12 16:57:48 chrisg Exp Locker: chrisg $
d17 1
a17 1
*	   d0                    d0:16  d1:16
d19 1
a19 1
*	PLANEPTR AllocRaster(UWORD,UWORD);
d23 2
a24 2
*	to allocate memory space for a bitplane width bits
*	wide and height bits high.
d27 1
a27 1
*	width	- number of bits wide for bitplane
d34 7
@


37.3
log
@changed spaces to tabs in autodoc
@
text
@d3 1
a3 1
*	$Id: AllocRaster.asm,v 37.2 91/02/12 12:02:43 chrisg Exp Locker: chrisg $
d45 1
a45 1
	include '../macros.i'
@


37.2
log
@ More autodoc editing.
@
text
@d3 1
a3 1
*	$Id: AllocRaster.asm,v 37.1 91/02/12 11:35:38 chrisg Exp Locker: chrisg $
d13 1
a13 1
*       AllocRaster -- Allocate space for a bitplane.
d16 2
a17 2
*       planeptr = AllocRaster( width, height )
*          d0                    d0:16  d1:16
d22 2
a23 2
*       This function calls the memory allocation routines
*       to allocate memory space for a bitplane width bits
d28 1
a28 1
*       height	- number of rows in bitplane
d37 1
a37 1
*       FreeRaster() graphics/gfx.h
d47 1
a47 1
*               current routine calls a C subroutine to do the work
@


37.1
log
@ Cleaned up auodoc and added prototype.
@
text
@d3 1
a3 1
*	$Id: AllocRaster.asm,v 37.0 91/01/07 15:15:34 spence Exp Locker: chrisg $
d37 1
a37 1
*       FreeRaster graphics/gfx.h
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: AllocRaster.asm,v 1.3 90/07/27 16:35:45 bart Exp Locker: spence $
d19 1
a19 2
*	PLANEPTR planeptr;
*	USHORT	width,height;
d27 2
a28 2
*	width - number of bits wide for bitplane
*       height - number of rows in bitplane
d31 3
a33 3
*       planeptr - pointer to first word in bitplane
*	    If unable to allocate space then planeptr will be NULL.
*
d40 1
@


1.3
log
@id
@
text
@d3 1
a3 1
*	$Id: $
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Header: AllocRaster.asm,v 1.1 88/05/01 15:35:57 dale Exp $
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
*	$Header: AllocRaster.asm,v 33.0 86/05/17 15:03:25 bart Exp $
@
