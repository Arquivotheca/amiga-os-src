head     39.3;
branch   ;
access   ;
symbols  rel39_24:39.3 rel39_18:39.3 rel39_97:39.3 rel39_90:39.3 rel39_89:39.3 rel39_82:39.2 rel39_76:39.2 rel39_71:39.2 rel39_65:39.2 rel39_64:39.2 rel39_61:39.2 rel39_60:39.2 rel39_55:39.1 rel39_52:39.1 rel39_47:39.1 rel39_39:39.1 rel39_38:39.1 rel39_37:39.1 rel39_35:39.1 rel39_34:39.1 V37_30:37.1 V37_29:37.1 V37_28:37.1 V37_27:37.1 V37_25:37.1 V37_24:37.1 V37_23:37.1 V37_22:37.1 V37_21:37.1 V37_20:37.1 V37_19:37.1 V37_18:37.1 V37_17:37.1 V37_15:37.1 V37_14:37.1 V37_13:37.0 V37_12:37.0 V37_11:37.0 V37_10:37.0 V37_9:37.0 V37_8:37.0 V37_7:37.0 V37_6:37.0 V37_5:37.0 V37_4:37.0 V37_3:37.0 V37_2:37.0 V37_1:37.0 V36_209:1.3 V36_208:1.3 V36_207:1.3 V36_205:1.3 V36_203:1.3 V36_202:1.3 V36_201:1.3 V36_200:1.3 V36_199:1.3 V36_198:1.3 V36_196:1.3 V36_195:1.3 V36_194:1.3 V36_193:1.3 V36_192:1.3 V36_191:1.3 V36_190:1.3 V36_189:1.3 V36_188:1.3 V36_187:1.3 V36_186:1.3 V36_185:1.3 V36_184:1.3 V36_183:1.3 V36_182:1.3 V36_181:1.3 V36_180:1.3;
locks    ; strict;
comment  @@;


39.3
date     92.08.27.12.05.18;  author spence;  state Exp;
branches ;
next     39.2;

39.2
date     92.05.05.11.44.38;  author chrisg;  state Exp;
branches ;
next     39.1;

39.1
date     92.01.07.13.40.29;  author spence;  state Exp;
branches ;
next     39.0;

39.0
date     91.08.21.17.26.46;  author chrisg;  state Exp;
branches ;
next     37.1;

37.1
date     91.02.12.15.08.45;  author chrisg;  state Exp;
branches ;
next     37.0;

37.0
date     91.01.07.15.25.39;  author spence;  state Exp;
branches ;
next     1.3;

1.3
date     90.08.24.11.27.57;  author bart;  state Exp;
branches ;
next     1.2;

1.2
date     90.03.27.16.20.37;  author bart;  state Exp;
branches ;
next     1.1;

1.1
date     88.05.01.15.36.40;  author dale;  state Exp;
branches ;
next     ;


desc
@@


39.3
log
@documented MrgCop() error return.
@
text
@*******************************************************************************
*
*	$Id: mrgcop.asm,v 39.2 92/05/05 11:44:38 chrisg Exp Locker: spence $
*
*******************************************************************************

	section	graphics

	include '/monitor.i'
	include '/macros.i'
	include	'/gfxbase.i'

	xdef	_MrgCop
	xref	_mrgcop
	xref	_LVOGfxLookUp

******* graphics.library/MrgCop ************************************************
*
*   NAME
*       MrgCop -- Merge together coprocessor instructions.
*
*   SYNOPSIS
*       error = MrgCop( View )
*       d0              A1
*
*	ULONG MrgCop( struct View * );
*
*   FUNCTION
*       Merge together the display, color, sprite and user coprocessor
*       instructions into a single coprocessor instruction stream.  This
*       essentially creates a per-display-frame program for the coprocessor.
*       This function MrgCop is used, for example, by the graphics animation
*       routines which effectively add information into an essentially
*       static background display.  This changes some of the user
*       or sprite instructions, but not those which have formed the
*       basic display in the first place.  When all forms of coprocessor
*       instructions are merged together, you will have a complete per-
*       frame instruction list for the coprocessor.
*
*       Restrictions:  Each of the coprocessor instruction lists MUST be
*       internally sorted in min to max Y-X order.  The merge routines
*       depend on this! Each list must be terminated using CEND(copperlist).
*
*   INPUTS
*       View - a pointer to the view structure whose coprocessor
*              instructions are to be merged.
*
*   RESULT
*       The view structure will now contain a complete, sorted/merged
*       list of instructions for the coprocessor, ready to be used by
*       the display processor.  The display processor is told to use
*       this new instruction stream through the instruction LoadView().
*
*	From V39, MrgCop() can return a ULONG error value (previous versions
*	returned void), to indicate that either there was insufficient memory
*	to build the system copper lists, or that MrgCop() had no work to do
*	if, for example, there were no ViewPorts in the list.
*
*	You should check for these error values - they are defined in
*	<graphics/view.h>.
*
*   BUGS
*
*   SEE ALSO
*       InitVPort() MakeVPort() LoadView() graphics/view.h
*	intuition.library/RethinkDisplay()
*
******************************************************************************
_MrgCop:

* From V39, MrgCop() is vectored through the MonitorSpec. Use _mrgcop as
* a default.

	addq.l	#1,gb_SpecialCounter(a6)
	move.l	a1,-(sp)	; push view pointer on stack
	beq.s	mc_default		; MrgCopDefault

	move.l	a1,a0
	jsr	_LVOGfxLookUp(a6)
	tst.l	d0
	beq.s	mc_default
	move.l	d0,a0			; ViewExtra
	move.l	ve_Monitor(a0),d0
	beq.s	mc_default
	move.l	d0,a0
	move.l	ms_MrgCop(a0),a0	; address to call
mc_doit:
	jsr	(a0)
	addq.l	#4,sp
	rts
mc_default:
	lea	_mrgcop,a0
	bra.s	mc_doit

	end
@


39.2
log
@support for gbase copper list creation counter.
@
text
@d3 1
a3 1
*	$Id: mrgcop.asm,v 39.1 92/01/07 13:40:29 spence Exp Locker: chrisg $
d23 2
a24 2
*       MrgCop( View )
*                A1
d26 1
a26 1
*	void MrgCop( struct View * );
a48 1
*
d53 8
@


39.1
log
@Calls Through MonitorSpec (if available), else uses default.
@
text
@d3 1
a3 1
*	$Id: mrgcop.asm,v 39.0 91/08/21 17:26:46 chrisg Exp Locker: spence $
d11 1
d67 1
@


39.0
log
@Bumped
@
text
@d3 1
a3 1
*	$Id: MrgCop.asm,v 37.1 91/02/12 15:08:45 chrisg Exp Locker: chrisg $
d8 8
a15 2
    xdef    _MrgCop
    xref    _mrgcop
d62 6
a67 5
*               current routine calls a C subroutine to do the work
    move.l  a1,-(sp)    * push ptr to drastr on the stack
    jsr _mrgcop     * call C routine
    addq.l #4,sp        * remove args from stack
    rts
d69 16
@


37.1
log
@ autodoc editing
@
text
@d3 1
a3 1
*	$Id: MrgCop.asm,v 37.0 91/01/07 15:25:39 spence Exp Locker: chrisg $
@


37.0
log
@initial switchover from V36
@
text
@d3 1
a3 1
*	$Id: MrgCop.asm,v 1.3 90/08/24 11:27:57 bart Exp Locker: spence $
d19 1
a19 1
*	struct View *View;
d35 1
a35 2
*       depend on this!
*		Each list must be terminated using CEND(copperlist)
d51 2
a52 2
*       InitVPort MakeVPort LoadView graphics/view.h
*		Intuition's RethinkDisplay
@


1.3
log
@id
@
text
@d3 1
a3 1
*	$Id: $
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Header: MrgCop.asm,v 1.1 88/05/01 15:36:40 dale Exp $
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
*	$Header: MrgCop.asm,v 33.0 86/05/17 15:08:52 bart Exp $
@
