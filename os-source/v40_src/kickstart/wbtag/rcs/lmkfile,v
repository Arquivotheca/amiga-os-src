head     37.3;
branch   ;
access   ;
symbols  V39_1:37.3 V37_2:37.2 V_:37.2 LOCKDOWN_2_04:37.2 BETA_2_04_C:37.2;
locks    ; strict;
comment  @# @;


37.3
date     92.04.20.10.12.03;  author mks;  state Exp;
branches ;
next     37.2;

37.2
date     91.01.24.16.43.27;  author mks;  state Exp;
branches ;
next     37.1;

37.1
date     91.01.24.16.39.55;  author mks;  state Exp;
branches ;
next     ;


desc
@Makefile for wbtag
@


37.3
log
@Fixed the rules a bit (and made it look like my other make files)
@
text
@###############################################################################
#
# lmkfile for wbtag
#
###############################################################################

#
# Server directory for the data...
#
REMOTE = V:src/kickstart/wbtag
VERSION= 39

#
# Name of the module
#
MODNAME	= wbtag

#
# The ".LD" file we want to produce.
#
LD_FILE	= $(MODNAME).ld
LD_STRIP= $(MODNAME).ld.strip

#
# Compiler, assembler, and linker
#
CC = lc
AS = hx68 -a
LN = blink

#
# Compiler flags...
#
CFLAGS	= -b0 -v -me -ms -cfistqm -d1 -O

#
# Assembler flags...  NOTE how they are used below...
#
AFLAGS	= -cqs -i include: -o

#
# Default rules...
#
.c.o:
	$(CC) $(CFLAGS) $*.c

.asm.o:
	$(AS) $*.asm $(AFLAGS) $*.o

#
# Linker flags
#
LFLAGS		= ADDSYM SMALLCODE SMALLDATA
LFLAGS_STRIP	= ND

#
# System libraries
#
LIBS= LIB:small.lib LIB:debug.lib debug.lib

#
# My headers...
#
PUBLIC_HDR =

MY_HDR	=	wbtag.i wbtag.h $(PUBLIC_HDR)

#
# My C source...
#
MY_C	=

#
# My Assebly source...
#
MY_A	=	wbtag.asm

#
# My object files...
#
MY_OBJS	=	wbtag.o

#
# My library objects...
#
MY_LIB_OBJS =

#
# My library files...
#
MY_LIBS	=


ALL:	$(LD_STRIP)

#
# Build the stripped LD file...
#
$(LD_STRIP):	$(LD_FILE)
	$(LN) FROM $(LD_FILE) TO $(LD_STRIP) $(LFLAGS_STRIP)

#
# Build the various versions
#
$(LD_FILE):	$(MY_OBJS)
	$(LN) <with <
FROM $(MY_OBJS)
TO $(LD_FILE)
LIB $(MY_LIBS) $(LIBS)
MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16
$(LFLAGS)
<

#
# Specific dependancies...
#
wbtag.o:	wbtag.asm wbtag_rev.i

#
# Bump the version...
#
version:
	@@bumprev $(VERSION) $(MODNAME)_rev

$(MODNAME)_rev.i:
	@@bumprev $(VERSION) $(MODNAME)_rev

$(MODNAME)_rev.h:
	@@bumprev $(VERSION) $(MODNAME)_rev

#
# Release the current build to the server
#
internal:
	@@delete $(REMOTE)/((\#?.(c|h|asm|i|rev|doc|sfd|ld|ld.\#?))|makefile|lmkfile)
	@@protect ((\#?.(c|h|asm|i|ld|rev|doc|sfd))|makefile|lmkfile) +r quiet
	@@copy ((\#?.(c|h|asm|i|rev|doc|sfd|ld|ld.\#?))|makefile|lmkfile) $(REMOTE)
	@@copy \#?.doc V:doc NOPRO
	@@copy \#?.sfd V:lib/sfd NOPRO

#
# Blow away all files that would need to be rebuilt
#
clean:
	@@delete (\#?.o|\#?.o.\#?|$(MODNAME).doc|$(MODNAME).ld\#?)

#
# Make the AutoDocs
#
doc:	$(MODNAME).doc

$(MODNAME).doc:	$(MY_C) $(MY_A)
	@@Echo "Making $(MODNAME).doc"
	@@Join $(MY_C) $(MY_A) as RAM:$(MODNAME).tmp.doc
	@@AutoDoc >$(MODNAME).doc RAM:$(MODNAME).tmp.doc
	@@Delete RAM:$(MODNAME).tmp.doc QUIET
	@@Protect $(MODNAME).doc rwd

#
# Make a complete new release (This still is in testing...)
#
release:
	lmk clean
	lmk version
	lmk doc
	lmk $(LD_FILE)
	lmk $(LD_STRIP)
	lmk headers
	lmk internal

#
# The following rule is to bring the source down to the local directory
# To do the following you should copy this LMKfile to the local directory
# and make sure it is readable.  Then type MAKE ToLocal to have the
# code copied down...
#
tolocal:
	@@protect \#? rwed QUIET
	@@copy $(REMOTE)/\#? ""
	@@protect \#? +r QUIET
	@@protect \#?_rev\#? rwd QUIET
	@@Echo "Local is updated..."
@


37.2
log
@Fixed makefile linker flags
@
text
@d1 1
d5 1
d11 1
d28 1
a28 1
AS = casm -a
d39 1
a39 1
AFLAGS	= -csy -i include: -o
d42 9
d53 1
a53 1
LFLAGS		= ADDSYM SMALLCODE SMALLDATA MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16
d59 1
a59 1
LIBS= LIB:ROM.lib LIB:debug.lib LIB:lcnb.lib
d64 1
a64 1
MY_HDR	=
d66 2
d93 3
d103 1
a103 1
# Build the LD file...
d105 1
a105 1
$(LD_FILE):	$(MY_OBJS) $(MY_LIBS)
d110 1
a113 10

#
# Default rules...
#
.c.o:
	$(CC) $(CFLAGS) $*.c

.asm.o:
	$(AS) $*.asm $(AFLAGS) $*.o

d123 7
a129 1
	@@bumprev 37 $(MODNAME)_rev
d135 5
a139 3
	@@delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc))|makefile|lmkfile)
	@@protect ((\#?.(c|h|asm|i|ld|rev|doc))|makefile|lmkfile) +r quiet
	@@copy ((\#?.(c|h|asm|i|ld|rev|doc))|makefile|lmkfile) $(REMOTE)
d145 1
a145 1
	@@delete \#?.(o|ld|doc)
d155 1
a155 1
	@@AutoDoc >$(MODNAME).doc -a RAM:$(MODNAME).tmp.doc
d168 1
@


37.1
log
@First Amiga build makefile
@
text
@d11 11
d41 1
a41 1
LFLAGS		= ADDSYM SMALLCODE SMALLDATA MAP icon.map HLSXF PLAIN SWIDTH 16
a47 11

#
# Name of the module
#
MODNAME	= wbtag

#
# The ".LD" file we want to produce.
#
LD_FILE	= $(MODNAME).ld
LD_STRIP= $(MODNAME).ld.strip
@
