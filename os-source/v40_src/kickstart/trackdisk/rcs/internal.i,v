head     33.19;
branch   ;
access   ;
symbols  V36_21:33.15 V36_20:33.15 V36_19:33.14 V36_18:33.14 V36_16:33.13 V36_15:33.13 V36_14:33.13 V36_13:33.13 V36_10:33.11 V36_9:33.10 V36_6:33.9 V36_5:33.8 V36_4:33.6 L36_2:33.3 L33_127:33.3 L33_126:33.3 L33_124:33.3 L33_120:33.2 L33_119:33.2 L33_116:33.2 L33_113:33.1 L33_106:33.1 L32_98:32.2 L31_87:32.1 L31_57:30.2 L31_56:30.2 L1_55:30.2 L1_54:30.1 L1_51:27.2 L1_47:27.2 L1_45:27.2 L1_44:27.2 L29_44:27.2 L29_42:27.2 L28_37:27.1 L28_35:27.1 L28_27:27.1 L28_26:27.1 L27_5:27.1 L27_2:27.1 L26_3:26.1 L26_0:26.1;
locks    ; strict;
comment  @* @;


33.19
date     92.04.05.19.45.01;  author jesup;  state Exp;
branches ;
next     33.18;

33.18
date     91.04.14.00.39.41;  author jesup;  state Exp;
branches ;
next     33.17;

33.17
date     91.03.13.20.46.29;  author jesup;  state Exp;
branches ;
next     33.16;

33.16
date     91.01.17.15.07.09;  author jesup;  state Exp;
branches ;
next     33.15;

33.15
date     90.11.28.23.51.26;  author jesup;  state Exp;
branches ;
next     33.14;

33.14
date     90.11.21.04.21.40;  author jesup;  state Exp;
branches ;
next     33.13;

33.13
date     90.06.01.23.15.33;  author jesup;  state Exp;
branches ;
next     33.12;

33.12
date     90.06.01.16.32.33;  author jesup;  state Exp;
branches ;
next     33.11;

33.11
date     90.03.16.01.20.50;  author jesup;  state Exp;
branches ;
next     33.10;

33.10
date     90.03.01.23.01.30;  author jesup;  state Exp;
branches ;
next     33.9;

33.9
date     89.12.10.18.37.30;  author jesup;  state Exp;
branches ;
next     33.8;

33.8
date     89.09.06.18.55.51;  author jesup;  state Exp;
branches ;
next     33.7;

33.7
date     89.05.15.21.19.13;  author jesup;  state Exp;
branches ;
next     33.6;

33.6
date     89.03.23.14.22.13;  author jesup;  state Exp;
branches ;
next     33.5;

33.5
date     89.03.22.17.34.32;  author jesup;  state Exp;
branches ;
next     33.4;

33.4
date     89.02.17.19.11.41;  author jesup;  state Exp;
branches ;
next     33.3;

33.3
date     86.04.10.00.57.26;  author neil;  state Exp;
branches ;
next     33.2;

33.2
date     86.04.03.23.35.22;  author neil;  state Exp;
branches ;
next     33.1;

33.1
date     86.03.29.14.13.55;  author neil;  state Exp;
branches ;
next     32.2;

32.2
date     86.01.03.19.52.13;  author neil;  state Exp;
branches ;
next     32.1;

32.1
date     85.12.23.17.19.28;  author neil;  state Exp;
branches ;
next     30.2;

30.2
date     85.10.09.14.57.23;  author neil;  state Exp;
branches ;
next     30.1;

30.1
date     85.10.09.00.36.28;  author neil;  state Exp;
branches ;
next     27.2;

27.2
date     85.08.07.16.25.12;  author carl;  state Exp;
branches ;
next     27.1;

27.1
date     85.06.24.13.37.06;  author neil;  state Exp;
branches ;
next     26.1;

26.1
date     85.06.17.15.13.53;  author neil;  state Exp;
branches ;
next     ;


desc
@@


33.19
log
@Added new TDT defines (STEP,SETTLE,CALIBRATE)
Bumped post-write to 3ms, sidesel to 1.5ms (damn broken A1010's!)
(Panasonic/Matsushita JU 363-xxx's may require 4ms!)
@
text
@
*************************************************************************
*									*
*	Copyright (C) 1985, Commodore Amiga Inc.  All rights reserved.	*
*									*
*************************************************************************

*************************************************************************
*
* Source Control
* ------ -------
* 
* $Id: internal.i,v 33.18 91/04/14 00:39:41 jesup Exp Locker: jesup $
*
* $Locker: jesup $
*
* $Log:	internal.i,v $
* Revision 33.18  91/04/14  00:39:41  jesup
* Bumped post-write delay back to 2000us - old Panasonic drives need this
* 
* Revision 33.17  91/03/13  20:46:29  jesup
* Added the ALLBAD bit
* 
* Revision 33.16  91/01/17  15:07:09  jesup
* added unreadable bit
* 
* Revision 33.15  90/11/28  23:51:26  jesup
* TDB_DATA no longer a constant, now a variable
* 
* Revision 33.14  90/11/21  04:21:40  jesup
* Changes for multi-density drives
* 
* Revision 33.13  90/06/01  23:15:33  jesup
* Conform to include standard du jour
* 
* Revision 33.12  90/06/01  16:32:33  jesup
* comment change
* 
* Revision 33.11  90/03/16  01:20:50  jesup
* Added new flags to track buffer structure
* Added to dicussion of disk issues
* 
* Revision 33.10  90/03/01  23:01:30  jesup
* Added comments
* 
* Revision 33.9  89/12/10  18:37:30  jesup
* moved current trk and counter to public unit, added ptr for chip mem buf
* 
* Revision 33.8  89/09/06  18:55:51  jesup
* Changed TDT_DISKSYNC
* 
* Revision 33.7  89/05/15  21:19:13  jesup
* Backed off SIDESEL delay to 1000us (1ms) from 100us.  100us causes
* spurious R/W errors when a disk is inserted in another drive during a
* loadseg of preferences on my '030 (sometimes).  1000us seems to solve
* the problem.  ARGH.
* 
* Revision 33.6  89/03/23  14:22:13  jesup
* no change, just a mark
* 
* Revision 33.5  89/03/22  17:34:32  jesup
* Modified private unit structure for alignment
* 
* Revision 33.4  89/02/17  19:11:41  jesup
* modified track buffer structure, etc for use with sync reads.
* TD_TRKBUF made according to calculations, not random anymore.
* 
* Revision 33.3  86/04/10  00:57:26  neil
* Added AddChangeInt and RemChangeInt
* 
* Revision 33.2  86/04/03  23:35:22  neil
* made part of unit structure public
* 
* Revision 33.1  86/03/29  14:13:55  neil
* made seek and settle time programmable.  Isolated unit specific
* initializers to the beginning of the unit structure
* 
* Revision 32.2  86/01/03  19:52:13  neil
* Added reset catching code
* 
* Revision 32.1  85/12/23  17:19:28  neil
* Added rawread/rawwrite
* 
* Revision 30.2  85/10/09  14:57:23  neil
* comment changes
* 
* Revision 30.1  85/10/09  00:36:28  neil
* Another internal (for 1.01)
* 
* Revision 27.2  85/08/07  16:25:12  carl
* TDT_SIDESEL changed to 1000 us.
* 
* Revision 27.1  85/06/24  13:37:06  neil
* Upgrade to V27
* 
* Revision 26.1  85/06/17  15:13:53  neil
* *** empty log message ***
* 
* 
*************************************************************************

ErrorMonitor	EQU	0
ERRORMSGS	EQU	0
INFO_LEVEL	EQU	20


*--------------------------------------------------------------------
*
* Defines for AMIGA0.0 track format
*
*--------------------------------------------------------------------

* label size must be a unit of 16 bytes (because of TDMfmEncode and Decode)
 
FMT_SECTYPE	EQU	$ff

*;-- format word for the ID longword
 STRUCTURE FMT,0
	UBYTE	FMT_TYPE			; always FF
	UBYTE	FMT_TRACK			; track number
	UBYTE	FMT_SECTOR			; sector number
	UBYTE	FMT_SECOFF			; sec offset from start of read
	STRUCT	FMT_SECLABEL,TD_LABELSIZE	; OS recovery info
	ULONG	FMT_HDRSUM			; header checksum
	LABEL	FMT_SIZE


*;-- format for the sector as it appears BEFORE mfm encoding
* sector header must be in units of 32 bytes (because of TDMfmAllignSector)
 STRUCTURE SEC,0
	UWORD	SEC_ZEROS
	UWORD	SEC_A1
	STRUCT	SEC_FMT,FMT_SIZE
	ULONG	SEC_DATASUM
	LABEL	SEC_DATA
	LABEL	SEC_HDRSIZE

MFMTD_LABELSIZE	EQU	TD_LABELSIZE*2

MFMFMT_TYPE	EQU	FMT_TYPE*2
MFMFMT_TRACK	EQU	FMT_TRACK*2
MFMFMT_SECTOR	EQU	FMT_SECTOR*2
MFMFMT_SECOFF	EQU	FMT_SECOFF*2
MFMFMT_SECLABEL EQU	FMT_SECLABEL*2
MFMFMT_HDRSUM	EQU	FMT_HDRSUM*2
MFMFMT_SIZE	EQU	FMT_SIZE*2

MFMSEC_ZEROS	EQU	SEC_ZEROS*2
MFMSEC_A1	EQU	SEC_A1*2
MFMSEC_FMT	EQU	SEC_FMT*2
MFMSEC_DATASUM	EQU	SEC_DATASUM*2
MFMSEC_DATA	EQU	SEC_DATA*2
MFMSEC_HDRSIZE	EQU	SEC_HDRSIZE*2


*--------------------------------------------------------------------
*
* Useful constants
*
*--------------------------------------------------------------------

*
* disc size note:  A perfect disc spins in 200 milliseconds (+/- 1.5 %)
*	and each bit on it takes four microseconds.  This results in
*	6250 (+/- 94) bytes of storage on the disc.  However on our system
*	the clock rate is 2.3% fast. Also, we want to test the system
*	at a 5% fast speed.  This gives us a speed error budget of
*	1.015 * 1.023 * 1.05 = 1.09 speed variation.  Note that when the
*	disk spins faster, we can fit less bytes on a track, when it spins
*	slower, we can fit more bytes on a track.
*
*	We also tolerate a 5% slow clock.  Overall, we have:
*		+- 1.5%	disk speed slop
*		+  2.3%	nominal timing is 2.3% fast
*		+- 5.0%	timing slop
*
*	The minimum number of bytes we can lay on a track is when disk and
*	clock subtract. This gives .96 * nominal bytes, or 5999 bytes that
*	can be written.  The maximum numbers of bytes that can be written
*	is when disk and clock add.  This gives 1.09 * nominal, or 6812
*	bytes.  We must write enough nulls for the gap to at least equal
*	this number.  This number is a mimimum of 824 bytes, so we use 830.
*
*	The 5% is needed for timing variations due to machine-to-machine
*	differences, PAL/NTSC, temperature, and Genlock.
*
*	The buffer is laid out as:
*	--------------------------
*
*	nulls for write | 4 byte pad | used track | slop + sector for read
*	   830		     4		5984		830 + 544
*
*	The "+ sector for read" is because we read starting at "used track",
*	and may have 543 bytes before we see the first beginning of sector.
*	Note that this only applies to non-wordsync reads.  Writes start at
*	the beginning of the buffer.  For sync reads, it is possible that
*	a bit flip caused a sync mark to appear at the beginning of a sector,
*	so, we should still keep enough memory for 1 full extra sector if we
*	want to be certain of reading the entire track.  We don't, since
*	we'll end up retrying instead (such a case is low probability, and will
*	slow down all reads otherwise, and take 1K extra memory per disk
*	drive).  We must deal with the first SYNC being lost, since we may turn
*	on DMA in the middle of the first sync (about 1/1000).  This causes us
*	to get no syncs in the buffer, and must align differently for write
*	(either move the track up a word to insert the missing sync, or put the
*	NULLS and syncs a word lower and write 2 less bytes.)
*
*	Unlike most MFM systems, $6db6 is NOT the worst-case pattern.  This is
*	because we seperate the even and odd bits.  So the worst-case pattern
*	is $6db6 with each bit doubled, or $f0f3cff0.
*

*-- sizes before mfm encoding
*-- NOTE: these are for 1Meg floppies!!!  double for 2M (1.44M/1760K)

TD_NOMTRACK	EQU	6250		; one nominal track
TD_SLOP		EQU	830		; ~ 1.09 * NOMTRACK - TD_USEDTRACK
TD_RAWSECTOR	EQU	TD_SECTOR+SEC_HDRSIZE
TD_USEDTRACK	EQU	11*(TD_RAWSECTOR)	; the used part of a track
TD_MAXTRACK	EQU	TD_USEDTRACK+TD_SLOP	; max possible track
TD_TRKBUF	EQU	TD_SLOP+4+TD_MAXTRACK	; was 16*TD_SECTOR ; !!! 8k
						; +4 for space for final $aaa8

TD_BIG_NOMTRACK	EQU	6250*2		; one nominal track
TD_BIG_SLOP	EQU	830*2		; ~ 1.09 * NOMTRACK - TD_USEDTRACK
TD_BIG_USEDTRACK EQU	22*(TD_RAWSECTOR)	; the used part of a track
TD_BIG_MAXTRACK	EQU	TD_BIG_USEDTRACK+TD_BIG_SLOP	; max possible track
TD_BIG_TRKBUF	EQU	TD_BIG_SLOP+4+TD_BIG_MAXTRACK
						; +4 for space for final $aaa8
*-- sizes after mfm encoding
MFM_NOMTRACK	EQU	2*TD_NOMTRACK
MFM_SLOP	EQU	2*TD_SLOP
MFM_SECTOR	EQU	2*TD_SECTOR
MFM_SECSHIFT	EQU	TD_SECSHIFT+1	; log  MFM_SECTOR
					;    2
MFM_BIG_NOMTRACK EQU	2*TD_BIG_NOMTRACK
MFM_BIG_SLOP	EQU	2*TD_BIG_SLOP

*					;    2
MFM_RAWSECTOR	EQU	2*TD_RAWSECTOR
MFM_TRKBUF	EQU	2*TD_TRKBUF
MFM_USEDTRACK	EQU	2*TD_USEDTRACK
MFM_MAXTRACK	EQU	2*TD_MAXTRACK

MFM_BIG_TRKBUF	EQU	2*TD_BIG_TRKBUF
MFM_BIG_USEDTRACK EQU	2*TD_BIG_USEDTRACK
MFM_BIG_MAXTRACK EQU	2*TD_BIG_MAXTRACK



MAX_NUMSECS	EQU	22

*--------------------------------------------------------------------
*
* Defines for unit state and status
*
*--------------------------------------------------------------------

*-- Unit Structure
 STRUCTURE TDU,TDU_PUBLICUNITSIZE	;(000)
	UBYTE	TDU_DRIVETYPE		;(xxx) the type of the drive
	UBYTE	TDU_RESERVED2		;(XXX) for alignment
	UWORD	TDU_NUMTRACKS		;(xxx) number of tracks on this drive
	ULONG	TDU_MAXOFFSET		;(xxx) max IO_POSITION allowable
					; Note: now variable
	UWORD	TDU_MFM_TRKBUF		; used to be MFM_TRKBUF equate
	UWORD	TDU_MFM_MAXTRACK	; used to be MFM_MAXTRACK+2 equate
					; (the +2 is for the $aaa8 on the end!)
	UWORD	TDU_MFM_SLOP		; used to be MFM_SLOP equate
	UWORD	TDU_NUMSECS		; used to be 11
	ULONG	TDU_TDT_DISKSYNC	; used to be TDT_DISKSYNC
	ULONG	TDU_DISKTYPE		;(xxx) as returned from disk resource
					; Note: now variable
	UBYTE	TDU_FLAGS		;(xxx) unit flags
	UBYTE	TDU_6522		;(xxx) word to write to 6522
	UBYTE	TDU_RETRY		;(xxx) count of retries
	UBYTE	TDU_UNITNUM		;(xxx) the number of our unit
	ULONG	TDU_IOBLOCK		;(xxx) holds current IOBlock
	UBYTE	TDU_STATE		;(xxx) current state of the driver
	UBYTE	TDU_SECTOR		;(xxx) sector being operated on
	UWORD	TDU_TRACK		;(xxx) track being operated on
*	UWORD	TDU_SEEKTRK		;(xxx) track the heads are over
TDU_SEEKTRK	EQU	TDU_CURRTRK
	APTR	TDU_BUFFER		;(xxx) track buffer in use
	APTR	TDU_BUFPTR		;(xxx) ptr to allocated bufs for
*					;	this unit
	APTR	TDU_CHIPBUF		; ptr to 1 sector of chip mem - REJ
	APTR	TDU_DATA		;(xxx) current ptr to user data
	APTR	TDU_LABELDATA		;(xxx) current ptr to label data
	STRUCT	TDU_WAITTIMER,IOTV_SIZE	;(xxx) to request sleeps
	STRUCT	TDU_CHANGETIMER,IOTV_SIZE ;(xxx) to check for disc change
	STRUCT	TDU_WAITPORT,MP_SIZE	;(xxx) message port for replies
	STRUCT	TDU_DRU,DRU_SIZE	;(xxx) resource unit
	ULONG	TDU_REMOVEINT		;(xxx) soft int to call on removal
	STRUCT	TDU_TCB,TC_SIZE		;(xxx) tcb for disc task
	APTR	TDU_ENTRY		;(xxx) ptr to MemEntry for unit
	STRUCT  TDU_CHANGELIST,LH_SIZE  ;(xxx) list to hold change ints


 IFNE ErrorMonitor
*	;-- temporary stuff to monitor errors
	STRUCT	TDU_SOFTERRS,2*NUMTRACKS	; word array, one per track
	STRUCT	TDU_NUMERRS,2*NUMTRACKS
	STRUCT	TDU_HARDERRS,2*NUMTRACKS
*	;-- end error monitoring stuff
 ENDC ErrorMonitor

	LABEL	TDU_SIZE

*-- Flags for TDU_FLAGS:

	BITDEF	TDU,SECLABEL,0			; writting the sector label
	BITDEF	TDU,REMOVED,1			; the disc is out of the drive
	BITDEF	TDU,EXTENDED,2			; doing an extended command
	BITDEF	TDU,DELMOTOROFF,3		; turn the motor off eventually
	BITDEF	TDU,PROTECTED,4			; disk is write protected
	BITDEF	TDU,STOPPED,5			; Unit is stopped
	BITDEF	TDU,LARGE,6			; unit has large buffer
	BITDEF	TDU,UNREADABLE,7		; can't read this disk

*-- Flags for io_Flags:
	;------ this is set if the IO Command happened NOW (like quick...)
	BITDEF	IO,IMMEDIATE,7

*-- Track Buffer structure
 STRUCTURE TDB,0
	UWORD	TDB_TRACK
	UBYTE	TDB_FLAGS
	UBYTE	TDB_ALLIGN			; # of first sector in buffer
	APTR	TDB_DATA			; ptr past slop
	STRUCT	TDB_SECPTRS,MAX_NUMSECS*4	; pointers to the word after 4489
	STRUCT	TDB_SECERRS,((MAX_NUMSECS+3)/4)*4 ; errors associated with each
	STRUCT	TDB_BUF,MFM_TRKBUF
	LABEL	TDB_SIZE

*-- larger Track Buffer structure
 STRUCTURE TDB_LARGE,TDB_SIZE
	STRUCT	TDB_EXTRABUF,MFM_TRKBUF
	LABEL	TDB_LARGE_SIZE

* old definition
*TDB_DATA	EQU TDB_BUF+MFM_SLOP		; start of mfm data in buffer


	BITDEF	TDB,DIRTY,0
	BITDEF	TDB,VALID,1
	BITDEF	TDB,HASERRS,2
	BITDEF	TDB,OFFSET_2,3			; Trk starts at TDB_DATA+2
	BITDEF	TDB,ALIGNED,4			; trk already aligned for write
	BITDEF	TDB,ALLBAD,5			; track is unreadable

*-- Device Structure
 STRUCTURE TD,DD_SIZE
	UBYTE	TD_FLAGS		; general device flags
	UBYTE	TD_pad
	APTR	TDU0			; unit structure for unit 0
	APTR	TDU1			; unit structure for unit 1
	APTR	TDU2			; unit structure for unit 2
	APTR	TDU3			; unit structure for unit 3
	APTR	TD_SYSLIB		; ptr to system library
	APTR	TD_GFXLIB		; ptr to graphics library
	APTR	TD_DISCRESOURCE		; ptr to disc resource
	STRUCT	TD_MEMLIST,LH_SIZE	; all of driver's memory
	APTR	TD_TIMER0_DEV
	APTR	TD_TIMER0_UNIT
	APTR	TD_TIMER1_DEV
	APTR	TD_TIMER1_UNIT
	APTR	TD_CIABRESOURCE		; pointer to cia resource
	STRUCT	TD_RESETINT,IS_SIZE	; soft int when we get a reset
	STRUCT	TD_RESETIOB,IOSTD_SIZE	; to ack a reset
	LABEL	TD_SIZE

*-- TD flags
	BITDEF	TD,DELEXP,7	; expunge upon last close
	BITDEF	TD,PAULA,6	; we are running on a paula chip (vs portia)
	BITDEF	TD,WRITING,5	; we are currently writing
	BITDEF	TD,RESET,4	; someone has hit a reset

TD_STKSIZE	EQU	$200

*--------------------------------------------------------------------
*
* Time Constants (all times are in microseconds)
*
*--------------------------------------------------------------------

TDT_MOTORON	EQU	500000
TDT_DISKSYNC	EQU	300000
TDT_POSTWRITE	EQU	3000	; 2000, SPEC SAYS 1200!
TDT_SIDESEL	EQU	1500	; 1000, SPEC SAYS 100!
TDT_FORMAT	EQU	300000
TDT_STEP	EQU	3000	; default
TDT_CALIBRATE	EQU	4000	; default
TDT_SETTLE	EQU	15000	; default

*--------------------------------------------------------------------
*
* Random defines
*
*--------------------------------------------------------------------

NUM_RETRIES	EQU	10	; default # of retries


	XREF	GLQBlit

DOGFX		MACRO	* &FUNC
		LINKLIB _LVO\1,TD_GFXLIB(A6)
		ENDM

*	;------ Disc DMA bit in DMACON
	BITDEF	DMA,DISCENA,4

*	;------ Signal definitions for interfacing to driver task
*	;------ WARNING! check Bxxx instructions to memory if changed!
	BITDEF	TD,DEVDONE,8
	BITDEF	TD,PORT,9
	BITDEF	TDS,WAITTIMER,10
	BITDEF	TDS,DSKBLK,11
 

DSKLENF_DMAEN	EQU	$8000
DSKLENF_WRITE	EQU	$4000
@


33.18
log
@Bumped post-write delay back to 2000us - old Panasonic drives need this
@
text
@d13 1
a13 1
* $Id: internal.i,v 33.17 91/03/13 20:46:29 jesup Exp Locker: jesup $
d18 3
d389 2
a390 2
TDT_POSTWRITE	EQU	2000	; 2000, SPEC SAYS 1200!
TDT_SIDESEL	EQU	1000	; 1000, SPEC SAYS 100!
d392 3
a394 1

d401 3
@


33.17
log
@Added the ALLBAD bit
@
text
@d13 1
a13 1
* $Id: internal.i,v 33.16 91/01/17 15:07:09 jesup Exp $
d15 1
a15 1
* $Locker:  $
d18 3
d386 2
a387 2
TDT_POSTWRITE	EQU	1200	; WAS 2000, SPEC SAYS 1200! DANGER!
TDT_SIDESEL	EQU	1000	; WAS 1000, SPEC SAYS 100! DANGER!
@


33.16
log
@added unreadable bit
@
text
@d13 1
a13 1
* $Id: internal.i,v 33.15 90/11/28 23:51:26 jesup Exp Locker: jesup $
d15 1
a15 1
* $Locker: jesup $
d18 3
d344 1
@


33.15
log
@TDB_DATA no longer a constant, now a variable
@
text
@d13 1
a13 1
* $Id: internal.i,v 33.14 90/11/21 04:21:40 jesup Exp $
d15 1
a15 1
* $Locker:  $
d18 3
d310 1
@


33.14
log
@Changes for multi-density drives
@
text
@d13 1
a13 1
* $Id: internal.i,v 33.13 90/06/01 23:15:33 jesup Exp $
d18 3
d317 1
d328 2
a329 1
TDB_DATA	EQU TDB_BUF+MFM_SLOP		; start of mfm data in buffer
@


33.13
log
@Conform to include standard du jour
@
text
@d13 1
a13 1
* $Id: /usr/rebma/jesup/trackdisk/RCS/internal.i,v 33.12 90/06/01 16:32:33 jesup Exp Locker: jesup $
d15 1
a15 1
* $Locker: jesup $
d18 3
d194 2
a195 2
*	because we seperate th even and odd bits.  So the worst-case pattern is
*	$6db6 with each bit doubled, or $f0f3cff0.
d199 2
d204 1
a204 1
TD_USEDTRACK	EQU	NUMSECS*(TD_RAWSECTOR)	; the used part of a track
d208 7
d220 4
d230 8
d250 7
a256 1

d258 1
d303 1
d314 2
a315 3
	STRUCT	TDB_SECPTRS,NUMSECS*4		; pointers to the word after 4489
	STRUCT	TDB_SECERRS,NUMSECS		; errors associated with each
	UBYTE	TDB_PAD				; NUMSECS == 11!!
d318 5
@


33.12
log
@comment change
@
text
@d13 1
a13 1
* $Header: internal.i,v 33.11 90/03/16 01:20:50 jesup Exp $
d15 1
a15 1
* $Locker:  $
d18 3
@


33.11
log
@Added new flags to track buffer structure
Added to dicussion of disk issues
@
text
@d13 1
a13 1
* $Header: internal.i,v 33.10 90/03/01 23:01:30 jesup Exp $
d15 1
a15 1
* $Locker: jesup $
d18 4
d352 1
@


33.10
log
@Added comments
@
text
@d13 1
a13 1
* $Header: internal.i,v 33.9 89/12/10 18:37:30 jesup Exp $
d18 3
d177 5
a181 1
*	drive).
d183 4
d195 1
a195 1

d287 2
a288 1

@


33.9
log
@moved current trk and counter to public unit, added ptr for chip mem buf
@
text
@d13 1
a13 1
* $Header: internal.i,v 33.8 89/09/06 18:55:51 jesup Exp $
d18 3
d246 1
d255 1
@


33.8
log
@Changed TDT_DISKSYNC
@
text
@d13 1
a13 1
* $Header: internal.i,v 33.7 89/05/15 21:19:13 jesup Exp $
d15 1
a15 1
* $Locker:  $
d18 3
d215 2
a216 1
	UWORD	TDU_SEEKTRK		;(xxx) track the heads are over
d220 1
a226 1
	ULONG	TDU_COUNTER		;(xxx) counter of disc changes
d249 1
@


33.7
log
@Backed off SIDESEL delay to 1000us (1ms) from 100us.  100us causes
spurious R/W errors when a disk is inserted in another drive during a
loadseg of preferences on my '030 (sometimes).  1000us seems to solve
the problem.  ARGH.
@
text
@d13 1
a13 1
* $Header: internal.i,v 33.6 89/03/23 14:22:13 jesup Exp $
d15 1
a15 1
* $Locker: jesup $
d18 6
d304 1
a304 1
TDT_DISKSYNC	EQU	250000
@


33.6
log
@no change, just a mark
@
text
@d13 1
a13 1
* $Header: internal.i,v 33.5 89/03/22 17:34:32 jesup Exp $
d18 3
d300 1
a300 1
TDT_SIDESEL	EQU	100	; WAS 1000, SPEC SAYS 100! DANGER!
@


33.5
log
@Modified private unit structure for alignment
@
text
@d13 1
a13 1
* $Header: internal.i,v 33.4 89/02/17 19:11:41 jesup Exp $
d18 3
@


33.4
log
@modified track buffer structure, etc for use with sync reads.
TD_TRKBUF made according to calculations, not random anymore.
@
text
@d13 1
a13 1
* $Header: internal.i,v 33.3 86/04/10 00:57:26 neil Exp $
d18 4
d187 1
d293 2
a294 2
TDT_POSTWRITE	EQU	2000
TDT_SIDESEL	EQU	1000
@


33.3
log
@Added AddChangeInt and RemChangeInt
@
text
@d13 1
a13 1
* $Header: internal.i,v 33.2 86/04/03 23:35:22 neil Exp $
d15 1
a15 1
* $Locker:  $
d18 3
d118 3
a120 1
*	1.015 * 1.023 * 1.05 = 1.09 speed variation
d122 15
d143 11
d157 1
a157 1
TD_SLOP		EQU	830		; 1.09 * NOMTRACK
a158 1
TD_TRKBUF	EQU	16*TD_SECTOR		; !!! 8k
d161 1
d237 3
d248 1
d287 1
d290 1
a292 1

d312 1
@


33.2
log
@made part of unit structure public
@
text
@d13 1
a13 1
* $Header: internal.i,v 33.1 86/03/29 14:13:55 neil Exp $
d15 1
a15 1
* $Locker: neil $
d18 3
d178 1
@


33.1
log
@made seek and settle time programmable.  Isolated unit specific
initializers to the beginning of the unit structure
@
text
@d13 1
a13 1
* $Header: internal.i,v 32.2 86/01/03 19:52:13 neil Exp $
d18 4
d147 1
a147 1
 STRUCTURE TDU,UNIT_SIZE		;(000)
a148 4
	UBYTE	TDU_RETRYCNT		;(xxx) # of times to retry
	UWORD	TDU_COMP01TRACK		;(xxx) track for first precomp
	UWORD	TDU_COMP10TRACK		;(xxx) track for second precomp
	UWORD	TDU_COMP11TRACK		;(xxx) track for third precomp
d151 1
a151 2
	ULONG	TDU_STEPDELAY		;(xxx) time to wait after stepping
	ULONG	TDU_SETTLEDELAY		;(xxx) time to wait after seeking
@


32.2
log
@Added reset catching code
@
text
@d13 1
a13 1
* $Header: internal.i,v 32.1 85/12/23 17:19:28 neil Exp $
d18 3
d144 2
a145 24
	UBYTE	TDU_FLAGS		;(026) unit flags
	UBYTE	TDU_6522		;(027) word to write to 6522
	UBYTE	TDU_RETRY		;(028) count of retries
	UBYTE	TDU_UNITNUM		;(029) the number of our unit
	ULONG	TDU_IOBLOCK		;(02a) holds current IOBlock
	UBYTE	TDU_STATE		;(02e) current state of the driver
	UBYTE	TDU_SECTOR		;(02f) sector being operated on
	UWORD	TDU_TRACK		;(030) track being operated on
	UWORD	TDU_SEEKTRK		;(032) track the heads are over
	UWORD	TDU_PRE1POINT		;(034) what track to use precomp 1
	UWORD	TDU_PRE2POINT		;(036) what track to use precomp 2
	UWORD	TDU_PRE3POINT		;(038) what track to use precomp 3
	APTR	TDU_BUFFER		;(03a) track buffer in use
	APTR	TDU_BUFPTR		;(03e) ptr to allocated bufs for
*					;	this unit
	APTR	TDU_DATA		;(042) current ptr to user data
	APTR	TDU_LABELDATA		;(046) current ptr to label data
	STRUCT	TDU_WAITTIMER,IOTV_SIZE	;(04A) to request sleeps
	STRUCT	TDU_CHANGETIMER,IOTV_SIZE ;(07E) to check for disc change
	STRUCT	TDU_WAITPORT,MP_SIZE	;(0b2) message port for replies
	STRUCT	TDU_DRU,DRU_SIZE	;(0d4) resource unit
	ULONG	TDU_COUNTER		;(000) counter of disc changes
	ULONG	TDU_REMOVEINT		;(000) soft int to call on removal
	ULONG	TDU_DISKTYPE		;(xxx) as returned from disk resource
d151 25
a175 4
	UBYTE	TDU_RETRYCNT		;(xxx) # of times to retry
	UBYTE	TDU_DRIVETYPE		;(xxx) the type of the drive
	STRUCT	TDU_TCB,TC_SIZE		;(000) tcb for disc task
	APTR	TDU_ENTRY		;(000) ptr to MemEntry for unit
a248 2
TDT_SETTLE	EQU	15000
TDT_STEP	EQU	3000
@


32.1
log
@Added rawread/rawwrite
@
text
@d13 1
a13 1
* $Header: internal.i,v 30.2 85/10/09 14:57:23 neil Exp $
d15 1
a15 1
* $Locker:  $
d18 3
d228 2
d235 2
@


30.2
log
@comment changes
@
text
@d13 1
a13 1
* $Header: internal.i,v 30.1 85/10/09 00:36:28 neil Exp $
d18 3
d161 8
d172 1
d183 1
d224 1
@


30.1
log
@Another internal (for 1.01)
@
text
@d13 1
a13 1
* $Header: internal.i,v 27.2 85/08/07 16:25:12 carl Exp $
d15 1
a15 1
* $Locker: neil $
d18 3
d94 1
a94 1
* disc size note:  A perfect disc spins in 200 microseconds (+/- 1.5 microsecs)
@


27.2
log
@TDT_SIDESEL changed to 1000 us.
@
text
@d13 1
a13 1
* $Header: internal.i,v 27.1 85/06/24 13:37:06 neil Exp $
d15 1
a15 1
* $Locker: carl $
d18 3
d94 3
a96 4
*	the clock rate is 2.3% fast, yielding a storage capacity of
*	6393.75 (+/- 96) bytes.  Our disc format does not take advantage
*	of this extra space, but other systems may still have trouble
*	with our discs because of the extra 2.3% bit error skew.
d98 6
d106 2
a107 2
TD_NOMTRACK	EQU	6297		; one nominal track = track - 1.5%
TD_SPEEDVAR	EQU	192		; twice the 1.5% variation
d109 1
a109 1
TD_TRKBUF	EQU	15*TD_SECTOR		; !!! 7.5k
d111 1
a111 2
TD_MAXTRACK	EQU	TD_NOMTRACK+TD_SPEEDVAR ; max possible track
TD_SLOP		EQU	TD_MAXTRACK-TD_USEDTRACK
d225 1
a225 1
TDT_POSTWRITE	EQU	1200
@


27.1
log
@Upgrade to V27
@
text
@d13 1
a13 1
* $Header: internal.i,v 26.1 85/06/17 15:13:53 neil Exp $
d15 1
a15 1
* $Locker:  $
d18 3
d219 1
a219 1
TDT_SIDESEL	EQU	200
@


26.1
log
@*** empty log message ***
@
text
@d13 1
a13 1
* $Header: internal.i,v 1.6 85/06/07 22:21:42 neil Exp $
d18 3
@
