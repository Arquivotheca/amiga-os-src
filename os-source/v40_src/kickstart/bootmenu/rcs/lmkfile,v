head     39.7;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


39.7
date     93.03.17.12.54.46;  author vertex;  state Exp;
branches ;
next     39.6;

39.6
date     93.03.12.18.00.45;  author vertex;  state Exp;
branches ;
next     39.5;

39.5
date     93.02.16.12.43.34;  author vertex;  state Exp;
branches ;
next     39.4;

39.4
date     93.02.10.16.54.36;  author vertex;  state Exp;
branches ;
next     39.3;

39.3
date     92.10.01.14.28.47;  author vertex;  state Exp;
branches ;
next     39.2;

39.2
date     92.05.12.15.06.17;  author vertex;  state Exp;
branches ;
next     39.1;

39.1
date     92.05.05.12.36.37;  author vertex;  state Exp;
branches ;
next     ;


desc
@lmkfile for BootMenu
@


39.7
log
@*** empty log message ***
@
text
@
MODNAME	          = bootmenu
VERSION		  = 40

REMOTE		  = V$(VERSION):src/kickstart/bootmenu

LD_FILE	          = $(MODNAME).ld$(EXTENSION)
MAP_FILE          = $(MODNAME).map$(EXTENSION)

C_COMPILER        = SC
C_COMPILER_OPTS   = RESOPT DATA=FARONLY PARM=REGISTERS UCHAR CONSTLIB\
		    STREQ STRMER COMMENTNEST DBG=SYMBOL\
		    ANSI MEMSIZE=HUGE NOSTKCHK NOICONS NOVERSION NOMINC\
		    OPT OPTPEEP OPTINLOCAL OPTSIZE OPTDEP=3 OPTRDEP=3

ASSEMBLER         = HX68 -a
ASSEMBLER_OPTS    = -csy -i include: -o

LINKER            = Slink
LINKER_OPTS	  = ADDSYM SC SD MAP $(MAP_FILE) HLSXF PLAIN SWIDTH 16

C_SOURCES   = bootmenu.c

ASM_SOURCES = bootmenutag.asm syschecktag.asm unlinkromtag.asm endcode.asm

OBJECTS     = bootmenutag.o syschecktag$(TYPE).o bootmenu$(TYPE).o unlinkromtag.o \
              endcode.o

STARTUP     =
LIBS	    = LIB:amiga.lib LIB:sc.lib LIB:debug.lib


##############################################################################
#
# This compiles all different versions of boot menu
#
# $(TYPE)      = The type of the file
# $(MACHINE)   = The machine name definition.
# $(EXTENSION) = The type extension of the file.
ALL:
	smake -s TYPE=       MACHINE=MACHINE_A2000 EXTENSION=      $(LD_FILE)
	smake -s TYPE=a600   MACHINE=MACHINE_A600  EXTENSION=.a600 $(LD_FILE).a600
	smake -s TYPE=cdgs   MACHINE=MACHINE_CDGS  EXTENSION=.cdgs $(LD_FILE).cdgs


##############################################################################
# Build the load file...
#
$(LD_FILE):	$(OBJECTS) $(LIBS)

		$(LINKER) <with <
FROM $(STARTUP) $(OBJECTS) TO $(LD_FILE) LIB $(LIBS) $(LINKER_OPTS)
<


##############################################################################
# Default rules...
#
.c.o:
	$(C_COMPILER) $(C_COMPILER_OPTS) DEFINE=$(MACHINE)=1 OBJNAME=$*$(TYPE).o $*.c

.asm.o:
	$(ASSEMBLER) $*.asm -D $(MACHINE)=1 $(ASSEMBLER_OPTS) $*$(TYPE).o


##############################################################################
# All dependencies...
#
bootmenutag.o: bootmenutag.asm bootmenu_rev.rev
syschecktag$(TYPE).o: syschecktag.asm
bootmenu$(TYPE).o: bootmenu.c
unlinkromtag.o: unlinkromtag.asm
endcode.o: endcode.asm


##############################################################################
# Bump the version...
#
version:
	@@BumpRev $(VERSION) $(MODNAME)_rev


##############################################################################
# Delete all object files
#
clean:
	@@Delete (\#?.o|\#?.o.\#?|$(MODNAME).doc|$(MODNAME).ld\#?|$(MODNAME).map\#?)


##############################################################################
# Release the current build to the server...
#
internal:
	@@Delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc|library)\#?)|lmkfile)
	@@protect ((\#?.(c|h|asm|i|ld|rev|doc))|lmkfile) +r quiet
	@@copy \#?.(strip|ld|doc|library)\#? \#?_rev.\#? $(REMOTE)
@


39.6
log
@No longer builds .strip version of the load files.
@
text
@d41 3
a43 3
	smake -s TYPE=       MACHINE=MACHINE_A2000 EXTENSION=      $(LD_STRIP)
	smake -s TYPE=a600   MACHINE=MACHINE_A600  EXTENSION=.a600 $(LD_STRIP).a600
	smake -s TYPE=cdgs   MACHINE=MACHINE_CDGS  EXTENSION=.cdgs $(LD_STRIP).cdgs
@


39.5
log
@Added support for CDGS build
@
text
@a7 1
LD_STRIP          = $(MODNAME).ld.strip$(EXTENSION)
a20 1
LINKER_OPTS_STRIP = ND
a46 7
# Build the stripped load file...
#
$(LD_STRIP):	$(LD_FILE)
		$(LINKER) FROM $(LD_FILE) TO $(LD_STRIP) $(LINKER_OPTS_STRIP)


##############################################################################
d70 1
a70 1
syschecktag$(TYPE).o: syschecktag.asm syscheck_rev.rev
a80 1
	@@BumpRev $(VERSION) syscheck_rev
d95 1
a95 1
	@@protect ((\#?.(c|h|asm|i|ld|rev|doc))|lmkfile|$(LD_STRIP)) +r quiet
@


39.4
log
@Bumped to V40
@
text
@d45 1
@


39.3
log
@Changed to use SAS/C 6.0 compiler
@
text
@d3 1
a3 1
VERSION		  = 39
d32 1
a32 1
LIBS	    = LIB:amiga.lib LIB:lcr.lib LIB:debug.lib
@


39.2
log
@Added unlinkromtag.asm
Made syschecktag.asm do the multi-machine magic
@
text
@d5 1
a5 1
REMOTE		  = V:src/kickstart/bootmenu
d11 5
a15 2
C_COMPILER        = LC
C_COMPILER_OPTS   = -b0 -ms -v -rr -O -cfistqmcu -d1
d20 1
a20 1
LINKER            = Blink
d43 2
a44 2
	lmk -s TYPE=       MACHINE=MACHINE_A2000 EXTENSION=      $(LD_STRIP)
	lmk -s TYPE=a600   MACHINE=MACHINE_A600  EXTENSION=.a600 $(LD_STRIP).a600
d68 1
a68 1
	$(C_COMPILER) $(C_COMPILER_OPTS) -D$(MACHINE)=1 -o$*$(TYPE).o $*.c
@


39.1
log
@Initial V39 RCS checkin
@
text
@d23 1
a23 1
ASM_SOURCES = bootmenutag.asm syschecktag.asm endcode.asm
d25 2
a26 1
OBJECTS     = bootmenutag.o syschecktag.o bootmenu$(TYPE).o endcode.o
d68 1
a68 1
	$(ASSEMBLER) $*.asm $(ASSEMBLER_OPTS) $*.o
d75 1
a75 1
syschecktag.o: syschecktag.asm syscheck_rev.rev
d77 1
@
