head     36.6;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


36.6
date     90.04.05.05.21.12;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     89.12.17.22.33.36;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     89.12.15.16.51.35;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.12.15.16.45.29;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.09.18.23.04.50;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.16.22.30.37;  author jesup;  state Exp;
branches ;
next     ;


desc
@Initial check-in of V36 ram-handler.  Note that these are Amiga sources to
be compiled under Lattice C V5.03.97 or later.
@


36.6
log
@for rcs 4.x header change
@
text
@/* adddevice.c */

#include "ram_includes.h"
#include "ram.h"

extern struct DosLibrary *DOSBase;

/* should really be called under forbid, so caller can set things up */

struct DeviceList *
adddevice (name)
	char *name;
{
	struct DosInfo *devinfo;
	struct DeviceList *devslot;
	int len;
	char *devname;

	devinfo = (struct DosInfo *)
		  BADDR(((struct RootNode *) DOSBase->dl_Root)->rn_Info);
	DBUG1("DevInfo is at 0x%lx",(LONG)devinfo);
	devslot = (struct DeviceList *)
		  getvecclear(sizeof(struct DeviceList) >> 2);
	DBUG1("DevSlot is at 0x%lx",(LONG)devslot);

	len = strlen(name);
	devname = getvec((len+1+1+3) >> 2);
	if (!devslot || !devname)
	{
		freevec((char *) devslot);
		freevec(devname);
		return NULL;
	}
	strcpy(devname,name);
	CtoBstr(((LONG) devname) >> 2);		/* takes a BPTR to C str */
	devname[*devname+1] = '\0';

	devslot->dl_Name = (BSTR) (((LONG) devname) >> 2);

	/* insert into devlist (forbid locking) */
	Forbid();
	devslot->dl_Next    = devinfo->di_DevInfo;
	devinfo->di_DevInfo = ((LONG) devslot) >> 2;
	Permit();

	return devslot;
}
@


36.5
log
@Fixed last fix
@
text
@@


36.4
log
@Mode really safe
@
text
@d36 1
a36 1
	devname[*devname] = '\0';
@


36.3
log
@Added null termination to "Ram Disk"
@
text
@d27 1
a27 1
	devname = getvec((len+1+3) >> 2);
@


36.2
log
@
@
text
@d27 1
a27 1
	devname = getvec((len+3) >> 2);
d36 1
@


36.1
log
@*** empty log message ***
@
text
@a7 1
/* name points to null-terminated BSTR! (null not included in count) */
d26 1
a26 1
	len = *name++;
@
