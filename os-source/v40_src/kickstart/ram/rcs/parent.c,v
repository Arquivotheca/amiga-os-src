head     36.3;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


36.3
date     90.06.13.02.47.45;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     90.04.05.05.22.39;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.16.22.32.21;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.3
log
@Use a unified "get lock on object" routine
@
text
@/* parent.c */

#include "ram_includes.h"
#include "ram.h"

struct lock *
parentfh (lock,action)
	struct lock *lock;
	LONG action;
{
	struct node *node;

	node = checklock(lock);
	if (node == NULL)
		return FALSE;

	if (action != ACTION_COPY_DIR_FH && action != ACTION_COPY_DIR)
		node = node->back;	/* parent, parentoffh */

	/* these work the same in ramdisk */
	return (node ? getlock(node,SHARED_LOCK) : NULL);
}
			
@


36.2
log
@for rcs 4.x header change
@
text
@d7 3
a9 2
parent (pkt)
	struct DosPacket *pkt;
d13 1
a13 1
	node = checklock((struct lock *) (pkt->dp_Arg1 << 2));
d17 5
a21 1
	return (node->back == NULL ? NULL : getlock(node->back,SHARED_LOCK));
d23 1
@


36.1
log
@*** empty log message ***
@
text
@@
