AddFreeMsg	notify.c	/^AddFreeMsg (msg)$/
AllocNew	notify.c	/^#define AllocNew(x)	((struct x *) AllocMem(sizeof(/
FindMsg	notify.c	/^FindMsg ()$/
adddevice	adddevice.c	/^adddevice (name)$/
addnotify	notify.c	/^addnotify (req)$/
change_lock	lock.c	/^change_lock (lock,newmode)$/
checklock	lock.c	/^checklock (lock)$/
checkname	checkname.c	/^checkname (name)$/
closefile	closefile.c	/^closefile (lock)$/
comment	comment.c	/^comment (pkt,objname)$/
create	create.c	/^create (lock,string,mode,is_dir)$/
dbwrite	dbsupp.c	/^dbwrite (str)$/
dbwrite1	dbsupp.c	/^dbwrite1 (str,p1)$/
dbwrite2	dbsupp.c	/^dbwrite2 (str,p1,p2)$/
delete	delete.c	/^delete (dptr,string,notify)$/
deletedir	deletedir.c	/^deletedir (node)$/
diskinfo	diskinfo.c	/^diskinfo (pkt)$/
do_notify	notify.c	/^do_notify (notify)$/
exall	exall.c	/^exall (struct node *node, struct DosPacket *dp)$/
exists	notify.c	/^exists (file)$/
exnext	exall.c	/^exnext (pkt,object)$/
fill_data	exall.c	/^fill_data (struct ExAllData *ed, ULONG data, struc/
find_lock	lock.c	/^find_lock (p,node)$/
find_notifies	notify.c	/^find_notifies (node,flag)$/
find_rlock	record.c	/^find_rlock (struct lock *lock, ULONG offset, ULONG/
finddir	finddir.c	/^finddir (dptr,string,name)$/
findentry	findentry.c	/^findentry (dptr,name,follow_links)$/
findnode	locate.c	/^findnode (dptr,str,follow_links)$/
freelock	lock.c	/^freelock (lock)$/
getlock	lock.c	/^getlock (ptr,access)$/
getvec	mygetvec.c	/^getvec (ULONG size)$/
growblock	transfer.c	/^growblock (p,node)$/
kill_rwait	record.c	/^kill_rwait (struct timerequest *iob)$/
locate	locate.c	/^locate (lock,str,mode)$/
locatenode	locate.c	/^locatenode (lock,str,follow_links)$/
lockrecord	record.c	/^lockrecord (struct lock *lock,struct DosPacket *dp/
makelink	makelink.c	/^makelink (lock,string,arg,soft)$/
mygetvec	mygetvec.c	/^mygetvec (n)$/
notify	notify.c	/^notify (lock)$/
notifynode	notify.c	/^notifynode (node)$/
openfromlock	file.c	/^openfromlock (scb,lock)$/
openmakefile	file.c	/^openmakefile (scb,dlock,string,type)$/
parentfh	parent.c	/^parentfh (lock,action)$/
read	transfer.c	/^read (lock,buf,bsize)$/
readlink	makelink.c	/^readlink (lock,string,buffer,size)$/
rem_notifies	notify.c	/^rem_notifies (node,flag)$/
remnotify	notify.c	/^remnotify (req)$/
remove_node	delete.c	/^remove_node (node)$/
rename	rename.c	/^rename (from_dir,from_str,to_dir,to_str)$/
renamedisk	renamedisk.c	/^renamedisk (pkt)$/
rlock_wait_add	record.c	/^rlock_wait_add (struct lock *lock, struct DosPacke/
seek	seek.c	/^seek (lock,dest,frompos,truncate)$/
setinfo	exall.c	/^setinfo (ivec,ptr)$/
start	start.c	/^start (struct DosPacket *dp)$/
swapblock	closefile.c	/^swapblock (oldblock,size,xfersize)$/
tail	notify.c	/^tail (str)$/
unlockrecord	record.c	/^unlockrecord (struct lock *lock, ULONG offset, ULO/
wakeup	record.c	/^wakeup (struct node *node, ULONG offset, ULONG top/
write	transfer.c	/^write (lock,buf,bsize)$/
