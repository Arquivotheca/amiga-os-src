head     36.18;
branch   ;
access   ;
symbols  V39_3:36.18 V39_2:36.18 V39_1:36.18 V37_128:36.18 V37_120:36.17 V37_72:36.16 V37_57:36.15 V37_1:36.14 V36_51:36.13 V36_50:36.13 V36_48:36.13 V36_47:36.13 V36_46:36.13 V36_45:36.13 V36_43:36.12 V36_42:36.12 V36_40:36.12 V36_31:36.12 V36_30:36.12 V36_28:36.12 V36_26:36.12 V36_25:36.11 V36_22:36.9 V36_21:36.9 V36_20:36.8 V36_19:36.7 V36_18:36.7 V36_15:36.7 V36_14:36.7 V36_12:36.7 V36_11:36.7 V36_9:36.7 V36_8:36.6 V36_7:36.5 V36_6:36.5 V36_5:36.4 V36_4:36.4 V36_2:36.3 V36_1:36.1 L36_1:36.1;
locks    ; strict;
comment  @* @;


36.18
date     91.04.22.13.49.08;  author darren;  state Exp;
branches ;
next     36.17;

36.17
date     91.04.09.13.44.51;  author darren;  state Exp;
branches ;
next     36.16;

36.16
date     91.03.21.15.02.54;  author darren;  state Exp;
branches ;
next     36.15;

36.15
date     91.03.14.17.29.35;  author darren;  state Exp;
branches ;
next     36.14;

36.14
date     91.01.25.15.46.10;  author rsbx;  state Exp;
branches ;
next     36.13;

36.13
date     90.04.01.19.12.50;  author rsbx;  state Exp;
branches ;
next     36.12;

36.12
date     89.09.18.18.03.16;  author rsbx;  state Exp;
branches ;
next     36.11;

36.11
date     89.09.16.01.48.20;  author rsbx;  state Exp;
branches ;
next     36.10;

36.10
date     89.09.16.01.34.19;  author rsbx;  state Exp;
branches ;
next     36.9;

36.9
date     89.09.13.15.17.31;  author rsbx;  state Exp;
branches ;
next     36.8;

36.8
date     89.08.29.14.00.16;  author rsbx;  state Exp;
branches ;
next     36.7;

36.7
date     89.08.16.13.27.39;  author rsbx;  state Exp;
branches ;
next     36.6;

36.6
date     89.08.14.18.11.19;  author rsbx;  state Exp;
branches ;
next     36.5;

36.5
date     89.08.09.19.25.31;  author rsbx;  state Exp;
branches ;
next     36.4;

36.4
date     89.08.09.18.10.22;  author rsbx;  state Exp;
branches ;
next     36.3;

36.3
date     89.08.09.17.51.57;  author rsbx;  state Exp;
branches ;
next     36.2;

36.2
date     89.08.09.14.06.56;  author rsbx;  state Exp;
branches ;
next     36.1;

36.1
date     88.05.01.20.57.30;  author neil;  state Exp;
branches ;
next     ;


desc
@@


36.18
log
@Remove fields needed for SetICR() in RethinkMicroTimer()
@
text
@*************************************************************************
*									*
*	Copyright (C) 1985, Commodore Amiga Inc.  All rights reserved.	*
*									*
*************************************************************************


*************************************************************************
*
* internal.i
*
* Source Control
* ------ -------
* 
* $Id: internal.i,v 36.17 91/04/09 13:44:51 darren Exp Locker: darren $
*
* $Locker: darren $
*
* $Log:	internal.i,v $
* Revision 36.17  91/04/09  13:44:51  darren
* Device base changes to support MIDI performance enhancements.
* 
* Revision 36.16  91/03/21  15:02:54  darren
* New byte field (0 upon initilization) used to track if interrupts
* for microtic timer have been enabled, or disabled - quick atomic
* bit set/clr used.
* 
* Revision 36.15  91/03/14  17:29:35  darren
* Some new fields to support our jumpy timer.device.
* 
* Revision 36.14  91/01/25  15:46:10  rsbx
* Change to V37
* 
* Revision 36.13  90/04/01  19:12:50  rsbx
* RCS version change.
* 
* Revision 36.12  89/09/18  18:03:16  rsbx
* Unit 2 (EClock) now works as a delta request instead of as a absolute
* time request. Added unit 4, absolute EClock.
* 
* Revision 36.6  89/08/14  18:11:19  rsbx
* Removed some dead fields.
* 
* Revision 36.5  89/08/09  19:25:31  rsbx
* *** empty log message ***
* 
* Revision 36.4  89/08/09  18:10:22  rsbx
* *** empty log message ***
* 
* Revision 36.2  89/08/09  14:06:56  rsbx
* timer.device base changed to reflect rewritten timer.device
* 
*
*************************************************************************

 STRUCTURE JUMPSTRUCT,0
	UWORD	TJ_OPCODE		; space for jmp opcode
	APTR	TJ_STfmt		; address of STfmt code
	LABEL	TJ_SIZE

 STRUCTURE TIMERUNIT,0
	APTR	TU_UNITLIST		; pointer to the unit delay list
	APTR	TU_ADDREQ		; code to insert a timer request
	APTR	TU_REMREQ		; code to remove a timer request
	LABEL	TU_SIZE

 STRUCTURE TIMERDEVICE,LIB_SIZE
	UWORD	TD_PADDING		;

	APTR	TD_SYSLIB		; ptr to exec

	UWORD	TD_TODHERTZ		; ticks/sec from power supply
	UWORD	TD_TIMEPERTOD		; microsecs per tick for power supply
	ULONG	TD_NUMREQS		; # of reqs since last SYSTIME update
	ULONG	TD_ECLOCKHERTZ		; timerB tics/sec
	ULONG	TD_ECLOCKCONST1		; (eclockhertz*64k)/10^6
	ULONG	TD_ECLOCKCONST2		; (64k*10^6)/eclockhertz
	ULONG	TD_LASTTOD		; track last value ReadTOD()
	STRUCT	TD_SYSTIME,TV_SIZE	; base of current system time
**	STRUCT	TD_PREVREQ,TV_SIZE	; time at last GetSysTime
	STRUCT	TD_ECLOCKTIME,EV_SIZE	; monotomically rising eclock time
	STRUCT	TD_UNIT0,TU_SIZE	; unit zero (MicroHertz)
	STRUCT	TD_UNIT1,TU_SIZE	; unit one (VBlank)
	STRUCT	TD_UNIT2,TU_SIZE	; unit two (EClock)
	STRUCT	TD_UNIT3,TU_SIZE	; unit three (WaitUntil)
	STRUCT	TD_UNIT4,TU_SIZE	; unit four (WaitEClock)
	STRUCT	TD_TERMIOQ,MLH_SIZE	; people who need termio's
	STRUCT	TD_ECLOCKLIST,MLH_SIZE	; units 0 & 2 delay list
	STRUCT	TD_VBLANKLIST,MLH_SIZE	; unit 1 delay list
	STRUCT	TD_SYSTIMELIST,MLH_SIZE	; list of pending "wait untils"
	APTR	TD_TODRESOURCE		; cia resource ptr for TOD int
	APTR	TD_COUNTERRESOURCE	; cia resource ptr for 16 counters
	APTR	TD_JUMPYRESOURCE	; ciab resource - jumpy!
	STRUCT	TD_TODINT,IS_SIZE	; TOD alarm interrupt node
	STRUCT	TD_VBLANKINT,IS_SIZE	; VBlank interrupt node
	STRUCT	TD_CIATBINT,IS_SIZE	; cia timer B interrupt node
	STRUCT	TD_CIATJUMP,IS_SIZE     ; Jumpy timer - Cause() interrupt

	APTR	AReq2STTOD		; pointers to the code associated
	APTR	ASTTOD2Req		;  with the below jumpstructs
	APTR	AGetSTTOD		;
	APTR	AEIncSTTOD		;
	APTR	ATODIncSTTOD		;
	APTR	AAdjSTTOD		;

	APTR	AReq2STEClock		;
	APTR	ASTEClock2Req		;
	APTR	AGetSTEClock		;
	APTR	AEIncSTEClock		;
	APTR	ATODIncSTEClock		;
	APTR	AAdjSTEClock		;

	STRUCT	Req2STfmt,TJ_SIZE	; request to internal system time conv
	STRUCT	STfmt2Req,TJ_SIZE	; internal system time to request conv
	STRUCT	GetSTfmt,TJ_SIZE	; get internal system time
	STRUCT	EIncSTfmt,TJ_SIZE	; EClock interrrupt system time increment
	STRUCT	TODIncSTfmt,TJ_SIZE	; TOD interrupt system time increment
	STRUCT	AdjSTfmt,TJ_SIZE	; SetSysTime system time adjustment

	APTR	TD_JUMPYCIACRX 		; cache jumpy control register
	APTR	TD_JUMPYCIATXLO		; cache jumpy timer low

	LABEL	TD_SIZE

@


36.17
log
@Device base changes to support MIDI performance enhancements.
@
text
@d15 1
a15 1
* $Id: internal.i,v 36.16 91/03/21 15:02:54 darren Exp Locker: darren $
d20 3
a55 4
FIXSEGA		EQU	0		; If TRUE, RethinkMicroTimer()
					; disables/enables cia interrupts.
					; Fix SEGA GAMES

a121 7
	UWORD	TD_JUMPYTDSET		; cache TD bit/set mode

	IFNE	FIXSEGA

	UBYTE	TD_JUMPYABLED		; track if interrupts are enabled

	ENDC
@


36.16
log
@New byte field (0 upon initilization) used to track if interrupts
for microtic timer have been enabled, or disabled - quick atomic
bit set/clr used.
@
text
@d15 1
a15 1
* $Id: internal.i,v 36.15 91/03/14 17:29:35 darren Exp Locker: darren $
d20 5
d53 4
d79 1
d81 1
a81 1
	STRUCT	TD_PREVREQ,TV_SIZE	; time at last GetSysTime
d124 3
d128 2
@


36.15
log
@Some new fields to support our jumpy timer.device.
@
text
@d15 1
a15 1
* $Id: internal.i,v 36.14 91/01/25 15:46:10 rsbx Exp Locker: darren $
d20 3
a86 1
**	STRUCT	TD_CIATJINT,IS_SIZE	; cia timer jumpy interrupt node
d114 1
@


36.14
log
@Change to V37
@
text
@d15 1
a15 1
* $Id$
d17 1
a17 1
* $Locker: rsbx $
d20 3
d81 1
d84 1
a84 1
	STRUCT	TD_CIATAINT,IS_SIZE	; cia timer A interrupt node
d86 1
d109 4
d114 1
@


36.13
log
@RCS version change.
@
text
@d15 1
a15 1
* $Header: /usr/professor/rsbx/timer.device/RCS/internal.i,v 36.12 89/09/18 18:03:16 rsbx Exp Locker: rsbx $
d20 3
@


36.12
log
@Unit 2 (EClock) now works as a delta request instead of as a absolute
time request. Added unit 4, absolute EClock.
@
text
@d15 1
a15 1
* $Header: internal.i,v 36.6 89/08/14 18:11:19 rsbx Exp $
d17 1
a17 1
* $Locker:  $
d20 4
@


36.11
log
@More alignment work.
@
text
@d64 1
@


36.10
log
@Did some alignment work.
@
text
@d47 2
a49 2

	UWORD	TD_PADDING		;
@


36.9
log
@
@
text
@d49 1
a49 6
	STRUCT	Req2STfmt,TJ_SIZE	; request to internal system time conv
	STRUCT	STfmt2Req,TJ_SIZE	; internal system time to request conv
	STRUCT	GetSTfmt,TJ_SIZE	; get internal system time
	STRUCT	EIncSTfmt,TJ_SIZE	; EClock interrrupt system time increment
	STRUCT	TODIncSTfmt,TJ_SIZE	; TOD interrupt system time increment
	STRUCT	AdjSTfmt,TJ_SIZE	; SetSysTime system time adjustment
a50 14
	APTR	AReq2STTOD		; pointers to the code associated
	APTR	ASTTOD2Req		;  with the above jumpstructs
	APTR	AGetSTTOD		;
	APTR	AEIncSTTOD		;
	APTR	ATODIncSTTOD		;
	APTR	AAdjSTTOD		;

	APTR	AReq2STEClock		;
	APTR	ASTEClock2Req		;
	APTR	AGetSTEClock		;
	APTR	AEIncSTEClock		;
	APTR	ATODIncSTEClock		;
	APTR	AAdjSTEClock		;

d64 4
a67 4
	STRUCT	TD_TERMIOQ,LH_SIZE	; people who need termio's
	STRUCT	TD_ECLOCKLIST,LH_SIZE	; units 0 & 2 delay list
	STRUCT	TD_VBLANKLIST,LH_SIZE	; unit 1 delay list
	STRUCT	TD_SYSTIMELIST,LH_SIZE	; list of pending "wait untils"
d75 21
a96 1

@


36.8
log
@TR_WAITUNTIL became UNIT_WAITUNTIL.
@
text
@d35 5
d48 25
d77 1
@


36.7
log
@Rearranged unit structure. Added EClock unit (unit 2).
@
text
@d51 1
@


36.6
log
@Removed some dead fields.
@
text
@d15 1
a15 1
* $Header: internal.i,v 36.5 89/08/09 19:25:31 rsbx Exp $
d17 1
a17 1
* $Locker: rsbx $
d20 3
d35 2
a36 1
 STRUCTURE TIMERUNIT,LH_SIZE		; list to hold time list
d50 1
d52 3
a54 1
	STRUCT	TD_UNTILLIST,LH_SIZE	; list of pending "wait untils"
@


36.5
log
@*** empty log message ***
@
text
@d15 1
a15 1
* $Header: internal.i,v 36.4 89/08/09 18:10:22 rsbx Exp $
d20 3
a38 2
*	UWORD	TD_TODHERTZ		; ticks/sec from power supply
*	UWORD	TD_TIMEPERTOD		; microsecs per tick for power supply
a41 1
*	ULONG	TD_NUMREQS		; # of reqs since last SYSTIME update
a42 2
*	STRUCT	TD_PREVREQ,TV_SIZE	; time at last GetSysTime
*	STRUCT	TD_ONTIME,TV_SIZE	; time since power-on
@


36.4
log
@*** empty log message ***
@
text
@d15 1
a15 1
* $Header: /usr.MC68010/machines/professor/professor/rsbx/timer.device/RCS/internal.i,v 36.2 89/08/09 14:06:56 rsbx Exp $
d17 1
a17 1
* $Locker:  $
d20 3
@


36.3
log
@*** empty log message ***
@
text
@d15 1
a15 1
* $Header: /usr.MC68010/ghostwheel/commodore/amiga/V36/src/kickstart/timer/RCS/internal.i,v 36.2 89/08/09 14:06:56 rsbx Exp $
d20 3
a22 3
*Revision 36.2  89/08/09  14:06:56  rsbx
*timer.device base changed to reflect rewritten timer.device
*
@


36.2
log
@timer.device base changed to reflect rewritten timer.device
@
text
@d15 1
a15 1
* $Header$
d17 1
a17 1
* $Locker$
d19 4
a22 1
* $Log$
@


36.1
log
@*** empty log message ***
@
text
@a0 2


d15 1
a15 1
* $Header: internal.i,v 32.1 86/01/15 22:26:13 neil Exp $
d17 1
a17 1
* $Locker:  $
d19 2
d24 2
a25 9
	STRUCT	TU_TICKVAL,TV_SIZE	; time for this tick
	WORD	TU_UNITNUM		; so we can figure what unit we are
	WORD	TU_COUNT
	APTR	TU_RESOURCE		; ptr to cia resource
	APTR	TU_DEVICE		; back pointer to device
	APTR	TU_START		; StartTimer()
	APTR	TU_STOP			; StopTimer()
	STRUCT	TU_INT,IS_SIZE		; interrupt for vertical blank
	STRUCT	TU_TERMIOQ,LH_SIZE	; people who need termio's
d29 7
a35 5
	UWORD	TD_TODHERTZ		; ticks/sec from power supply
	UWORD	TD_TIMEPERTOD		; microsecs per tick for power supply
	ULONG	TD_TIMEPERVBLANK	; microsecs per tick for vert blank
	STRUCT	TDU0,TU_SIZE		; unit zero
	STRUCT	TDU1,TU_SIZE		; unit one
d37 14
a50 2
	ULONG	TD_NUMREQS		; # of reqs since last SYSTIME update
	APTR	TD_SYSLIB		; ptr to exec
a51 5

;------ system dependent manifest constants (should be variables
;------ computed at boot time....
*** HERTZ		EQU	60
*** TIMEPERTICK	EQU	16666	; microseconds per tick = 1/HERTZ * 1 000 000
@
