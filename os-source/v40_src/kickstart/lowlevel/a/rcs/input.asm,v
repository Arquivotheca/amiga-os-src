head     40.3;
branch   ;
access   ;
symbols  V40_35:40.3 rel40_34:40.3 rel40_33:40.3 rel40_32:40.3 rel40_29:40.3 rel40_28:40.3 rel40_27:40.3 rel40_26:40.3 rel40_25:40.3 rel40_24:40.3 rel40_23:40.3 rel40_22:40.3 rel40_21:40.3 rel40_20:40.3 rel40_19:40.3 rel40_18:40.3 rel40_17:40.3 rel40_16:40.3 rel40_15:40.3 rel40_14:40.3 rel40_13:40.3 rel40_12:40.2 rel40_11:40.2 rel40_4:39.0 rel40_3:39.0 rel40_2:39.0 rel40_1:39.0 rel39_7:39.0;
locks    ; strict;
comment  @* @;


40.3
date     93.03.19.11.29.40;  author Jim2;  state Exp;
branches ;
next     40.2;

40.2
date     93.03.12.20.28.22;  author Jim2;  state Exp;
branches ;
next     40.1;

40.1
date     93.03.02.13.21.14;  author Jim2;  state Exp;
branches ;
next     39.0;

39.0
date     93.01.19.15.43.25;  author Jim2;  state Exp;
branches ;
next     ;


desc
@Handles the stopping of input.device.
@


40.3
log
@Used the port structure associated with the setfunction code
to add ports to all the DoIO incase they every cease being
IOQuick calls.
@
text
@******************************************************************************
*
*	$Id: input.asm,v 40.2 93/03/12 20:28:22 Jim2 Exp Locker: Jim2 $
*
******************************************************************************
*
*	$Log:	input.asm,v $
* Revision 40.2  93/03/12  20:28:22  Jim2
* During the simplification of the calling routine LowLevelBase
* moved to a5 and ExecBase appeared in a6.
*
* Revision 40.1  93/03/02  13:21:14  Jim2
* Changed all references from game.library to lowlevel.library
*
* Revision 39.0  93/01/19  15:43:25  Jim2
* Initial Release.
*
*
*	(C) Copyright 1993 Commodore-Amiga, Inc.
*	    All Rights Reserved
*
******************************************************************************

	INCLUDE	'exec/macros.i'
	INCLUDE 'exec/io.i'
	INCLUDE	'exec/tasks.i'
	INCLUDE	'exec/ports.i'

	INCLUDE	'/macros.i'
	INCLUDE	'/lowlevelbase.i'



		XDEF	TrashInput





*****i* lowlevel.library/TrashInput ******************************************
*
*   NAME
*	TrashInput - Shutdown or reenable input.device.
*
*   SYNOPSIS
*	TrashInput (inputState, LowLevelBase, ExecBase)
*		    D1		a5	      a6
*
*	VOID TakeOverSystem (BOOL);
*
*   FUNCTION
*	This function is used to give the game developers a very simple way
*	to shutdown input without needing to open stuff they don't want.
*
*   INPUTS
*	inputState - boolean that determines whether the input is to be
*		     shutdown or reenabled.
*
*   RESULT
*	NONE
*
******************************************************************************
TrashInput
		tst.w	d1
		bne.s	KillInput
				;The user wants reenable input.
		subq.b	#1,ll_NestKillIn(a5)	;Decrement the nest count.
		bpl.w	Exit
				;The nest count is -1 so turn on input.
		CLEARA	a1
		JSRLIB	FindTask
		move.l	ll_ERSetFunction(a5),a0
		move.l	d0,MP_SIGTASK(a0)	; SigTask
		move.b	#SIGB_SINGLE,MP_SIGBIT(a0)	; SigBit
		move.b	#PA_SIGNAL,MP_FLAGS(a0)	; Signal...

TEMP_SIZE	set	0
		ARRAYVAR Request,IOSTD_SIZE

		ALLOCLOCALS sp
		move.l	a0,Request+MN_REPLYPORT(sp)
		move.l	ll_KBDevice(a5),Request+IO_DEVICE(sp)
		move.w	#CMD_CLEAR,Request+IO_COMMAND(sp)
		lea	Request(sp),a1
		JSRLIB	DoIO
		lea	GAMEPDEVICE(pc),a0
		lea	Request(sp),a1
		moveq	#0,d0
		move.l	d0,d1
		JSRLIB	OpenDevice
		bne.s	NoGamePort
		move.w	#CMD_CLEAR,Request+IO_COMMAND(sp)
		lea	Request(sp),a1
		JSRLIB	DoIO
		lea	Request(sp),a1
		JSRLIB	CloseDevice
NoGamePort
		lea	INPUTDEVICE(pc),a0
		lea	Request(sp),a1
		moveq	#0,d0
		move.l	d0,d1
		JSRLIB	OpenDevice
		bne.s	NoInput
		move.w	#CMD_RESET,Request+IO_COMMAND(sp)
		bra.s	Finish
KillInput			;The user wants to kill input.
		addq.b	#1,ll_NestKillIn(a5)	;Increment the Nest count.
		bne.s	Exit
				;The nest count is 0 so stop input.device.
		CLEARA	a1
		JSRLIB	FindTask
		move.l	ll_ERSetFunction(a5),a0
		move.l	d0,MP_SIGTASK(a0)	; SigTask
		move.b	#SIGB_SINGLE,MP_SIGBIT(a0)	; SigBit
		move.b	#PA_SIGNAL,MP_FLAGS(a0)	; Signal...
		ALLOCLOCALS sp
		move.l	a0,Request+MN_REPLYPORT(sp)
		lea	INPUTDEVICE(pc),a0
		lea	Request(sp),a1
		moveq	#0,d0
		move.l	d0,d1
		JSRLIB	OpenDevice
		bne.s	NoInput
		move.w	#CMD_STOP,Request+IO_COMMAND(sp)
Finish		lea	Request(sp),a1
		JSRLIB	DoIO
		lea	Request(sp),a1
		JSRLIB	CloseDevice
NoInput:	move.l	Request+MN_REPLYPORT(sp),a0
		DONELOCALS sp
		move.b	#PA_IGNORE,MP_FLAGS(a0)
Exit:		rts

GAMEPDEVICE	dc.b	'gameport.device',0
INPUTDEVICE	dc.b	'input.device',0
		END
@


40.2
log
@During the simplification of the calling routine LowLevelBase
moved to a5 and ExecBase appeared in a6.
@
text
@d3 1
a3 1
*	$Id: input.asm,v 40.1 93/03/02 13:21:14 Jim2 Exp Locker: Jim2 $
d8 4
d26 2
d70 7
d81 1
d110 6
d117 1
d129 3
a131 1
NoInput:	DONELOCALS sp
@


40.1
log
@Changed all references from game.library to lowlevel.library
@
text
@d3 1
a3 1
*	$Id: Input.asm,v 39.0 93/01/19 15:43:25 Jim2 Exp Locker: Jim2 $
d7 4
a10 1
*	$Log:	Input.asm,v $
d40 2
a41 2
*	TrashInput (inputState)
*		    D1
a57 1
		move.l	a6,-(sp)
d61 1
a61 1
		subq.b	#1,ll_NestKillIn(a6)	;Decrement the nest count.
d68 1
a68 2
		move.l	ll_KBDevice(a6),Request+IO_DEVICE(sp)
		move.l	ll_ExecBase(a6),a6
d93 1
a93 1
		addq.b	#1,ll_NestKillIn(a6)	;Increment the Nest count.
a96 1
		move.l	ll_ExecBase(a6),a6
d109 1
a109 2
Exit:		move.l	(sp)+,a6
		rts
@


39.0
log
@Initial Release.
@
text
@d3 1
a3 1
*	$Id: $
d7 3
a9 1
*	$Log: $
d11 1
d21 1
a21 1
	INCLUDE	'/gamebase.i'
d31 1
a31 1
*****i* game.library/TrashInput **********************************************
d59 1
a59 1
		subq.b	#1,gm_NestKillIn(a6)	;Decrement the nest count.
d66 2
a67 2
		move.l	gm_KBDevice(a6),Request+IO_DEVICE(sp)
		move.l	gm_ExecBase(a6),a6
d92 1
a92 1
		addq.b	#1,gm_NestKillIn(a6)	;Increment the Nest count.
d96 1
a96 1
		move.l	gm_ExecBase(a6),a6
@
