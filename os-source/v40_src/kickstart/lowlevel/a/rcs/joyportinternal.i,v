head     40.3;
branch   ;
access   ;
symbols  rel40_34:40.3 rel40_33:40.3 rel40_32:40.3 rel40_29:40.3 rel40_28:40.3 rel40_27:40.3 rel40_26:40.3 rel40_25:40.3 rel40_24:40.3 rel40_23:40.3 rel40_22:40.3 rel40_21:40.3 rel40_20:40.3 rel40_19:40.3 rel40_18:40.3 rel40_17:40.3 rel40_16:40.3 rel40_15:40.3 rel40_14:40.2 rel40_13:40.2 rel40_12:40.1 rel40_11:40.1 rel40_4:39.3 rel40_3:39.3 rel40_2:39.3 rel40_1:39.3 rel39_7:39.2 rel39_6:39.1 rel39_5:39.1;
locks    vertex:40.3; strict;
comment  @* @;


40.3
date     93.03.26.17.40.21;  author Jim2;  state Exp;
branches ;
next     40.2;

40.2
date     93.03.19.11.44.18;  author Jim2;  state Exp;
branches ;
next     40.1;

40.1
date     93.03.10.19.52.02;  author Jim2;  state Exp;
branches ;
next     40.0;

40.0
date     93.03.04.11.45.06;  author Jim2;  state Exp;
branches ;
next     39.3;

39.3
date     93.01.29.16.50.29;  author brummer;  state Exp;
branches ;
next     39.2;

39.2
date     93.01.18.18.06.20;  author brummer;  state Exp;
branches ;
next     39.1;

39.1
date     93.01.07.15.40.25;  author brummer;  state Exp;
branches ;
next     39.0;

39.0
date     93.01.06.14.29.34;  author Jim2;  state Exp;
branches ;
next     ;


desc
@Bit defintions useful for decoding gm_Port#Status.
@


40.3
log
@Using another of the JoyPort Status bits.
@
text
@******************************************************************************
*
*	$Id: JoyPortInternal.i,v 40.2 93/03/19 11:44:18 Jim2 Exp Locker: Jim2 $
*
******************************************************************************
*
*	$Log:	JoyPortInternal.i,v $
* Revision 40.2  93/03/19  11:44:18  Jim2
* Added bit defs for the double controller.  Removed some data defintions.
*
* Revision 40.1  93/03/10  19:52:02  Jim2
* Changed JP_STATUS flags since I gave them their own byte.
*
* Revision 40.0  93/03/04  11:45:06  Jim2
* Renamed the _2_UNKNOWN constants to _2_RECHECK.
*
* Revision 39.3  93/01/29  16:50:29  brummer
* changed name of internal flag for error checking.
*
* Revision 39.2  93/01/18  18:06:20  brummer
* Added BITDEFs for initialization flags/
*
* Revision 39.1  93/01/07  15:40:25  brummer
* Optimized controller state change numbers.
* Added field definition for internal state variables.
*
* Revision 39.0  93/01/06  14:29:34  Jim2
* Initial Release.
*
*
*
*	(C) Copyright 1993 Commodore-Amiga, Inc.
*	    All Rights Reserved
*
******************************************************************************
;
; POTGOR bit definitions :
;
	BITDEF	POTGOR,DATLX,8
	BITDEF	POTGOR,DATLY,10
	BITDEF	POTGOR,DATRX,12
	BITDEF	POTGOR,DATRY,14
;
; POTGO bit definitions :
;
	BITDEF	POTGO,OE8,9
	BITDEF	POTGO,OE10,11
	BITDEF	POTGO,OE12,13
	BITDEF	POTGO,OE14,15
;
; JOY0DAT and JOY1DAT bit definitons :
;
	BITDEF	JOYDAT,X0,0
	BITDEF	JOYDAT,X1,1
	BITDEF	JOYDAT,Y0,8
	BITDEF	JOYDAT,Y1,9
;
; Joy Port Status flag equates :
;

	BITDEF	JP_STATUS,VBLANK_ACQUIRED,0	; vblank int acquired from potgo
	BITDEF	JP_STATUS,ALREADYRUNNING,1	; ReadJoyPort already running
	BITDEF	JP_STATUS,CLOCKING_CTLR,2	; critical section (no GAMEPORT access)
	BITDEF	JP_STATUS,FIRST_INIT_REQ,3	; first time init required
	BITDEF	JP_STATUS,2nd_CTLR,4
	BITDEF	JP_STATUS,2nd_TIME,5
	BITDEF	JP_STATUS,WAS_JOY,6		;Set if a joystick event is encountered.
;
; State change counter values :
;
JP_MOUSE_2_RECHECK	equ	8		; # of mouse range chgs befor going unknown
JP_JOYSTK_2_RECHECK	equ	8		; # of joystk range chgs befor going unknown

@


40.2
log
@Added bit defs for the double controller.  Removed some data defintions.
@
text
@d3 1
a3 1
*	$Id: JoyPortInternal.i,v 40.1 93/03/10 19:52:02 Jim2 Exp Locker: Jim2 $
d8 3
d67 1
d71 1
a71 1
JP_MOUSE_2_RECHECK	equ	20		; # of mouse range chgs befor going unknown
@


40.1
log
@Changed JP_STATUS flags since I gave them their own byte.
@
text
@d3 1
a3 1
*	$Id: JoyPortInternal.i,v 40.0 93/03/04 11:45:06 Jim2 Exp Locker: Jim2 $
d8 3
d62 2
a68 12
;
; ReadJoyPort Vertical blank interrupt equates :
;
RJP_Vblank_Int_Type	equ	NT_INTERRUPT	;
RJP_Vblank_Int_Pri	equ	0		;
RJP_Vblank_Int_Name:
		STRING	<'game.library ReadJoyPort'>	;
;
; GAMEPORT Vertical blank interrupt equates :
;
GP_Vblank_Int_Name:
		STRING	<'gameport.device'>	;
@


40.0
log
@Renamed the _2_UNKNOWN constants to -@@_RECHECK.
@
text
@d3 1
a3 1
*	$Id: JoyPortInternal.i,v 39.3 93/01/29 16:50:29 brummer Exp Locker: Jim2 $
d8 3
a53 5
JP_STATUS_MHORZ_MASK	equ	(255<<0)	; saved horz position 7..0
JP_STATUS_MVERT_MASK	equ	(255<<8)	; saved vert position 15..8
JP_STATUS_CTR_MASK	equ	(255<<16)	; saved counter 23..16
JP_STATUS_RSVD_MASK	equ	(15<<24)	; reserved field 27..24
JP_STATUS_TYPE_MASK	equ	(15<<28)	; saved ctlr type 31..28
d55 4
a58 4
	BITDEF	JP_STATUS,VBLANK_ACQUIRED,24	; vblank int acquired from potgo
	BITDEF	JP_STATUS,ALREADYRUNNING,25	; ReadJoyPort already running
	BITDEF	JP_STATUS,CLOCKING_CTLR,26	; critical section (no GAMEPORT access)
	BITDEF	JP_STATUS,FIRST_INIT_REQ,27	; first time init required
@


39.3
log
@changed name of internal flag for error checking.
@
text
@d3 1
a3 1
*	$Id: joyportinternal.i,v 39.2 93/01/18 18:06:20 brummer Exp Locker: brummer $
d7 4
a10 1
*	$Log:	joyportinternal.i,v $
a60 1
	BITDEF	JP_STATUS,UNKNOWN,31		; controller type is unknown
d64 2
a65 2
JP_MOUSE_2_UNKNOWN	equ	20		; # of joystk range chgs befor going unknown
JP_JOYSTK_2_UNKNOWN	equ	8		; # of joystk range chgs befor going unknown
@


39.2
log
@Added BITDEFs for initialization flags/
@
text
@d3 1
a3 1
*	$Id: JoyPortInternal.i,v 39.1 93/01/07 15:40:25 brummer Exp Locker: brummer $
d7 4
a10 1
*	$Log:	JoyPortInternal.i,v $
d54 1
a54 1
	BITDEF	JP_STATUS,ACQUIRED,24		; bits for this port acquired from POTGO
@


39.1
log
@Optimized controller state change numbers.
Added field definition for internal state variables.
@
text
@d3 1
a3 1
*	$Id: JoyPortInternal.i,v 39.0 93/01/06 14:29:34 Jim2 Exp Locker: brummer $
d8 4
a20 5

;
; ***** Bit definitions used internal to ReadJoyPort software *****
;

d50 6
a55 1
	BITDEF	JP_STATUS,UNKNOWN,31
d59 14
a72 2
JP_MOUSE_2_UNKNOWN	equ	20		;
JP_JOYSTK_2_UNKNOWN	equ	8		;
@


39.0
log
@Initial Release.
@
text
@d3 1
a3 1
*	$Id: $
d7 3
a9 1
*	$Log: $
d12 1
d55 2
a56 2
JP_MOUSE_2_UNKNOWN	equ	4		;
JP_JOYSTK_2_GAMECTLR	equ	4		;
@
