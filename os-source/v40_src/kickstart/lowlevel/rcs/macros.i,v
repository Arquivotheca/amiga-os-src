head     39.2;
branch   ;
access   ;
symbols  V40_35:39.2 rel40_34:39.2 rel40_33:39.2 rel40_32:39.2 rel40_29:39.2 rel40_28:39.2 rel40_27:39.2 rel40_26:39.2 rel40_25:39.2 rel40_24:39.2 rel40_23:39.2 rel40_22:39.2 rel40_21:39.2 rel40_20:39.2 rel40_19:39.2 rel40_18:39.2 rel40_17:39.2 rel40_16:39.2 rel40_15:39.2 rel40_14:39.2 rel40_13:39.2 rel40_12:39.2 rel40_11:39.2 rel40_4:39.2 rel40_3:39.2 rel40_2:39.2 rel40_1:39.2 rel39_7:39.2 rel39_6:39.2 rel39_5:39.2 rel39_4:39.1 rel39_3:39.1 rel39_2:39.0 rel39_1:39.0;
locks    ; strict;
comment  @* @;


39.2
date     93.01.07.14.29.19;  author Jim2;  state Exp;
branches ;
next     39.1;

39.1
date     92.12.17.18.12.05;  author Jim2;  state Exp;
branches ;
next     39.0;

39.0
date     92.12.07.16.06.40;  author Jim2;  state Exp;
branches ;
next     ;


desc
@Useful assembler macros.
@


39.2
log
@*** empty log message ***
@
text
@******************************************************************************
*
*	$Id: macros.i,v 39.1 92/12/17 18:12:05 Jim2 Exp Locker: Jim2 $
*
******************************************************************************
*
*	$Log:	macros.i,v $
* Revision 39.1  92/12/17  18:12:05  Jim2
* *** empty log message ***
*
* Revision 39.0  92/12/07  16:06:40  Jim2
* Initial release prior to testing.
*
*
*	(C) Copyright 1992,1993 Commodore-Amiga, Inc.
*	    All Rights Reserved
*
******************************************************************************





dbug	macro	r
	xref	_kprintf
	movem.l	d0/d1/a0/a1,-(a7)
	move.l \1,-(a7)
	pea	a\@@(pc)
	jsr	_kprintf
	lea	8(a7),a7
	bra.s	b\@@
a\@@: dc.b	'%lx ',0,0
b\@@:
	movem.l	(a7)+,d0/d1/a0/a1
	endm

dbugw	macro	r
	xref	_kprintf
	movem.l	d0/d1/a0/a1,-(a7)
	move.w \1,-(a7)
	pea	a\@@(pc)
	jsr	_kprintf
	lea	6(a7),a7
	bra.s	b\@@
a\@@: dc.b	'%x ',0
b\@@:
	movem.l	(a7)+,d0/d1/a0/a1
	endm

print	macro	string
	xref	KPutStr
	movem.l	a0/a1/d0/d1,-(a7)
	lea	mystring\@@(pc),a0
	jsr	KPutStr
	movem.l	(a7)+,a0/a1/d0/d1
	bra.s	skip\@@
mystring\@@:
	dc.b	\1,0
	cnop	0,2
skip\@@:
	endm

WORDVAR	macro	vname
TEMP_SIZE	set	TEMP_SIZE+(TEMP_SIZE&1)	; even up
\1_w		set	TEMP_SIZE
TEMP_SIZE	set	TEMP_SIZE+2
	endm

LONGVAR	macro	vname
TEMP_SIZE	set	TEMP_SIZE+((4-(TEMP_SIZE&3))&3)	; lword align
\1_l		set	TEMP_SIZE
TEMP_SIZE	set	TEMP_SIZE+4
	endm

BVAR	macro	vname
\1_b	set	TEMP_SIZE
TEMP_SIZE	set	TEMP_SIZE+1
	endm

ARRAYVAR	macro	vname,size
TEMP_SIZE	set	TEMP_SIZE+((4-(TEMP_SIZE&3))&3)	; lword align
\1	set	TEMP_SIZE
TEMP_SIZE	set	TEMP_SIZE+\2
	endm

ALLOCLOCALS	macro	offthis
; align temp_size and sub from sp
TEMP_SIZE	set	TEMP_SIZE+((4-(TEMP_SIZE&3))&3)	; lword align
	lea	-TEMP_SIZE(\1),\1
	endm

DONELOCALS	macro	offthis
	lea	TEMP_SIZE(\1),\1
	endm
@


39.1
log
@*** empty log message ***
@
text
@d3 1
a3 1
*	$Id: macros.i,v 39.0 92/12/07 16:06:40 Jim2 Exp Locker: Jim2 $
d8 3
d15 1
a15 1
*	(C) Copyright 1992 Commodore-Amiga, Inc.
a23 6
CALLSYS		MACRO
		IFND	_LVO\1
		xref	_LVO\1		; Set the external reference
		ENDC
		jsr	_LVO\1(a6)
		ENDM
@


39.0
log
@Initial release prior to testing.
@
text
@d3 1
a3 1
*	$Id$
d7 4
a10 1
*	$Log$
@
