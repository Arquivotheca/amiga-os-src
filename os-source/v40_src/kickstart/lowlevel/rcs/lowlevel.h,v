head     40.6;
branch   ;
access   ;
symbols  V40_35:40.6 rel40_34:40.5 rel40_33:40.5 rel40_32:40.5 rel40_29:40.5 rel40_28:40.5 rel40_27:40.4 rel40_26:40.4 rel40_25:40.4 rel40_24:40.4 rel40_23:40.4 rel40_22:40.4 rel40_21:40.4 rel40_20:40.4 rel40_19:40.4 rel40_18:40.4 rel40_17:40.4 rel40_16:40.4 rel40_15:40.4 rel40_14:40.4 rel40_13:40.3 rel40_12:40.3 rel40_11:40.2;
locks    ; strict;
comment  @ * @;


40.6
date     93.07.30.16.09.58;  author vertex;  state Exp;
branches ;
next     40.5;

40.5
date     93.05.05.09.58.27;  author gregm;  state Exp;
branches ;
next     40.4;

40.4
date     93.03.23.14.46.20;  author Jim2;  state Exp;
branches ;
next     40.3;

40.3
date     93.03.15.16.27.14;  author Jim2;  state Exp;
branches ;
next     40.2;

40.2
date     93.03.12.20.11.26;  author Jim2;  state Exp;
branches ;
next     40.1;

40.1
date     93.03.08.10.30.03;  author Jim2;  state Exp;
branches ;
next     40.0;

40.0
date     93.03.02.13.13.25;  author Jim2;  state Exp;
branches ;
next     ;


desc
@C style includes for the interfacing to lowlevel library.
@


40.6
log
@Autodoc and include cleanup
@
text
@#ifndef LIBRARIES_LOWLEVEL_H
#define LIBRARIES_LOWLEVEL_H

/*
**      $Id: lowlevel.h,v 40.5 93/05/05 09:58:27 gregm Exp Locker: gregm $
**
**      lowlevel.library interface structures and definitions.
**
**      (C) Copyright 1993 Commodore-Amiga, Inc.
**      All Rights Reserved
*/

/*****************************************************************************/


#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif

#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif


/*****************************************************************************/


/* structure for use with QueryKeys() */
struct KeyQuery
{
    UWORD kq_KeyCode;
    BOOL  kq_Pressed;
};


/*****************************************************************************/


/* bits in the return value of GetKey() */
#define LLKB_LSHIFT     16
#define LLKB_RSHIFT     17
#define LLKB_CAPSLOCK   18
#define LLKB_CONTROL    19
#define LLKB_LALT       20
#define LLKB_RALT       21
#define LLKB_LAMIGA     22
#define LLKB_RAMIGA     23

#define LLKF_LSHIFT     (1<<LLKB_LSHIFT)
#define LLKF_RSHIFT     (1<<LLKB_RSHIFT)
#define LLKF_CAPSLOCK   (1<<LLKB_CAPSLOCK)
#define LLKF_CONTROL    (1<<LLKB_CONTROL)
#define LLKF_LALT       (1<<LLKB_LALT)
#define LLKF_RALT       (1<<LLKB_RALT)
#define LLKF_LAMIGA     (1<<LLKB_LAMIGA)
#define LLKF_RAMIGA     (1<<LLKB_RAMIGA)


/*****************************************************************************/


/* Tags for SetJoyPortAttrs() */
#define SJA_Dummy        (TAG_USER+0xc00100)
#define SJA_Type         (SJA_Dummy+1) /* force type to mouse, joy, game cntrlr */
#define SJA_Reinitialize (SJA_Dummy+2) /* free potgo bits, reset to autosense   */

/* Controller types for SJA_Type tag */
#define SJA_TYPE_AUTOSENSE 0
#define SJA_TYPE_GAMECTLR  1
#define SJA_TYPE_MOUSE     2
#define SJA_TYPE_JOYSTK    3


/*****************************************************************************/


/* ReadJoyPort() return value definitions */

/* Port types */
#define JP_TYPE_NOTAVAIL  (00<<28)        /* port data unavailable    */
#define JP_TYPE_GAMECTLR  (01<<28)        /* port has game controller */
#define JP_TYPE_MOUSE     (02<<28)        /* port has mouse           */
#define JP_TYPE_JOYSTK    (03<<28)        /* port has joystick        */
#define JP_TYPE_UNKNOWN   (04<<28)        /* port has unknown device  */
#define JP_TYPE_MASK      (15<<28)        /* controller type          */

/* Button types, valid for all types except JP_TYPE_NOTAVAIL */
#define JPB_BUTTON_BLUE    23     /* Blue - Stop; Right Mouse                */
#define JPB_BUTTON_RED     22     /* Red - Select; Left Mouse; Joystick Fire */
#define JPB_BUTTON_YELLOW  21     /* Yellow - Repeat                         */
#define JPB_BUTTON_GREEN   20     /* Green - Shuffle                         */
#define JPB_BUTTON_FORWARD 19     /* Charcoal - Forward                      */
#define JPB_BUTTON_REVERSE 18     /* Charcoal - Reverse                      */
#define JPB_BUTTON_PLAY    17     /* Grey - Play/Pause; Middle Mouse         */
#define JPF_BUTTON_BLUE    (1<<JPB_BUTTON_BLUE)
#define JPF_BUTTON_RED     (1<<JPB_BUTTON_RED)
#define JPF_BUTTON_YELLOW  (1<<JPB_BUTTON_YELLOW)
#define JPF_BUTTON_GREEN   (1<<JPB_BUTTON_GREEN)
#define JPF_BUTTON_FORWARD (1<<JPB_BUTTON_FORWARD)
#define JPF_BUTTON_REVERSE (1<<JPB_BUTTON_REVERSE)
#define JPF_BUTTON_PLAY    (1<<JPB_BUTTON_PLAY)
#define JP_BUTTON_MASK     (JPF_BUTTON_BLUE|JPF_BUTTON_RED|JPF_BUTTON_YELLOW|JPF_BUTTON_GREEN|JPF_BUTTON_FORWARD|JPF_BUTTON_REVERSE|JPF_BUTTON_PLAY)

/* Direction types, valid for JP_TYPE_GAMECTLR and JP_TYPE_JOYSTK */
#define JPB_JOY_UP        3
#define JPB_JOY_DOWN      2
#define JPB_JOY_LEFT      1
#define JPB_JOY_RIGHT     0
#define JPF_JOY_UP        (1<<JPB_JOY_UP)
#define JPF_JOY_DOWN      (1<<JPB_JOY_DOWN)
#define JPF_JOY_LEFT      (1<<JPB_JOY_LEFT)
#define JPF_JOY_RIGHT     (1<<JPB_JOY_RIGHT)
#define JP_DIRECTION_MASK (JPF_JOY_UP|JPF_JOY_DOWN|JPF_JOY_LEFT|JPF_JOY_RIGHT)

/* Mouse position reports, valid for JP_TYPE_MOUSE */
#define JP_MHORZ_MASK   (255<<0)        /* horzizontal position */
#define JP_MVERT_MASK   (255<<8)        /* vertical position    */
#define JP_MOUSE_MASK   (JP_MHORZ_MASK|JP_MVERT_MASK)

/* Obsolete ReadJoyPort() definitions, here for source code compatibility only.
 * Please do NOT use in new code.
 */
#define JPB_BTN1  JPB_BUTTON_BLUE
#define JPF_BTN1  JPF_BUTTON_BLUE
#define JPB_BTN2  JPB_BUTTON_RED
#define JPF_BTN2  JPF_BUTTON_RED
#define JPB_BTN3  JPB_BUTTON_YELLOW
#define JPF_BTN3  JPF_BUTTON_YELLOW
#define JPB_BTN4  JPB_BUTTON_GREEN
#define JPF_BTN4  JPF_BUTTON_GREEN
#define JPB_BTN5  JPB_BUTTON_FORWARD
#define JPF_BTN5  JPF_BUTTON_FORWARD
#define JPB_BTN6  JPB_BUTTON_REVERSE
#define JPF_BTN6  JPF_BUTTON_REVERSE
#define JPB_BTN7  JPB_BUTTON_PLAY
#define JPF_BTN7  JPF_BUTTON_PLAY
#define JPB_UP    JPB_JOY_UP
#define JPF_UP    JPF_JOY_UP
#define JPB_DOWN  JPB_JOY_DOWN
#define JPF_DOWN  JPF_JOY_DOWN
#define JPB_LEFT  JPB_JOY_LEFT
#define JPF_LEFT  JPF_JOY_LEFT
#define JPB_RIGHT JPB_JOY_RIGHT
#define JPF_RIGHT JPF_JOY_RIGHT


/*****************************************************************************/


/* Tags for SystemControl() */
#define SCON_Dummy         (TAG_USER+0x00C00000)
#define SCON_TakeOverSys   (SCON_Dummy+0)
#define SCON_KillReq       (SCON_Dummy+1)
#define SCON_CDReboot      (SCON_Dummy+2)
#define SCON_StopInput     (SCON_Dummy+3)
#define SCON_AddCreateKeys (SCON_Dummy+4)
#define SCON_RemCreateKeys (SCON_Dummy+5)

/* Reboot control values for use with SCON_CDReboot tag */
#define CDReboot_On             1
#define CDReboot_Off            0
#define CDReboot_Default        2


/*****************************************************************************/


/* Rawkey codes returned when using SCON_AddCreateKeys with SystemControl() */

#define RAWKEY_PORT0_BUTTON_BLUE        0x72
#define RAWKEY_PORT0_BUTTON_RED         0x78
#define RAWKEY_PORT0_BUTTON_YELLOW      0x77
#define RAWKEY_PORT0_BUTTON_GREEN       0x76
#define RAWKEY_PORT0_BUTTON_FORWARD     0x75
#define RAWKEY_PORT0_BUTTON_REVERSE     0x74
#define RAWKEY_PORT0_BUTTON_PLAY        0x73
#define RAWKEY_PORT0_JOY_UP             0x79
#define RAWKEY_PORT0_JOY_DOWN           0x7A
#define RAWKEY_PORT0_JOY_LEFT           0x7C
#define RAWKEY_PORT0_JOY_RIGHT          0x7B

#define RAWKEY_PORT1_BUTTON_BLUE        0x172
#define RAWKEY_PORT1_BUTTON_RED         0x178
#define RAWKEY_PORT1_BUTTON_YELLOW      0x177
#define RAWKEY_PORT1_BUTTON_GREEN       0x176
#define RAWKEY_PORT1_BUTTON_FORWARD     0x175
#define RAWKEY_PORT1_BUTTON_REVERSE     0x174
#define RAWKEY_PORT1_BUTTON_PLAY        0x173
#define RAWKEY_PORT1_JOY_UP             0x179
#define RAWKEY_PORT1_JOY_DOWN           0x17A
#define RAWKEY_PORT1_JOY_LEFT           0x17C
#define RAWKEY_PORT1_JOY_RIGHT          0x17B

#define RAWKEY_PORT2_BUTTON_BLUE        0x272
#define RAWKEY_PORT2_BUTTON_RED         0x278
#define RAWKEY_PORT2_BUTTON_YELLOW      0x277
#define RAWKEY_PORT2_BUTTON_GREEN       0x276
#define RAWKEY_PORT2_BUTTON_FORWARD     0x275
#define RAWKEY_PORT2_BUTTON_REVERSE     0x274
#define RAWKEY_PORT2_BUTTON_PLAY        0x273
#define RAWKEY_PORT2_JOY_UP             0x279
#define RAWKEY_PORT2_JOY_DOWN           0x27A
#define RAWKEY_PORT2_JOY_LEFT           0x27C
#define RAWKEY_PORT2_JOY_RIGHT          0x27B

#define RAWKEY_PORT3_BUTTON_BLUE        0x372
#define RAWKEY_PORT3_BUTTON_RED         0x378
#define RAWKEY_PORT3_BUTTON_YELLOW      0x377
#define RAWKEY_PORT3_BUTTON_GREEN       0x376
#define RAWKEY_PORT3_BUTTON_FORWARD     0x375
#define RAWKEY_PORT3_BUTTON_REVERSE     0x374
#define RAWKEY_PORT3_BUTTON_PLAY        0x373
#define RAWKEY_PORT3_JOY_UP             0x379
#define RAWKEY_PORT3_JOY_DOWN           0x37A
#define RAWKEY_PORT3_JOY_LEFT           0x37C
#define RAWKEY_PORT3_JOY_RIGHT          0x37B


/*****************************************************************************/


/* Return values for GetLanguageSelection() */
#define LANG_UNKNOWN    0
#define LANG_AMERICAN   1       /* American English */
#define LANG_ENGLISH    2       /* British English  */
#define LANG_GERMAN     3
#define LANG_FRENCH     4
#define LANG_SPANISH    5
#define LANG_ITALIAN    6
#define LANG_PORTUGUESE 7
#define LANG_DANISH     8
#define LANG_DUTCH      9
#define LANG_NORWEGIAN  10
#define LANG_FINNISH    11
#define LANG_SWEDISH    12
#define LANG_JAPANESE   13
#define LANG_CHINESE    14
#define LANG_ARABIC     15
#define LANG_GREEK      16
#define LANG_HEBREW     17
#define LANG_KOREAN     18


/*****************************************************************************/


#endif /* LIBRARIES_LOWLEVEL_H */
@


40.5
log
@Added tags for SetJoyPortAttrs()
@
text
@d5 1
a5 1
**      $Id: lowlevel.h,v 40.4 93/03/23 14:46:20 Jim2 Exp $
d15 1
d17 1
a17 1
    #include <Exec/Types.h>
d21 1
a21 1
    #include <utility/tagitem.h>
d25 4
d35 5
d41 8
a49 1
#define LLKB_RSHIFT     17
a50 1
#define LLKB_CAPSLOCK   18
a51 1
#define LLKB_CONTROL    19
a52 1
#define LLKB_LALT       20
a53 1
#define LLKB_RALT       21
a54 1
#define LLKB_LAMIGA     22
a55 1
#define LLKB_RAMIGA     23
d58 8
a65 6
/*
 * Tags for SetJoyPortAttrs()
 */
#define SJA_Dummy       (TAG_USER+0xc00100)
#define SJA_Type        (SJA_Dummy+1)
/* force controller type to mouse, joy, game controller */
d67 5
a71 5
/* Controller types for ti_Data, when using SJA_Type w/ SetJoyPortAttrs() */
#define SJA_TYPE_AUTOSENSE      0
#define SJA_TYPE_GAMECTLR       1
#define SJA_TYPE_MOUSE          2
#define SJA_TYPE_JOYSTK         3
d74 1
a75 3
/*
 ***** ReadJoyPort() Return value equates *****
*/
d77 1
d79 35
d115 4
a118 3
/*
 Port Type Equates :
*/
d120 25
a144 1
#define JP_TYPE_MASK            (15<<28)        /* controller type */
a145 5
#define JP_TYPE_NOTAVAIL        (00<<28)        /* port data unavailable */
#define JP_TYPE_GAMECTLR        (01<<28)        /* port has game controller */
#define JP_TYPE_MOUSE           (02<<28)        /* port has mouse */
#define JP_TYPE_JOYSTK          (03<<28)        /* port has joystick */
#define JP_TYPE_UNKNOWN         (04<<28)        /* port has unknown device */
d147 1
a147 17
/*
 Button Equates -  Valid for types: all except NOTAVIAL
*/
#define JPB_BUTTON_BLUE 23
#define JPF_BUTTON_BLUE (1<<JPB_BUTTON_BLUE)            /* Blue - Stop; Right Mouse */
#define JPB_BUTTON_RED  22
#define JPF_BUTTON_RED  (1<<JPB_BUTTON_RED)             /* Red - Select; Left Mouse; Joystick Fire */
#define JPB_BUTTON_YELLOW       21
#define JPF_BUTTON_YELLOW       (1<<JPB_BUTTON_YELLOW)  /* Yellow - Repeat */
#define JPB_BUTTON_GREEN        20
#define JPF_BUTTON_GREEN        (1<<JPB_BUTTON_GREEN)   /* Green - Shuffle */
#define JPB_BUTTON_FORWARD      19
#define JPF_BUTTON_FORWARD      (1<<JPB_BUTTON_FORWARD) /* Charcoal - Forward */
#define JPB_BUTTON_REVERSE      18
#define JPF_BUTTON_REVERSE      (1<<JPB_BUTTON_REVERSE) /* Charcoal - Reverse */
#define JPB_BUTTON_PLAY 17
#define JPF_BUTTON_PLAY (1<<JPB_BUTTON_PLAY)            /* Grey - Play/Pause; Middle Mouse */
a148 1
#define JP_BUTTON_MASK  (JPF_BUTTON_BLUE|JPF_BUTTON_RED|JPF_BUTTON_YELLOW|JPF_BUTTON_GREEN|JPF_BUTTON_FORWARD|JPF_BUTTON_REVERSE|JPF_BUTTON_PLAY)
d150 8
a157 11
/*
 Direction Equates - Valid for types:  GAMECTLR, JOYSTK
*/
#define JPB_JOY_UP      3
#define JPF_JOY_UP      (1<<JPB_JOY_UP)         /* Up */
#define JPB_JOY_DOWN    2
#define JPF_JOY_DOWN    (1<<JPB_JOY_DOWN)       /* Down */
#define JPB_JOY_LEFT    1
#define JPF_JOY_LEFT    (1<<JPB_JOY_LEFT)       /* Left */
#define JPB_JOY_RIGHT   0
#define JPF_JOY_RIGHT   (1<<JPB_JOY_RIGHT)      /* Right */
d159 4
a162 1
#define JP_DIRECTION_MASK (JPF_JOY_UP|JPF_JOY_DOWN|JPF_JOY_LEFT|JPF_JOY_RIGHT)
a163 5
/*
 Mouse position equates - Valid for types: MOUSE
*/
#define JP_MHORZ_MASK           (255<<0)        /* horzizontal position */
#define JP_MVERT_MASK           (255<<8)        /* vertical position */
d165 1
a165 1
#define JP_MOUSE_MASK   (JP_MHORZ_MASK|JP_MVERT_MASK)
d168 1
a168 3
/*
** Rawkey codes returned when using SCON_AddCreateKeys
*/
d219 1
a219 6



/*
 Tags for SystemControlA()
*/
a220 7
#define SCON_Dummy              (TAG_USER+0x00C00000)
#define SCON_TakeOverSys        (SCON_Dummy+0)
#define SCON_KillReq            (SCON_Dummy+1)
#define SCON_CDReboot           (SCON_Dummy+2)
#define SCON_StopInput          (SCON_Dummy+3)
#define SCON_AddCreateKeys      (SCON_Dummy+4)
#define SCON_RemCreateKeys      (SCON_Dummy+5)
d222 1
a222 10
#define CDReboot_On             1
#define CDReboot_Off            0
#define CDReboot_Default        2



/*
** Human Language Defines
*/

d224 2
a225 2
#define LANG_AMERICAN   1       /* American English     */
#define LANG_ENGLISH    2       /* British English      */
d244 1
a244 19

/*
** Original, less descriptive gamecontroller button definitions.
*/

#define JPB_BTN1        JPB_BUTTON_BLUE
#define JPF_BTN1        JPF_BUTTON_BLUE         /* Blue - Stop */
#define JPB_BTN2        JPB_BUTTON_RED
#define JPF_BTN2        JPF_BUTTON_RED          /* Red - Select */
#define JPB_BTN3        JPB_BUTTON_YELLOW
#define JPF_BTN3        JPF_BUTTON_YELLOW       /* Yellow - Repeat */
#define JPB_BTN4        JPB_BUTTON_GREEN
#define JPF_BTN4        JPF_BUTTON_GREEN        /* Green - Shuffle */
#define JPB_BTN5        JPB_BUTTON_FORWARD
#define JPF_BTN5        JPF_BUTTON_FORWARD      /* Charcoal - Forward */
#define JPB_BTN6        JPB_BUTTON_REVERSE
#define JPF_BTN6        JPF_BUTTON_REVERSE      /* Charcoal - Reverse */
#define JPB_BTN7        JPB_BUTTON_PLAY
#define JPF_BTN7        JPF_BUTTON_PLAY         /* Grey - Play/Pause*/
a245 12
/*
 Direction Equates
*/
#define JPB_UP          JPB_JOY_UP
#define JPF_UP          JPF_JOY_UP              /* Up */
#define JPB_DOWN        JPB_JOY_DOWN
#define JPF_DOWN        JPF_JOY_DOWN            /* Down */
#define JPB_LEFT        JPB_JOY_LEFT
#define JPF_LEFT        JPF_JOY_LEFT            /* Left */
#define JPB_RIGHT       JPB_JOY_RIGHT
#define JPF_RIGHT       JPF_JOY_RIGHT           /* Right */

d247 1
a247 2

#endif
@


40.4
log
@Played with the definitions of the tags for SystemControlA().
@
text
@d5 1
a5 1
**	$Id: lowlevel.h,v 40.3 93/03/15 16:27:14 Jim2 Exp Locker: Jim2 $
d7 1
a7 1
**	lowlevel.library interface structures and definitions.
d9 2
a10 2
**	(C) Copyright 1993 Commodore-Amiga, Inc.
**	All Rights Reserved
d30 29
a58 16
#define	LLKB_LSHIFT	16
#define LLKF_LSHIFT	(1<<LLKB_LSHIFT)
#define LLKB_RSHIFT	17
#define LLKF_RSHIFT	(1<<LLKB_RSHIFT)
#define LLKB_CAPSLOCK	18
#define LLKF_CAPSLOCK	(1<<LLKB_CAPSLOCK)
#define LLKB_CONTROL	19
#define LLKF_CONTROL	(1<<LLKB_CONTROL)
#define LLKB_LALT	20
#define LLKF_LALT	(1<<LLKB_LALT)
#define LLKB_RALT	21
#define LLKF_RALT	(1<<LLKB_RALT)
#define LLKB_LAMIGA	22
#define	LLKF_LAMIGA	(1<<LLKB_LAMIGA)
#define LLKB_RAMIGA	23
#define LLKF_RAMIGA	(1<<LLKB_RAMIGA)
d60 2
d72 1
a72 1
#define JP_TYPE_MASK		(15<<28)	/* controller type */
d74 5
a78 5
#define JP_TYPE_NOTAVAIL	(00<<28)	/* port data unavailable */
#define JP_TYPE_GAMECTLR	(01<<28)	/* port has game controller */
#define JP_TYPE_MOUSE		(02<<28)	/* port has mouse */
#define JP_TYPE_JOYSTK		(03<<28)	/* port has joystick */
#define JP_TYPE_UNKNOWN		(04<<28)	/* port has unknown device */
d83 14
a96 14
#define	JPB_BUTTON_BLUE	23
#define JPF_BUTTON_BLUE	(1<<JPB_BUTTON_BLUE)		/* Blue - Stop; Right Mouse */
#define JPB_BUTTON_RED	22
#define	JPF_BUTTON_RED	(1<<JPB_BUTTON_RED)		/* Red - Select; Left Mouse; Joystick Fire */
#define JPB_BUTTON_YELLOW	21
#define	JPF_BUTTON_YELLOW	(1<<JPB_BUTTON_YELLOW)	/* Yellow - Repeat */
#define JPB_BUTTON_GREEN	20
#define	JPF_BUTTON_GREEN	(1<<JPB_BUTTON_GREEN)	/* Green - Shuffle */
#define JPB_BUTTON_FORWARD	19
#define	JPF_BUTTON_FORWARD	(1<<JPB_BUTTON_FORWARD)	/* Charcoal - Forward */
#define JPB_BUTTON_REVERSE	18
#define	JPF_BUTTON_REVERSE	(1<<JPB_BUTTON_REVERSE)	/* Charcoal - Reverse */
#define JPB_BUTTON_PLAY	17
#define JPF_BUTTON_PLAY	(1<<JPB_BUTTON_PLAY)		/* Grey - Play/Pause; Middle Mouse */
d98 1
a98 1
#define JP_BUTTON_MASK	(JPF_BUTTON_BLUE|JPF_BUTTON_RED|JPF_BUTTON_YELLOW|JPF_BUTTON_GREEN|JPF_BUTTON_FORWARD|JPF_BUTTON_REVERSE|JPF_BUTTON_PLAY)
d103 8
a110 8
#define JPB_JOY_UP	3
#define	JPF_JOY_UP	(1<<JPB_JOY_UP)		/* Up */
#define JPB_JOY_DOWN	2
#define	JPF_JOY_DOWN	(1<<JPB_JOY_DOWN)	/* Down */
#define JPB_JOY_LEFT	1
#define	JPF_JOY_LEFT	(1<<JPB_JOY_LEFT)	/* Left */
#define JPB_JOY_RIGHT	0
#define	JPF_JOY_RIGHT	(1<<JPB_JOY_RIGHT)	/* Right */
d117 2
a118 2
#define JP_MHORZ_MASK		(255<<0)	/* horzizontal position */
#define JP_MVERT_MASK		(255<<8)	/* vertical position */
d120 1
a120 1
#define JP_MOUSE_MASK	(JP_MHORZ_MASK|JP_MVERT_MASK)
d127 48
a174 48
#define	RAWKEY_PORT0_BUTTON_BLUE	0x72
#define	RAWKEY_PORT0_BUTTON_RED		0x78
#define	RAWKEY_PORT0_BUTTON_YELLOW	0x77
#define	RAWKEY_PORT0_BUTTON_GREEN	0x76
#define	RAWKEY_PORT0_BUTTON_FORWARD	0x75
#define	RAWKEY_PORT0_BUTTON_REVERSE	0x74
#define	RAWKEY_PORT0_BUTTON_PLAY	0x73
#define	RAWKEY_PORT0_JOY_UP		0x79
#define	RAWKEY_PORT0_JOY_DOWN		0x7A
#define	RAWKEY_PORT0_JOY_LEFT		0x7C
#define	RAWKEY_PORT0_JOY_RIGHT		0x7B

#define	RAWKEY_PORT1_BUTTON_BLUE	0x172
#define	RAWKEY_PORT1_BUTTON_RED		0x178
#define	RAWKEY_PORT1_BUTTON_YELLOW	0x177
#define	RAWKEY_PORT1_BUTTON_GREEN	0x176
#define	RAWKEY_PORT1_BUTTON_FORWARD	0x175
#define	RAWKEY_PORT1_BUTTON_REVERSE	0x174
#define	RAWKEY_PORT1_BUTTON_PLAY	0x173
#define	RAWKEY_PORT1_JOY_UP		0x179
#define	RAWKEY_PORT1_JOY_DOWN		0x17A
#define	RAWKEY_PORT1_JOY_LEFT		0x17C
#define	RAWKEY_PORT1_JOY_RIGHT		0x17B

#define	RAWKEY_PORT2_BUTTON_BLUE	0x272
#define	RAWKEY_PORT2_BUTTON_RED		0x278
#define	RAWKEY_PORT2_BUTTON_YELLOW	0x277
#define	RAWKEY_PORT2_BUTTON_GREEN	0x276
#define	RAWKEY_PORT2_BUTTON_FORWARD	0x275
#define	RAWKEY_PORT2_BUTTON_REVERSE	0x274
#define	RAWKEY_PORT2_BUTTON_PLAY	0x273
#define	RAWKEY_PORT2_JOY_UP		0x279
#define	RAWKEY_PORT2_JOY_DOWN		0x27A
#define	RAWKEY_PORT2_JOY_LEFT		0x27C
#define	RAWKEY_PORT2_JOY_RIGHT		0x27B

#define	RAWKEY_PORT3_BUTTON_BLUE	0x372
#define	RAWKEY_PORT3_BUTTON_RED		0x378
#define	RAWKEY_PORT3_BUTTON_YELLOW	0x377
#define	RAWKEY_PORT3_BUTTON_GREEN	0x376
#define	RAWKEY_PORT3_BUTTON_FORWARD	0x375
#define	RAWKEY_PORT3_BUTTON_REVERSE	0x374
#define	RAWKEY_PORT3_BUTTON_PLAY	0x373
#define	RAWKEY_PORT3_JOY_UP		0x379
#define	RAWKEY_PORT3_JOY_DOWN		0x37A
#define	RAWKEY_PORT3_JOY_LEFT		0x37C
#define	RAWKEY_PORT3_JOY_RIGHT		0x37B

d183 11
a193 11
#define SCON_Dummy		(TAG_USER+0x00C00000)
#define SCON_TakeOverSys	(SCON_Dummy+0)
#define SCON_KillReq		(SCON_Dummy+1)
#define SCON_CDReboot		(SCON_Dummy+2)
#define SCON_StopInput		(SCON_Dummy+3)
#define SCON_AddCreateKeys	(SCON_Dummy+4)
#define SCON_RemCreateKeys	(SCON_Dummy+5)

#define CDReboot_On		1
#define CDReboot_Off		0
#define CDReboot_Default	2
d201 19
a219 19
#define	LANG_UNKNOWN	0
#define	LANG_AMERICAN	1	/* American English	*/
#define	LANG_ENGLISH	2	/* British English	*/
#define	LANG_GERMAN	3
#define	LANG_FRENCH	4
#define	LANG_SPANISH	5
#define	LANG_ITALIAN	6
#define	LANG_PORTUGUESE	7
#define	LANG_DANISH	8
#define	LANG_DUTCH	9
#define	LANG_NORWEGIAN	10
#define	LANG_FINNISH	11
#define	LANG_SWEDISH	12
#define	LANG_JAPANESE	13
#define	LANG_CHINESE	14
#define	LANG_ARABIC	15
#define	LANG_GREEK	16
#define	LANG_HEBREW	17
#define	LANG_KOREAN	18
d227 14
a240 14
#define	JPB_BTN1	JPB_BUTTON_BLUE
#define JPF_BTN1	JPF_BUTTON_BLUE		/* Blue - Stop */
#define JPB_BTN2	JPB_BUTTON_RED
#define	JPF_BTN2	JPF_BUTTON_RED		/* Red - Select */
#define JPB_BTN3	JPB_BUTTON_YELLOW
#define	JPF_BTN3	JPF_BUTTON_YELLOW	/* Yellow - Repeat */
#define JPB_BTN4	JPB_BUTTON_GREEN
#define	JPF_BTN4	JPF_BUTTON_GREEN	/* Green - Shuffle */
#define JPB_BTN5	JPB_BUTTON_FORWARD
#define	JPF_BTN5	JPF_BUTTON_FORWARD	/* Charcoal - Forward */
#define JPB_BTN6	JPB_BUTTON_REVERSE
#define	JPF_BTN6	JPF_BUTTON_REVERSE	/* Charcoal - Reverse */
#define JPB_BTN7	JPB_BUTTON_PLAY
#define JPF_BTN7	JPF_BUTTON_PLAY		/* Grey - Play/Pause*/
d245 8
a252 8
#define JPB_UP		JPB_JOY_UP
#define	JPF_UP		JPF_JOY_UP		/* Up */
#define JPB_DOWN	JPB_JOY_DOWN
#define	JPF_DOWN	JPF_JOY_DOWN		/* Down */
#define JPB_LEFT	JPB_JOY_LEFT
#define	JPF_LEFT	JPF_JOY_LEFT		/* Left */
#define JPB_RIGHT	JPB_JOY_RIGHT
#define	JPF_RIGHT	JPF_JOY_RIGHT		/* Right */
@


40.3
log
@Added multiple port raw keycodes.
@
text
@d5 1
a5 1
**	$Id: lowlevel.h,v 40.2 93/03/12 20:11:26 Jim2 Exp Locker: Jim2 $
d165 1
a165 1
 Tags for SystemControl()
d168 7
a174 6
#define SCON_TakeOverSys	(TAG_USER+0x00C00000)
#define SCON_KillReq	(SCON_TakeOverSys+1)
#define SCON_CDReboot	(SCON_KillReq+1)
#define SCON_StopInput	(SCON_CDReboot+1)
#define SCON_AddCreateKeys	(SCON_StopInput+1)
#define SCON_RemCreateKeys	(SCON_AddCreateKeys+1)
@


40.2
log
@Added rawkey codes for joystick/game controller buttons.  Also made
the defines for the buttons more verbose.
@
text
@d5 1
a5 1
**	$Id: lowlevel.h,v 40.1 93/03/08 10:30:03 Jim2 Exp Locker: Jim2 $
d112 47
a158 11
#define	RAWKEY_BUTTON_BLUE	0x72
#define	RAWKEY_BUTTON_RED	0x78
#define	RAWKEY_BUTTON_YELLOW	0x77
#define	RAWKEY_BUTTON_GREEN	0x76
#define	RAWKEY_BUTTON_FORWARD	0x75
#define	RAWKEY_BUTTON_REVERSE	0x74
#define	RAWKEY_BUTTON_PLAY	0x73
#define	RAWKEY_JOY_UP		0x79
#define	RAWKEY_JOY_DOWN		0x7A
#define	RAWKEY_JOY_LEFT		0x7C
#define	RAWKEY_JOY_RIGHT	0x7B
@


40.1
log
@Added to the comments.  Created masks for isolating the varous
fields embedded in the return value of ReadJoyPort.
@
text
@d5 1
a5 1
**	$Id: lowlevel.h,v 40.0 93/03/02 13:13:25 Jim2 Exp Locker: Jim2 $
d68 14
a81 16
#define	JPB_BTN1	23
#define JPF_BTN1	(1<<JPB_BTN1)		/* Blue - Stop; Right Mouse */
#define JPB_BTN2	22
#define	JPF_BTN2	(1<<JPB_BTN2)		/* Red - Select; Left Mouse; Joystick Fire */
#define JPB_BTN3	21
#define	JPF_BTN3	(1<<JPB_BTN3)		/* Yellow - Repeat */
#define JPB_BTN4	20
#define	JPF_BTN4	(1<<JPB_BTN4)		/* Green - Shuffle */
#define JPB_BTN5	19
#define	JPF_BTN5	(1<<JPB_BTN5)		/* Charcoal - Forward */
#define JPB_BTN6	18
#define	JPF_BTN6	(1<<JPB_BTN6)		/* Charcoal - Reverse */
#define JPB_BTN7	17
#define JPF_BTN7	(1<<JPB_BTN7)		/* Grey - Play/Pause; Middle Mouse */
#define JPB_RSVDBTN	16
#define	JPF_RSVDBTN	(1<<JPB_RSVDBTN)	/* Reserved */
d83 1
a83 1
#define JP_BTN_MASK	(JPF_BTN1|JPF_BTN2|JPF_BTN3|JPF_BTN4|JPF_BTN5|JPF_BTN6|JPF_BTN7|JPF_RSVDBTN)
d88 8
a95 8
#define JPB_UP		3
#define	JPF_UP		(1<<JPB_UP)		/* Up */
#define JPB_DOWN	2
#define	JPF_DOWN	(1<<JPB_DOWN)		/* Down */
#define JPB_LEFT	1
#define	JPF_LEFT	(1<<JPB_LEFT)		/* Left */
#define JPB_RIGHT	0
#define	JPF_RIGHT	(1<<JPB_RIGHT)		/* Right */
d97 1
a97 1
#define JP_DIRECTION_MASK (JPF_UP|JPF_DOWN|JPF_LEFT|JPF_RIGHT)
d108 17
d126 2
d136 2
d168 35
@


40.0
log
@Renamed from game.h
@
text
@d5 1
a5 1
**	$Id: game.h,v 40.4 93/03/01 15:59:55 Jim2 Exp Locker: Jim2 $
d66 1
a66 1
 Button Equates :
d81 1
a81 1
#define JPF_BTN7	(1<<JPB_BTN7)		/* Grey - Play/Pause */
d84 3
d88 1
a88 1
 Direction Equates :
d98 3
d102 1
a102 1
 Mouse Equates :
d107 1
d109 2
d123 2
@
