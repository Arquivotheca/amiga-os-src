head     40.16;
branch   ;
access   ;
symbols  V40_35:40.16 rel40_34:40.15 rel40_33:40.15 rel40_32:40.15 rel40_29:40.15 rel40_28:40.15 rel40_27:40.15 rel40_26:40.15 rel40_25:40.15 rel40_24:40.12 rel40_23:40.12 rel40_22:40.11 rel40_21:40.11 rel40_20:40.10 rel40_19:40.10 rel40_18:40.10 rel40_17:40.10 rel40_16:40.10 rel40_15:40.9 rel40_14:40.8 rel40_13:40.7 rel40_12:40.6 rel40_11:40.6 rel40_4:40.1 rel40_3:40.1 rel40_2:40.1 rel40_1:40.0 rel39_7:39.11 rel39_6:39.11 rel39_5:39.8 rel39_4:39.7 rel39_3:39.5 rel39_2:39.5 rel39_1:39.4;
locks    ; strict;
comment  @# @;


40.16
date     93.07.30.16.10.54;  author vertex;  state Exp;
branches ;
next     40.15;

40.15
date     93.04.20.14.37.06;  author Jim2;  state Exp;
branches ;
next     40.14;

40.14
date     93.04.20.14.32.09;  author Jim2;  state Exp;
branches ;
next     40.13;

40.13
date     93.04.20.14.18.12;  author Jim2;  state Exp;
branches ;
next     40.12;

40.12
date     93.04.16.10.51.34;  author Jim2;  state Exp;
branches ;
next     40.11;

40.11
date     93.04.14.10.13.23;  author Jim2;  state Exp;
branches ;
next     40.10;

40.10
date     93.03.31.18.54.49;  author Jim2;  state Exp;
branches ;
next     40.9;

40.9
date     93.03.26.17.44.36;  author Jim2;  state Exp;
branches ;
next     40.8;

40.8
date     93.03.23.14.42.51;  author Jim2;  state Exp;
branches ;
next     40.7;

40.7
date     93.03.19.11.40.35;  author Jim2;  state Exp;
branches ;
next     40.6;

40.6
date     93.03.12.20.08.46;  author Jim2;  state Exp;
branches ;
next     40.5;

40.5
date     93.03.10.19.57.15;  author Jim2;  state Exp;
branches ;
next     40.4;

40.4
date     93.03.10.12.24.50;  author Jim2;  state Exp;
branches ;
next     40.3;

40.3
date     93.03.08.10.28.02;  author Jim2;  state Exp;
branches ;
next     40.2;

40.2
date     93.03.02.13.27.32;  author Jim2;  state Exp;
branches ;
next     40.1;

40.1
date     93.02.12.12.05.14;  author Jim2;  state Exp;
branches ;
next     40.0;

40.0
date     93.02.11.17.31.51;  author Jim2;  state Exp;
branches ;
next     39.11;

39.11
date     93.01.13.15.14.49;  author Jim2;  state Exp;
branches ;
next     39.10;

39.10
date     93.01.07.16.54.46;  author brummer;  state Exp;
branches ;
next     39.9;

39.9
date     93.01.07.16.49.13;  author brummer;  state Exp;
branches ;
next     39.8;

39.8
date     93.01.07.14.30.20;  author Jim2;  state Exp;
branches ;
next     39.7;

39.7
date     93.01.05.12.11.16;  author Jim2;  state Exp;
branches ;
next     39.6;

39.6
date     92.12.21.11.44.55;  author Jim2;  state Exp;
branches ;
next     39.5;

39.5
date     92.12.14.14.59.10;  author Jim2;  state Exp;
branches ;
next     39.4;

39.4
date     92.12.11.14.09.00;  author Jim2;  state Exp;
branches ;
next     39.3;

39.3
date     92.12.09.18.18.20;  author Jim2;  state Exp;
branches ;
next     39.2;

39.2
date     92.12.08.17.07.58;  author Jim2;  state Exp;
branches ;
next     39.1;

39.1
date     92.12.08.16.52.48;  author Jim2;  state Exp;
branches ;
next     39.0;

39.0
date     92.12.07.16.07.23;  author Jim2;  state Exp;
branches ;
next     ;


desc
@The top level makefile for the games library.
@


40.16
log
@*** empty log message ***
@
text
@
SUBSYSTEMS    = a
AFILES        = startup.asm
PRE_COMPILE   = endcode.lib
PUBLIC_IFILES = lowlevel.i
PUBLIC_HFILES = lowlevel.h
CLEANFILES    = lowlevel.map #?.disk
OTHERFILES    = makefile_master makefile lowlevel_lib.sfd \
	        lowlevelbase.i test.c endcode.asm macros.i

OTHERFILES_NORCS = lowlevel_rev.i lowlevel_rev.h lowlevel_rev.rev\
		dependencies

LINKER_OPTS  = SMALLCODE SMALLDATA MAP $*.map XOHSFL PLAIN
LINKER_LIBS  = LIB:amiga.lib endcode.lib

PRE_INTERNAL  = rev lowlevel.ld.disk
POST_INTERNAL =

all:

.include makefile_master

endcode.lib: endcode.asm
	hx68 from endcode.asm TO endcode.lib INCDIR $(INCLUDEDIR) $(ASMOPTS) QUIET
@


40.15
log
@*** empty log message ***
@
text
@a0 42
##########################################################################
#
# $Id: makefile,v 40.14 93/04/20 14:32:09 Jim2 Exp Locker: Jim2 $
#
# $Locker: Jim2 $
#
##########################################################################

VERSION=40
MODULETYPE=
SYSTEM=LowLevel
SUBSYSNAME=
SUBSYSTEMS=a

AFILES= Startup.asm
AFILES2=
AFILES3=
CFILES=
INCLUDEDIR=include:
ASMOPTS=
TEMPDIR=
LINKEROPTS=

INFILES= lowlevel.i

OTHERFILES= makefile_master makefile EndMarker.asm lowlevel_lib.sfd \
	LowLevelBase.i Macros.i test.c

NONRCS_FILES=setrev lowlevel_protos.h lowlevel_pragmas.h\
	lowlevel_rev.i lowlevel_rev.h lowlevel_rev.rev lowlevel_lib.fd\
	lowlevel.doc lowlevel.ld.disk

HFILES= lowlevel.h

LINKEROPTS=	SMALLCODE SMALLDATA XREF $*.xref MAP $*.lmap XOHSFL PLAIN DEFINE _LVOStoreNV=_LVOPackBoolTags DEFINE _LVOFreeNV=_LVOGetTagData DEFINE _LVOGetCopyNV=_LVOFindTagItem
LINKERLIBS=	v$(VERSION):lib/debug.lib v$(VERSION):lib/small.lib endmarker.ob

PRE_COMPILE=
PRE_INTERNAL=rev lowlevel.ld.disk
POST_INTERNAL=revlabel

all: EndMarker.ob lowlevel.ld.disk
d2 17
d20 1
a20 2
EndMarker.ob: EndMarker.asm
	hx68 from EndMarker.asm to EndMarker.ob INCDIR $(INCLUDEDIR) $(ASMOPTS) QUIET
a22 1
.include makemeta
d24 2
a25 37
lowlevel.ld.disk: $(OFILES) $(LIBFILES) dependencies makefile startup.obj.disk
	$(LINKER) from startup.obj.disk to lowlevel.ld.disk lib $(LIBFILES) $(LINKERLIBS) $(LINKEROPTS) DEFINE _LVOElapsedTime=_LVOInitResident

startup.obj.disk: startup.asm lowlevel_rev.i
	hx68 from startup.asm to startup.obj.disk INCDIR $(INCLUDEDIR) $(ASMOPTS) DEFINE MC68000=1 DEFINE DISK_BASED=1 QUIET

MODNAME=test
LD_FILE=$(MODNAME).ld
LD_STRIP=$(MODNAME)

$(LD_STRIP): $(LD_FILE)
	 $(LINKER) from $(LD_FILE) to $(LD_STRIP) ND

$(LD_FILE): test.obj
	 $(LINKER) from test.obj to $(LD_FILE) lib  LIB:sc.lib LIB:amiga.lib LIB:debug.lib $(LINKEROPTS)



llPragmas:
	@@if nexists (t:temp)
	  makedir t:temp
	@@endif
	@@echo >t:x1 copy lowlevel_lib.sfd t:temp nopro
	@@echo >>t:x1 pushcd
	@@echo >>t:x1 cd t:temp
	@@echo >>t:x1	sfd -h lowlevel_lib.sfd
	@@echo >>t:x1	popcd
	@@echo >>t:x1 copy t:temp/fd/lowlevel_lib.fd lowlevel_lib.fd nopro
	@@echo >>t:x1 copy t:temp/pragmas/lowlevel_pragmas.h lowlevel_pragmas.h nopro
	@@echo >>t:x1 copy t:temp/protos/lowlevel_protos.h lowlevel_protos.h
	@@echo >>t:x1 copy t:temp/lvo/lowlevel_lib.asm lowlevel_lib.asm
	@@protect t:x1 +s
	@@runwsh t:x1


revlabel:
	@@runwsh setrev
@


40.14
log
@Moved the rule for EndMarker.ob to be before the included
files.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.13 93/04/20 14:18:12 Jim2 Exp Locker: Jim2 $
d42 1
a42 1
all: lowlevel.ld.disk EndMarker.ob
@


40.13
log
@Added target for EndMarker.ob
@
text
@d3 1
a3 1
# $Id: makefile,v 40.12 93/04/16 10:51:34 Jim2 Exp Locker: Jim2 $
d45 3
a55 3

EndMarker.ob: EndMarker.asm
	hx68 from EndMarker.asm to EndMarker.ob INCDIR $(INCLUDEDIR) $(ASMOPTS) QUIET
@


40.12
log
@Remove ADDSYM from the linker line.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.11 93/04/14 10:13:23 Jim2 Exp Locker: Jim2 $
d29 1
a29 1
NONRCS_FILES=setrev endmarker.ob lowlevel_protos.h lowlevel_pragmas.h\
d42 1
a42 1
all: lowlevel.ld.disk
d51 1
a51 1
startup.obj.disk:startup.asm lowlevel_rev.i
d53 3
@


40.11
log
@Make sure that lowlevel.ld.disk gets rebuilt for a release.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.10 93/03/31 18:54:49 Jim2 Exp Locker: Jim2 $
d35 1
a35 1
LINKEROPTS=	SMALLCODE SMALLDATA ADDSYM  XREF $*.xref MAP $*.lmap XOHSFL PLAIN DEFINE _LVOStoreNV=_LVOPackBoolTags DEFINE _LVOFreeNV=_LVOGetTagData DEFINE _LVOGetCopyNV=_LVOFindTagItem
@


40.10
log
@Corrected link for the disk based version so I don't have to 
the other startup code.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.9 93/03/26 17:44:36 Jim2 Exp Locker: Jim2 $
d39 1
a39 1
PRE_INTERNAL=rev
@


40.9
log
@Removed the test in generating lowlevel.ld.disk so it does not 
matter what the assembler preprocessor may be.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.8 93/03/23 14:42:51 Jim2 Exp Locker: Jim2 $
d36 1
a36 1
LINKERLIBS=	v$(VERSION):lib/small.lib v$(VERSION):lib/debug.lib endmarker.ob
d48 2
a49 2
lowlevel.ld.disk: $(PRE_COMPILE) $(OFILES) $(LIBFILES) dependencies makefile startup.obj.disk
	$(LINKER) from startup.obj.disk $(OFILES) to lowlevel.ld.disk lib $(LIBFILES) $(LINKERLIBS) $(LINKEROPTS) DEFINE _LVOElapsedTime=_LVOInitResident
@


40.8
log
@Played around so BMAKE ALL results in a build of both the ROM
and disk version.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.7 93/03/19 11:40:35 Jim2 Exp Locker: Jim2 $
d30 2
a31 1
	lowlevel_rev.i lowlevel_rev.h lowlevel_rev.rev lowlevel_lib.fd
a35 1
#LINKERLIBS= v$(VERSION):lib/debug.lib v$(VERSION):lib/rom.lib
d42 1
a42 1
all: lowlevel.ld lowlevel.ld.disk
d52 1
a52 6
	@@if neq($(ASM_PREPROCESSOR),)
		@@$(ASM_PREPROCESSOR) startup.asm >t:tmp1.asm
		hx68 from t:tmp1.asm TO startup.obj.disk INCDIR $(INCLUDEDIR) $(ASMOPTS) DEFINE MC68000=1 DEFINE DISK_BASED=1 QUIET
	@@else
		hx68 from startup.asm to startup.obj INCDIR $(INCLUDEDIR) $(ASMOPTS) DEFINE MC68000=1 DEFINE DISK_BASED=1 QUIET
	@@endif
@


40.7
log
@Added the rules for building the disk based version of the library.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.6 93/03/12 20:08:46 Jim2 Exp Locker: Jim2 $
d42 1
a42 1
Both: lowlevel.ld lowlevel.ld.disk
@


40.6
log
@Added debug.lib to the linker libraries for adding debugging code.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.5 93/03/10 19:57:15 Jim2 Exp Locker: Jim2 $
d42 1
d44 1
d47 11
@


40.5
log
@Removed lowlevel.h when I wanted to remove lowlevelbase.h.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.4 93/03/10 12:24:50 Jim2 Exp Locker: Jim2 $
d36 1
a36 1
LINKERLIBS=	v$(VERSION):lib/small.lib endmarker.ob
@


40.4
log
@Removed lowlevelbase.h
@
text
@d3 1
a3 1
# $Id: makefile,v 40.3 93/03/08 10:28:02 Jim2 Exp Locker: Jim2 $
d27 1
a27 1
	LowLevelBase.i Macros.i LowLevelBase.h test.c
d32 1
a32 1
HFILES=
@


40.3
log
@Added defines to the like statement to resolve the nonvolatile
LVOs.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.2 93/03/02 13:27:32 Jim2 Exp Locker: Jim2 $
d32 1
a32 1
HFILES= lowlevel.h
@


40.2
log
@Changed all references from game to lowlevel.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.1 93/02/12 12:05:14 Jim2 Exp Locker: Jim2 $
d34 1
a34 1
LINKEROPTS=	SMALLCODE SMALLDATA ADDSYM  XREF $*.xref MAP $*.lmap XOHSFL PLAIN
d36 1
a36 1
LINKERLIBS=	v$(VERSION):lib/rom.lib endmarker.ob
@


40.1
log
@added game_lib.fd to the list of nonrcs files.
@
text
@d3 1
a3 1
# $Id: makefile,v 40.0 93/02/11 17:31:51 Jim2 Exp Locker: Jim2 $
d11 1
a11 1
SYSTEM=Game
d24 1
a24 1
INFILES= game.i
d26 2
a27 2
OTHERFILES= makefile_master makefile EndMarker.asm game_lib.sfd \
	GameBase.i Macros.i GameBase.h test.c
d29 2
a30 2
NONRCS_FILES=setrev endmarker.ob Game_protos.h Game_pragmas.h\
	game_rev.i game_rev.h game_rev.rev game_lib.fd
d32 1
a32 1
HFILES= game.h
d58 1
a58 1
GamePragmas:
d62 1
a62 1
	@@echo >t:x1 copy Game_lib.sfd t:temp nopro
d65 1
a65 1
	@@echo >>t:x1	sfd -h Game_lib.sfd
d67 4
a70 4
	@@echo >>t:x1 copy t:temp/fd/Game_lib.fd Game_lib.fd nopro
	@@echo >>t:x1 copy t:temp/pragmas/Game_pragmas.h Game_pragmas.h nopro
	@@echo >>t:x1 copy t:temp/protos/Game_Protos.h Game_protos.h
	@@echo >>t:x1 copy t:temp/lvo/Game_lib.asm Game_Lib.asm
@


40.0
log
@Bumped the version level to 40.
@
text
@d3 1
a3 1
# $Id: makefile,v 39.11 93/01/13 15:14:49 Jim2 Exp Locker: Jim2 $
d30 1
a30 1
	game_rev.i game_rev.h game_rev.rev
@


39.11
log
@Added Keyboard.h and Keyboard.i.
@
text
@d3 1
a3 1
# $Id: makefile,v 39.10 93/01/07 16:54:46 brummer Exp Locker: Jim2 $
d9 1
a9 1
VERSION=39
d24 1
a24 1
INFILES= SystemControl.i ReadJoyPort.i keyboard.i
d32 1
a32 1
HFILES= SystemControl.h ReadJoyPort.h keyboard.h
d43 3
a56 3

.include makefile_master
.include makemeta
@


39.10
log
@huh say what ????
@
text
@d3 1
a3 1
# $Id: makefile,v 39.9 93/01/07 16:49:13 brummer Exp Locker: brummer $
d5 1
a5 1
# $Locker: brummer $
d24 1
a24 1
INFILES= SystemControl.i ReadJoyPort.i
d32 1
a32 1
HFILES= SystemControl.h ReadJoyPort.h
@


39.9
log
@Moved HOMEDIR, HOMEINC and HOMESFD to makefile_master.
@
text
@d3 1
a3 1
# $Id: makefile,v 39.8 93/01/07 14:30:20 Jim2 Exp Locker: brummer $
d29 2
a30 1
NONRCS_FILES=setrev endmarker.ob Game_protos.h Game_pragmas.h
@


39.8
log
@Added ReadJoyPort.i, Moved GameBase.i, Macros.i, GameBase.h 
and Test.C to OTHERFILES.
@
text
@d3 1
a3 1
# $Id: makefile,v 39.7 93/01/05 12:11:16 Jim2 Exp Locker: Jim2 $
d5 1
a5 1
# $Locker: Jim2 $
a13 4

HOMEDIR=cdgs:src/game
HOMEINCL=cdgs:include/game
HOMESFD=cdgs:lib/sfd
@


39.7
log
@Renamed GetJoyPortEvent.i to ReadJoyPort.i
@
text
@d3 1
a3 1
# $Id: makefile,v 39.6 92/12/21 11:44:55 Jim2 Exp Locker: Jim2 $
d22 2
a23 2
#CFILES= test.c
INCLUDEDIR="include:+v:src/kickstart/rawinput"
d28 1
a28 1
INFILES= gamebase.i macros.i SystemControl.i ReadJoyPort.i
d30 2
a31 1
OTHERFILES= makefile_master makefile EndMarker.asm game_lib.sfd
d33 1
a33 1
NONRCS_FILES=setrev endmarker.ob
d35 1
a35 1
HFILES= gamebase.h SystemControl.h
@


39.6
log
@*** empty log message ***
@
text
@d3 1
a3 1
# $Id: makefile,v 39.5 92/12/14 14:59:10 Jim2 Exp Locker: Jim2 $
d23 1
a23 1
INCLUDEDIR=
d28 1
a28 1
INFILES= gamebase.i macros.i SystemControl.i GetJoyPortEvent.i
d32 1
a32 1
NONRCS_FILES=setrev
d38 1
a38 1
LINKERLIBS=	v$(VERSION):lib/rom.lib endmarker.obj
@


39.5
log
@*** empty log message ***
@
text
@d3 1
a3 1
# $Id: makefile,v 39.4 92/12/11 14:09:00 Jim2 Exp Locker: Jim2 $
d28 1
a28 1
INFILES= gamebase.i macros.i SystemControl.i
@


39.4
log
@Added HOME??? macros to allow makemeta to be used for
this makefile without modification.
@
text
@d3 1
a3 1
# $Id: makefile,v 39.3 92/12/09 18:18:20 Jim2 Exp Locker: Jim2 $
d34 1
a34 1
HFILES= gamebase.h
@


39.3
log
@When making the Pragma file there are a couple of other
interesting files generated.  Also there were some files
missing from the list of files.
@
text
@d3 1
a3 1
# $Id: makefile,v 39.2 92/12/08 17:07:58 Jim2 Exp Locker: Jim2 $
d14 5
a25 2
HOMEDIR=
HOMEINCL=
@


39.2
log
@Now lets put it all on the network.
@
text
@d3 1
a3 1
# $Id: makefile,v 39.1 92/12/08 16:52:48 Jim2 Exp Locker: Jim2 $
d25 1
a25 1
INFILES= gamebase.i macros.i
d27 1
a27 1
OTHERFILES= makefile_master makefile EndMarker.asm
d67 3
a69 2
	@@echo >>t:x1 copy t:temp/pragmas/Game_pragmas.h Gamepragmas.h nopro
	@@echo >>t:x1 "splat -o *"GfxBase *" *"GBASE gfx_*" Gamepragmas.h"
@


39.1
log
@Added the test program.
@
text
@d3 1
a3 1
# $Id: $
d9 1
a9 1
VERSION=
@


39.0
log
@Initial release prior to testing.
@
text
@d3 1
a3 1
# $Id $
d5 1
a5 1
# $Locker:  $
d17 1
a19 1
CFILES=
d25 1
a25 1
INFILES=
d31 1
a31 1
HFILES=
d41 14
@
