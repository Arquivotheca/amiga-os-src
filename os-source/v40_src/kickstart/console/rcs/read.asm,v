head     36.8;
branch   ;
access   ;
symbols  V39_4:36.8 V37_157:36.8 V37_149:36.8 V37_136:36.8 V37_133:36.8 V37_110:36.8 V37_98:36.8 V37_85:36.8 V37_63:36.8 V37_36:36.8 V37_15:36.7 V37_10:36.7 V37_7:36.7 V37_2:36.7 V36_558:36.7 V36_554:36.7 V36_552:36.7 V36_549:36.7 V36_548:36.7 V36_547:36.7 V36_546:36.7 V36_545:36.7 V36_544:36.7 V36_543:36.7 V36_542:36.7 V36_540:36.7 V36_539:36.7 V36_538:36.7 V36_537:36.7 V36_536:36.7 V36_529:36.7 V36_527:36.7 V36_525:36.7 V36_524:36.7 V36_523:36.7 V36_522:36.7 V36_521:36.7 V36_520:36.7 V36_519:36.7 V36_518:36.7 V36_495:36.7 V36_491:36.7 V36_486:36.7 V36_482:36.7 V36_476:36.7 V36_471:36.6 V36_465:36.6 V36_463:36.6 V36_461:36.6 V36_460:36.6 V36_453:36.6 V36_447:36.6 V36_442:36.6 V36_429:36.5 V36_423:36.5 V36_413:36.5 V36_394:36.4 V36_387:36.4 V36_382:36.4 V36_381:36.4 V36_379:36.3 V36_373:36.3 V36_367:36.3 V36_361:36.3 V36_359:36.3 V36_357:36.3 V36_353:36.3 V36_346:36.3 V36_343:36.3 V36_338:36.3 V36_332:36.3 V36_327:36.3 V36_321:36.3 V36_319:36.3 V36_318:36.2 V36_316:36.2 V36_313:36.2 V36_311:36.2 V36_310:36.2 V36_300:36.2 V36_299:36.2 V36_297:36.2 V36_295:36.2 V36_278:36.2 V36_274:36.2 V36_221:36.1 V36_205:36.1 V36_171:36.0 V36_167:36.0 V36_165:36.0 V36_153:36.0 V36_146:36.0 V36_140:36.0 V36_129:36.0 V36_113:36.0 V36_56:36.0 V36_53:36.0 V36_51:36.0 V36_45:36.0 L36_42:36.0;
locks    ; strict;
comment  @*   @;


36.8
date     91.02.14.14.56.43;  author darren;  state Exp;
branches ;
next     36.7;

36.7
date     90.05.22.10.29.03;  author kodiak;  state Exp;
branches ;
next     36.6;

36.6
date     90.04.20.09.45.36;  author kodiak;  state Exp;
branches ;
next     36.5;

36.5
date     90.04.13.13.32.44;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     90.04.02.10.47.29;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     89.12.19.13.27.50;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     89.12.02.11.37.06;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     89.11.03.12.24.46;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     88.09.06.19.52.14;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.8
log
@Autodoc stuff
@
text
@**
**	$Id: read.asm,v 36.7 90/05/22 10:29:03 kodiak Exp Locker: darren $
**
**      console device read command
**
**      (C) Copyright 1985,1989 Commodore-Amiga, Inc.
**          All Rights Reserved
**
	SECTION	console

**	Includes

	INCLUDE	"cddata.i"

	INCLUDE	"exec/ables.i"
	INCLUDE	"exec/errors.i"


**	Exports

	XDEF	CDCBRead
	XDEF	CDRead


**	Imports

	XLVO	Permit			; Exec

	XREF	EndCommand

	XREF	GetReadIO


******* console.device/CMD_READ **************************************
*
*   NAME
*	CMD_READ -- return the next input from the keyboard
*
*   FUNCTION
*	Read the next input, generally from the keyboard.  The form of
*	this input is as an ANSI byte stream: i.e. either ASCII text
*	or control sequences.  Raw input events received by the
*	console device can be selectively filtered via the aSRE and aRRE
*	control sequences (see the write command).  Keys are converted
*	via the keymap associated with the unit, which is modified
*	with AskKeyMap and SetKeyMap
*
*	If, for example, raw keycodes had been enabled by writing
*	<CSI>1{ to the console (where <CSI> is $9B or Esc[), keys
*	would return raw keycode reports with the information from
*	the input event itself, in the form:
*	<CSI>1;0;<keycode>;<qualifiers>;0;0;<seconds>;<microseconds>q
*
*	If there is no pending input, this command will not be
*	satisfied, but if there is some input, but not as much as can
*	fill io_Length, the request will be satisfied with the input
*	currently available.
*
*    IO REQUEST
*	io_Message	mn_ReplyPort set if quick I/O is not possible
*	io_Device	preset by the call to OpenDevice
*	io_Unit		preset by the call to OpenDevice
*	io_Command	CMD_READ
*	io_Flags	IOF_QUICK if quick I/O possible, else zero
*	io_Length	sizeof(*buffer)
*	io_Data		char buffer[]
*			a pointer to the destination for the characters to read
*			from the keyboard.
*
*   RESULTS
*	This function sets the error field in the IOStdReq, and fills
*	    in the io_Data area with the next input, and io_Actual with
*	    the number of bytes read.
*
*    BUGS
*
*    SEE ALSO
*	exec/io.h, devices/console.h
*
********************************************************************************

CDCBRead	EQU	0

CDRead:
		movem.l d2/a2-a3,-(a7)

		move.l	a1,a3

		move.l	cd_ExecLib(a6),a0
		FORBID	a0,NOFETCH

readLoop:
		;------ check if ReadEvent already running here
		bset	#IOB_SERVICING,IO_FLAGS(a3)
		bne.s	readRts

		move.l	IO_UNIT(a3),a2

		;------ check for room in ReadEvent
		moveq	#0,d2
		tst.l	IO_LENGTH(a3)
		beq.s	readNaught

		;-- attempt the read
		bsr	GetReadIO
		tst.l	d0		; check if data available
		beq.s	readPending

		;-- data was transferred
		move.l	d0,IO_ACTUAL(a3)
		move.l	a3,a1
		moveq	#0,d0
		bsr	EndCommand

readNextCommand:
		move.l	MP_MSGLIST(a2),a3
		tst.l	(a3)
		bne.s	readLoop

readRts:
		move.l	cd_ExecLib(a6),a0
		PERMIT	a0,NOFETCH
		movem.l (a7)+,d2/a2-a3
		rts

readPending:
		andi.b	#~(IOF_SERVICING!IOF_QUICK),IO_FLAGS(a3)
		bra.s	readRts

readNaught:
		moveq	#IOERR_BADLENGTH,d0
		move.l	a3,a1
		bsr	EndCommand
		bra.s	readNextCommand

	END
@


36.7
log
@fixes processing of read requests immediately following a read reques
of length zero
@
text
@d2 1
a2 1
**	$Id: read.asm,v 36.6 90/04/20 09:45:36 kodiak Exp Locker: kodiak $
d37 1
a37 1
*	Read - return the next input from the keyboard
@


36.6
log
@first semi-tested big clip support
@
text
@d2 1
a2 1
**	$Id: read.asm,v 36.5 90/04/13 13:32:44 kodiak Exp Locker: kodiak $
d97 2
a104 2
		move.l	IO_UNIT(a3),a2

@


36.5
log
@use Id instead of Header for 4.x rcs
@
text
@d2 1
a2 1
**	$Id$
d15 1
d27 1
a27 2
	XLVO	Forbid			; Exec
	XLVO	Permit			;
d31 1
a31 2
	XREF	GetBBuff
	XREF	SizeBuff
d85 1
a85 2
		MOVEM.L D2-D3/A2-A5,-(A7)
		MOVE.L	A1,A3
d87 6
a92 1
		LINKEXE	Forbid
d94 2
a95 2
		BSET	#IOB_SERVICING,IO_FLAGS(A3)
		BNE	readRts
d98 3
a100 3
		MOVEQ	#0,D2
		MOVE.L	IO_LENGTH(A3),D3
		BEQ	readNaught
d102 2
a103 3
		;------ check for data for Read
		MOVE.L	IO_UNIT(A3),A2
		LEA	cu_ReadBuffer(A2),A4
d105 3
a107 4
		MOVE.L	A4,A0
		BSR	SizeBuff
		TST.W	D0	    ;check if keys available
		BEQ	readPending
d109 5
a113 2
		;------ initialize transfer variables
		MOVE.L	IO_DATA(A3),A5
d115 4
a118 11
readLoop:
		;------ get data from clist and put it in IO_DATA
		MOVE.L	A4,A0
		BSR	GetBBuff
		TST.W	D0	    ;check if key available
		BMI.S	readDone
		MOVE.B	D0,(A5)+
		ADDQ.L	#1,D2
		SUBQ.L	#1,D3
		BLE.S	readDone
		BRA.S	readLoop
d120 5
d127 2
a128 1
		ANDI.B	#~(IOF_SERVICING!IOF_QUICK),IO_FLAGS(A3)
a129 5
readRts:
		LINKEXE	Permit
		MOVEM.L (A7)+,D2-D3/A2-A5
		RTS

d131 4
a134 4
		MOVEQ	#IOERR_BADLENGTH,D0
		MOVE.L	A3,A1
		BSR	EndCommand
		BRA.S	readNextCommand
d136 1
a136 16
readDone:
	    ;------ the destination for the read is full
		MOVE.L	D2,IO_ACTUAL(A3)
		MOVE.L	A3,A1
		MOVEQ	#0,D0
		BSR	EndCommand

readNextCommand:
		MOVE.L	MP_MSGLIST(A2),A1
		TST.L	(A1)
		BEQ.S	readRts

		BSR	CDRead
		BRA.S	readRts

		END
@


36.4
log
@for 4.x rcs
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/read.asm,v 36.3 89/12/19 13:27:50 kodiak Exp Locker: kodiak $
@


36.3
log
@autodoc update
@
text
@d2 1
a2 1
**	$Header: read.asm,v 36.2 89/12/02 11:37:06 kodiak Exp $
@


36.2
log
@
@
text
@d2 1
a2 1
**	$Header$
d35 1
a35 1
******* console.device/command/Read ********************************************
@


36.1
log
@coalesce XREF_XXX into XLVO
@
text
@d1 9
a9 31
	TTL    '$Header: read.asm,v 36.0 88/09/06 19:52:14 kodiak Exp $'
**********************************************************************
*                                                                    *
*   Copyright 1985, Commodore-Amiga Inc.   All rights reserved.      *
*   No part of this program may be reproduced, transmitted,          *
*   transcribed, stored in retrieval system, or translated into      *
*   any language or computer language, in any form or by any         *
*   means, electronic, mechanical, magnetic, optical, chemical,      *
*   manual or otherwise, without the prior written permission of     *
*   Commodore-Amiga Incorporated, 983 University Ave. Building #D,   *
*   Los Gatos, California, 95030                                     *
*                                                                    *
**********************************************************************
*
*	Console device read command
*
*   Source Control
*   --------------
*   $Header: read.asm,v 36.0 88/09/06 19:52:14 kodiak Exp $
*
*   $Locker: kodiak $
*
*   $Log:	read.asm,v $
*   Revision 36.0  88/09/06  19:52:14  kodiak
*   *** empty log message ***
*   
*   Revision 35.0  87/10/26  11:13:52  kodiak
*   initial from V34, but w/ stripped log
*   
*
**********************************************************************
d11 1
a11 1
	SECTION		rawinput
d13 1
a13 1
*------ Included Files -----------------------------------------------
d15 1
a15 1
	INCLUDE		"cddata.i"
a16 1
	INCLUDE		"exec/errors.i"
d18 1
d20 2
a21 1
*------ Imported Names -----------------------------------------------
d23 3
d29 1
a29 1
	XREF		EndCommand
d31 2
a32 8
	XREF		GetBBuff
	XREF		SizeBuff


*------ Exported Functions -------------------------------------------

	XDEF		CDCBRead
	XDEF		CDRead
@


36.0
log
@*** empty log message ***
@
text
@d1 1
a1 1
	TTL    '$Header: read.asm,v 35.0 87/10/26 11:13:52 kodiak Exp $'
d19 1
a19 1
*   $Header: read.asm,v 35.0 87/10/26 11:13:52 kodiak Exp $
d21 1
a21 1
*   $Locker:  $
d24 3
d44 2
a45 2
	XREF_EXE	Forbid
	XREF_EXE	Permit
@
