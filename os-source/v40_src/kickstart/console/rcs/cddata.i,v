head     36.60;
branch   ;
access   ;
symbols  V39_4:36.48 V37_157:36.48 V37_149:36.47 V37_136:36.47 V37_133:36.46 V37_110:36.46 V37_98:36.45 V37_85:36.45 V37_63:36.45 V37_36:36.45 V37_15:36.44 V37_10:36.44 V37_7:36.44 V37_2:36.42 V36_558:36.42 V36_554:36.42 V36_552:36.42 V36_549:36.42 V36_548:36.42 V36_547:36.42 V36_546:36.42 V36_545:36.42 V36_544:36.42 V36_543:36.42 V36_542:36.42 V36_540:36.41 V36_539:36.40 V36_538:36.38 V36_537:36.38 V36_536:36.38 V36_529:36.36 V36_527:36.35 V36_525:36.35 V36_524:36.34 V36_523:36.34 V36_522:36.33 V36_521:36.33 V36_520:36.33 V36_519:36.33 V36_518:36.32 V36_495:36.30 V36_491:36.30 V36_486:36.29 V36_482:36.29 V36_476:36.29 V36_471:36.29 V36_465:36.29 V36_463:36.29 V36_461:36.29 V36_460:36.29 V36_453:36.29 V36_447:36.29 V36_442:36.29 V36_429:36.28 V36_423:36.27 V36_413:36.27 V36_394:36.25 V36_387:36.24 V36_382:36.24 V36_381:36.24 V36_379:36.23 V36_373:36.23 V36_367:36.21 V36_361:36.21 V36_359:36.21 V36_357:36.21 V36_353:36.21 V36_346:36.20 V36_343:36.20 V36_338:36.19 V36_332:36.18 V36_327:36.18 V36_321:36.18 V36_319:36.18 V36_318:36.18 V36_316:36.18 V36_313:36.18 V36_311:36.18 V36_310:36.18 V36_300:36.17 V36_299:36.17 V36_297:36.16 V36_295:36.16 V36_278:36.15 V36_274:36.15 V36_221:36.12 V36_205:36.11 V36_171:36.10 V36_167:36.10 V36_165:36.9 V36_153:36.8 V36_146:36.7 V36_140:36.6 V36_129:36.5 V36_113:36.4 V36_56:36.3 V36_53:36.1 V36_51:36.1 V36_45:36.1 L36_42:36.1;
locks    ; strict;
comment  @*   @;


36.60
date     92.06.16.10.43.02;  author darren;  state Exp;
branches ;
next     36.59;

36.59
date     92.05.19.12.27.04;  author darren;  state Exp;
branches ;
next     36.58;

36.58
date     92.05.19.10.08.31;  author darren;  state Exp;
branches ;
next     36.57;

36.57
date     92.05.19.09.48.50;  author darren;  state Exp;
branches ;
next     36.56;

36.56
date     92.05.18.13.03.16;  author darren;  state Exp;
branches ;
next     36.55;

36.55
date     92.03.26.13.45.54;  author darren;  state Exp;
branches ;
next     36.54;

36.54
date     92.03.24.16.27.25;  author darren;  state Exp;
branches ;
next     36.53;

36.53
date     92.03.24.11.27.40;  author darren;  state Exp;
branches ;
next     36.52;

36.52
date     92.03.24.08.53.47;  author darren;  state Exp;
branches ;
next     36.51;

36.51
date     92.03.23.12.42.43;  author darren;  state Exp;
branches ;
next     36.50;

36.50
date     92.03.19.12.37.05;  author darren;  state Exp;
branches ;
next     36.49;

36.49
date     92.03.18.14.33.41;  author darren;  state Exp;
branches ;
next     36.48;

36.48
date     91.05.22.13.49.01;  author darren;  state Exp;
branches ;
next     36.47;

36.47
date     91.05.03.18.46.54;  author darren;  state Exp;
branches ;
next     36.46;

36.46
date     91.04.12.17.41.25;  author darren;  state Exp;
branches ;
next     36.45;

36.45
date     91.02.04.14.25.23;  author darren;  state Exp;
branches ;
next     36.44;

36.44
date     91.01.16.17.28.22;  author darren;  state Exp;
branches ;
next     36.43;

36.43
date     91.01.14.16.13.23;  author darren;  state Exp;
branches ;
next     36.42;

36.42
date     90.11.20.18.40.30;  author darren;  state Exp;
branches ;
next     36.41;

36.41
date     90.11.09.21.21.41;  author darren;  state Exp;
branches ;
next     36.40;

36.40
date     90.11.07.15.53.05;  author darren;  state Exp;
branches ;
next     36.39;

36.39
date     90.11.07.15.22.43;  author darren;  state Exp;
branches ;
next     36.38;

36.38
date     90.11.01.12.10.26;  author darren;  state Exp;
branches ;
next     36.37;

36.37
date     90.11.01.11.17.50;  author darren;  state Exp;
branches ;
next     36.36;

36.36
date     90.10.22.17.21.18;  author darren;  state Exp;
branches ;
next     36.35;

36.35
date     90.10.11.13.23.33;  author darren;  state Exp;
branches ;
next     36.34;

36.34
date     90.09.13.18.06.57;  author darren;  state Exp;
branches ;
next     36.33;

36.33
date     90.07.19.16.21.21;  author darren;  state Exp;
branches ;
next     36.32;

36.32
date     90.06.07.12.08.53;  author kodiak;  state Exp;
branches ;
next     36.31;

36.31
date     90.06.06.14.28.59;  author kodiak;  state Exp;
branches ;
next     36.30;

36.30
date     90.05.29.18.21.33;  author kodiak;  state Exp;
branches ;
next     36.29;

36.29
date     90.04.20.09.45.15;  author kodiak;  state Exp;
branches ;
next     36.28;

36.28
date     90.04.17.14.54.57;  author kodiak;  state Exp;
branches ;
next     36.27;

36.27
date     90.04.16.18.22.21;  author kodiak;  state Exp;
branches ;
next     36.26;

36.26
date     90.04.13.13.33.22;  author kodiak;  state Exp;
branches ;
next     36.25;

36.25
date     90.04.11.17.53.30;  author kodiak;  state Exp;
branches ;
next     36.24;

36.24
date     90.04.02.10.48.00;  author kodiak;  state Exp;
branches ;
next     36.23;

36.23
date     90.03.03.15.43.04;  author kodiak;  state Exp;
branches ;
next     36.22;

36.22
date     90.03.03.14.55.29;  author kodiak;  state Exp;
branches ;
next     36.21;

36.21
date     90.02.23.16.55.12;  author kodiak;  state Exp;
branches ;
next     36.20;

36.20
date     90.02.21.18.40.04;  author kodiak;  state Exp;
branches ;
next     36.19;

36.19
date     90.02.21.14.04.03;  author kodiak;  state Exp;
branches ;
next     36.18;

36.18
date     89.12.15.17.49.45;  author kodiak;  state Exp;
branches ;
next     36.17;

36.17
date     89.12.14.17.03.21;  author kodiak;  state Exp;
branches ;
next     36.16;

36.16
date     89.12.08.17.52.33;  author kodiak;  state Exp;
branches ;
next     36.15;

36.15
date     89.12.04.22.55.00;  author kodiak;  state Exp;
branches ;
next     36.14;

36.14
date     89.12.03.16.36.11;  author kodiak;  state Exp;
branches ;
next     36.13;

36.13
date     89.12.02.11.36.23;  author kodiak;  state Exp;
branches ;
next     36.12;

36.12
date     89.11.07.12.57.58;  author kodiak;  state Exp;
branches ;
next     36.11;

36.11
date     89.11.04.15.58.06;  author kodiak;  state Exp;
branches ;
next     36.10;

36.10
date     89.09.15.15.36.08;  author kodiak;  state Exp;
branches ;
next     36.9;

36.9
date     89.08.21.12.56.13;  author kodiak;  state Exp;
branches ;
next     36.8;

36.8
date     89.07.10.18.17.28;  author kodiak;  state Exp;
branches ;
next     36.7;

36.7
date     89.07.07.13.30.53;  author kodiak;  state Exp;
branches ;
next     36.6;

36.6
date     89.07.05.15.15.32;  author kodiak;  state Exp;
branches ;
next     36.5;

36.5
date     89.06.30.12.31.43;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     89.06.28.13.40.16;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     89.04.19.16.17.54;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     89.04.17.15.36.27;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     88.09.19.10.15.17;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     88.09.06.19.59.30;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.60
log
@Remove Q & N draw cursor flags
@
text
@**
**      $Id: cddata.i,v 36.59 92/05/19 12:27:04 darren Exp Locker: darren $
**
**      console device private data definitions
**
**      (C) Copyright 1985,1989,1991,1992 Commodore-Amiga, Inc.
**          All Rights Reserved
**

        INCLUDE "exec/types.i"
        INCLUDE "exec/nodes.i"
        INCLUDE "exec/lists.i"
        INCLUDE "exec/tasks.i"
;       INCLUDE "exec/ports.i"                  ; included in conunit.i
        INCLUDE "exec/interrupts.i"
;       INCLUDE "exec/libraries.i"              ; included in macros.i
;       INCLUDE "exec/io.i"                     ; included in console.i
        INCLUDE "exec/semaphores.i"
        INCLUDE "devices/keymap.i"
        INCLUDE "devices/timer.i"
        INCLUDE "devices/inputevent.i"
        INCLUDE "graphics/rastport.i"
        INCLUDE "console.i"
        INCLUDE "conunit.i"
        INCLUDE "conmap.i"
        INCLUDE "macros.i"


CDERR_NOUNIT    EQU     1       ; not a real unit (OpenDevice w/ -1 unit)
CDERR_NOMAP     EQU     2       ; no character map available for this unit
CDERR_BADMAP    EQU     3       ; map not acquired via CD_OBTAINMAP

**      V36 and above

******* SnipHookMsg struct - use with Add/Remove snip hook functions (V36)

 STRUCTURE      SnipHookMsg,0
    ULONG   shm_Type            ; zero for this structure format
    ULONG   shm_SnipLen         ; length of snip data (not including null)
    APTR    shm_SnipData        ; null terminated snip data


* #define       CDERR_NOUNIT    1       /* not a real unit (OpenDevice w/ -1 unit) */
* #define       CDERR_NOMAP     2       /* no character map available for this unit */
* #define       CDERR_BADMAP    3       /* map not acquired via CD_OBTAINMAP */
*
* struct SnipHookMsg {
*    ULONG   shm_Type;          /* zero for this structure format */
*    ULONG   shm_SnipLen;       /* length of snip data (not including null) */
*    UBYTE  *shm_SnipData;      /* null terminated snip data */
* };
*

*------ constants ----------------------------------------------------
PM_ASM          EQU     -31             ; private AutoScroll mode is >1
PM_AWM          EQU     -47             ; private AutoWrap mode is ?7

CD_HANDLERPRI   EQU     0
CD_CONVBUFSIZE  EQU     255             ; used by CDInputHandler

CD_STKSIZE      EQU     $1000
CD_TASKPRI      EQU     5

CDSIGB_NEWACTIVE EQU    31              ; signal that new window is active
CDSIGB_REFRESH  EQU     30              ; signal to refresh window(s)
CDSIGB_SELECT   EQU     29              ; text selection
CDSIGB_TICK     EQU     28              ; text selection tick

CDSIGF_NEWACTIVE EQU    $80000000
CDSIGF_REFRESH  EQU     $40000000
CDSIGF_SELECT   EQU     $20000000
CDSIGF_TICK     EQU     $10000000

CDSIG_HARDCODED EQU     $f0000000

CD_TEVENTSECS   EQU     0
CD_TEVENTMICRO  EQU     100000          ; 10 times/sec

READBSIZE       EQU     256             ; read buffer size
PICBSIZE        EQU     8               ; intermediate character buffer size
PNPBSIZE        EQU     25*2            ; numeric parameter buffer size

*------ IO_FLAGS -----------------------------------------------------
        BITDEF  IO,SPECIAL,3    ; set if aRAV sequence, else cleared
        BITDEF  IO,QUEUED,4     ; command is queued to be performed
        BITDEF  IO,DONE,5       ; command is done
        BITDEF  IO,SERVICING,6  ; command is being actively performed
        BITDEF  IO,CURRENT,7    ; command is being performed (sign bit)

*------ cd_SelectionSnip  -----------------------------------------------------
 STRUCTURE  SelectionSnip,0     ; AllocVec'd
        UWORD   snip_Access     ; FreeVec when negative
        UWORD   snip_Length     ; valid Data
        LABEL   snip_Data       ; data follows...
        
*------ cd_Flags -----------------------------------------------------
        BITDEF  CD,CLIPINSTALLED,0      ; the cu_ClipRegion has been installed

*------ cd_SelectFlags -----------------------------------------------

        BITDEF  CDS,CIRCLING,2  ; selecting outside the display bounds
        BITDEF  CDS,DRAGGING,3  ; still determining whether to select
        BITDEF  CDS,SELECTING,4 ; already have selection anchor
        BITDEF  CDS,TICKING,5   ; the timer for selection polling is ticking
        BITDEF  CDS,EXTENDED,6  ; the select button is extended
        BITDEF  CDS,SELECTDOWN,7 ; the select button is down

CDS_SELECTMASK  EQU     $20     ; preserve CDS_TICKING

*------ cd_InputFlags -----------------------------------------------

        BITDEF  CDI,COPY,0      ; user selected RIGHT AMIGA C

*------ cd_CmdBytes --------------------------------------------------
*
*   if <  0, this command executes immediately, ignoring STOPPED.
*   if >= 0, this command is queued on the list at
*               *IO_UNIT + ((n-1)*MP_SIZE)
*       if it cannot be satisfied quickly
*
 STRUCTURE  ConsoleDevice,LIB_SIZE
        UWORD   cd_NumCommands          ; the number of commands supported
        APTR    cd_Segment              ; A0 when initialized
        APTR    cd_CmdVectors           ; command table for device commands
        APTR    cd_CmdBytes             ; bytes describing which command queue
        APTR    cd_ExecLib              ; exec library base
        APTR    cd_KeymapLib            ; keymap library base
        APTR    cd_GraphicsLib          ; graphics library base
        APTR    cd_LayersLib            ; layers library base
        APTR    cd_IntuitionLib         ; intuition library base
        APTR    cd_Active               ; active unit, if any
        APTR    cd_ActiveWindow         ; active window
        APTR    cd_SelectedUnit         ; unit w/ text selected in it, if any
        ULONG   cd_WindowCount          ; number of windows opened as consoles

        STRUCT  cd_USemaphore,SS_SIZE
        STRUCT  cd_UHead,LH_SIZE        ; linked list of open units

                                        ; LONG WORD ALIGNED AGAIN

        UWORD   cd_SelectDownMX         ; mouse location of initial select down
        UWORD   cd_SelectDownMY         ;
        UWORD   cd_SelectDownCPX        ; CP location of initial select down
        UWORD   cd_SelectDownCPY        ;
        UWORD   cd_SelectedAnchorX      ; location of selection start
        UWORD   cd_SelectedAnchorY      ;
        UWORD   cd_SelectedTailX        ; location of selection end
        UWORD   cd_SelectedTailY        ;

        STRUCT  cd_RPSemaphore,SS_SIZE
        STRUCT  cd_SelectionSemaphore,SS_SIZE

                                        ; LONG WORD ALIGNED AGAIN

        STRUCT  cd_SelectionHooks,MLH_SIZE
                                        ;
        APTR    cd_SelectionSnip        ; selection itself
        STRUCT  cd_HandlerIOR,IOSTD_SIZE ; input handler request
        STRUCT  cd_HandlerIS,IS_SIZE    ; input handler node

        UBYTE   cd_SelectFlags          ; flags re: selecting status
        UBYTE   cd_Flags

                                        ; LONG WORD ALIGNED AGAIN


        APTR    cd_PrevClipRegion       ; previous clip region for layer for RP
        STRUCT  cd_AreaPtrn,4
        STRUCT  cd_TmpRas,tr_SIZEOF     ;                   [8 bytes]
        STRUCT  cd_RastPort,rp_SIZEOF   ;                   [100 bytes]

        STRUCT  cd_Stk,CD_STKSIZE       ;   and stack space [1024 bytes]

        STRUCT  cd_TC,TC_SIZE           ; task space [92 bytes]

        STRUCT  cd_TPort,MP_SIZE        ;
        STRUCT  cd_TIOR,IOTV_SIZE       ;   and request block
        STRUCT  cd_EVSemaphore,SS_SIZE  ; Event list handling semaphore
        UWORD   cd_MouseX               ; temporary hold of window values
        UWORD   cd_MouseY               ; X/Y can be moved here with a
                                        ; move.l instr (atomic)

	UWORD	cd_MouseQual		; Mouse event qualifier
        UBYTE   cd_InputFlags           ; flags from inputhandler
        UBYTE   cd_Hooks                ; Count of hooks installed


        ALIGNWORD
        LABEL   cd_SIZEOF

*------ du_Flags -----------------------------------------------------
        BITDEF  DU,DISPATCH,0   ; output posted to the unit
        BITDEF  DU,STOPPED,7    ; commands are not to be performed

*------ DeviceUnit ---------------------------------------------------
*       array of current & pending command queues, a command is
*       removed after it is done, it is ACTIVE while in progress unless
*       it is quick.  The queues are message ports.
du_Flags        EQU     LN_PRI  ; various unit flags


*------ cu_Flags -----------------------------------------------------
        BITDEF  CU,NEWACTIVE,0  ; cursor activation or deactivation pending
        BITDEF  CU,RESIZE,1     ; resize pending
        BITDEF  CU,REFRESH,2    ; refresh pending
        BITDEF  CU,TOOSMALL,3   ; window is too small to render text
        BITDEF  CU,SELECTED,4   ; select hilighted
        BITDEF  CU,KERNLESS,5   ; font does not lie outside cell
        BITDEF  CU,TABBED,6     ; tab just occurred
        BITDEF  CU,IMPLICITNL,7 ; implicit NL just occurred (sign bit)

CU_RESET0MASK   EQU     $01     ; only preserve NEWACTIVE

*------ cu_CursorFlags -----------------------------------------------

        BITDEF  CU,CURSON,2     ; cursor is logically on
        BITDEF  CU,CURSSELECT,3 ; cursor is within a selection
        BITDEF  CU,CURSACTIVE,4 ; cursor is active, or no ghosting allowed

**
** Disable cursor kludge code for V39 ROM to save ROM space -- Darren 
** Do NOT reuse these flags without modifying cursor.asm code, or
** you will get the wrong cursor patterns
**
**      BITDEF  CU,CURSNDRAW,6  ; known that cursor drawing is *not* allowed
**      BITDEF  CU,CURSQDRAW,7  ; not known that cursor drawing *is* allowed
**                              ; (sign bit)


*------ cu_FixedFlags ------------------------------------------------
        BITDEF  CUF,FIXEDLL,0   ; windows have a specified line length
        BITDEF  CUF,FIXEDPL,1   ; windows have a specified page length
        BITDEF  CUF,FIXEDLO,2   ; windows have a specified x offset 
        BITDEF  CUF,FIXEDTO,3   ; windows have a specified y offset

        BITDEF  CUF,FIXEDBG,7   ; background color is explicit (sign bit)


*------ cu_PState parse states ---------------------------------------
cu_PSVANILLA   EQU 0       ;cannot be non-zero
cu_PSESC       EQU 1
cu_PSESCI      EQU 2
cu_PSCSI       EQU 3
cu_PSCSII      EQU 4

*------ cu_State flags - Extra flags for state info ------------------

        BITDEF  CU,FIRSTTIME,0          ;first time opened
        BITDEF  CU,ISACTIVE,1           ;This window is active
	BITDEF	CU,CTRLG,2		;CTRL-G pending
	BITDEF	CU,BORDERFILL,3		;BorderFill pending

*------ Flags used in the input list of events -----------------------

        BITDEF  IP,ISACTIVE,0           ;is this window active at this time?
        BITDEF  IP,REDRAW,1             ;this window has been resized/damaged
        BITDEF  IP,MAKEACTIVE,2         ;this window has been activated
        BITDEF  IP,MAKEINACTIVE,3       ;this window is no longer active

 STRUCTURE  ConsoleUnit,ConUnit_SIZEOF
	ALIGNLONG
        ULONG   cu_DevUnit              ; from OpenDevice register d0
        ;------ optional output data
        STRUCT  cu_CM,ConsoleMap_SIZEOF
        ;------ input data
        UWORD   cu_ReadLastIn           ; head
        UWORD   cu_ReadLastOut          ; tail
        STRUCT  cu_ReadData,READBSIZE   ; circular buffer for read characters

        ;------ initialized by WriteReset
        APTR    cu_GLHandler

        WORD    cu_PICNext
        STRUCT  cu_PICData,PICBSIZE     ; intermediate character buffer
        WORD    cu_PNPCurr
        STRUCT  cu_PNPData,PNPBSIZE     ; numeric parameter buffer

        UWORD   cu_PState

        ;------ clip region for this window
        APTR    cu_ClipRegion
        STRUCT  cu_ClipRect,ra_SIZEOF

        ; and all the rest
        ULONG   cu_CursorPattern        ; current cursor pattern
        UWORD   cu_FixedXMax            ; when CUF._FIXEDLL
        UWORD   cu_FixedYMax            ; when CUF._FIXEDPL
        UWORD   cu_DisplayXL            ; position after last displayed char
        UWORD   cu_DisplayYL            ;
        BYTE    cu_RPNestCnt		; semaphore nest count
        BYTE    cu_CDNestCnt		; same
        UBYTE   cu_CursorFlags
        UBYTE   cu_Flags
        UBYTE   cu_FixedFlags		; e.g., Fixed line length
        UBYTE   cu_BgColor		; global background color
        UBYTE   cu_States               ; extra flags for state info
        UBYTE   cu_SpecialModes         ; Special modes field (flags on open)
	UBYTE	cu_ConcealMask		; Flag/Mask for conceal mode
	UBYTE	cu_ScrollMask		; cache scroll mask
	UBYTE	cu_MinMask		; minimum bitplane scroll mask
	UBYTE	cu_CursorMask		; ClearRaster Mask
	UBYTE	cu_Depth		; bitmap depth
	UBYTE	cu_ConcealFG		; FG pen hold when concealed
	UBYTE	cu_ConcealBG		; BG pen hold when concealed
	UBYTE	cu_ConcealDRMD		; DRaw MoDe when concealed
	UBYTE	cu_NormFG		; Normal FG color
	UBYTE	cu_NormBG		; Normal BG color
	UBYTE	cu_NormDMode		; Normal Draw Mode
	UBYTE	cu_NormStyle		; flag; Normal style set
	UBYTE	cu_ClearDrMd		; Draw Mode at ClearDisplay time
	ALIGNWORD
	UWORD	cu_NormAlgoStyle	; & TxFlags
	UWORD	cu_FullXRExtant		; XRExtant + up to border
	UWORD	cu_FullYRExtant		; YRExtant + up to border
        UWORD   cu_WWidth               ; window width after resize
        UWORD   cu_WHeight              ; window height after resize
        UBYTE   cu_IHead                ; head of input list (task)
        UBYTE   cu_ITail                ; tail of input list (inputhandler)
        STRUCT  cu_IList,256            ; list of input events (both)

        ALIGNWORD                       ; for InitStruct bug

        LABEL   cu_SIZE
@


36.59
log
@Remove custom map semaphore from private console unit structure
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.58 92/05/19 10:08:31 darren Exp Locker: darren $
d220 8
a227 3
        BITDEF  CU,CURSNDRAW,6  ; known that cursor drawing is *not* allowed
        BITDEF  CU,CURSQDRAW,7  ; not known that cursor drawing *is* allowed
                                ; (sign bit)
@


36.58
log
@Ack - need to cache draw mode at time of ClearDisplay() since it mayt
not be JAM2 - maybe INVERSVID (esc[7m) -- for compatability we want
border fill to use the same draw mode
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.57 92/05/19 09:48:50 darren Exp Locker: darren $
d256 1
a258 1
        STRUCT  cu_MapSemaphore,SM_SIZE ; but doesn't use Procure/Vacate
@


36.57
log
@New flag - indicate delayed border fill needed when safe - fill with
background color
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.56 92/05/18 13:03:16 darren Exp Locker: darren $
d285 2
a286 2
        BYTE    cu_RPNestCnt
        BYTE    cu_CDNestCnt
d289 2
a290 2
        UBYTE   cu_FixedFlags
        UBYTE   cu_BgColor
d305 1
@


36.56
log
@Add FullYR/XRExtant - similar to X/YRExtant in public portion of
structure, but goes up to the borders if fixed line length and/or
fixed page length not set (average case).  No change for public/original
variables.
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.55 92/03/26 13:45:54 darren Exp Locker: darren $
d246 1
@


36.55
log
@New fields for new feature.  Space for me to cache preferred
settings to be used for ESC[0m, ESC[39m, and ESC[49m.
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.54 92/03/24 16:27:25 darren Exp Locker: darren $
d6 1
a6 1
**      (C) Copyright 1985,1989 Commodore-Amiga, Inc.
d304 1
d306 2
@


36.54
log
@Add field for qualifier tracking; used so we can get away
from PeekQualifier() which is undesirable.  Would rather
use input events.
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.53 92/03/24 11:27:40 darren Exp Locker: darren $
d300 5
@


36.53
log
@new flag - DisplayBeep (CNTL-G) pending during CMD_WRITE
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.52 92/03/24 08:53:47 darren Exp Locker: darren $
d183 1
@


36.52
log
@Change DepthMask just to Depth, and store just Depth in this
field
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.51 92/03/23 12:42:43 darren Exp Locker: darren $
d244 1
@


36.51
log
@Add DepthMask for calculating when I should set the rp_Mask, and
a CursorMask so I can set it to $FF, or $03 depending on screeen
type.
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.50 92/03/19 12:37:05 darren Exp Locker: darren $
d294 1
a294 1
	UBYTE	cu_DepthMask		; Screen depth mask
@


36.50
log
@Added fields to cache draw mode, and pens so I can deal with
concealed mode in a reasonable way.  Concealed mode is now
purely a setting of colors, no more masking tricks.
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.49 92/03/18 14:33:41 darren Exp Locker: darren $
d290 1
a290 1
	UBYTE	cu_ConcealMask		; Mask for conceal mode 0/-1
d293 2
a294 1
	UBYTE	cu_ClearMask		; ClearRaster Mask
a297 1
	UBYTE	cu_ExtraMask		; extra
@


36.49
log
@New fields in private console unit area for optimized scroll
routines
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.48 91/05/22 13:49:01 darren Exp Locker: darren $
d294 4
@


36.48
log
@*** empty log message ***
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.47 91/05/03 18:46:54 darren Exp Locker: darren $
d290 4
@


36.47
log
@Rearrange some values in device base for long-word alignment;
especially stack!!!
@
text
@d2 1
a2 1
**      $Id: cddata.i,v 36.46 91/04/12 17:41:25 darren Exp Locker: darren $
@


36.46
log
@*** empty log message ***
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.45 91/02/04 14:25:23 darren Exp Locker: darren $
d10 17
a26 17
	INCLUDE	"exec/types.i"
	INCLUDE	"exec/nodes.i"
	INCLUDE	"exec/lists.i"
	INCLUDE	"exec/tasks.i"
;	INCLUDE	"exec/ports.i"			; included in conunit.i
	INCLUDE	"exec/interrupts.i"
;	INCLUDE	"exec/libraries.i"		; included in macros.i
;	INCLUDE	"exec/io.i"			; included in console.i
	INCLUDE	"exec/semaphores.i"
	INCLUDE	"devices/keymap.i"
	INCLUDE	"devices/timer.i"
	INCLUDE	"devices/inputevent.i"
	INCLUDE	"graphics/rastport.i"
	INCLUDE	"console.i"
	INCLUDE "conunit.i"
	INCLUDE	"conmap.i"
	INCLUDE	"macros.i"
d29 3
a31 3
CDERR_NOUNIT	EQU	1	; not a real unit (OpenDevice w/ -1 unit)
CDERR_NOMAP	EQU	2	; no character map available for this unit
CDERR_BADMAP	EQU	3	; map not acquired via CD_OBTAINMAP
d33 1
a33 1
**	V36 and above
d37 4
a40 4
 STRUCTURE	SnipHookMsg,0
    ULONG   shm_Type		; zero for this structure format
    ULONG   shm_SnipLen		; length of snip data (not including null)
    APTR    shm_SnipData	; null terminated snip data
d43 3
a45 3
* #define	CDERR_NOUNIT	1	/* not a real unit (OpenDevice w/ -1 unit) */
* #define	CDERR_NOMAP	2	/* no character map available for this unit */
* #define	CDERR_BADMAP	3	/* map not acquired via CD_OBTAINMAP */
d48 3
a50 3
*    ULONG   shm_Type;		/* zero for this structure format */
*    ULONG   shm_SnipLen;	/* length of snip data (not including null) */
*    UBYTE  *shm_SnipData;	/* null terminated snip data */
d55 2
a56 2
PM_ASM		EQU	-31		; private AutoScroll mode is >1
PM_AWM		EQU	-47		; private AutoWrap mode is ?7
d58 2
a59 2
CD_HANDLERPRI	EQU	0
CD_CONVBUFSIZE	EQU	255		; used by CDInputHandler
d61 2
a62 2
CD_STKSIZE	EQU	$1000
CD_TASKPRI	EQU	5
d64 4
a67 4
CDSIGB_NEWACTIVE EQU	31		; signal that new window is active
CDSIGB_REFRESH	EQU	30		; signal to refresh window(s)
CDSIGB_SELECT	EQU	29		; text selection
CDSIGB_TICK	EQU	28		; text selection tick
d69 4
a72 4
CDSIGF_NEWACTIVE EQU	$80000000
CDSIGF_REFRESH	EQU	$40000000
CDSIGF_SELECT	EQU	$20000000
CDSIGF_TICK	EQU	$10000000
d74 1
a74 1
CDSIG_HARDCODED	EQU	$f0000000
d76 2
a77 2
CD_TEVENTSECS	EQU	0
CD_TEVENTMICRO	EQU	100000		; 10 times/sec
d79 3
a81 3
READBSIZE	EQU	256		; read buffer size
PICBSIZE	EQU	8		; intermediate character buffer size
PNPBSIZE	EQU	25*2		; numeric parameter buffer size
d84 5
a88 5
	BITDEF	IO,SPECIAL,3	; set if aRAV sequence, else cleared
	BITDEF	IO,QUEUED,4	; command is queued to be performed
	BITDEF	IO,DONE,5	; command is done
	BITDEF	IO,SERVICING,6	; command is being actively performed
	BITDEF	IO,CURRENT,7	; command is being performed (sign bit)
d90 8
a97 8
*------	cd_SelectionSnip  -----------------------------------------------------
 STRUCTURE  SelectionSnip,0	; AllocVec'd
	UWORD	snip_Access	; FreeVec when negative
	UWORD	snip_Length	; valid Data
	LABEL	snip_Data	; data follows...
	
*------	cd_Flags -----------------------------------------------------
	BITDEF	CD,CLIPINSTALLED,0	; the cu_ClipRegion has been installed
d99 1
a99 1
*------	cd_SelectFlags -----------------------------------------------
d101 6
a106 6
	BITDEF	CDS,CIRCLING,2	; selecting outside the display bounds
	BITDEF	CDS,DRAGGING,3	; still determining whether to select
	BITDEF	CDS,SELECTING,4	; already have selection anchor
	BITDEF	CDS,TICKING,5	; the timer for selection polling is ticking
	BITDEF	CDS,EXTENDED,6	; the select button is extended
	BITDEF	CDS,SELECTDOWN,7 ; the select button is down
d108 1
a108 1
CDS_SELECTMASK	EQU	$20	; preserve CDS_TICKING
d110 1
a110 1
*------	cd_InputFlags -----------------------------------------------
d112 1
a112 1
	BITDEF	CDI,COPY,0	; user selected RIGHT AMIGA C
d118 2
a119 2
*		*IO_UNIT + ((n-1)*MP_SIZE)
*	if it cannot be satisfied quickly
d122 13
a134 45
	APTR	cd_Segment		; A0 when initialized
	APTR	cd_CmdVectors		; command table for device commands
	APTR	cd_CmdBytes		; bytes describing which command queue
	UWORD	cd_NumCommands		; the number of commands supported
	APTR	cd_ExecLib		; exec library base
	APTR	cd_KeymapLib		; keymap library base
	APTR	cd_GraphicsLib		; graphics library base
	APTR	cd_LayersLib		; layers library base
	APTR	cd_IntuitionLib		; intuition library base
	STRUCT	cd_USemaphore,SS_SIZE
	STRUCT	cd_UHead,LH_SIZE	; linked list of open units
	APTR	cd_Active		; active unit, if any
	APTR	cd_ActiveWindow		; active window
	APTR	cd_SelectedUnit		; unit w/ text selected in it, if any
	UWORD	cd_SelectDownMX		; mouse location of initial select down
	UWORD	cd_SelectDownMY		;
	UWORD	cd_SelectDownCPX	; CP location of initial select down
	UWORD	cd_SelectDownCPY	;
	UWORD	cd_SelectedAnchorX	; location of selection start
	UWORD	cd_SelectedAnchorY	;
	UWORD	cd_SelectedTailX	; location of selection end
	UWORD	cd_SelectedTailY	;
	STRUCT  cd_SelectionSemaphore,SS_SIZE
	STRUCT	cd_SelectionHooks,MLH_SIZE
	APTR	cd_SelectionSnip	; selection itself
	STRUCT	cd_HandlerIOR,IOSTD_SIZE ; input handler request
	STRUCT	cd_HandlerIS,IS_SIZE	; input handler node
	STRUCT	cd_RPSemaphore,SS_SIZE
	APTR	cd_PrevClipRegion	; previous clip region for layer for RP
	STRUCT	cd_AreaPtrn,4
	STRUCT	cd_TmpRas,tr_SIZEOF
	STRUCT	cd_RastPort,rp_SIZEOF
	STRUCT	cd_TC,TC_SIZE		; task space
	STRUCT	cd_Stk,CD_STKSIZE	;   and stack space
	STRUCT	cd_TPort,MP_SIZE	; timer reply port
	STRUCT	cd_TIOR,IOTV_SIZE	;   and request block
	STRUCT	cd_EVSemaphore,SS_SIZE	; Event list handling semaphore
	UBYTE	cd_SelectFlags		; flags re: selecting status
	UBYTE	cd_Flags
	UBYTE	cd_InputFlags		; flags from inputhandler
	UBYTE	cd_Hooks		; Count of hooks installed
	UWORD	cd_MouseX		; temporary hold of window values
	UWORD	cd_MouseY		; X/Y can be moved here with a
					; move.l instr (atomic)
	ULONG	cd_WindowCount		; number of windows opened as consoles
d136 2
a137 2
	ALIGNWORD
	LABEL	cd_SIZEOF
d139 51
d191 2
a192 2
	BITDEF	DU,DISPATCH,0	; output posted to the unit
	BITDEF	DU,STOPPED,7	; commands are not to be performed
d195 4
a198 4
*	array of current & pending command queues, a command is
*	removed after it is done, it is ACTIVE while in progress unless
*	it is quick.  The queues are message ports.
du_Flags	EQU	LN_PRI	; various unit flags
d202 8
a209 8
	BITDEF	CU,NEWACTIVE,0	; cursor activation or deactivation pending
	BITDEF	CU,RESIZE,1	; resize pending
	BITDEF	CU,REFRESH,2	; refresh pending
	BITDEF	CU,TOOSMALL,3	; window is too small to render text
	BITDEF	CU,SELECTED,4	; select hilighted
	BITDEF	CU,KERNLESS,5	; font does not lie outside cell
	BITDEF	CU,TABBED,6	; tab just occurred
	BITDEF	CU,IMPLICITNL,7	; implicit NL just occurred (sign bit)
d211 1
a211 1
CU_RESET0MASK	EQU	$01	; only preserve NEWACTIVE
d215 3
a217 3
	BITDEF	CU,CURSON,2	; cursor is logically on
	BITDEF	CU,CURSSELECT,3	; cursor is within a selection
	BITDEF	CU,CURSACTIVE,4	; cursor is active, or no ghosting allowed
d219 3
a221 3
	BITDEF	CU,CURSNDRAW,6	; known that cursor drawing is *not* allowed
	BITDEF	CU,CURSQDRAW,7	; not known that cursor drawing *is* allowed
				; (sign bit)
d224 5
a228 5
*------	cu_FixedFlags ------------------------------------------------
	BITDEF	CUF,FIXEDLL,0	; windows have a specified line length
	BITDEF	CUF,FIXEDPL,1	; windows have a specified page length
	BITDEF	CUF,FIXEDLO,2	; windows have a specified x offset 
	BITDEF	CUF,FIXEDTO,3	; windows have a specified y offset
d230 1
a230 1
	BITDEF	CUF,FIXEDBG,7	; background color is explicit (sign bit)
d234 1
a234 1
cu_PSVANILLA   EQU 0	   ;cannot be non-zero
d242 2
a243 2
	BITDEF	CU,FIRSTTIME,0		;first time opened
	BITDEF	CU,ISACTIVE,1		;This window is active
d247 4
a250 4
	BITDEF	IP,ISACTIVE,0		;is this window active at this time?
	BITDEF	IP,REDRAW,1		;this window has been resized/damaged
	BITDEF	IP,MAKEACTIVE,2		;this window has been activated
	BITDEF	IP,MAKEINACTIVE,3	;this window is no longer active
d253 8
a260 8
	ULONG	cu_DevUnit		; from OpenDevice register d0
	;------ optional output data
	STRUCT	cu_MapSemaphore,SM_SIZE	; but doesn't use Procure/Vacate
	STRUCT  cu_CM,ConsoleMap_SIZEOF
	;------ input data
	UWORD	cu_ReadLastIn		; head
	UWORD	cu_ReadLastOut		; tail
	STRUCT	cu_ReadData,READBSIZE	; circular buffer for read characters
d262 2
a263 2
	;------ initialized by WriteReset
	APTR	cu_GLHandler
d265 4
a268 4
	WORD	cu_PICNext
	STRUCT	cu_PICData,PICBSIZE	; intermediate character buffer
	WORD	cu_PNPCurr
	STRUCT	cu_PNPData,PNPBSIZE	; numeric parameter buffer
d270 1
a270 1
	UWORD	cu_PState
d272 3
a274 3
	;------ clip region for this window
	APTR	cu_ClipRegion
	STRUCT	cu_ClipRect,ra_SIZEOF
d276 19
a294 19
	; and all the rest
	ULONG	cu_CursorPattern	; current cursor pattern
	UWORD	cu_FixedXMax		; when CUF._FIXEDLL
	UWORD	cu_FixedYMax		; when CUF._FIXEDPL
	UWORD   cu_DisplayXL		; position after last displayed char
	UWORD   cu_DisplayYL		;
	BYTE	cu_RPNestCnt
	BYTE	cu_CDNestCnt
	UBYTE	cu_CursorFlags
	UBYTE	cu_Flags
	UBYTE	cu_FixedFlags
	UBYTE	cu_BgColor
	UBYTE	cu_States		; extra flags for state info
	UBYTE	cu_SpecialModes		; Special modes field (flags on open)
	UWORD	cu_WWidth		; window width after resize
	UWORD	cu_WHeight		; window height after resize
	UBYTE	cu_IHead		; head of input list (task)
	UBYTE	cu_ITail		; tail of input list (inputhandler)
	STRUCT	cu_IList,256		; list of input events (both)
d296 1
a296 1
	ALIGNWORD			; for InitStruct bug
d298 1
a298 1
	LABEL	cu_SIZE
@


36.45
log
@Additional device base field; window open counter.
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.44 91/01/16 17:28:22 darren Exp Locker: darren $
@


36.44
log
@Kludge; SPECIAL flag defined for a special backdoor return bit
used by CON: in raw mode.  Ugly ugly ugly, but gives us
pastes raw mode windows.
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.43 91/01/14 16:13:23 darren Exp Locker: darren $
d166 2
@


36.43
log
@*** empty log message ***
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.42 90/11/20 18:40:30 darren Exp Locker: darren $
d84 1
@


36.42
log
@Two new fields - no change in code size (used a couple of
unused pad fields.  A SpecialModes field added to con unit
structure (holds value passed in flags on OpenDevice), and a
counter field added to console device base used by Add/Remove
ConSnipHook functions.
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.41 90/11/09 21:21:41 darren Exp Locker: darren $
@


36.41
log
@Added a couple of new fields so that Mouse X/Y
positions can be stored, and grabbed atomically
when tracking mouse.
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.40 90/11/07 15:53:05 darren Exp Locker: darren $
d161 1
a161 1
	UBYTE	cd_Unused		; padding
d267 1
a267 1
	UBYTE	cu_Unused		; padding
@


36.40
log
@Moved SnipHookMsg struct back to here
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.39 90/11/07 15:22:43 darren Exp Locker: darren $
d161 4
a164 1

@


36.39
log
@Added new field for passing keypress, or other events
from the inputhandler - initially used for RIGHT AMIGA C.
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.38 90/11/01 12:10:26 darren Exp Locker: darren $
a31 7
************************************************************************
* Published structure
*
* STRUCTURE	SnipHookMsg,0
*    ULONG   shm_Type		; zero for this structure format
*    ULONG   shm_SnipLen		; length of snip data (not including null)
*    APTR    shm_SnipData	; null terminated snip data
d33 8
a40 1
* /*	V36 and above	*/
@


36.38
log
@*** empty log message ***
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.37 90/11/01 11:17:50 darren Exp Locker: darren $
d99 1
d109 4
d158 1
a158 1
	UBYTE	cd_SelectFlags
d160 1
a218 1
	BITDEF	CU,FROMTASK,2		;Routine was called by console task
@


36.37
log
@New definitions, and struct entries for new input handling
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.36 90/10/22 17:21:18 darren Exp Locker: darren $
d32 7
a38 5

 STRUCTURE	SnipHookMsg,0
    ULONG   shm_Type		; zero for this structure format
    ULONG   shm_SnipLen		; length of snip data (not including null)
    APTR    shm_SnipData	; null terminated snip data
@


36.36
log
@Put SnipHookMsg struct back into public
includes.
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.35 90/10/11 13:23:33 darren Exp Locker: darren $
d33 5
d45 6
d60 1
a60 1
CD_TASKPRI	EQU	0
d150 1
d153 1
d207 1
a207 1
*------ cu_State flags -----------------------------------------------
d209 3
a211 1
	BITDEF	CU,FIRSTTIME,0
d213 1
d215 5
d257 6
@


36.35
log
@Place definitions of char/snip map modes back
into conunit.h/i
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.34 90/09/13 18:06:57 darren Exp Locker: darren $
a32 5
 STRUCTURE	SnipHookMsg,0
    ULONG   shm_Type		; zero for this structure format
    ULONG   shm_SnipLen		; length of snip data (not including null)
    APTR    shm_SnipData	; null terminated snip data

a38 6
*
* struct SnipHookMsg {
*    ULONG   shm_Type;		/* zero for this structure format */
*    ULONG   shm_SnipLen;	/* length of snip data (not including null) */
*    UBYTE  *shm_SnipData;	/* null terminated snip data */
* };
@


36.34
log
@New ConsoleUnit field for running
state flags (e.g., FIRSTTIME through
flag
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.35 90/09/13 17:21:19 darren Exp $
a26 16

*------ Moved here from conunit.i & conunit.h ------------------------
*
*------ Console mapping not ready for public release -----------------

CONU_CHARMAP	EQU	1	; bind character map to console
CONU_SNIPMAP	EQU	3	; bind character map w/ snip to console

* #define	CONU_CHARMAP	1	/* bind character map to console */
* #define	CONU_SNIPMAP	3	/* bind character map w/ snip to console */

*------ Moved here from console.i & console.h ------------------------
*
*------ Console mapping not ready for public release -----------------

*	V36 and above	*
@


36.33
log
@Pasted V36 console map related info
into this file, and removed same
from console.i/h, and conunit.i/h
files.
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.32 90/06/07 12:08:53 kodiak Exp Locker: darren $
d195 1
d221 5
d262 1
@


36.32
log
@reorder some flags to move more into sign bit
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.31 90/06/06 14:28:59 kodiak Exp Locker: kodiak $
d28 39
@


36.31
log
@makes cu_BgColor the same as cu_BgPen upon ^L unless otherwise specified
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.30 90/05/29 18:21:33 kodiak Exp Locker: kodiak $
d60 1
a60 1
	BITDEF	IO,CURRENT,5	; command is being performed
d62 1
a62 1
	BITDEF	IO,DONE,7	; command is done
a73 2
	BITDEF	CDS,SELECTDOWN,0 ; the select button is down
	BITDEF	CDS,EXTENDED,1	; the select button is extended
d78 2
d81 1
a81 1
CDS_SELECTMASK	EQU	$e0
d133 2
a134 2
	BITDEF	DU,STOPPED,0	; commands are not to be performed
	BITDEF	DU,DISPATCH,1	; output posted to the unit
d151 1
a151 1
	BITDEF	CU,IMPLICITNL,7	; implicit NL just occurred
d162 1
d171 1
a171 1
	BITDEF	CUF,FIXEDBG,7	; background color is explicit
@


36.30
log
@will not initiate a selection when not over a character
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.29 90/04/20 09:45:15 kodiak Exp Locker: kodiak $
d169 2
@


36.29
log
@first semi-tested big clip support
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.28 90/04/17 14:54:57 kodiak Exp Locker: kodiak $
d76 4
a79 3
	BITDEF	CDS,DRAGGING,2	; still determining whether to select
	BITDEF	CDS,SELECTING,3	; already have selection anchor
	BITDEF	CDS,TICKING,4	; the timer for selection polling is ticking
d81 1
a81 1
CDS_SELECTMASK	EQU	$f0
@


36.28
log
@fix resize of wrapped tabs
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.27 90/04/16 18:22:21 kodiak Exp Locker: kodiak $
d34 1
a34 1
CD_CONVBUFSIZE	EQU	127		; used by CDInputHandler
d64 6
d114 1
a114 3
	APTR	cd_SelectionText	; selection itself
	ULONG	cd_SelectionSize	; size of SelectionText
	UWORD	cd_SelectionActual	; valid characters in SelectionText
a176 8
 STRUCTURE  Buffer,0
	UWORD	bf_LastIn	; tail
	UWORD	bf_LastOut	; head
	UWORD	bf_StoreSize
	LABEL	bf_Storage
	LABEL	bf_SIZEOF


d183 3
a185 2
	STRUCT	cu_ReadBuffer,bf_SIZEOF	; buffer for read characters
	STRUCT	cu_ReadData,READBSIZE	;   (storage for READBSIZE-1 characters)
d190 4
a193 4
	STRUCT	cu_PICBuffer,bf_SIZEOF	; intermediate character buffer
	STRUCT	cu_PICData,PICBSIZE	;   (storage for PICBSIZE-1 characters)
	STRUCT	cu_PNPBuffer,bf_SIZEOF	; numeric parameter buffer
	STRUCT	cu_PNPData,PNPBSIZE	;   (storage for PNPBSIZE/2-1 words)
@


36.27
log
@sniff cursor ghosting compatibility problems
@
text
@d2 1
a2 1
**	$Id: cddata.i,v 36.26 90/04/13 13:33:22 kodiak Exp Locker: kodiak $
d143 3
a145 2
	BITDEF	CU,SELECTED,5	; select hilighted
	BITDEF	CU,KERNLESS,6	; font does not lie outside cell
@


36.26
log
@use Id instead of Header for 4.x rcs
@
text
@d2 1
a2 1
**	$Id$
d150 3
a152 3
	BITDEF	CU,CURSON,0	; cursor is logically on
	BITDEF	CU,CURSBLOCK,1	; cursor is rendered non-ghosted
	BITDEF	CU,CURSGHOST,2	; cursor is rendered ghosted
d154 2
a155 1
	BITDEF	CU,CURSACTIVE,3	; cursor is active (calculated, not stored)
d157 1
d204 1
@


36.25
log
@bound user specified window limits to actual limits
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/cddata.i,v 36.24 90/04/02 10:48:00 kodiak Exp Locker: kodiak $
@


36.24
log
@for 4.x rcs
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/cddata.i,v 36.23 90/03/03 15:43:04 kodiak Exp Locker: kodiak $
d202 2
@


36.23
log
@(change Display.L comment)
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.22 90/03/03 14:55:29 kodiak Exp $
@


36.22
log
@first cut @@ code to set console background color
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.21 90/02/23 16:55:12 kodiak Exp $
d202 1
a202 1
	UWORD   cu_DisplayXL		; last displayed char location
@


36.21
log
@add selection hooks and semaphore
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.20 90/02/21 18:40:04 kodiak Exp $
d209 1
@


36.20
log
@first cut at drag-select
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.19 90/02/21 14:04:03 kodiak Exp $
d106 2
@


36.19
log
@first cut private map locking solution, snapshot to allow release of
pack fix
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.18 89/12/15 17:49:45 kodiak Exp $
d68 5
a72 4
	BITDEF	CDS,SELECT,0	; the select action is in progress
	BITDEF	CDS,EXTENDED,1	; the select action is extended
	BITDEF	CDS,TICKED,2	; the select action is a tick
	BITDEF	CDS,TICKING,3	; the timer for selection polling is ticking
d74 1
a74 1
CDS_SELECTMASK	EQU	$f8
d98 4
d137 5
a141 5
	BITDEF	CU,NEWACTIVE,1	; cursor activation or deactivation pending
	BITDEF	CU,RESIZE,2	; resize pending
	BITDEF	CU,REFRESH,3	; refresh pending
	BITDEF	CU,TOOSMALL,4	; window is too small to render text
	BITDEF	CU,SELECTING,5	; select hilighted
@


36.18
log
@Only InstallClipRegion when necessary
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.17 89/12/14 17:03:21 kodiak Exp $
d25 1
a119 42
;------ cm_Attr... entries -------------------------------------------
CMAM_FGPEN	EQU	$0007		; for FgPen
CMAS_FGPEN	EQU	0
CMAM_BGPEN	EQU	$0038		; for BgPen
CMAS_BGPEN	EQU	3
CMAM_SOFTSTYLE	EQU	$01c0		; for SetSoftStyle
CMAS_SOFTSTYLE	EQU	6
CMAF_INVERSVID	EQU	$0200		; RP_INVERSVID set
CMAB_INVERSVID	EQU	9
CMAF_SELECTED	EQU	$0400		; selection
CMAB_SELECTED	EQU	10
CMAF_HIGHLIGHT	EQU	$0800		; highlighted part of selection
CMAB_HIGHLIGHT	EQU	11
CMAF_IMPLICITNL	EQU	$1000		; CUB_IMPLICITNL set (valid for 1st
CMAB_IMPLICITNL	EQU	12		;   character in line only)
CMAF_CURSOR	EQU	$2000		; cursor cached here during resize
CMAB_CURSOR	EQU	13		;
CMAF_RENDERED	EQU	$8000		; valid and not CONCEALED
CMAB_RENDERED	EQU	15		;   (this must be the sign bit)

 STRUCTURE ConsoleMap,0
    ULONG   cm_AllocSize		; AllocMem size for cm_AllocBuffer
    LABEL   cm_AllocBuffer		; memory buffer holding everything
    APTR    cm_AttrBufLines		; array with cm_BufferLines elements
					;   containing address/2 of off-screen
					;   attr lines
    APTR    cm_AttrDispLines		; array with cm_DisplayHeight elements
					;   containing address/2 of displayed
					;   attr lines
    LONG    cm_BufferStart		; start of memory for buffer: address/2
    LONG    cm_DisplayStart		; start of memory for display: address/2
    LONG    cm_AttrToChar		; delta to apply to attr address/2 to
					;   find associated character address
    UWORD   cm_BufferLines		; maximum rows in window
    UWORD   cm_BufferWidth		; number of columns off-screen
    UWORD   cm_BufferHeight		; number of rows off-screen
    UWORD   cm_DisplayWidth		; number of columns in display
    UWORD   cm_DisplayHeight		; number of rows in display
    UWORD   cm_BufferXL			; X append loc in last ....Buffer line
    UWORD   cm_BufferYL			; append ....Buffer line
    LABEL   ConsoleMap_SIZEOF

d174 1
a174 1
	STRUCT	cu_MSemaphore,SS_SIZE
@


36.17
log
@different damage refresh strategy: should always clear damage
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.16 89/12/08 17:52:33 kodiak Exp $
d64 1
d115 1
d178 1
a178 1
	BITDEF	CU,LAYERLOCK,6	; layer is locked
d181 1
a181 1
CU_RESET0MASK	EQU	$43	; RESIZE,REFRESH,TOOSMALL,SELECTING,IMPLICITNL
@


36.16
log
@add CMAF_CURSOR flag
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.15 89/12/04 22:55:00 kodiak Exp $
a63 1
	BITDEF	CD,SCROLL,0	; scroll occurred during write
a108 1
	UWORD   cd_LayerRefresh		; cached LAYERREFRESH flag
a113 1
	UBYTE   cd_Flags
@


36.15
log
@checkin for release on Monday 4 Dec -- map w/ indirect line buffers
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.14 89/12/03 16:36:11 kodiak Exp $
d135 2
@


36.14
log
@Sunday checkin
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.13 89/12/02 11:36:23 kodiak Exp $
d144 1
a144 1
    APTR    cm_AttrDispLines		; array with cm_BufferLines elements
d147 2
@


36.13
log
@checkpoint after line buffer coding completed,
and just after start of line length coding
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.12 89/11/07 12:57:58 kodiak Exp $
a143 2
    APTR    cm_BufLineLengths		; array with cm_BufferLines elements:
					;   UWORD off-screen line lengths
a146 2
    APTR    cm_DispLineLengths		; array with cm_BufferLines elements:
					;   UWORD display line lengths
@


36.12
log
@first cut at cu_MSemaphore
@
text
@d2 1
a2 1
**	$Header: cddata.i,v 36.11 89/11/04 15:58:06 kodiak Exp $
d96 4
a99 2
	UWORD	cd_SelectedAnchorOffset	; location of selection start
	UWORD	cd_SelectedTailOffset	; location of selection end
d120 17
d138 24
a217 4
	UWORD   cu_BufferXL		; X append loc in last ....Buffer line
	UWORD   cu_BufferYL		; append ....Buffer line
	UWORD   cu_DisplayXL		; last displayed char loc in ....Char
	UWORD	cu_DisplayYL		;
d237 2
@


36.11
log
@restructure map variables
@
text
@d2 1
a2 1
**	$Header$
a169 3
CMAF_CURSOR	EQU	$4000
CMAB_CURSOR	EQU	14

d173 1
@


36.10
log
@perform paste in inputhandler, not task
add DU._DISPATCH
@
text
@d1 8
a8 59
**********************************************************************
*                                                                    *
*   Copyright 1985, Commodore-Amiga Inc.   All rights reserved.      *
*   No part of this program may be reproduced, transmitted,          *
*   transcribed, stored in retrieval system, or translated into      *
*   any language or computer language, in any form or by any         *
*   means, electronic, mechanical, magnetic, optical, chemical,      *
*   manual or otherwise, without the prior written permission of     *
*   Commodore-Amiga Incorporated, 983 University Ave. Building #D,   *
*   Los Gatos, California, 95030                                     *
*                                                                    *
**********************************************************************
*
*	Console device data definitions
*
*   Source Control
*   --------------
*   $Header: cddata.i,v 36.9 89/08/21 12:56:13 kodiak Exp $
*
*   $Locker:  $
*
*   $Log:	cddata.i,v $
*   Revision 36.9  89/08/21  12:56:13  kodiak
*   first cut at keeping highlight/select information in attribute array
*   
*   Revision 36.8  89/07/10  18:17:28  kodiak
*   codify attribute fields in attribute buffer
*   
*   Revision 36.7  89/07/07  13:30:53  kodiak
*   add SCROLL flag (and cd_Flags)
*   
*   Revision 36.6  89/07/05  15:15:32  kodiak
*   make cu_BufferSize word instead of long
*   
*   Revision 36.5  89/06/30  12:31:43  kodiak
*   take debug.i out of cddata and put in files that use it
*   
*   Revision 36.4  89/06/28  13:40:16  kodiak
*   rework flag usage, make seperate cu_CursorFlags, add activation task signal
*   
*   Revision 36.3  89/04/19  16:17:54  kodiak
*   add CDS ACTIVE to eliminate selection while activating
*   
*   Revision 36.2  89/04/17  15:36:27  kodiak
*   CDS_CLEARMASK to only clear appropriate bits in cd_SelectFlags
*   
*   Revision 36.1  88/09/19  10:15:17  kodiak
*   add character map and pseudo-clipboard support
*   
*   Revision 36.0  88/09/06  19:59:30  kodiak
*   *** empty log message ***
*   
*   Revision 35.1  87/10/26  12:56:53  kodiak
*   Change rendering strategy to use a single shared device RastPort
*   
*   Revision 35.0  87/10/26  11:15:23  kodiak
*   initial from V34, but w/ stripped log
*
**********************************************************************
d74 1
a74 1
*------ dd_CmdBytes --------------------------------------------------
d82 4
a85 4
    APTR	dd_Segment	; A0 when initialized
    APTR	dd_CmdVectors	; command table for device commands
    APTR	dd_CmdBytes	; bytes describing which command queue
    UWORD	dd_NumCommands	; the number of commands supported
a168 17
*------ cu_AttrBuffer entries ----------------------------------------
CUAM_FGPEN	EQU	$0007		; for FgPen
CUAS_FGPEN	EQU	0
CUAM_BGPEN	EQU	$0038		; for BgPen
CUAS_BGPEN	EQU	3
CUAM_SOFTSTYLE	EQU	$01c0		; for SetSoftStyle
CUAS_SOFTSTYLE	EQU	6
CUAF_INVERSVID	EQU	$0200		; RP_INVERSVID set
CUAB_INVERSVID	EQU	9
CUAF_SELECTED	EQU	$0400		; selection
CUAB_SELECTED	EQU	10
CUAF_HIGHLIGHT	EQU	$0800		; highlighted part of selection
CUAB_HIGHLIGHT	EQU	11
CUAF_IMPLICITNL	EQU	$1000		; CUB_IMPLICITNL set (valid for 1st
CUAB_IMPLICITNL	EQU	12		;   character in line only)
CUAF_RENDERED	EQU	$8000		; valid and not CONCEALED
CUAB_RENDERED	EQU	15		; -- this MUST be sign bit
d170 2
d176 5
a180 6
	UWORD	cu_BufferSize		; matrix elements for Char & Attr
	UWORD	cu_BufferOffset		; element of display 0,0
	UWORD	cu_BufferWidth		; number of columns
	UWORD	cu_BufferHeight		; number of rows
	APTR	cu_CharBuffer
	APTR	cu_AttrBuffer
@


36.9
log
@first cut at keeping highlight/select information in attribute array
@
text
@d18 1
a18 1
*   $Header: cddata.i,v 36.8 89/07/10 18:17:28 kodiak Exp $
d20 1
a20 1
*   $Locker: kodiak $
d23 3
a92 1
CDSIGB_PASTE	EQU	27		; copy clipboard to input
a97 1
CDSIGF_PASTE	EQU	$08000000
d99 1
a99 1
CDSIG_HARDCODED	EQU	$f8000000
d121 1
a121 2
	BITDEF	CDS,ACTIVE,3	; the window activation has been swallowed
	BITDEF	CDS,TICKING,4	; the timer for selection polling is ticking
a122 1
CDS_CLEARMASK	EQU	$f0
d172 1
@


36.8
log
@codify attribute fields in attribute buffer
@
text
@d18 1
a18 1
*   $Header: cddata.i,v 36.7 89/07/07 13:30:53 kodiak Exp $
d20 1
a20 1
*   $Locker:  $
d23 3
d148 2
a149 4
	UWORD	cd_SelectionStartX	; location of selection start
	UWORD	cd_SelectionStartY	;
	UWORD	cd_SelectionEndX	; location of selection end
	UWORD	cd_SelectionEndY	;
d229 6
a234 1
CUAB_NEWLINE	EQU	10		; $0400
d243 1
@


36.7
log
@add SCROLL flag (and cd_Flags)
@
text
@d18 1
a18 1
*   $Header: cddata.i,v 36.6 89/07/05 15:15:32 kodiak Exp $
d23 3
d218 14
@


36.6
log
@make cu_BufferSize word instead of long
@
text
@d18 1
a18 1
*   $Header: cddata.i,v 36.5 89/06/30 12:31:43 kodiak Exp $
d20 1
a20 1
*   $Locker: kodiak $
d23 3
d107 3
d162 1
@


36.5
log
@take debug.i out of cddata and put in files that use it
@
text
@d18 1
a18 1
*   $Header: cddata.i,v 36.4 89/06/28 13:40:16 kodiak Exp $
d23 3
d212 1
a212 1
	ULONG	cu_BufferSize		; matrix elements for Char & Attr
@


36.4
log
@rework flag usage, make seperate cu_CursorFlags, add activation task signal
@
text
@d18 1
a18 1
*   $Header: cddata.i,v 36.3 89/04/19 16:17:54 kodiak Exp $
d23 3
a61 1
	INCLUDE	"debug.i"
@


36.3
log
@add CDS ACTIVE to eliminate selection while activating
@
text
@d18 1
a18 1
*   $Header: cddata.i,v 36.2 89/04/17 15:36:27 kodiak Exp $
d23 3
d59 1
d72 5
a76 4
CDSIGB_REFRESH	EQU	31		; signal to refresh window(s)
CDSIGB_SELECT	EQU	30		; text selection
CDSIGB_TICK	EQU	29		; text selection tick
CDSIGB_PASTE	EQU	28		; copy clipboard to input
d78 5
a82 4
CDSIGF_REFRESH	EQU	$80000000
CDSIGF_SELECT	EQU	$40000000
CDSIGF_TICK	EQU	$20000000
CDSIGF_PASTE	EQU	$10000000
d84 2
d104 1
a104 1
	BITDEF	CDS,TICKING,4	; the timer for selection pollong is ticking
d126 1
d142 1
d145 1
d166 1
a166 2
	BITDEF	CU,IMPLICITNL,0	; implicit NL just occurred
	BITDEF	CU,CURSON,1	; cursor is logically on
d169 4
a172 1
	BITDEF	CU,SELECTING,4	; select hilighted
d174 9
d231 3
a233 2
	UBYTE	cu_CDNestCnt
	UBYTE	cu_RPNestCnt
d237 1
a237 2
	;-- make even to get around InitStruct bug
	ALIGNWORD
@


36.2
log
@CDS_CLEARMASK to only clear appropriate bits in cd_SelectFlags
@
text
@d18 1
a18 1
*   $Header: cddata.i,v 36.1 88/09/19 10:15:17 kodiak Exp $
d20 1
a20 1
*   $Locker:  $
d23 3
d95 2
a96 1
	BITDEF	CDS,TICKING,3	; the timer for selection pollong is ticking
d98 2
a99 1
CDS_CLEARMASK	EQU	(~(CDSF_SELECT!CDSF_EXTENDED!CDSF_TICKED))&$ff
@


36.1
log
@add character map and pseudo-clipboard support
@
text
@d18 1
a18 1
*   $Header: cddata.i,v 36.0 88/09/06 19:59:30 kodiak Exp $
d20 1
a20 1
*   $Locker: kodiak $
d23 3
d93 2
@


36.0
log
@*** empty log message ***
@
text
@d18 1
a18 1
*   $Header: cddata.i,v 1.1 88/09/06 19:59:01 kodiak Exp $
d20 1
a20 1
*   $Locker:  $
d23 3
a25 3
Revision 1.1  88/09/06  19:59:01  kodiak
Initial revision

d59 16
d85 5
a89 2
*------ du_Flags -----------------------------------------------------
	BITDEF	DU,STOPPED,0	; commands are not to be performed
a90 6
*------ DeviceUnit ---------------------------------------------------
*	array of current & pending command queues, a command is
*	removed after it is done, it is ACTIVE while in progress unless
*	it is quick.  The queues are message ports.
du_Flags	EQU	LN_PRI	; various unit flags

d111 9
a119 1
	STRUCT	cd_HandlerIOR,IOSTD_SIZE	; input handler request
d125 6
d134 10
d148 2
d151 5
a155 4
	BITDEF	CU,FIXEDLL,4	; windows have a specified line length
	BITDEF	CU,FIXEDPL,5	; windows have a specified page length
	BITDEF	CU,FIXEDLO,6	; windows have a specified x offset 
	BITDEF	CU,FIXEDTO,7	; windows have a specified y offset
d173 8
a180 1
    ;------ input data
d202 1
d205 1
a205 1
SOFFSET SET     SOFFSET+(SOFFSET&1)
@
