head     36.6;
branch   ;
access   ;
symbols  V39_4:36.6 V37_157:36.6 V37_149:36.6 V37_136:36.6 V37_133:36.6 V37_110:36.6 V37_98:36.6 V37_85:36.5 V37_63:36.5 V37_36:36.5 V37_15:36.5 V37_10:36.5 V37_7:36.5 V37_2:36.5 V36_558:36.5 V36_554:36.5 V36_552:36.5 V36_549:36.5 V36_548:36.5 V36_547:36.5 V36_546:36.5 V36_545:36.5 V36_544:36.5 V36_543:36.5 V36_542:36.5 V36_540:36.5 V36_539:36.5 V36_538:36.5 V36_537:36.5 V36_536:36.5 V36_529:36.5 V36_527:36.5 V36_525:36.5 V36_524:36.5 V36_523:36.5 V36_522:36.5 V36_521:36.5 V36_520:36.5 V36_519:36.5 V36_518:36.5 V36_495:36.5 V36_491:36.5 V36_486:36.5 V36_482:36.5 V36_476:36.5 V36_471:36.5 V36_465:36.5 V36_463:36.5 V36_461:36.5 V36_460:36.5 V36_453:36.5 V36_447:36.5 V36_442:36.5 V36_429:36.5 V36_423:36.4 V36_413:36.4 V36_394:36.3 V36_387:36.3 V36_382:36.3 V36_381:36.3 V36_379:36.2 V36_373:36.2 V36_367:36.2 V36_361:36.2 V36_359:36.2 V36_357:36.2 V36_353:36.2 V36_346:36.2 V36_343:36.2 V36_338:36.2 V36_332:36.2 V36_327:36.2 V36_321:36.2 V36_319:36.2 V36_318:36.2 V36_316:36.2 V36_313:36.2 V36_311:36.2 V36_310:36.2 V36_300:36.2 V36_299:36.2 V36_297:36.2 V36_295:36.2 V36_278:36.2 V36_274:36.2 V36_221:36.1 V36_205:36.1 V36_171:36.1 V36_167:36.1 V36_165:36.0 V36_153:36.0 V36_146:36.0 V36_140:36.0 V36_129:36.0 V36_113:36.0 V36_56:36.0 V36_53:36.0 V36_51:36.0 V36_45:36.0 L36_42:36.0;
locks    ; strict;
comment  @*   @;


36.6
date     91.03.14.17.13.23;  author darren;  state Exp;
branches ;
next     36.5;

36.5
date     90.04.17.14.55.37;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     90.04.13.13.32.56;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     90.04.02.10.47.41;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     89.12.02.11.37.26;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     89.08.30.13.49.59;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     88.09.06.19.52.29;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.6
log
@Fix for a crash bug if a tab stop was cleared, and then set
again such that the tab stop was at the far right hand column.
Resulted in move loops (DBF) starting with -1.
@
text
@**
**	$Id: tab.asm,v 36.5 90/04/17 14:55:37 kodiak Exp Locker: darren $
**
**      console tab control
**
**      (C) Copyright 1985,1989 Commodore-Amiga, Inc.
**          All Rights Reserved
**
	SECTION	console

**	Includes

	INCLUDE	"cddata.i"


**	Exports

	XDEF	InitTabs
	XDEF	Tab
	XDEF	BackTab
	XDEF	SetTab
	XDEF	ClearTab
	XDEF	ClearTabs


**	Imports

	XREF	CursUpdate
	XREF	CursDown
	XREF	CursUp


*------ InitTabs ----------------------------------------------------
*
*   NAME
*	InitTabs - initialize tab stops for a window
*
*   SYNOPSIS
*	InitTabs(consoleUnit)
*		 a2
*
*--------------------------------------------------------------------
InitTabs:
		moveq	#0,d0
		moveq	#MAXTABS-2,d1
		lea	cu_TabStops(a2),a0
initTabLoop:
		move.w	d0,(a0)+
		addq	#8,d0
		dbf	d1,initTabLoop

		move.w	#$FFFF,(a0)
		rts

		
*------ Tab ---------------------------------------------------------
*
*   NAME
*	Tab - tab forward
*
*   SYNOPSIS
*	Tab(consoleUnit)
*	    a2
*
*---------------------------------------------------------------------
Tab:
		bsr.s	findNextTab
		beq.s	atTab
		subq.l	#2,a0
atTab:
		move.w	(a0),d0
		cmp.w	cu_XMax(a2),d0
		bhi.s	tabWrap
		move.w	d0,cu_XCP(a2)
cTabBound:
		bsr	CursUpdate
cTabFlagged:
		bset	#CUB_TABBED,cu_Flags(a2)
		rts


tabWrap:
		btst	#(PMB_AWM&07),cu_Modes+(PMB_AWM/8)(a2)
		bne.s	cTabAutoWrap
		move.w	cu_XMax(a2),cu_XCP(a2)
		bra.s	cTabBound
cTabAutoWrap:
	;-- wrap for the remaining
		clr.w	cu_XCP(a2)
		moveq	#1,d0
		bsr	CursDown
		bset	#CUB_IMPLICITNL,cu_Flags(a2)
		bra.s	cTabFlagged


*---------------------------------------------------------------------

findNextTab:
		move.w	cu_XCP(a2),d0
		moveq	#-1,d1
		lea	cu_TabStops(a2),a0
loopNextTab:
		cmp.w	(a0)+,d0
		dbls	d1,loopNextTab
locRts:
		rts


*------ BackTab -----------------------------------------------------
*
*   NAME
*	BackTab - tab backward
*
*   SYNOPSIS
*	BackTab(consoleUnit)
*		a2
*
*---------------------------------------------------------------------
BackTab:
		tst.w	cu_XCP(a2)
		beq.s	backTabWrap
		bsr.s	findNextTab
		subq.l	#4,a0
		move.w	(a0),d0
		move.w	d0,cu_XCP(a2)
		bra	CursUpdate

backTabWrap:
		btst	#(PMB_AWM&07),cu_Modes+(PMB_AWM/8)(a2)
		beq.s	locRts
	;-- wrap for the remaining
		moveq	#1,d0
		bsr	CursUp
		move.w	cu_XMax(a2),d0
		addq	#1,d0
		move.w	d0,cu_XCP(a2)
		bra.s	BackTab

*------ SetTab ------------------------------------------------------
*
*   NAME
*	SetTab - set tab at current position
*
*   SYNOPSIS
*	SetTab(consoleUnit)
*	       a2
*
*---------------------------------------------------------------------
SetTab:
		bsr.s	findNextTab
		beq.s	locRts		; already set
		lea	cu_TabStops+((MAXTABS-1)*2)(a2),a0
		move.w	#$FFFF,(a0)	; ensure list is terminated
		subq.l	#2,a0

		add.w	#MAXTABS-1,d1
		bmi.s	stdone		; fix - can be neg if XCP == XMax
		bra.s	stDBF
stLoop:
		move.w	-(a0),2(a0)	; copy next over this one
stDBF:
		dbf	d1,stLoop
stdone:
		move.w	cu_XCP(a2),(a0)
		rts


*------ ClearTab ----------------------------------------------------
*
*   NAME
*	ClearTab - clear tab at current position
*
*   SYNOPSIS
*	ClearTab(consoleUnit)
*		 a2
*
*---------------------------------------------------------------------
ClearTab:
		tst.w	cu_XCP(a2)
		beq.s	locRts		; cannot clear tab at position 0
		bsr.s	findNextTab
		bne.s	locRts		; not set here
		add.w	#MAXTABS-1,d1
		bmi.s	ctdone		; safety check - if XCP == XMax
ctLoop:
		move.w	(a0),-2(a0)	; copy next over this one
		addq.l	#2,a0
		dbf	d1,ctLoop
ctdone:
		rts


*------ ClearTabs ---------------------------------------------------
*
*   NAME
*	ClearTabs - clear all tabs
*
*   SYNOPSIS
*	ClearTabs(consoleUnit)
*		  a2
*
*---------------------------------------------------------------------
ClearTabs:
		move.l	#$0000FFFF,cu_TabStops(a2)
		rts

		END
@


36.5
log
@fix resize of wrapped tabs
@
text
@d2 1
a2 1
**	$Id: tab.asm,v 36.4 90/04/13 13:32:56 kodiak Exp Locker: kodiak $
d157 1
d163 1
d184 1
d189 1
@


36.4
log
@use Id instead of Header for 4.x rcs
@
text
@d2 1
a2 1
**	$Id$
d76 4
a79 1
		bra	CursUpdate
d81 1
d93 1
a93 1
		rts
@


36.3
log
@for 4.x rcs
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/tab.asm,v 36.2 89/12/02 11:37:26 kodiak Exp Locker: kodiak $
@


36.2
log
@
@
text
@d2 1
a2 1
**	$Header$
@


36.1
log
@make lower case
@
text
@d1 9
a9 29
	TTL    '$Header: tab.asm,v 36.0 88/09/06 19:52:29 kodiak Exp $'
**********************************************************************
*								     *
*   Copyright 1985, Commodore-Amiga Inc.   All rights reserved.	     *
*   No part of this program may be reproduced, transmitted,	     *
*   transcribed, stored in retrieval system, or translated into	     *
*   any language or computer language, in any form or by any	     *
*   means, electronic, mechanical, magnetic, optical, chemical,	     *
*   manual or otherwise, without the prior written permission of     *
*   Commodore-Amiga Incorporated, 983 University Ave. Building #D,   *
*   Los Gatos, California, 95030				     *
*								     *
**********************************************************************
*
*   Source Control
*   --------------
*   $Header: tab.asm,v 36.0 88/09/06 19:52:29 kodiak Exp $
*
*   $Locker: kodiak $
*
*   $Log:	tab.asm,v $
*   Revision 36.0  88/09/06  19:52:29  kodiak
*   *** empty log message ***
*   
*   Revision 35.0  87/10/26  11:14:02  kodiak
*   initial from V34, but w/ stripped log
*   
*
**********************************************************************
d11 1
a11 1
	SECTION		rawinput
d13 1
a13 1
*------ Included Files -----------------------------------------------
a14 1
	INCLUDE		"cddata.i"
d16 1
d18 6
a23 1
*------ Imported Functions -------------------------------------------
a24 3
	XREF		CursUpdate
	XREF		CursDown
	XREF		CursUp
d26 1
a26 1
*------ Exported Functions -------------------------------------------
d28 3
a30 6
	XDEF		InitTabs
	XDEF		Tab
	XDEF		BackTab
	XDEF		SetTab
	XDEF		ClearTab
	XDEF		ClearTabs
d84 1
a84 1
*	;-- wrap for the remaining
d127 1
a127 1
*	;-- wrap for the remaining
@


36.0
log
@*** empty log message ***
@
text
@d1 1
a1 1
	TTL    '$Header: tab.asm,v 35.0 87/10/26 11:14:02 kodiak Exp $'
d17 1
a17 1
*   $Header: tab.asm,v 35.0 87/10/26 11:14:02 kodiak Exp $
d19 1
a19 1
*   $Locker:  $
d22 3
d61 1
a61 1
*		 A2
d65 3
a67 3
		MOVEQ	#0,D0
		MOVEQ	#MAXTABS-2,D1
		LEA	cu_TabStops(A2),A0
d69 3
a71 3
		MOVE.W	D0,(A0)+
		ADDQ	#8,D0
		DBF	D1,initTabLoop
d73 2
a74 2
		MOVE.W	#$FFFF,(A0)
		RTS
d84 1
a84 1
*	    A2
d88 3
a90 3
		BSR.S	findNextTab
		BEQ.S	atTab
		SUBQ.L	#2,A0
d92 4
a95 4
		MOVE.W	(A0),D0
		CMP.W	cu_XMax(A2),D0
		BHI.S	tabWrap
		MOVE.W	D0,cu_XCP(A2)
d97 1
a97 1
		BRA	CursUpdate
d100 4
a103 4
		BTST	#(PMB_AWM&07),cu_Modes+(PMB_AWM/8)(A2)
		BNE.S	cTabAutoWrap
		MOVE.W	cu_XMax(A2),cu_XCP(A2)
		BRA.S	cTabBound
d106 5
a110 5
		CLR.W	cu_XCP(A2)
		MOVEQ	#1,D0
		BSR	CursDown
		BSET	#CUB_IMPLICITNL,cu_Flags(A2)
		RTS
d116 3
a118 3
		MOVE.W	cu_XCP(A2),D0
		MOVEQ	#-1,D1
		LEA	cu_TabStops(A2),A0
d120 2
a121 2
		CMP.W	(A0)+,D0
		DBLS	D1,loopNextTab
d123 1
a123 1
		RTS
d133 1
a133 1
*		A2
d137 7
a143 7
		TST.W	cu_XCP(A2)
		BEQ.S	backTabWrap
		BSR.S	findNextTab
		SUBQ.L	#4,A0
		MOVE.W	(A0),D0
		MOVE.W	D0,cu_XCP(A2)
		BRA	CursUpdate
d146 2
a147 2
		BTST	#(PMB_AWM&07),cu_Modes+(PMB_AWM/8)(A2)
		BEQ.S	locRts
d149 6
a154 6
		MOVEQ	#1,D0
		BSR	CursUp
		MOVE.W	cu_XMax(A2),D0
		ADDQ	#1,D0
		MOVE.W	D0,cu_XCP(A2)
		BRA.S	BackTab
d163 1
a163 1
*	       A2
d167 5
a171 5
		BSR.S	findNextTab
		BEQ.S	locRts		; already set
		LEA	cu_TabStops+((MAXTABS-1)*2)(A2),A0
		MOVE.W	#$FFFF,(A0)	; ensure list is terminated
		SUBQ.L	#2,A0
d173 2
a174 2
		ADD.W	#MAXTABS-1,D1
		BRA.S	stDBF
d176 1
a176 1
		MOVE.W	-(A0),2(A0)	; copy next over this one
d178 3
a180 3
		DBF	D1,stLoop
		MOVE.W	cu_XCP(A2),(A0)
		RTS
d190 1
a190 1
*		 A2
d194 5
a198 5
		TST.W	cu_XCP(A2)
		BEQ.S	locRts		; cannot clear tab at position 0
		BSR.S	findNextTab
		BNE.S	locRts		; not set here
		ADD.W	#MAXTABS-1,D1
d200 4
a203 4
		MOVE.W	(A0),-2(A0)	; copy next over this one
		ADDQ.L	#2,A0
		DBF	D1,ctLoop
		RTS
d213 1
a213 1
*		  A2
d217 2
a218 2
		MOVE.L	#$0000FFFF,cu_TabStops(A2)
		RTS
@
