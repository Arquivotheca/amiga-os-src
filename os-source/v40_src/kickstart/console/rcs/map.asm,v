head     36.9;
branch   ;
access   ;
symbols  V39_4:36.9 V37_157:36.9 V37_149:36.9 V37_136:36.9 V37_133:36.9 V37_110:36.9 V37_98:36.8 V37_85:36.8 V37_63:36.8 V37_36:36.8 V37_15:36.8 V37_10:36.8 V37_2:36.8 V36_558:36.8 V36_554:36.8 V36_552:36.8 V36_549:36.8 V36_548:36.8 V36_547:36.8 V36_546:36.8 V36_545:36.8 V36_544:36.8 V36_543:36.8 V36_542:36.8 V36_540:36.8 V36_539:36.8 V36_538:36.8 V36_537:36.8 V36_536:36.8 V36_529:36.7 V36_527:36.7 V36_525:36.7 V36_524:36.7 V36_523:36.7 V36_522:36.7 V36_521:36.7 V36_520:36.7 V36_519:36.7 V36_518:36.6 V36_495:36.6 V36_491:36.6 V36_486:36.6 V36_482:36.6 V36_476:36.6 V36_471:36.6 V36_465:36.6 V36_463:36.6 V36_461:36.6 V36_460:36.6 V36_453:36.6 V36_447:36.6 V36_442:36.6 V36_429:36.6 V36_423:36.6 V36_413:36.6 V36_394:36.5 V36_387:36.5 V36_382:36.5 V36_381:36.4 V36_379:36.3 V36_373:36.3 V36_367:36.3 V36_361:36.3 V36_359:36.3 V36_357:36.3 V36_353:36.2 V36_346:36.1 V36_343:36.1 V36_338:36.1;
locks    ; strict;
comment  @*   @;


36.9
date     91.04.12.17.28.10;  author darren;  state Exp;
branches ;
next     36.8;

36.8
date     90.11.02.08.11.10;  author darren;  state Exp;
branches ;
next     36.7;

36.7
date     90.07.19.18.23.18;  author darren;  state Exp;
branches ;
next     36.6;

36.6
date     90.04.13.13.32.37;  author kodiak;  state Exp;
branches ;
next     36.5;

36.5
date     90.04.10.10.24.43;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     90.04.02.10.47.23;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     90.03.01.07.18.11;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     90.02.23.16.59.17;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     90.02.21.14.04.12;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     90.02.17.15.45.48;  author kodiak;  state Exp;
branches ;
next     ;


desc
@character map manipulation commands
@


36.9
log
@Comment some broken code; argghh!
@
text
@**
**	$Id: map.asm,v 36.8 90/11/02 08:11:10 darren Exp Locker: darren $
**
**      console.device character map manipulation commands
**
**      (C) Copyright 1989 Commodore-Amiga, Inc.
**          All Rights Reserved
**
	SECTION	console

**	Includes

	INCLUDE	"cddata.i"
	INCLUDE	"debug.i"

	INCLUDE	"exec/ables.i"

**	Exports

	XDEF	CDObtainMap
	XDEF	CDReleaseMap

	XDEF	CDCBObtainMap
	XDEF	CDCBReleaseMap

	XDEF	BeginMapSemaphore
	XDEF	InitMapSemaphore
	XDEF	ObtainMapSemaphore
	XDEF	ReleaseMapSemaphore

**	Imports

	XLVO	GetMsg			; Exec
	XLVO	Permit			;
	XLVO	PutMsg			;
	XLVO	ReplyMsg		;
	XLVO	Signal			;
	XLVO	WaitPort		;

	XREF	EndCommand

*****i* console.device/CD_OBTAINMAP **********************************
*
*   NAME
*	CD_OBTAINMAP -- Acquire locked character map.
*
*   FUNCTION
*	This command gets a pointer to the locked ConsoleMap
*	associated with a character mapped console unit, i.e. one
*	opened with a unit with CDUNITF_MAPPED set.  The map contents
*	may be inspected and/or modified, but the map dimensions must
*	not be changed.  Updates to all consoles can be inhibited
*	while an application owns this map, so CD_RELEASEMAP should
*	be performed as quickly as possible.
*
*   IO REQUEST INPUT
*	io_Message -	with valid mn_ReplyPort
*	io_Device -	preset by the call to OpenDevice
*	io_Unit -	preset by the call to OpenDevice
*	io_Command -	CD_OBTAINMAP
*
*   IO REQUEST RESULT
*	io_Error -	can be one of:
*	    CDERR_NOUNIT -  not a real unit (i.e. OpenDevice w/ -1 unit)
*	    CDERR_NOMAP	-   no character map is available for this unit
*	io_Actual -	sizeof(ConsoleMap)
*	io_Length -	sizeof(ConsoleMap)
*	io_Data -	struct ConsoleMap *, the character map
*
**********************************************************************
CDCBObtainMap	EQU	-1

CDObtainMap:
		movem.l a2-a3,-(a7)
		move.l	a1,a3			; save I/O Request
		move.l	IO_UNIT(a3),a2
		move.l	a2,d0			; cmp.l	#-1,a2
		addq.l	#1,d0
		beq.s	mNoUnit

		tst.l	cu_CM+cm_AllocSize(a2)
		beq.s	mNoMap

		clr.b	IO_ERROR(a3)
		moveq	#ConsoleMap_SIZEOF,d0
		move.l	d0,IO_ACTUAL(a3)
		move.l	d0,IO_LENGTH(a3)
		lea	cu_CM(a2),a0
		move.l	a0,IO_DATA(a3)
		bsr	BeginMapSemaphore
		tst.l	d0
		bne.s	endOK

		bclr	#IOB_QUICK,IO_FLAGS(a3)
		movem.l	(a7)+,a2-a3
		rts

endOK:
		moveq	#0,d0
endCommand:
		move.l	a3,a1
		movem.l	(a7)+,a2-a3
		bra	EndCommand

mNoUnit:
		moveq	#CDERR_NOUNIT,d0
		bra.s	endCommand
		
mNoMap:
		moveq	#CDERR_NOMAP,d0
		bra.s	endCommand

mBadMap:
		moveq	#CDERR_BADMAP,d0
		bra.s	endCommand


*****i* console.device/CD_RELEASEMAP *********************************
*
*   NAME
*	CD_RELEASEMAP -- Release acquired character map.
*
*   FUNCTION
*	This command releases the ConsoleMap locked via CD_OBTAINMAP,
*	and optionally refreshes the display from the map.  The
*	application must set io_Offset to indicate a refresh when it
*	has made changes to the map.
*
*   IO REQUEST INPUT
*	io_Message -	with valid mn_ReplyPort
*	io_Device -	preset by the call to OpenDevice
*	io_Unit -	preset by the call to OpenDevice
*	io_Command -	CD_RELEASEMAP
*	io_Length -	preset by the CD_OBTAINMAP command
*	io_Data -	preset by the CD_OBTAINMAP command
*	io_Offset -	0 if no map changes made, 1 if refresh needed
*
*   IO REQUEST RESULT
*	io_Error -	can be one of:
*	    CDERR_NOUNIT -  not a real unit (i.e. OpenDevice w/ -1 unit)
*	    CDERR_BADMAP -  map not acquired via CD_OBTAINMAP
*
**********************************************************************
CDCBReleaseMap	EQU	-1

CDReleaseMap:
		movem.l a2-a3,-(a7)
		move.l	a1,a3			; save I/O Request
		move.l	IO_UNIT(a3),a2
		move.l	a2,d0			; cmp.l	#-1,a2
		addq.l	#1,d0
		beq.s	mNoUnit

		lea	cu_CM(a2),a0
		cmp.l	IO_DATA(a3),a0
		bne.s	mBadMap

		bsr	ReleaseMapSemaphore

		tst.l	IO_OFFSET(a3)
		beq.s	endOK

		bset	#CUB_REFRESH,cu_Flags(a2)
		move.l	#CDSIGF_REFRESH,d0
		lea	cd_TC(a6),a1
		LINKEXE	Signal
		bra.s	endOK


*****i* InitMapSemaphore *********************************************
*
*   a2	console unit
*
InitMapSemaphore:
		move.b	#PA_IGNORE,cu_MapSemaphore+MP_FLAGS(a2)
		move.w	#-1,cu_MapSemaphore+SM_BIDS(a2)
		rts


*****i* ObtainMapSemaphore *******************************************
*
*   a2	console unit
*
ObtainMapSemaphore:
		;-- use BeginMapSemaphore w/ message on the stack
		lea	-MN_SIZE-MP_SIZE(a7),a7	; message & message port
		move.w	#SIGB_SINGLE,MP_FLAGS(a7)	; clr FLAGS, set SIGBIT
		move.l	cd_ExecLib(a6),a0
		move.l	ThisTask(a0),MP_SIGTASK(a7)
		lea	MP_MSGLIST(a7),a1
		NEWLIST	a1
		lea	MP_SIZE(a7),a1
		move.l	a7,MN_REPLYPORT(a1)
		bsr.s	BeginMapSemaphore
		tst.l	d0
		bne.s	omsProcured

	;--@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
	;--@@@@@@ BROKEN - BUT NEVER EXECUTED!

		lea	MP_SIZE(a7),a1
		LINKEXE	WaitPort

omsProcured:
		lea	MN_SIZE+MP_SIZE(a7),a7
		rts


*****i* BeginMapSemaphore ********************************************
*
*   a1	semaphore message
*   a2	console unit
*
BeginMapSemaphore:
		move.l	cd_ExecLib(a6),a0
		FORBID	a0,NOFETCH
		addq.w	#1,cu_MapSemaphore+SM_BIDS(a2)
		bne.s	bmsBid
		move.l	a1,cu_MapSemaphore+SM_LOCKMSG(a2)
		moveq	#1,d0
bmsExit:
		LINKEXE	Permit
		rts

bmsBid:
		lea	cu_MapSemaphore(a2),a0
		LINKEXE PutMsg
		moveq	#0,d0
		bra.s	bmsExit


*****i* ReleaseMapSemaphore ******************************************
*
*   a1	semaphore message, or zero for current locker
*   a2	console unit
*
ReleaseMapSemaphore:
		move.l	cd_ExecLib(a6),a0
		FORBID	a0,NOFETCH
		move.l	a1,d0
		beq.s	rmsCurrent

		;--	release specific locker
		cmp.l	cu_MapSemaphore+SM_LOCKMSG(a2),a1
		beq.s	rmsCurrent

		;--	look for lock request in pending list
rmsLookLoop:
		move.l	cu_MapSemaphore+MP_MSGLIST+LH_HEAD(a2),a0
		move.l	(a0),d0
		beq.s	rmsDone

		cmp.l	a0,a1
		beq.s	rmsInList

		move.l	d0,a0
		bra.s	rmsLookLoop

rmsInList:
		REMOVE
		subq.w	#1,cu_MapSemaphore+SM_BIDS(a2)
		moveq	#1,d0
		bra.s	rmsDone

rmsCurrent:
		clr.l	cu_MapSemaphore+SM_LOCKMSG(a2)
		subq.w	#1,cu_MapSemaphore+SM_BIDS(a2)
		bge.s	rmsNext

rmsDone:
		LINKEXE	Permit
		rts

rmsNext:
		lea	cu_MapSemaphore(a2),a0
		LINKEXE GetMsg
		move.l	d0,cu_MapSemaphore+SM_LOCKMSG(a2)
		move.l	d0,a1
		LINKEXE	ReplyMsg
		bra.s	rmsDone

	END
@


36.8
log
@short branch optimization
@
text
@d2 1
a2 1
**	$Id: map.asm,v 36.7 90/07/19 18:23:18 darren Exp Locker: darren $
d197 3
@


36.7
log
@Set autodocs OBTAIN & RELEASE MAP
to internal.
@
text
@d2 1
a2 1
**	$Id: map.asm,v 36.6 90/04/13 13:32:37 kodiak Exp Locker: darren $
d194 1
a194 1
		bsr	BeginMapSemaphore
@


36.6
log
@use Id instead of Header for 4.x rcs
@
text
@d2 1
a2 1
**	$Id$
d42 1
a42 1
******* console.device/CD_OBTAINMAP **********************************
d118 1
a118 1
******* console.device/CD_RELEASEMAP *********************************
@


36.5
log
@eliminated FORBID w/o NOFETCH
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/map.asm,v 36.4 90/04/02 10:47:23 kodiak Exp Locker: kodiak $
@


36.4
log
@for 4.x rcs
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/map.asm,v 36.3 90/03/01 07:18:11 kodiak Exp Locker: kodiak $
d212 2
a213 1
		FORBID	a0
d235 2
a236 1
		FORBID	a0
@


36.3
log
@fix obtainmapsemaphore
@
text
@d2 1
a2 1
**	$Header: map.asm,v 36.2 90/02/23 16:59:17 kodiak Exp $
@


36.2
log
@remove selecthook command
@
text
@d2 1
a2 1
**	$Header: map.asm,v 36.1 90/02/21 14:04:12 kodiak Exp $
d187 3
a189 2
		clr.b	MP_FLAGS(a7)
		move.b	#SIGB_SINGLE,MP_SIGBIT(a7)
@


36.1
log
@first cut private map locking solution, snapshot to allow release of
pack fix
@
text
@d2 1
a2 1
**	$Header: dev.asm,v 36.5 89/12/02 11:36:39 kodiak Exp $
d4 1
a4 1
**      console.device Init and Expunge
d6 1
a6 1
**      (C) Copyright 1985,1989 Commodore-Amiga, Inc.
a21 1
	XDEF	CDSelectHook
a24 1
	XDEF	CDCBSelectHook
a168 35

******* console.device/CD_SELECTHOOK *********************************
*
*   NAME
*	CD_SELECTHOOK -- Install or remove a console select hook
*
*   FUNCTION
*	This command installs (or removes) a hook that is called from
*	the console task to inform an application when a selection is
*	available.  This notification occurs after the selection is
*	complete, it does not occur while the selection is in
*	progress.  The hook code may not in turn initiate any console
*	commands.
*
*   IO REQUEST INPUT
*	io_Message -	with valid mn_ReplyPort
*	io_Device -	preset by the call to OpenDevice
*	io_Unit -	preset by the call to OpenDevice
*	io_Command -	CD_SELECTHOOK
*	io_Length -	sizeof(struct Hook)
*	io_Data -	struct Hook *, the console select hook
*	io_Offset -	0 to remove, 1 to install this hook
*
*   IO REQUEST RESULT
*	io_Error -	can be one of:
*	    CDERR_NOUNIT -  not a real unit (i.e. OpenDevice w/ -1 unit)
*	    CDERR_BADHOOK - this hook was not found to remove
*
**********************************************************************
CDCBSelectHook	EQU	-1

CDSelectHook:
		moveq	#0,d0
		bra	EndCommand
	
@


36.0
log
@just documentation, and obsolete at that...
@
text
@d1 43
d73 1
d75 45
d146 1
d148 24
d200 1
d202 4
d207 8
a214 10
/*----- cu_AttrBuffer entries --------------------------------------*/
#define CUAM_FGPEN	0x0007		/* for FgPen */
#define CUAM_BGPEN	0x0038		/* for BgPen */
#define CUAM_SOFTSTYLE	0x01c0		/* for SetSoftStyle */
#define CUAF_INVERSVID	0x0200		/* RP_INVERSVID set */
#define CUAF_SELECTED	0x0400		/* selection */
#define CUAF_HIGHLIGHT	0x0800		/* highlighted part of selection */
#define CUAF_IMPLICITNL	0x1000		/* CUB_IMPLICITNL set (valid for 1st */
					/*   character in line only) */
#define CUAF_RENDERED	0x8000		/* valid and not CONCEALED */
a215 13
struct ConsoleMap {
    /* these fields are read-only:
       only the Char & Attr data itself may be modified */
    UBYTE  *cm_CharBuffer;		/* start of (off-screen) char buffer */
    UWORD  *cm_AttrBuffer;		/* start of (off-screen) attr buffer */
    UWORD   cm_BufferWidth;		/* number of columns off-screen */
    UWORD   cm_BufferHeight;		/* number of rows off-screen */
    UBYTE  *cm_CharDisplay;		/* top left character of display */
    UWORD  *cm_AttrDisplay;		/* top left attribute of display */
    UWORD   cm_DisplayWidth;		/* number of columns in display */
    UWORD   cm_DisplayHeight;		/* number of rows in display */
    UWORD   cm_Elements;		/* allocated elements in Char & Attr */
};
d217 16
a232 2
====================    20x10
--------------------	20x7,(0,0)
d234 2
a235 1
---------------		15x4
d237 3
a239 2
====================    20x10
--------------------	20x7,0
d241 73
a313 100
---------------		15x4
The rain in spa
in falls mainly
 on the plain.
She sells sea s
====================    20x10
--------------------	20x7,(15,0)
The rain in spa
---------------		15x4
in falls mainly
 on the plain.
She sells sea s
ea shells by th
====================    20x10
--------------------	20x7,(11,1)
The rain in spain fa
lls mainly
---------------		15x4
 on the plain.
She sells sea s
ea shells by th
e sea shore.
====================    20x10
--------------------	20x7,()
The rain in spain fa
lls mainly on the pl
ain.
---------------		15x4
She sells sea s
ea shells by th
e sea shore.
<nl>
====================    20x10
--------------------	20x7,()
The rain in spain fa
lls mainly on the pl
ain.
She sells sea shells
by th
---------------		15x4
e sea shore.
<nl>
one,
  two,
====================    20x10
--------------------	20x7,()
The rain in spain fa
lls mainly on the pl
ain.
She sells sea shells
by the sea shore.
<nl>
one,
---------------		15x4
  two,
    buckle my s
hoe.
three,
====================    20x10
--------------------	20x7,()
lls mainly on the pl
ain.
She sells sea shells
by the sea shore.
<nl>
one,
  two,
---------------		15x4
    buckle my s
hoe.
three,
  four,
====================    20x10
--------------------	20x7,()
ain.
She sells sea shells
by the sea shore.
<nl>
one,
  two,
    buckle my shoe.
---------------		15x4
three,
  four,
    shut the door.
five,
====================    20x10
--------------------	20x7,()
one,
  two,
    buckle my shoe.
three,
  four,
    shut the door.
five,
---------------		15x4
  six, pick up
6
seven, eight, w
wait
@
