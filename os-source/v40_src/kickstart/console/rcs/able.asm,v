head     36.17;
branch   ;
access   ;
symbols  V39_4:36.15 V37_157:36.15 V37_149:36.14 V37_136:36.14 V37_133:36.14 V37_110:36.14 V37_98:36.14 V37_85:36.14 V37_63:36.14 V37_36:36.14 V37_15:36.14 V37_10:36.14 V37_7:36.14 V37_2:36.14 V36_558:36.14 V36_554:36.14 V36_552:36.14 V36_549:36.14 V36_547:36.14 V36_546:36.14 V36_545:36.14 V36_544:36.14 V36_543:36.14 V36_542:36.14 V36_540:36.14 V36_539:36.14 V36_538:36.14 V36_537:36.14 V36_536:36.14 V36_529:36.13 V36_527:36.13 V36_525:36.13 V36_524:36.13 V36_523:36.13 V36_522:36.13 V36_521:36.13 V36_520:36.13 V36_519:36.13 V36_518:36.13 V36_495:36.13 V36_491:36.13 V36_486:36.13 V36_482:36.13 V36_476:36.13 V36_471:36.13 V36_465:36.13 V36_463:36.13 V36_461:36.13 V36_460:36.13 V36_453:36.13 V36_447:36.13 V36_442:36.13 V36_429:36.13 V36_423:36.13 V36_413:36.13 V36_394:36.12 V36_387:36.12 V36_382:36.11 V36_381:36.11 V36_379:36.10 V36_373:36.10 V36_367:36.10 V36_361:36.10 V36_359:36.10 V36_357:36.10 V36_353:36.10 V36_346:36.10 V36_343:36.10 V36_338:36.10 V36_332:36.9 V36_327:36.9 V36_321:36.9 V36_319:36.9 V36_318:36.9 V36_316:36.9 V36_313:36.9 V36_311:36.9 V36_310:36.9 V36_300:36.8 V36_299:36.8 V36_297:36.7 V36_295:36.7 V36_278:36.7 V36_274:36.7 V36_221:36.6 V36_205:36.5 V36_171:36.4 V36_167:36.4 V36_165:36.4 V36_153:36.4 V36_146:36.4 V36_140:36.4 V36_129:36.4 V36_113:36.3 V36_56:36.2 V36_53:36.1 V36_51:36.1 V36_45:36.1 L36_42:36.1;
locks    ; strict;
comment  @*   @;


36.17
date     92.05.19.12.28.29;  author darren;  state Exp;
branches ;
next     36.16;

36.16
date     92.05.19.10.30.42;  author darren;  state Exp;
branches ;
next     36.15;

36.15
date     91.05.22.13.46.57;  author darren;  state Exp;
branches ;
next     36.14;

36.14
date     90.11.01.11.19.43;  author darren;  state Exp;
branches ;
next     36.13;

36.13
date     90.04.13.13.32.16;  author kodiak;  state Exp;
branches ;
next     36.12;

36.12
date     90.04.11.16.40.58;  author kodiak;  state Exp;
branches ;
next     36.11;

36.11
date     90.04.02.10.47.05;  author kodiak;  state Exp;
branches ;
next     36.10;

36.10
date     90.02.21.14.03.56;  author kodiak;  state Exp;
branches ;
next     36.9;

36.9
date     89.12.15.17.49.30;  author kodiak;  state Exp;
branches ;
next     36.8;

36.8
date     89.12.14.17.02.35;  author kodiak;  state Exp;
branches ;
next     36.7;

36.7
date     89.12.02.11.35.08;  author kodiak;  state Exp;
branches ;
next     36.6;

36.6
date     89.11.07.12.57.08;  author kodiak;  state Exp;
branches ;
next     36.5;

36.5
date     89.11.03.12.24.37;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     89.06.30.12.31.22;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     89.06.28.12.23.37;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     89.04.19.17.04.38;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     88.09.19.10.14.47;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     88.09.06.19.50.58;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.17
log
@Don't bother with map semaphore - noone but me can use the map because
the commands to own/use the map were never public.
@
text
@**
**	$Id: able.asm,v 36.16 92/05/19 10:30:42 darren Exp Locker: darren $
**
**      acquire use of device rastport
**
**      (C) Copyright 1989,1992 Commodore-Amiga, Inc.
**          All Rights Reserved
**
	SECTION	console

**	Includes

	INCLUDE	"cddata.i"

	INCLUDE	"debug.i"

	INCLUDE	"intuition/intuition.i"


**	Exports

	XDEF	LockDRPort
	XDEF	UnLockRPort


**	Imports

	XLVO	Forbid			; Exec
	XLVO	Permit			;
	XLVO	ObtainSemaphore		;
	XLVO	ReleaseSemaphore	;

	XLVO	LockLayerRom		; Graphics
	XLVO	UnlockLayerRom		;
	XLVO	SetDrMd			;

	XLVO	LockLayerInfo		; Layers
	XLVO	InstallClipRegion	;
	XLVO	UnlockLayerInfo		;

	XREF	ClearRaster		; clear.asm

	XREF	ObtainMapSemaphore
	XREF	ReleaseMapSemaphore

*------ LockDRPort ---------------------------------------------------
*
*   NAME
*	LockDRPort - lock the Window's RPort from the user for graphics
*
*   SYNOPSIS
*	LockDRPort(consoleUnit)
*		  a2
*
*---------------------------------------------------------------------
LockDRPort:
		lea	cd_RPSemaphore(a6),a0
		LINKEXE	ObtainSemaphore

		addq.b	#1,cu_RPNestCnt(a2)
		bgt.s	ldrDone

		move.l	cu_Window(a2),a1
		move.l	wd_RPort(a1),a1
		lea	cd_RastPort(a6),a0
		move.l	rp_BitMap(a1),rp_BitMap(a0)
		move.l	rp_Layer(a1),a1
		move.l	a1,rp_Layer(a0)
		move.l	a0,lr_rp(a1)

		move.l	a5,-(a7)
		move.l	cd_RastPort+rp_Layer(a6),a5
		move.l	lr_LayerInfo(a5),a0
		LINKLAY	LockLayerInfo
		LINKGFX	LockLayerRom
		move.l	(a7)+,a5

ldrDone:

		rts


*------ UnLockRPort -------------------------------------------------
*
*   NAME
*	UnLockRPort - unlock the Window's RPort to the user
*
*   SYNOPSIS
*	UnLockRPort(consoleUnit)
*	            a2
*
*---------------------------------------------------------------------
UnLockRPort:
		LINKEXE	Forbid
		subq.b	#1,cu_RPNestCnt(a2)
		bpl.s	uDone

		bclr.b	#CDB_CLIPINSTALLED,cd_Flags(a6)
		beq.s	uUnlock

		move.l	cd_RastPort+rp_Layer(a6),a0
		move.l	cd_PrevClipRegion(a6),a1
		LINKLAY	InstallClipRegion

uUnlock:
	;-- check/clear delay border fill flag (typically not set)

		bclr	#CUB_BORDERFILL,cu_States(a2)
		bne.s	doborderfill

nodelayborderfill:
		move.l	a5,-(a7)
		move.l	cd_RastPort+rp_Layer(a6),a5
		LINKGFX	UnlockLayerRom
		move.l	lr_LayerInfo(a5),a0
		LINKLAY	UnlockLayerInfo
		move.l	(a7)+,a5

		move.l	cd_RastPort+rp_Layer(a6),a0
		move.l	cu_Window(a2),a1
		move.l	wd_RPort(a1),a1
		move.l	a1,lr_rp(a0)

uDone:
		LINKEXE	Permit

		lea	cd_RPSemaphore(a6),a0
		LINKEXE	ReleaseSemaphore
		rts

	;-- delayed border fill - only safe time to do this without
	;-- fiddling with major portions of the code which draw inside
	;-- of a more restrictive clip region

doborderfill:


		move.w	cu_FullXRExtant(a2),d2
		move.w	cu_FullYRExtant(a2),d3

		cmp.w	cu_XRExtant(a2),d2
		bne.s	borderXR

checkYR:
		cmp.w	cu_YRExtant(a2),d3
		beq.s	nodelayborderfill

borderYR:
		move.w	cu_XROrigin(a2),d0
		move.w	cu_YRExtant(a2),d1
		addq.w	#1,d1
		bsr.s	ClearBorder
		bra	nodelayborderfill
borderXR:
		
		move.w	cu_XRExtant(a2),d0
		addq.w	#1,d0
		move.w	cu_YROrigin(a2),d1
		bsr.s	ClearBorder
		bra.s	checkYR		
ClearBorder:

	; ClearBorder with explicit draw mode

		movem.l	d0-d1,-(sp)
		lea	cd_RastPort(a6),a1
		move.b	cu_ClearDrMd(a2),d0

	; Use same drawing mode as when we last cleared the screen
	; incase we are in INVERSVID mode (esc[7m) when we cleared
	; the screen

		LINKGFX	SetDrMd
		movem.l	(sp)+,d0-d1

	; ClearRaster() checks for positive rectangle

		bra	ClearRaster
	;;;	rts

	END
@


36.16
log
@Do delayed border fill just prior to unlocking the layer; about the
only safe time to do this, and a good place to check without adding
checks all over the place.  Average case is fast path through, and
branch is false.
@
text
@d2 1
a2 1
**	$Id: able.asm,v 36.15 91/05/22 13:46:57 darren Exp Locker: darren $
d6 1
a6 1
**      (C) Copyright 1989 Commodore-Amiga, Inc.
a62 2
		bsr	ObtainMapSemaphore

a117 3

		suba.l	a1,a1
		bsr	ReleaseMapSemaphore
@


36.15
log
@*** empty log message ***
@
text
@d2 1
a2 1
**	$Id: able.asm,v 36.14 90/11/01 11:19:43 darren Exp Locker: darren $
d35 1
d41 2
d108 6
d135 50
@


36.14
log
@*** empty log message ***
@
text
@d2 1
a2 1
**	$Id: able.asm,v 36.13 90/04/13 13:32:16 kodiak Exp Locker: darren $
@


36.13
log
@use Id instead of Header for 4.x rcs
@
text
@d2 1
a2 1
**	$Id$
d78 1
@


36.12
log
@grab LayerInfo lock to protect BeginUpdate/EndUpdate when refreshing
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/able.asm,v 36.11 90/04/02 10:47:05 kodiak Exp Locker: kodiak $
@


36.11
log
@for 4.x rcs
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/able.asm,v 36.10 90/02/21 14:03:56 kodiak Exp Locker: kodiak $
d36 3
a38 1
	XLVO	InstallClipRegion	; Layers
d72 2
d107 2
@


36.10
log
@first cut private map locking solution, snapshot to allow release of
pack fix
@
text
@d2 1
a2 1
**	$Header: able.asm,v 36.9 89/12/15 17:49:30 kodiak Exp $
@


36.9
log
@Only InstallClipRegion when necessary
@
text
@d2 1
a2 1
**	$Header: able.asm,v 36.8 89/12/14 17:02:35 kodiak Exp $
d38 2
d58 1
a58 2
		lea	cu_MSemaphore(a2),a0
		LINKEXE	ObtainSemaphore
d105 2
a106 2
		lea	cu_MSemaphore(a2),a0
		LINKEXE	ReleaseSemaphore
@


36.8
log
@different damage refresh strategy: should always clear damage
@
text
@d2 1
a2 1
**	$Header: able.asm,v 36.7 89/12/02 11:35:08 kodiak Exp $
d36 1
d38 1
a49 1
		DTRACE	D_LOCKDRPORT
d54 1
a54 1
		bgt.s	ldrRelock
a66 5
ldrRelock:
		bset.b	#CUB_LAYERLOCK,cu_Flags(a2)
		bne.s	ldrDone

		DTRACE	D_LOCKLAYER
a86 2
		DTRACE	D_UNLOCKRPORT

d91 2
a92 2
		bclr.b	#CUB_LAYERLOCK,cu_Flags(a2)
		beq.s	uRestore
d94 5
a98 1
		DTRACE	D_UNLOCKLAYER
a103 1
uRestore:
@


36.7
log
@checkpoint after line buffer coding completed,
and just after start of line length coding
@
text
@d2 1
a2 1
**	$Header$
a22 1
	XDEF	LockIRPort
a39 1
*	LockIRPort - lock the Window's RPort from the user for intuition
d47 2
a48 2
LockIRPort:
		DTRACE	D_LOCKIRPORT
a51 11
		;--	check for nest w/ LockDRPort
		bclr.b	#CUB_LAYERLOCK,cu_Flags(a2)
		beq.s	lEntry

		DTRACE	D_USURPLOCK
		move.l	a5,-(a7)
		move.l	cd_RastPort+rp_Layer(a6),a5
		LINKGFX	UnlockLayerRom
		move.l	(a7)+,a5

lEntry:
d53 1
a53 1
		bgt.s	lDone
a64 2
lDone:
		rts
d66 1
a66 8

LockDRPort:
		DTRACE	D_LOCKDRPORT
		lea	cd_RPSemaphore(a6),a0
		LINKEXE	ObtainSemaphore

		bsr.s	lEntry

@


36.6
log
@first cut at cu_MSemaphore
@
text
@d1 9
a9 38
	TTL    '$Header: able.asm,v 36.5 89/11/03 12:24:37 kodiak Exp $'
**********************************************************************
*
*			--------------
*   able.asm		CONSOLE DEVICE	acquire use of device rastport
*			--------------
*
*   Copyright 1985, 1987 Commodore-Amiga Inc.
*
*   Source Control	$Locker: kodiak $
*
*   $Log:	able.asm,v $
*   Revision 36.5  89/11/03  12:24:37  kodiak
*   coalesce XREF_XXX into XLVO
*   
*   Revision 36.4  89/06/30  12:31:22  kodiak
*   take debug.i out of cddata and put in files that use it
*   
*   Revision 36.3  89/06/28  12:23:37  kodiak
*   use semaphore sooner to eliminate lockup
*   coalesce UnLock.RPort functions into UnLockRPort
*   
*   Revision 36.2  89/04/19  17:04:38  kodiak
*   don't lock layers before BeginRefresh
*   
*   Revision 36.1  88/09/19  10:14:47  kodiak
*   add character map and pseudo-clipboard support
*   
*   Revision 36.0  88/09/06  19:50:58  kodiak
*   *** empty log message ***
*   
*   Revision 35.1  87/10/26  12:55:52  kodiak
*   Change rendering strategy to use a single shared device RastPort
*   
*   Revision 35.0  87/10/26  11:11:39  kodiak
*   initial from V34, but w/ stripped log
*
**********************************************************************
d11 1
a11 1
	SECTION		rawinput
d13 1
a13 1
*------ Included Files -----------------------------------------------
d15 1
a15 2
	INCLUDE		"cddata.i"
	INCLUDE		"debug.i"
d17 1
a17 1
	INCLUDE		"intuition/intuition.i"
d20 1
a20 1
*------ Imported Names -----------------------------------------------
d22 3
a24 1
*------ Imported Functions -------------------------------------------
d26 3
a35 6

*------ Exported Functions -------------------------------------------

	XDEF		LockDRPort
	XDEF		LockIRPort
	XDEF		UnLockRPort
@


36.5
log
@coalesce XREF_XXX into XLVO
@
text
@d1 1
a1 1
	TTL    '$Header: able.asm,v 36.4 89/06/30 12:31:22 kodiak Exp $'
d13 3
d98 4
d148 1
a148 1
		bmi.s	uFinal
a149 8
uDone:
		LINKEXE	Permit

		lea	cd_RPSemaphore(a6),a0
		LINKEXE	ReleaseSemaphore
		rts

uFinal:
d160 3
d168 6
a173 1
		bra.s	uDone
@


36.4
log
@take debug.i out of cddata and put in files that use it
@
text
@d1 1
a1 1
	TTL    '$Header: able.asm,v 36.3 89/06/28 12:23:37 kodiak Exp $'
d13 3
d51 4
a54 4
	XREF_EXE	Forbid
	XREF_EXE	Permit
	XREF_EXE	ObtainSemaphore
	XREF_EXE	ReleaseSemaphore
d56 2
a57 2
	XREF_GFX	LockLayerRom
	XREF_GFX	UnlockLayerRom
@


36.3
log
@use semaphore sooner to eliminate lockup
coalesce UnLock.RPort functions into UnLockRPort
@
text
@d1 1
a1 1
	TTL    '$Header: able.asm,v 36.2 89/04/19 17:04:38 kodiak Exp $'
d13 4
d39 1
@


36.2
log
@don't lock layers before BeginRefresh
@
text
@d1 1
a1 1
	TTL    '$Header: able.asm,v 36.1 88/09/19 10:14:47 kodiak Exp $'
d13 3
d43 2
d55 1
a55 2
	XDEF		UnLockDRPort
	XDEF		UnLockIRPort
d66 1
a66 1
*		  A2
d70 1
a70 2
		ADDQ.B	#1,cu_RPNestCnt(A2)
		BGT.s	lrpRts
d74 15
a88 2
		MOVE.L	cu_Window(A2),A1
		MOVE.L	wd_RPort(A1),A1
d91 1
a91 1
		MOVE.L	rp_Layer(A1),A1
d94 1
a94 1
lrpRts:
d97 1
d99 12
a110 3
		MOVE.L	A5,-(A7)
		bsr.s	LockIRPort
		move.l	a1,a5
d112 1
a112 2
		MOVE.L	(A7)+,A5
		RTS
d114 2
d117 2
a118 1
*------ UnLockDRPort -------------------------------------------------
d121 1
a121 2
*	UnLockIRPort - unlock the Window's RPort to the user for intuition
*	UnLockDRPort - unlock the Window's RPort to the user for graphics
d124 2
a125 2
*	UnLockDRPort(consoleUnit)
*		  A2
d128 2
a129 3
UnLockIRPort:
		SUBQ.B	#1,cu_RPNestCnt(A2)
		BPL.s	ulirpRts
d131 3
a133 4
		move.l	cd_RastPort+rp_Layer(a6),a0
		MOVE.L	cu_Window(A2),A1
		MOVE.L	wd_RPort(A1),A1
		move.l	a1,lr_rp(a0)
d135 3
d140 1
a140 2
ulirpRts:
		RTS
d142 3
a144 4
UnLockDRPort:
		MOVE.L	A5,-(A7)
		SUBQ.B	#1,cu_RPNestCnt(A2)
		BPL.s	uldrpRts
d146 2
a148 3
		MOVE.L	cu_Window(A2),A1
		MOVE.L	wd_RPort(A1),A1
		move.l	a1,lr_rp(a5)
d150 1
d152 7
a158 5
		lea	cd_RPSemaphore(a6),a0
		LINKEXE	ReleaseSemaphore
uldrpRts:
		MOVE.L	(A7)+,A5
		RTS
@


36.1
log
@add character map and pseudo-clipboard support
@
text
@d1 1
a1 1
	TTL    '$Header: able.asm,v 36.0 88/09/06 19:50:58 kodiak Exp $'
d10 1
a10 1
*   Source Control	$Locker:  $
d13 3
d49 1
d51 1
d57 2
a58 1
*	LockDRPort - lock the Window's RPort from the user
d65 1
a65 2
LockDRPort:
		MOVE.L	A5,-(A7)
d67 1
a67 1
		BGT	ldrpRts
d75 10
a84 3
		MOVE.L	rp_Layer(A1),A5
		move.l	a5,rp_Layer(a0)
		move.l	a0,lr_rp(a5)
a85 2

ldrpRts:
d93 2
a94 1
*	UnLockDRPort - unlock the Window's RPort to the user
d101 14
d118 1
a118 1
		BPL	uldrpRts
@


36.0
log
@*** empty log message ***
@
text
@d1 1
a1 1
	TTL    '$Header: able.asm,v 35.1 87/10/26 12:55:52 kodiak Exp $'
d12 4
a15 1
*   $Log: able.asm,v $
a42 4
	XREF_LAY	InstallClipRegion

	XREF		ReSizeUnit

d45 2
a46 2
	XDEF		TakeRPort
	XDEF		DropRPort
d49 1
a49 1
*------ TakeRPort ---------------------------------------------------
d52 1
a52 1
*	TakeRPort - take the Window's RPort from the user
d55 1
a55 1
*	TakeRPort(consoleUnit)
d59 1
a59 1
TakeRPort:
d62 1
a62 1
		BGT	trpTook
d75 1
a75 11
		move.l	a5,a0
		move.l	cu_ClipRegion(a2),a1
		LINKLAY	InstallClipRegion
		move.l	d0,cd_PrevClipRegion(a6)

trpTook:
		BCLR	#CUB_RESIZE,cu_Flags(A2)
		BEQ.S	trpRts
		BSR	ReSizeUnit

trpRts:
d80 1
a80 1
*------ DropRPort ---------------------------------------------------
d83 1
a83 1
*	DropRPort - restore the Window's RPort to the user
d86 1
a86 1
*	DropRPort(consoleUnit)
d90 1
a90 1
DropRPort:
d93 2
a94 1
		BPL	drpRts
a95 5

		move.l	a5,a0
		move.l	cd_PrevClipRegion(a6),a1
		LINKLAY	InstallClipRegion

d103 1
a103 1
drpRts:
@
