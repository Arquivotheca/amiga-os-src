head     36.0;
access   ;
symbols  V36_338:36.0 V36_332:36.0 V36_327:36.0 V36_321:36.0 V36_319:36.0 V36_318:36.0 V36_316:36.0 V36_313:36.0 V36_311:36.0 V36_310:36.0 V36_300:36.0 V36_299:36.0 V36_297:36.0 V36_295:36.0;
locks    ; strict;
comment  @*   @;


36.0
date     89.12.08.17.51.44;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.0
log
@initial version for pack.c -- map equates only
@
text
@/*----- cm_Attr... entries -----------------------------------------*/
#define CMAM_FGPEN	0x0007		/* for FgPen */
#define CMAS_FGPEN	0
#define CMAM_BGPEN	0x0038		/* for BgPen */
#define CMAS_BGPEN	3
#define CMAM_SOFTSTYLE	0x01c0		/* for SetSoftStyle */
#define CMAS_SOFTSTYLE	6
#define CMAF_INVERSVID	0x0200		/* RP_INVERSVID set */
#define CMAF_SELECTED	0x0400		/* selection */
#define CMAF_HIGHLIGHT	0x0800		/* highlighted part of selection */
#define CMAF_IMPLICITNL	0x1000		/* CUB_IMPLICITNL set (valid for 1st */
					/*   character in line only) */
#define CMAF_CURSOR	0x2000		/* cursor cached here during resize */
#define CMAF_RENDERED	0x8000		/* valid and not CONCEALED */
					/*   (this must be the sign bit) */

struct ConsoleMap {
    ULONG   cm_AllocSize;	/* AllocMem size for cm_AllocBuffer */
    LONG   *cm_AttrBufLines;	/* array with cm_BufferLines elements */
				/*   containing address/2 of off-screen */
				/*   attr lines (also address of memory */
				/*   buffer holding everything) */
    LONG   *cm_AttrDispLines;	/* array with cm_DisplayHeight elements */
				/*   containing address/2 of displayed */
				/*   attr lines */
    LONG    cm_BufferStart;	/* start of memory for buffer: address/2 */
    LONG    cm_DisplayStart;	/* start of memory for display: address/2 */
    LONG    cm_AttrToChar;	/* delta to apply to attr address/2 to */
				/*   find associated character address */
    WORD    cm_BufferLines;	/* maximum rows in window */
    WORD    cm_BufferWidth;	/* number of columns off-screen */
    WORD    cm_BufferHeight;	/* number of rows off-screen */
    WORD    cm_DisplayWidth;	/* number of columns in display */
    WORD    cm_DisplayHeight;	/* number of rows in display */
    WORD    cm_BufferXL;	/* X append loc in last ....Buffer line */
    WORD    cm_BufferYL;	/* append ....Buffer line */
};
@
