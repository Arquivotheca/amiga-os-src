head     36.23;
branch   ;
access   ;
symbols  V39_4:36.20 V37_157:36.20 V37_149:36.20 V37_136:36.20 V37_133:36.20 V37_110:36.20 V37_98:36.20 V37_85:36.20 V37_63:36.20 V37_36:36.19 V37_15:36.17 V37_10:36.17 V37_7:36.17 V37_2:36.17 V36_558:36.17 V36_554:36.17 V36_552:36.16 V36_549:36.16 V36_548:36.16 V36_547:36.16 V36_546:36.16 V36_545:36.16 V36_544:36.16 V36_543:36.16 V36_542:36.15 V36_540:36.14 V36_539:36.14 V36_538:36.13 V36_537:36.13 V36_536:36.13 V36_529:36.11 V36_527:36.11 V36_525:36.11 V36_524:36.11 V36_523:36.11 V36_522:36.11 V36_521:36.11 V36_520:36.11 V36_519:36.11 V36_518:36.11 V36_495:36.11 V36_491:36.11 V36_486:36.11 V36_482:36.11 V36_476:36.11 V36_471:36.11 V36_465:36.10 V36_463:36.10 V36_461:36.10 V36_460:36.10 V36_453:36.9 V36_447:36.9 V36_442:36.9 V36_429:36.9 V36_423:36.9 V36_413:36.9 V36_394:36.8 V36_387:36.8 V36_382:36.8 V36_381:36.8 V36_379:36.7 V36_373:36.7 V36_367:36.7 V36_361:36.7 V36_359:36.7 V36_357:36.7 V36_353:36.7 V36_346:36.6 V36_343:36.6 V36_338:36.6 V36_332:36.5 V36_327:36.5 V36_321:36.5 V36_319:36.5 V36_318:36.5 V36_316:36.5 V36_313:36.5 V36_311:36.5 V36_310:36.5 V36_300:36.5 V36_299:36.5 V36_297:36.5 V36_295:36.5 V36_278:36.5 V36_274:36.5 V36_221:36.4 V36_205:36.4 V36_171:36.3 V36_167:36.2 V36_165:36.1 V36_153:36.1 V36_146:36.1 V36_140:36.1 V36_129:36.1 V36_113:36.1 V36_56:36.1 V36_53:36.1 V36_51:36.1 V36_45:36.1 L36_42:36.0;
locks    ; strict;
comment  @*   @;


36.23
date     93.03.05.17.00.48;  author darren;  state Exp;
branches ;
next     36.22;

36.22
date     92.05.19.13.56.26;  author darren;  state Exp;
branches ;
next     36.21;

36.21
date     92.05.19.12.29.51;  author darren;  state Exp;
branches ;
next     36.20;

36.20
date     91.03.06.17.34.21;  author darren;  state Exp;
branches ;
next     36.19;

36.19
date     91.02.07.14.16.41;  author darren;  state Exp;
branches ;
next     36.18;

36.18
date     91.02.04.14.25.47;  author darren;  state Exp;
branches ;
next     36.17;

36.17
date     90.12.18.10.14.56;  author darren;  state Exp;
branches ;
next     36.16;

36.16
date     90.11.28.19.13.00;  author darren;  state Exp;
branches ;
next     36.15;

36.15
date     90.11.20.18.42.11;  author darren;  state Exp;
branches ;
next     36.14;

36.14
date     90.11.07.15.21.35;  author darren;  state Exp;
branches ;
next     36.13;

36.13
date     90.11.02.08.11.57;  author darren;  state Exp;
branches ;
next     36.12;

36.12
date     90.11.01.11.20.26;  author darren;  state Exp;
branches ;
next     36.11;

36.11
date     90.05.16.11.34.20;  author kodiak;  state Exp;
branches ;
next     36.10;

36.10
date     90.05.11.11.41.11;  author kodiak;  state Exp;
branches ;
next     36.9;

36.9
date     90.04.13.13.32.07;  author kodiak;  state Exp;
branches ;
next     36.8;

36.8
date     90.04.02.10.46.55;  author kodiak;  state Exp;
branches ;
next     36.7;

36.7
date     90.02.23.16.58.30;  author kodiak;  state Exp;
branches ;
next     36.6;

36.6
date     90.02.21.14.04.07;  author kodiak;  state Exp;
branches ;
next     36.5;

36.5
date     89.12.02.11.36.39;  author kodiak;  state Exp;
branches ;
next     36.4;

36.4
date     89.11.04.16.01.49;  author kodiak;  state Exp;
branches ;
next     36.3;

36.3
date     89.09.29.12.04.25;  author kodiak;  state Exp;
branches ;
next     36.2;

36.2
date     89.09.15.15.38.08;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     89.01.10.16.40.39;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     88.09.06.19.51.32;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.23
log
@Use new smaller tagged open of input.device - save
some ROM for name string.
@
text
@**
**	$Id: dev.asm,v 36.22 92/05/19 13:56:26 darren Exp Locker: darren $
**
**      console.device Init and Expunge
**
**      (C) Copyright 1985,1989 Commodore-Amiga, Inc.
**          All Rights Reserved
**
	SECTION	console

**	Includes

	INCLUDE	"cddata.i"

	INCLUDE	"exec/memory.i"
	INCLUDE	"exec/initializers.i"
	INCLUDE	"exec/memory.i"
	INCLUDE	"exec/execbase.i"
	INCLUDE	"devices/input.i"
	INCLUDE "internal/librarytags.i"
	INCLUDE	"debug.i"

        LIST

**	Exports

	XDEF	CDFuncInit
	XDEF	CDStructInit
	XDEF	CDInit
	XDEF	CDExpunge


**	Imports

	XLVO	AddTask			; Exec
	XLVO	AllocMem		;
	XLVO	CloseDevice		;
	XLVO	CloseLibrary		;
	XLVO	FreeMem			;
	XLVO	InitSemaphore		;
	XLVO	OpenDevice		;
	XLVO	OpenLibrary		;
	XLVO	TaggedOpenLibrary	; V39
	XLVO	RemTask			;
	XLVO	DoIO			;

	XLVO	InitRastPort		; Graphics

	XLVO	CDInputHandler		; Console

	XREF	CDName
	XREF	REVISION

	XREF	CDOpen
	XREF	CDClose
	XREF	BeginIO
	XREF	AbortIO
	XREF	CDInputHandler
	XREF	RawKeyConvert
	XREF	GetConSnip
	XREF	SetConSnip
	XREF	AddConSnipHook
	XREF	RemConSnipHook

	XREF	Invalid
	XREF	ResetCmd
	XREF	CDRead
	XREF	CDWrite
	XREF	Update
	XREF	CDClear
	XREF	StopCmd
	XREF	Start
	XREF	Flush

	XREF	CDAskKeyMap
	XREF	CDSetKeyMap
	XREF	CDAskDefaultKeyMap
	XREF	CDSetDefaultKeyMap

	XREF	CBInvalid
	XREF	CBResetCmd
	XREF	CDCBRead
	XREF	CDCBWrite
	XREF	CBUpdate
	XREF	CDCBClear
	XREF	CBStopCmd
	XREF	CBStart
	XREF	CBFlush

	XREF	CDCBAskKeyMap
	XREF	CDCBSetKeyMap
	XREF	CDCBAskDefaultKeyMap
	XREF	CDCBSetDefaultKeyMap

	XREF	CDTaskStart


**********************************************************************
CDInit:
		movem.l	a2-a3/a5-a6,-(sp)
	    ;------ This is called from within MakeDevice, after
	    ;------ all the memory has been allocated

		move.l	d0,a5
		move.l	a6,cd_ExecLib(a5)

*
*		DINIT			; initialize debugging
*
		;-- get the keymap library
		moveq	#OLTAG_KEYMAP,d0
		CALLLVO TaggedOpenLibrary
		move.l	d0,cd_KeymapLib(a5)
		beq	initKLErr

		;-- get the graphics library
		moveq	#OLTAG_GRAPHICS,d0
		CALLLVO TaggedOpenLibrary
		move.l	d0,cd_GraphicsLib(a5)
		beq	initGLErr

		;-- get the layers library
		moveq	#OLTAG_LAYERS,d0
		CALLLVO TaggedOpenLibrary
		move.l	d0,cd_LayersLib(a5)
		beq	initLLErr

		;-- get the input device
		move.w	#ODTAG_INPUT,a0
	;;	lea	IDName(pc),a0
		moveq	#0,d0
		lea	cd_HandlerIOR(a5),a1
		moveq	#0,d1
		CALLLVO	OpenDevice
		tst.l	d0
		bne	initIDErr

		;-- initialize input handler
		lea	_LVOCDInputHandler(a5),a1
		move.l	a1,cd_HandlerIS+IS_CODE(a5)
		move.l	a5,cd_HandlerIS+IS_DATA(a5)

		;-- initialize the Unit semaphore
		lea	cd_USemaphore(a5),a0
		CALLLVO	InitSemaphore

		;-- initialize the Selection semaphore
		lea	cd_SelectionSemaphore(a5),a0
		CALLLVO	InitSemaphore

		;-- initialize the Event handling semaphore
		lea	cd_EVSemaphore(a5),a0
		CALLLVO	InitSemaphore

		lea	cd_SelectionHooks(a5),a1
		NEWLIST	a1

		;-- initialize the RastPort semaphore
		lea	cd_RPSemaphore(a5),a0
		CALLLVO	InitSemaphore

		;-- initialize the shared RastPort
		lea	cd_RastPort(a5),a1
		move.l	a6,-(a7)
		move.l	cd_GraphicsLib(a5),a6
		CALLLVO	InitRastPort
		move.l	(a7)+,a6

		;-- initialize the unit list
		lea	cd_UHead(a5),a0
		NEWLIST	a0

		;-- initialize console device task
		lea	cd_TC(a5),a1
		lea	cd_Stk(a5),a0
		move.l	a0,TC_SPLOWER(a1)
		move.w	#(CD_STKSIZE/2)-1,d0
		move.w	#$09999,d1
pattern0Loop:
		move.w	d1,(a0)+
		dbf	d0,pattern0Loop
	;---	lea	cd_Stk+CD_STKSIZE(a5),a0
		move.l	a0,TC_SPUPPER(a1)
		move.l	a5,-(a0)		; argument (console device)
		move.l	a0,TC_SPREG(a1)

		lea	CDTaskStart,a2
		moveq	#0,d0
		move.l	d0,a3
		CALLLVO AddTask

		;--	add input handler
		sub.w	#MP_SIZE,a7
		move.l	a7,a0
		bsr.s	initSyncIO
		lea	cd_HandlerIS(a5),a0
		move.l	a0,IO_DATA(a1)
		move.w	#IND_ADDHANDLER,IO_COMMAND(a1)
		CALLLVO	DoIO			; could break Forbid()!
		add.w	#MP_SIZE,a7

cdInitDone:
		move.l	a5,d0	    ; return the library

cdInitRts:
		movem.l	(sp)+,a2-a3/a5-a6
		rts

initMemErr:
		lea	cd_HandlerIOR(a5),a1
		CALLLVO	CloseDevice

initIDErr:
initILErr:
		move.l	cd_LayersLib(a5),a1
		CALLLVO	CloseLibrary

initLLErr:
		move.l	cd_GraphicsLib(a5),a1
		CALLLVO	CloseLibrary

initGLErr:
		move.l	cd_KeymapLib(a5),a1
		CALLLVO	CloseLibrary

initKLErr:
		moveq	#0,d0
		bra	cdInitRts


*------ initSyncIO ---------------------------------------------------
*
*   NAME
*	initSyncIO - initialize cd_HandlerIOR for synchronous use
*
*   SYNOPSYS
*	initSyncIO(msgPort)
*	           a0
*
*---------------------------------------------------------------------
initSyncIO:
		move.b	#NT_MSGPORT,LN_TYPE(a0)
		clr.b	MP_FLAGS(a0)
		move.b	#SIGF_SINGLE,MP_SIGBIT(a0)
		move.l	cd_ExecLib(a5),a1
		move.l	ThisTask(a1),MP_SIGTASK(a0)

		lea	cd_HandlerIOR(a5),a1
		move.l	a0,MN_REPLYPORT(a1)

		lea	MP_MSGLIST(a0),a0
		;	NEWLIST a0
		move.l	a0,LH_TAILPRED(a0)
		addq.l	#4,a0
		clr.l	(a0)
		move.l	a0,-(a0)
		rts

CDStructInit:
	;------ Initialize the device node
	    INITWORD    LIB_REVISION,REVISION

	    INITLONG	cd_CmdVectors,cdCmdTable
	    INITLONG	cd_CmdBytes,cdCmdBytes
	    INITWORD	cd_NumCommands,CD_NUMCOMMANDS

	    INITBYTE	cd_HandlerIS+LN_TYPE,NT_INTERRUPT
	    INITBYTE	cd_HandlerIS+LN_PRI,CD_HANDLERPRI
	    INITLONG	cd_HandlerIS+LN_NAME,CDName

	    INITBYTE	cd_TC+LN_TYPE,NT_TASK
	    INITBYTE	cd_TC+LN_PRI,CD_TASKPRI
	    INITLONG	cd_TC+LN_NAME,CDName

		dc.w	0


CDFuncInit:
		dc.w	-1

		dc.w	CDOpen+(*-CDFuncInit)
		dc.w	CDClose+(*-CDFuncInit)
		dc.w	CDExpunge-CDFuncInit
		dc.w	ExtFunc-CDFuncInit

		dc.w	BeginIO+(*-CDFuncInit)
		dc.w	AbortIO+(*-CDFuncInit)
		dc.w	CDInputHandler+(*-CDFuncInit)
		dc.w	RawKeyConvert+(*-CDFuncInit)

		dc.w	GetConSnip+(*-CDFuncInit)
		dc.w	SetConSnip+(*-CDFuncInit)
		dc.w	AddConSnipHook+(*-CDFuncInit)
		dc.w	RemConSnipHook+(*-CDFuncInit)

		dc.w	-1

cdCmdTable:
		dc.l	Invalid
		dc.l	ResetCmd
		dc.l	CDRead
		dc.l	CDWrite
		dc.l	Update
		dc.l	CDClear
		dc.l	StopCmd
		dc.l	Start
		dc.l	Flush

		dc.l	CDAskKeyMap
		dc.l	CDSetKeyMap
		dc.l	CDAskDefaultKeyMap
		dc.l	CDSetDefaultKeyMap

cdCmdBytes:
		dc.b	CBInvalid
		dc.b	CBResetCmd
		dc.b	CDCBRead
		dc.b	CDCBWrite
		dc.b	CBUpdate
		dc.b	CDCBClear
		dc.b	CBStopCmd
		dc.b	CBStart
		dc.b	CBFlush

		dc.b	CDCBAskKeyMap
		dc.b	CDCBSetKeyMap
		dc.b	CDCBAskDefaultKeyMap
		dc.b	CDCBSetDefaultKeyMap

CD_NUMCOMMANDS	EQU	(*-cdCmdBytes)


		ds.w	0


*------ console.device/Expunge ---------------------------------------
*
*   NAME
*	Expunge - indicate a desire to remove the Console device
*
*   SYNOPSIS
*	Result = Expunge()
*
*   FUNCTION
*	The Expunge routine is called when a user issues a RemDevice
*	call.  The existance of any other users of the device, as
*	determined by the library open count being non-zero, will
*	cause the Expunge to be deferred.  When the device is not
*	in use, or no longer in use, the Expunge is actually
*	performed, and the device removed from the system list.
*---------------------------------------------------------------------

*---------------------------------------------------------------------
*
*       As of V37 we decided to start the inputhandler at init
*       time for compatability with 1.x.  In particular INFESTATION
*       by Psygnosis broke because it assumed that the POTGO register
*	was set-up.  By adding the inputhandler at init time, input.task
*       gets gameport.device going which sets up POTGO as a mouse.
*
*       Because its not cool to Wait() during an expunge, and because
*       ROM space is tight, the expunge code was removed from here,
*       and the allocation/deallocation of the TmpRas was moved to
*       Open/Close time.
*---------------------------------------------------------------------
CDExpunge:

;-- Don't need - we are not delayed expunge cause we can't expunge.
;--		bset	#LIBB_DELEXP,LIB_FLAGS(a6)

	;-- also a good place for a bail out for extended function
ExtFunc:

		moveq	#0,d0		    ;still in use
		rts

	

	END
@


36.22
log
@Use tagged open library to save ROM space
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.21 92/05/19 12:29:51 darren Exp Locker: darren $
d129 2
a130 1
		lea	IDName(pc),a0
a332 1
IDName		dc.b	'input.device',0
@


36.21
log
@Remove obtain/release map commands from command list - smaller, never
used, and truly worthless to begin with.  Saves some RAM space too
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.20 91/03/06 17:34:21 darren Exp Locker: darren $
d20 1
a20 1

d43 1
d111 2
a112 3
		lea	KLName(pc),a1
		moveq	#0,d0
		CALLLVO OpenLibrary
d117 2
a118 3
		lea	GLName(pc),a1
		moveq	#0,d0
		CALLLVO OpenLibrary
d123 2
a124 3
		lea	LLName(pc),a1
		moveq	#0,d0
		CALLLVO OpenLibrary
a331 3
KLName		dc.b	'keymap.library',0
GLName		dc.b    'graphics.library',0
LLName		dc.b    'layers.library',0
@


36.20
log
@*** empty log message ***
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.19 91/02/07 14:16:41 darren Exp Locker: darren $
a78 3
	XREF	CDObtainMap
	XREF	CDReleaseMap

a93 3
	XREF	CDCBObtainMap
	XREF	CDCBReleaseMap

a314 3
		dc.l	CDObtainMap
		dc.l	CDReleaseMap

a329 3

		dc.b	CDCBObtainMap
		dc.b	CDCBReleaseMap
@


36.19
log
@Remove setting of delayed expunge flag - pointless - save some bytes.
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.18 91/02/04 14:25:47 darren Exp Locker: darren $
@


36.18
log
@Remove expunge code; moved ADDHANDLER of input task to init time.
All of this to start the input task earlier in the system like
1.x - forces the gameport to get started, which in turn forces
the game port 0 to be set-up as a mouse (sets POTGO) - fixes
INFESTATION by Psygnosis - ARGHH!!!
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.17 90/12/18 10:14:56 darren Exp Locker: darren $
d385 2
a386 2
		bset	#LIBB_DELEXP,LIB_FLAGS(a6)
		moveq	#0,d0		    ;still in use
d391 1
@


36.17
log
@Fix for expunge code - freeing AreaPtrn memory
using garbage in d0 as ptr.
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.16 90/11/28 19:13:00 darren Exp Locker: darren $
d17 3
d44 1
a135 8
* Open this at OpenDevice time
*		;-- get the intuition library
*		lea	ILName(pc),a1
*		moveq	#0,d0
*		CALLLVO OpenLibrary
*		move.l	d0,cd_IntuitionLib(a5)
*		beq	initILErr

a175 15
		;-- get a TmpRas and AreaPtrn memory
		move.l	#4096,d0		; 1Kx32 bits
		move.l	d0,tr_Size+cd_TmpRas(a5)
		addq	#4,d0			; 2 words for AreaPtrn
		moveq	#MEMF_CHIP,d1
		CALLLVO	AllocMem
		move.l	d0,cd_AreaPtrn(a5)
		beq.s	initMemErr

		move.b	#1,cd_RastPort+rp_AreaPtSz(a5)
		addq	#4,d0
		move.l	d0,tr_RasPtr+cd_TmpRas(a5)
		lea	cd_TmpRas(a5),a0
		move.l	a0,rp_TmpRas+cd_RastPort(a5)

d199 10
a220 4
* Opened on first call to OpenDevice, and closed on last
*		move.l	cd_IntuitionLib(a5),a1
*		CALLLVO	CloseLibrary

d238 28
d368 3
d372 10
a383 3
	    ;-- see if any one is using the device
		tst.w	LIB_OPENCNT(a6)
		beq.s	expungeOK
d388 1
a389 1
		rts
a390 48
expungeOK:
	    ;-- this is really it.  Free up all the resources
		move.l	a5,-(a7)
		move.l	a6,a5
		move.l	cd_ExecLib(a5),a6

		;-- remove console task
		lea	cd_TC(a5),a1
		CALLLVO RemTask

		;-- free TmpRas and AreaPtrn memory
		movea.l	cd_AreaPtrn(a5),a1
		move.l	#4100,d0		; 1Kx32 + 4
		CALLLVO	FreeMem

		;-- close devices and libraries
		;--	input device
		lea	cd_HandlerIOR(a5),a1
		CALLLVO	CloseDevice
		;--	intuition library
* Close/Open on Open/Close device
*		move.l	cd_IntuitionLib(a5),a1
*		CALLLVO CloseLibrary
		;--	layers library
		move.l	cd_LayersLib(a5),a1
		CALLLVO CloseLibrary
		;--	layers library
		move.l	cd_GraphicsLib(a5),a1
		CALLLVO CloseLibrary
		;--	keymap library
		move.l	cd_KeymapLib(a5),a1
		CALLLVO CloseLibrary

		;-- remove the device
		move.l	a5,a1
		REMOVE

		;-- deallocate device data
		move.l	cd_Segment(a5),-(a7)
		move.l	a5,a1
		move.w	LIB_NEGSIZE(a5),d0
		suba.w	d0,a1
		add.w	LIB_POSSIZE(a5),d0
		ext.l	d0
		CALLLVO FreeMem

		move.l	(a7)+,d0
		move.l	(a7)+,a5
d393 1
@


36.16
log
@No longer opens intuition.library at init time.  Handled
at Open/Close Device time (count ->1->0).  Fixes bootmenu crash
if the user presses RA M/N, as well as some games which might
not expect intuition to be opened.
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.15 90/11/20 18:42:11 darren Exp Locker: darren $
d377 1
a377 1
		move.l	d0,a1
@


36.15
log
@INITBYTE of cd_Hooks to 0.  cd_Hooks used to count
number of hooks installed/removed - acts as a flag,
and a depth counter.  Hooks are private, and generally
only one hook should be installed by a utility such as
CONCLIP.
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.14 90/11/07 15:21:35 darren Exp Locker: darren $
d132 7
a138 6
		;-- get the intuition library
		lea	ILName(pc),a1
		moveq	#0,d0
		CALLLVO OpenLibrary
		move.l	d0,cd_IntuitionLib(a5)
		beq	initILErr
d230 3
a232 2
		move.l	cd_IntuitionLib(a5),a1
		CALLLVO	CloseLibrary
a266 5
	    INITBYTE	cd_Flags,0
	    INITBYTE	cd_SelectFlags,0
	    INITBYTE	cd_InputFlags,0
	    INITBYTE	cd_Hooks,0

a333 1
ILName		dc.b	'intuition.library',0
d386 3
a388 2
		move.l	cd_IntuitionLib(a5),a1
		CALLLVO CloseLibrary
@


36.14
log
@Added code to support RIGHT AMIGA C.
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.13 90/11/02 08:11:57 darren Exp Locker: darren $
d268 1
@


36.13
log
@short branch optimization
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.12 90/11/01 11:20:26 darren Exp Locker: darren $
d264 4
@


36.12
log
@New code added for a new input handling scheme to clean-up
race conditions which affect window redrawing.
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.11 90/05/16 11:34:20 kodiak Exp Locker: darren $
d186 1
a186 1
		beq	initMemErr		;.s!!
@


36.11
log
@Fixes initalization so that active window is known
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.10 90/05/11 11:41:11 kodiak Exp Locker: kodiak $
a13 1
	INCLUDE	"debug.i"
d18 1
d20 2
d108 3
a110 2
		DINIT			; initialize debugging

d161 4
d186 1
a186 1
		beq.s	initMemErr
d212 1
a212 1
		lea	CDTaskStart(pc),a2
a215 1

@


36.10
log
@fix Init/Expunge/Open/Close to DoIO at Open/Close time, not Init/Expunge time
@
text
@d2 1
a2 1
**	$Id: dev.asm,v 36.9 90/04/13 13:32:07 kodiak Exp Locker: kodiak $
d129 7
d223 4
d323 5
a327 9
KLName		dc.b	'keymap.library'
		dc.b	0
GLName		DC.B    'graphics.library'
		dc.b	0
LLName		DC.B    'layers.library'
		dc.b	0
IDName		DC.B	'input.device'
		dc.b	0

a330 2


d378 3
a382 3
		CALLLVO CloseLibrary
		;--	intuition library
		move.l	cd_IntuitionLib(a5),a1
@


36.9
log
@use Id instead of Header for 4.x rcs
@
text
@d2 1
a2 1
**	$Id$
a17 2
	INCLUDE	"exec/execbase.i"
	INCLUDE	"devices/input.i"
a33 1
	XLVO	DoIO			;
d108 1
a108 1
	    ;------ Get the keymap library
d115 1
a115 1
	    ;------ Get the graphics library
d122 1
a122 1
	    ;------ Get the layers library
d129 15
a143 1
		;------ initialize the Unit semaphore
d147 1
a147 1
		;------ initialize the Selection semaphore
d154 1
a154 1
		;------ initialize the RastPort semaphore
d158 1
a158 1
		;------ initialize the shared RastPort
d165 2
a166 2
		;------ try to get a TmpRas and AreaPtrn memory
		move.l	#4096,d0		; 1Kx32
d172 2
a173 1
		beq.s	initUnitList
d180 1
a180 2
	    ;------ initialize the unit list
initUnitList:
d184 1
a184 1
	    ;------ initialize console device task
d193 1
a193 1
	;---	LEA	cd_Stk+CD_STKSIZE(a5),a0
a202 10
	    ;------ find the input.device and point it to the console
		lea	IDName(pc),a0
		moveq	#0,d0
		lea	cd_HandlerIOR(a5),a1
		moveq	#0,d1
		CALLLVO	OpenDevice
		tst.l	d0
		beq.s	cdIDOK
		clr.l	cd_HandlerIOR+IO_DEVICE(a5)
		bra.s	cdInitDone	; cannot initiate input
a203 15
cdIDOK:
		move.l	a5,a1
		add.w	#_LVOCDInputHandler,a1
		move.l	a1,cd_HandlerIS+IS_CODE(a5)
		move.l	a5,cd_HandlerIS+IS_DATA(a5)

		sub.w	#MP_SIZE,a7
		move.l	a7,a0
		bsr	initSyncIO
		lea	cd_HandlerIS(a5),a0
		move.l	a0,IO_DATA(a1)
		move.w	#IND_ADDHANDLER,IO_COMMAND(a1)
		CALLLVO	DoIO
		add.w	#MP_SIZE,a7

d211 8
d360 5
a364 2
		move.l	cd_AreaPtrn(a5),d0
		beq.s	exAPOK
d369 2
a370 13
exAPOK:
		;-- free device resources
		;--	input handler
		tst.l	cd_HandlerIOR+IO_DEVICE(a5)
		beq.s	exIDOK
		sub.w	#MP_SIZE,a7
		move.l	a7,a0
		bsr	initSyncIO
		move.w	#IND_REMHANDLER,IO_COMMAND(a1)
		CALLLVO	DoIO
		add.w	#MP_SIZE,a7

		;--	input.device
d373 1
a373 7

exIDOK:
		;--	console task
		lea	cd_TC(a5),a1
		CALLLVO RemTask

		;--	layers.library
d376 1
a376 1
		;--	graphics.library
d379 1
a379 1
		;--	graphics.library
d382 1
a382 1
		;--	keymap.library
a403 27
*------ initSyncIO ---------------------------------------------------
*
*   NAME
*	initSyncIO - initialize cd_HandlerIOR for synchronous use
*
*   SYNOPSYS
*	initSyncIO(msgPort)
*	           a0
*
*---------------------------------------------------------------------
initSyncIO:
		move.b	#NT_MSGPORT,LN_TYPE(a0)
		clr.b	MP_FLAGS(a0)
		move.b	#SIGF_SINGLE,MP_SIGBIT(a0)
		move.l	ThisTask(a6),MP_SIGTASK(a0)

		lea	cd_HandlerIOR(a5),a1
		move.l	a0,MN_REPLYPORT(a1)

		lea	MP_MSGLIST(a0),a0
		;	NEWLIST a0
		move.l	a0,LH_TAILPRED(a0)
		addq.l	#4,a0
		clr.l	(a0)
		move.l	a0,-(a0)
		rts
	
@


36.8
log
@for 4.x rcs
@
text
@d2 1
a2 1
**	$Header: /usr2/kodiak/src/KS/console/RCS/dev.asm,v 36.7 90/02/23 16:58:30 kodiak Exp Locker: kodiak $
@


36.7
log
@add snip functions (remove selecthook as command)
@
text
@d2 1
a2 1
**	$Header: dev.asm,v 36.6 90/02/21 14:04:07 kodiak Exp $
@


36.6
log
@first cut private map locking solution, snapshot to allow release of
pack fix
@
text
@d2 1
a2 1
**	$Header: dev.asm,v 36.5 89/12/02 11:36:39 kodiak Exp $
d56 4
a77 1
	XREF	CDSelectHook
a95 1
	XREF	CDCBSelectHook
d136 7
d270 5
a294 1
		dc.l	CDSelectHook
a313 1
		dc.b	CDCBSelectHook
@


36.5
log
@checkpoint after line buffer coding completed,
and just after start of line length coding
@
text
@d2 1
a2 1
**	$Header$
d74 1
d93 1
d279 4
d298 4
@


36.4
log
@change dd_ to cd_ in device variables
use XLVO macro strategy
@
text
@d2 1
a2 1
**	$Header: dev.asm,v 36.3 89/09/29 12:04:25 kodiak Exp $
d9 1
a9 1
	SECTION		rawinput
d11 1
a11 1
**	Included Files
d13 2
a14 2
	INCLUDE		"cddata.i"
	INCLUDE		"debug.i"
d16 4
a19 4
	INCLUDE		"exec/memory.i"
	INCLUDE		"exec/initializers.i"
	INCLUDE		"exec/execbase.i"
	INCLUDE		"devices/input.i"
d22 1
a22 1
**	Exported Globals
d24 4
a27 4
	XDEF		CDFuncInit
	XDEF		CDStructInit
	XDEF		CDInit
	XDEF		CDExpunge
d30 1
a30 1
**	Imported Functions
d47 2
a48 2
	XREF		CDName
	XREF		REVISION
d50 6
a55 6
	XREF		CDOpen
	XREF		CDClose
	XREF		BeginIO
	XREF		AbortIO
	XREF		CDInputHandler
	XREF		RawKeyConvert
d57 9
a65 9
	XREF		Invalid
	XREF		ResetCmd
	XREF		CDRead
	XREF		CDWrite
	XREF		Update
	XREF		CDClear
	XREF		StopCmd
	XREF		Start
	XREF		Flush
d67 4
a70 4
	XREF		CDAskKeyMap
	XREF		CDSetKeyMap
	XREF		CDAskDefaultKeyMap
	XREF		CDSetDefaultKeyMap
d72 2
a73 2
	XREF		CDObtainMap
	XREF		CDReleaseMap
d75 9
a83 9
	XREF		CBInvalid
	XREF		CBResetCmd
	XREF		CDCBRead
	XREF		CDCBWrite
	XREF		CBUpdate
	XREF		CDCBClear
	XREF		CBStopCmd
	XREF		CBStart
	XREF		CBFlush
d85 4
a88 4
	XREF		CDCBAskKeyMap
	XREF		CDCBSetKeyMap
	XREF		CDCBAskDefaultKeyMap
	XREF		CDCBSetDefaultKeyMap
d90 2
a91 2
	XREF		CDCBObtainMap
	XREF		CDCBReleaseMap
d93 1
a93 1
	XREF		CDTaskStart
d228 1
a228 1
*	;------ Initialize the device node
@


36.3
log
@combine dev.asm, dinit.asm, and msgport.asm into dev.asm
@
text
@d2 1
a2 1
**	$Header: dev.asm,v 36.2 89/09/15 15:38:08 kodiak Exp $
d32 10
a41 10
	XREF_EXE	AddTask
	XREF_EXE	AllocMem
	XREF_EXE	CloseDevice
	XREF_EXE	CloseLibrary
	XREF_EXE	DoIO
	XREF_EXE	FreeMem
	XREF_EXE	InitSemaphore
	XREF_EXE	OpenDevice
	XREF_EXE	OpenLibrary
	XREF_EXE	RemTask
d43 1
a43 1
	XREF_GFX	InitRastPort
d45 1
a45 1
	XREF		_LVOCDInputHandler
d72 3
d90 3
d231 3
a233 3
	    INITLONG	dd_CmdVectors,cdCmdTable
	    INITLONG	dd_CmdBytes,cdCmdBytes
	    INITWORD	dd_NumCommands,CD_NUMCOMMANDS
d389 1
a389 1
		move.l	dd_Segment(a5),-(a7)
@


36.2
log
@fix Expunge()
it wasn't freeing any resources, now it (hopefully) frees them all
@
text
@d2 1
a2 1
**	$Header$
d4 1
a4 1
**      console.device Close and Expunge
d11 1
a11 1
*------ Included Files -----------------------------------------------
d14 1
d16 2
d22 1
a22 1
*------ Imported Functions -------------------------------------------
d24 10
a33 1
	XREF_EXE	AddDevice
d38 3
a40 1
	XREF_EXE	MakeLibrary
d43 1
a43 2
	XREF		InitMsgPort
	XREF		ExpungeMsgPort
d45 1
a45 1
*------ Exported Functions -------------------------------------------
d47 2
a48 4
	XDEF		SuccessfulExpunge
	XDEF		DeferredExpunge
	XDEF		ExtFunc
	XDEF		Close
d50 6
d57 9
a65 1
*------ Expunge support ----------------------------------------------
d67 267
a333 1
SuccessfulExpunge:
d335 1
a335 1
		move.l	a6,a5		; cache device base in a5
d338 5
a342 3
		;-- remove the device
		move.l	a5,a1
		REMOVE
d344 1
d347 2
d350 2
a351 8
		move.b	#NT_MSGPORT,LN_TYPE(a7)
		clr.b	MP_FLAGS(a7)
		move.b	#SIGF_SINGLE,MP_SIGBIT(a7)
		move.l	ThisTask(a6),MP_SIGTASK(a7)
		lea	MP_MSGLIST(a7),a0
		NEWLIST	a0
		lea	cd_HandlerIOR(a5),a1
		move.l	a7,MN_REPLYPORT(a1)
d353 1
a353 1
		CALLEXE	DoIO
d355 1
d358 3
a360 1
		CALLEXE	CloseDevice
d363 2
a364 5
		CALLEXE	RemTask
		;--	area pattern and tmpras chip memory
		move.l	cd_AreaPtrn(a5),a1
		move.l	#4100,d0
		CALLEXE	FreeMem
d367 1
a367 1
		CALLEXE	CloseLibrary
d369 3
d373 1
a373 1
		CALLEXE	CloseLibrary
d376 1
a376 1
		CALLEXE	CloseLibrary
d378 4
d389 1
a389 1
		CALLEXE FreeMem
a394 3
DeferredExpunge:
		bset	#LIBB_DELEXP,LIB_FLAGS(a6)
		moveq	#0,d0		    ;still in use
d396 1
a396 5
ExtFunc:
		rts


*------ rawinput.device/Close ----------------------------------------
d399 1
a399 1
*	Close - terminate access to a device
d401 3
a403 3
*   SYNOPSIS
*	Close(iORequest), gameportDev
*	      a1	  a6
a404 9
*   FUNCTION
*	The close routine notifies a device that it will no longer
*	be using the device.  The driver will clear the IO_DEVICE
*	and IO_UNIT entries in the iORequest structure.
*
*	The open count on the device will be decremented, and if it
*	falls to zero and an Expunge is pending, the Expunge will
*	take place.
*
d406 5
a410 5
Close:
*	    ;-- clear out the pointers
		moveq	#0,d0
		move.l	d0,IO_UNIT(a1)
		move.l	d0,IO_DEVICE(a1)
d412 2
a413 6
*	    ;-- check if this should now be expunged
		subq.w	#1,LIB_OPENCNT(a6)
		bne.s	closeRts
		btst	#LIBB_DELEXP,LIB_FLAGS(a6)
		beq.s	closeRts
		jmp	LIB_EXPUNGE(a6)
d415 6
a420 1
closeRts:
d422 2
a423 2

		END
@


36.1
log
@make use autoinit
@
text
@d1 8
a8 18
	TTL    '$Header: dev.asm,v 36.0 88/09/06 19:51:32 kodiak Exp $'
**********************************************************************
*								     *
*   Copyright 1985, Commodore-Amiga Inc.   All rights reserved.	     *
*   No part of this program may be reproduced, transmitted,	     *
*   transcribed, stored in retrieval system, or translated into	     *
*   any language or computer language, in any form or by any	     *
*   means, electronic, mechanical, magnetic, optical, chemical,	     *
*   manual or otherwise, without the prior written permission of     *
*   Commodore-Amiga Incorporated, 983 University Ave. Building #D,   *
*   Los Gatos, California, 95030				     *
*								     *
**********************************************************************
*
*	device close functions
*
**********************************************************************

d15 2
d18 1
d22 3
d27 1
d29 2
d43 3
a45 8
	    ;------ deallocate device data
		MOVE.L	dd_Segment(A6),-(A7)
		MOVE.L	A6,A1
		MOVE.W	LIB_NEGSIZE(A6),D0
		SUBA.W	D0,A1
		ADD.W	LIB_POSSIZE(A6),D0
		EXT.L	D0
		LINKEXE FreeMem
d47 2
a48 1
		MOVE.L	A6,A1
d51 33
a83 2
		MOVE.L	(A7)+,D0
		RTS
d85 13
d99 2
a100 2
		BSET	#LIBB_DELEXP,LIB_FLAGS(A6)
		MOVEQ	#0,D0		    ;still in use
d103 1
a103 1
		RTS
d113 1
a113 1
*	      A1	  A6
d127 3
a129 3
		MOVEQ	#0,D0
		MOVE.L	D0,IO_UNIT(A1)
		MOVE.L	D0,IO_DEVICE(A1)
d132 5
a136 5
		SUBQ.W	#1,LIB_OPENCNT(A6)
		BNE.S	closeRts
		BTST	#LIBB_DELEXP,LIB_FLAGS(A6)
		BEQ.S	closeRts
		JMP	LIB_EXPUNGE(A6)
d139 1
a139 1
		RTS
@


36.0
log
@*** empty log message ***
@
text
@d1 1
a1 1
	TTL    '$Header: dev.asm,v 35.0 87/10/26 11:30:06 kodiak Exp $'
a34 1
	XDEF		Init
a39 15

*------ Init support -------------------------------------------------
Init:
		CALLEXE	MakeLibrary
		MOVEM.L	(A7)+,A0/A2

		TST.L	D0
		BEQ.S	iRts

		MOVE.L	D0,A1
		MOVE.L	A0,dd_Segment(A1)
		CALLEXE	AddDevice

iRts:
		RTS
@
