





                                 AMAKE documentation

               I  assume  that  most  of  you  are  familiar  with MAKE and
          MAKEFILES, so I'll skip the introduction,  and get  to the points
          that you will have to understand to make use of this make.

               First of  all, you  must be  cognizant of  the fact that the
          main processor for make is AREXX.  That is, each line of the rule
          is sent  to AREXX as an AREXX command.  Thus, to make AmigaDOS do
          something, you need to surround the AmigaDOS command with quotes.
          Thus, what would normally look like:

                              LC $(LCFLAGS) $*

          would have to be written as:

                              "LC $(LCFLAGS) $*"

          Other "gotchas" to be wary of:

               1.   Each line of the makefile is sent separately  to AREXX.
                    This can  cause some  perceived strange  behavior.  For
                    instance, the makefile:

                         "cd MySourceFiles"
                         "co $*"

                    will generally NOT do what you  expect (check  out your
                    target from  the MySourceFiles  directory).  The CD can
                    not affect the co since each  has executed  within it's
                    own environment.   In order to do what you wish, either
                    of the following makefiles would work (looking at them,
                    you'll notice that they are actually exactly the same):

                         "cd MySourceFiles"; "co $*"

                    or

                         "cd MySourceFiles"; \
                         "co $*"

               2.   In order  to provide  a default  way of receiving error
                    codes, a little "magic" had to  happen behind  the back
                    of  your  command  lines.   One command is prepended to
                    your command line, and  one  command  appended.   These
                    lines are:

                    (prepended)    SIGNAL ON ERROR;
                    (appended)     ; ERROR: EXIT RC

                    However,  as  a  fall  out  of  this,  you now have the
                    ability to prepend or append whatever you want to EVERY
                    command  going  out.    You  do  this  by  changing the
                    CMDPREFIX and CMDSUFFIX macros.






                    IMPORTANT NOTE  ABOUT  THIS!    By  inserting  your own
                    CMDPREFIX  and   CMDSUFFIX,  you  are  overwriting  the
                    default prefix of "SIGNAL ON error;"  and default sufix
                    of ";  ERROR: EXIT  RC".  This may have the side effect
                    of not allowing amake  to properly  retrieve completion
                    codes.  Thou hast been warned! :^)

               3.   The codes  returned to amake by ARexx under version 1.3
                    of the operating system  correspond to  the DOS errors,
                    rather than  error severity  codes.   For instance, the
                    DOS severity code on  a failed  MAKEDIR command  is 20.
                    If you  try to  create a directory that already exists,
                    the DOS error number is 213.   Makefile  will process a
                    failed   directory   creation  (because  the  directory
                    already exists) as a code 213, not 20.

                    This can be circumvented in 1.3 through the use of Bill
                    Hawes' SETEXECUTE  program.   After running SETEXECUTE,
                    ARexx wil  start  returning  severity  levels  to amake
                    rather than error codes.

                    Note that SETEXECUTE is not necessary under 1.4.

               4.   If there are any problems that you come across, mail'em
                    to me.






                                 Future Enhancements

          It is planned for the future that AMAKE wil support you choice of
          command processors  (i.e. ARexx/WShell  for Ray, Jim, and myself,
          Randell's shell for Randell, NewShell for Andy, etc.) through the
          use of the SHELL macro in makefiles.

          If there  are any other enhancements that you want, mail'em to me
          and I'll put them down on the "to  do when  I'm feeling  bored or
          have some time on my hands" list.

                                   -- kevin --
