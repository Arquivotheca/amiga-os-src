

TABLE OF CONTENTS

toolkit/memmung


toolkit/memmung                                                 toolkit/memmung

   NAME
	memmung -- test for illegal use of memory

   SPECIFICATION
	When a block of memory is freed by a task, it is returned to the
	free memory pool.  It is illegal for any task to access that free 
	memory.  However, some programs have bugs that do just that.

	While memmung is active, any call to FreeMem() will be intercepted.
	The block will first be cleared to $DEADBEEF then the normal free
	will take place.  Since this value is both odd and and a strange
	instruction, any attempt by a task to illegally reference the free
	memory will probably cause a Guru. (Note that it is quasi-legal to
	use Forbid(), free memory, then use it again; memmung allows this).

	Starting memmung or a FreeMem() of a NULL address causes $0BADCODE
	to be written to location zero.

	This program often finds bugs that would be difficult to locate in
	any other way.  You must be using Workbench V1.3 for memmung to
	act reliably (earlier versions of Workbench had use-memory-after-
	free bugs).  Memmung is best when combined with _The Enforcer_.

	To quit memmung, run it again, or send it a CTRL-C.

    EXAMPLE
	run memmung
	;If your software crashes while memmung is active, your software
	;has a use memory-after-free bug!


