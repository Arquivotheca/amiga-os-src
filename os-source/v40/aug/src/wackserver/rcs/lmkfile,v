head     39.1;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


39.1
date     92.10.30.16.40.24;  author peter;  state Exp;
branches ;
next     39.0;

39.0
date     92.10.30.16.27.59;  author peter;  state Exp;
branches ;
next     ;


desc
@Make file for remote wack server.
@


39.1
log
@Now builds .ld and .ld.strip 
@
text
@# Amiga Grand Wack remote server
#
# $Id: lmkfile,v 39.0 92/10/30 16:27:59 peter Exp Locker: peter $
#

VERSION = 39

CFLAGS = -. -b0 -cfist -v -ms -d $(MORECFLAGS)
LFLAGS = SMALLCODE SMALLDATA ADDSYM BATCH
LLIBS = lib:lcnb.lib lib:amiga.lib lib:debug.lib

OFILES= wackserver.o validmem.o

# validmem.c is shared with Wack itself
CFILES = wackserver.c

MISCFILES = lmkfile

EXEFILES = wackserver.ld.strip wackserver.ld

all: wackserver.ld.strip

.c.o:
	lc $(CFLAGS) $*

wackserver.ld: $(OFILES)
	blink from lib:c.o $(OFILES) to wackserver.ld $(LFLAGS) lib $(LLIBS)

wackserver.ld.strip: wackserver.ld
	blink from wackserver.ld to wackserver.ld.strip nodebug

# validmem.c is shared with Wack itself, so we only steal a copy
validmem.o: /validmem.c /validmem.h /validmem_proto.h
	copy /validmem.c /validmem.h /validmem_proto.h "" nopro
	lc $(CFLAGS) validmem
	delete validmem.c validmem.h validmem_proto.h

clean:
	delete \#?.(o|ld|ld.strip|map)

internal:
	copy $(CFILES) V$(VERSION):aug/src/wackserver nopro
	copy $(MISCFILES) V$(VERSION):aug/src/wackserver nopro
	copy $(EXEFILES) V$(VERSION):aug/src/wackserver nopro

	copy wackserver.ld.strip V$(VERSION):aug/bin/wackserver nopro
@


39.0
log
@Initial RCS check-in.
@
text
@d3 1
a3 1
# $Id: lmkfile,v 39.1 92/10/30 16:12:44 peter Exp $
d19 1
a19 1
EXEFILES = wackserver
d21 2
d27 1
a27 1
	blink from lib:c.o $(OFILES) to wackserver $(LFLAGS) lib $(LLIBS)
d42 3
a44 3
	copy $(CFILES) V$(VERSION):aug/src/wackserver
	copy $(MISCFILES) V$(VERSION):aug/src/wackserver
	copy $(EXEFILES) V$(VERSION):aug/src/wackserver
d46 1
a46 1
	copy wackserver.ld.strip V$(VERSION):aug/bin/wackserver
@
