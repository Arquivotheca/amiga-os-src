MODNAME=		graffiti
VERSION=		39

LD_FILE=		$(MODNAME).ld
LD_STRIP=		$(LD_FILE).strip
C_COMPILER=		lc
C_COMPILER_OPTS=	-O -b0 -ms -v -rr -cfistqmcu -d1


LINKER=			blink
LINKER_OPTS=		ADDSYM SC MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16
LINKER_OPTS_STRIP=	ND

C_SOURCES=		main.c windowclass.c nipc.c events.c funcs.c talk.c stubs.c
OBJECTS=		main.o windowclass.o nipc.o events.o funcs.o talk.o stubs.o
STARTUP=
LIBS=			lib:lc.lib lib:amiga.lib lib:debug.lib


##############################################################################
# Build the stripped load file...
#
$(LD_STRIP):		$(LD_FILE)
			$(LINKER) FROM $(LD_FILE) TO $(LD_STRIP) $(LINKER_OPTS_STRIP)


##############################################################################
# Build the load file...
#
$(LD_FILE):		$(OBJECTS) $(LIBS)

			$(LINKER) <with <
FROM $(STARTUP) $(OBJECTS) TO $(LD_FILE) LIB $(LIBS) $(LINKER_OPTS)
<



##############################################################################
# Default rules...
#
.c.o:
			$(C_COMPILER) $(C_COMPILER_OPTS) $*.c

##############################################################################
# All dependencies...
#
main.o:			main.c windowclass.h globaldata.h graffiti_rev.h
nipc.o:			nipc.c globaldata.h
events.o:		events.c globaldata.h
funcs.o:		funcs.c globaldata.h
talk.o:			talk.c globaldata.h
stubs.o:		stubs.c globaldata.h
windowclass.o:		windowclass.c windowclass.h

##############################################################################
# Install it locally
#
install:
			-copy $(LD_STRIP) bin:$(MODNAME)
			-copy $(LD_STRIP) V39:aug/bin/$(MODNAME)
			-copy $(LD_STRIP) DNJ:$(MODNAME)

##############################################################################
# Bump the version...
#
version:
			@BumpRev $(VERSION) $(MODNAME)_rev


##############################################################################
# Delete all object files
#
clean:
			-Delete \#?.o
			-Delete $(LD_FILE) \#?.map \#?.bak \#?.lnk

##############################################################################
# Generate prototypes
#
protos:
			-mkproto \#?.c to $(MODNAME)_iprotos.h
			-mkproto windowclass.c to windowclass_iprotos.h
