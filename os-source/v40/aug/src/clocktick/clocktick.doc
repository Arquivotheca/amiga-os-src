ClockTick - A simple hack that makes any busy pointer that matches the
            Kickstart 2.0 clock pointer move its hands.

To use:  Just add ClockTick to your startup.

When you execute the ClockTick program, it will check to see if it has
been installed and if not, it will install itself.  To install itself,
ClockTick allocates 72 bytes of CHIP memory along with about 800 bytes
of PUBLIC memory and connects itself to the SetPointer() call of
intuition.  From then on, all programs which SetPointer() a pointer that
looks like the 2.0 busy pointer will be noticed and the animated pointer
will be used.  The ClockTick program exits after it is installed.
It does not add a task to the system.  (Thus the low overhead)
The install code does not stay in memory.  This also reduces the overhead.

ClockTick works from the CLI or Workbench (icon included)

ClockTick now has a version string and should say ClockTick 1.0.

It also notices the busy pointer from MKSoft (a ZZZ cloud) and will
change it into the 2.0 style clock.  (DiskSpeed is one such program)

The beta version used to allocate all of its memory from MEMF_CHIP.
Version 1.0 now allocates only the sprite image from MEMF_CHIP and
keeps the rest in MEMF_PUBLIC.

This version checks for V37 exec.library and makes a call to CacheClearU()
to flush the Caches after the code has been copied and before it is run.
