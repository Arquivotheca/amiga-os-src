
/* Include file generated by Toolmaker V1.19 */

#include "db_tm_text.h"	/* Toolmaker text header file */

/* TMScreenInfo structure */
 
struct TMScreenInfo
  {
  struct Screen *Screen;	/* pointer to Screen structure */
  struct TagItem *MoreTags;	/* pointer to additional tag array */
  struct VisualInfo *VisualInfo;	/* pointer to VisualInfo structure */
  APTR UserData;
  };

/* TMWindowInfo structure */
 
struct TMWindowInfo
  {
  struct Window *Window;	/* pointer to Window structure */
  struct TagItem *MoreTags;	/* pointer to additional tag array */
  struct IntuiMessage *GT_IMsg;	/* pointer to last gadtools IntuiMessage */
  struct Menu *Menu;	/* pointer to Menu structure */
  struct Requester Requester;	/* Requester structure for DISABLE/ENABLE */
  UBYTE DisableCount;	/* Count for nested DISABLE/ENABLEs */
  ULONG Flags;	/* TMWF_ flags */
  struct Gadget *FirstGadget;	/* pointer to first gadget */
  struct Gadget *ContextGadget;	/* pointer to context gadget */
  APTR UserData;
  };

/* TMGadgetInfo structure */
 
struct TMGadgetInfo
  {
  struct Gadget *Gadget;
  struct TagItem *MoreTags;
  APTR UserData;
  };

/* TMData structure */
 
struct TMData
  {
  ULONG Size;	/* Size of TMData structure */
  struct MsgPort *WindowMsgPort;	/* pointer to window message port */
  LONG ReturnCode;	/* Return code for exit() */
  struct FileRequester *FileRequester;	/* ASL file requester pointer */
  struct FontRequester *FontRequester;	/* ASL font requester pointer */
  struct TMScreenInfo TMScreenInfo[1];	/* TMScreenInfo structure array */
  struct TMGadgetInfo TMGadgetInfo_GFXDATAB[10];	/* TMGadgetInfo structure array */
  struct TMWindowInfo TMWindowInfo[1];	/* TMWindowInfo structure array */
  APTR UserData;
  };

/* Function Prototypes */
 
struct TMData *TM_Open(ULONG *);
VOID TM_Close(struct TMData *);
LONG TM_Request(struct Window *, UBYTE *, UBYTE *, UBYTE *, ULONG *, APTR, ...);
VOID TM_EventLoop(struct TMData *);
BOOL OpenScreen_Workbench(struct TMData *);
VOID CloseScreen_Workbench(struct TMData *);
BOOL OpenWindow_GFXDATAB(struct TMData *);
VOID CloseWindow_GFXDATAB(struct TMData *);
VOID DisableWindow_GFXDATAB(struct TMData *);
VOID EnableWindow_GFXDATAB(struct TMData *);
BOOL Window_GFXDATAB_GADGETUP(struct TMData *, struct IntuiMessage *);
BOOL Window_GFXDATAB_CLOSEWINDOW(struct TMData *, struct IntuiMessage *);
BOOL Window_GFXDATAB_VANILLAKEY(struct TMData *, struct IntuiMessage *);

/* Library pointers */
 
extern struct Library *SysBase;
extern struct Library *DOSBase;
extern struct Library *IntuitionBase;
extern struct Library *GadToolsBase;
extern struct Library *UtilityBase;

/* Constants */
 
#define OPENFILE	0	/* For open file requester */
#define SAVEFILE	1	/* For save file requester */

#define TMWF_OPENED	0x00000001	/* Window opened flag */
#define TMWF_DISABLED	0x00000002	/* Window disabled flag */

#define TMERR_OK	0
#define TMERR_MEMORY	1
#define TMERR_MSGPORT	2

/* Screen pointer */
 
#define screen_Workbench	TMData->TMScreenInfo[0].Screen	/* Default public screen pointer */

/* Window, Menu, and Gadget pointers */
 
#define window_GFXDATAB	TMData->TMWindowInfo[0].Window	/* Window pointer */
#define gadget_PRINT	TMData->TMGadgetInfo_GFXDATAB[0].Gadget	/* Gadget pointer */
#define gadget_MODEIDS	TMData->TMGadgetInfo_GFXDATAB[1].Gadget	/* Gadget pointer */
#define gadget_MODEID	TMData->TMGadgetInfo_GFXDATAB[2].Gadget	/* Gadget pointer */
#define gadget_NAME	TMData->TMGadgetInfo_GFXDATAB[3].Gadget	/* Gadget pointer */
#define gadget_MONITOR	TMData->TMGadgetInfo_GFXDATAB[4].Gadget	/* Gadget pointer */
#define gadget_DIMENSIO	TMData->TMGadgetInfo_GFXDATAB[5].Gadget	/* Gadget pointer */
#define gadget_DISPLAY	TMData->TMGadgetInfo_GFXDATAB[6].Gadget	/* Gadget pointer */
#define gadget_VECTOR	TMData->TMGadgetInfo_GFXDATAB[7].Gadget	/* Gadget pointer */
#define gadget_DATA	TMData->TMGadgetInfo_GFXDATAB[8].Gadget	/* Gadget pointer */
#define gadget_BESTMODE	TMData->TMGadgetInfo_GFXDATAB[9].Gadget	/* Gadget pointer */

/* Gadget IDs */
 
#define ID_PRINT	1	/* Gadget ID */
#define ID_MODEIDS	2	/* Gadget ID */
#define ID_MODEIDS_THIRD	0	/* Gadget label ID */
#define ID_MODEID	3	/* Gadget ID */
#define ID_NAME	4	/* Gadget ID */
#define ID_MONITOR	5	/* Gadget ID */
#define ID_DIMENSIO	6	/* Gadget ID */
#define ID_DISPLAY	7	/* Gadget ID */
#define ID_VECTOR	8	/* Gadget ID */
#define ID_DATA		9	/* Gadget ID */
#define ID_BESTMODE	10	/* Gadget ID */

/* Menu, item, and subitem IDs */
 

/* ScreenInfo pointers */
 
#define ScreenInfo_Workbench	TMData->TMScreenInfo[0]	/* TMScreenInfo structure pointer */

/* WindowInfo pointers */
 
#define WindowInfo_GFXDATAB	TMData->TMWindowInfo[0]	/* TMWindowInfo structure pointer */

/* GadgetInfo pointers */
 
#define GadgetInfo_PRINT	TMData->TMGadgetInfo_GFXDATAB[0]	/* TMGadgetInfo structure pointer */
#define GadgetInfo_MODEIDS	TMData->TMGadgetInfo_GFXDATAB[1]	/* TMGadgetInfo structure pointer */
#define GadgetInfo_MODEID	TMData->TMGadgetInfo_GFXDATAB[2]	/* TMGadgetInfo structure pointer */
#define GadgetInfo_NAME	TMData->TMGadgetInfo_GFXDATAB[3]	/* TMGadgetInfo structure pointer */
#define GadgetInfo_MONITOR	TMData->TMGadgetInfo_GFXDATAB[4]	/* TMGadgetInfo structure pointer */
#define GadgetInfo_DIMENSIO	TMData->TMGadgetInfo_GFXDATAB[5]	/* TMGadgetInfo structure pointer */
#define GadgetInfo_DISPLAY	TMData->TMGadgetInfo_GFXDATAB[6]	/* TMGadgetInfo structure pointer */
#define GadgetInfo_VECTOR	TMData->TMGadgetInfo_GFXDATAB[7]	/* TMGadgetInfo structure pointer */
#define GadgetInfo_DATA	TMData->TMGadgetInfo_GFXDATAB[8]	/* TMGadgetInfo structure pointer */
#define GadgetInfo_BESTMODE	TMData->TMGadgetInfo_GFXDATAB[9]	/* TMGadgetInfo structure pointer */

