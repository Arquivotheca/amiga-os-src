#
# lmkfile for DiskTest
#

#
# Server directory for the data...
#
REMOTE = V:aug/src/disktest
REMOTEBIN = V:aug/bin
REMOTEDOC = V:aug/doc
VERSION = 37

#
# Name of the module
#
MODNAME	= DiskTest

#
# The ".LD" file we want to produce.
#
LD_FILE		= $(MODNAME).ld
LD_STRIP	= $(MODNAME)

ALL:	$(LD_STRIP)

#
# Compiler, assembler, and linker
#
CC = lc
AS = hx68 -a
LN = blink

#
# Compiler flags...
#
CFLAGS	= -b0 -v -rr -cfistqm -d2 -O -.

#
# Assembler flags...  NOTE how they are used below...
#
AFLAGS	= -csq -i include: -o

#
# Linker flags
#
LFLAGS		= ADDSYM SMALLCODE SMALLDATA MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16
LFLAGS_STRIP	= ND

#
# System libraries
#
LIBS= LIB:amiga.lib LIB:lc.lib

#
# My headers...
#
MY_HDR	=

#
# My C source...
#
MY_C	=	disktest.c

#
# My Assebly source...
#
MY_A	=

#
# My object files...
#
MY_OBJS	=	disktest.o

#
# My library objects...
#
MY_LIB_OBJS =

#
# My library files...
#
MY_LIBS	=

#
# Build the stripped LD file...
#
$(LD_STRIP):	$(LD_FILE)
	$(LN) FROM $(LD_FILE) TO $(LD_STRIP) $(LFLAGS_STRIP)

#
# Build the LD file...
#
$(LD_FILE):	$(MY_OBJS) $(MY_LIBS)
	$(LN) <with <
FROM $(MY_OBJS)
TO $(LD_FILE)
LIB $(MY_LIBS) $(LIBS)
$(LFLAGS)
<

#
# Default rules...
#
.c.o:
	$(CC) $(CFLAGS) $*.c

.asm.o:
	$(AS) $*.asm $(AFLAGS) $*.o

#
# Specific rules
#
disktest.o:	disktest.c	$(MODNAME)_rev.h

#
# Bump the version...
#
version:
	@bumprev $(VERSION) $(MODNAME)_rev

$(MODNAME)_rev.h:
	@bumprev $(VERSION) $(MODNAME)_rev

#
# Release the current build to the server
#
internal:
	@delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc|info))|makefile|lmkfile)
	@protect ((\#?.(c|h|asm|i|ld|rev|doc|info))|makefile|lmkfile) +r QUIET
	@copy ((\#?.(c|h|asm|i|ld|rev|doc|info))|makefile|lmkfile) $(REMOTE)
	@copy $(LD_STRIP) $(REMOTE)
	@copy $(LD_STRIP) $(REMOTEBIN)
	@copy \#?.doc $(REMOTEDOC)

#
# Blow away all files that would need to be rebuilt
#
clean:
	@delete \#?.(o|ld|doc)

#
# Make the AutoDocs
#
doc:	$(MODNAME).doc

$(MODNAME).doc:	$(MY_C) $(MY_A)
	@Echo "Making $(MODNAME).doc"
	@Join $(MY_C) $(MY_A) as RAM:$(MODNAME).tmp.doc
	@AutoDoc >$(MODNAME).doc RAM:$(MODNAME).tmp.doc
	@Delete RAM:$(MODNAME).tmp.doc QUIET
	@Protect $(MODNAME).doc rwd

#
# Make a complete new release (This still is in testing...)
#
release:
	lmk clean
	lmk version
	lmk doc
	lmk $(LD_FILE)
	lmk $(LD_STRIP)
	lmk internal

#
# The following rule is to bring the source down to the local directory
# To do the following you should copy this LMKfile to the local directory
# and make sure it is readable.  Then type MAKE ToLocal to have the
# code copied down...
#
tolocal:
	@protect \#? rwed QUIET
	@copy $(REMOTE)/\#? ""
	@protect \#? +r QUIET
	@protect \#?_rev\#? rwd QUIET
	@Echo "Local is updated..."
