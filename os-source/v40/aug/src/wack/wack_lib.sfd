==id $Id: wack_lib.sfd,v 39.5 93/11/05 15:12:04 jesup Exp $
* "wack"
==base _WackBase
==include <exec/types.h>
==bias 36
==public
*
* WackBase is a pointer to the Wack ARexx port obtained via FindPort().
*
VOID Wack_VPrintf( STRPTR fmt, ULONG *arglist ) (a0,a1)
==varargs
VOID Wack_Printf( STRPTR fmt, ... ) (a0)

APTR Wack_ReadCurrAddr() ()
APTR Wack_WriteCurrAddr( APTR newaddr ) (a0)

APTR Wack_ReadSpareAddr() ()
APTR Wack_WriteSpareAddr( APTR newaddr ) (a0)

UBYTE Wack_ReadByte( APTR address ) (a0)
UWORD Wack_ReadWord( APTR address ) (a0)
ULONG Wack_ReadLong( APTR address ) (a0)
==alias
APTR Wack_ReadPointer( APTR address ) (a0)

VOID Wack_ReadBlock( APTR address, APTR buffer, ULONG size ) (a0,a1,d0)

VOID Wack_WriteByte( APTR address, UBYTE data ) (a0,d0)
VOID Wack_WriteWord( APTR address, UWORD data ) (a0,d0)
VOID Wack_WriteLong( APTR address, ULONG data ) (a0,d0)
==alias
VOID Wack_WritePointer( APTR address, APTR data ) (a0,d0)

struct Library *Wack_FindLibrary( STRPTR library ) (a0)

ULONG Wack_ReadString( STRPTR address, APTR buffer, ULONG maxlen ) (a0,a1,d0)
ULONG Wack_ReadBSTR( STRPTR address, APTR buffer, ULONG maxlen ) (a0,a1,d0)

APTR Wack_ReadContextAddr() ()
VOID Wack_WriteBlock( APTR address, APTR buffer, ULONG size ) (a0,a1,d0)
ULONG Wack_Call(APTR addr) (a0)

==end
