ABSSYSBASE	std.h	10
ACT_COMMAND	symbols.h	13
ACT_CONSTANT	symbols.h	12
ACT_PGMSYMBOL	symbols.h	14
ARexxContext	simplerexx.h	25
ARexxContext	simplerexx.h	61
ARexxSignal	simplerexx.c	/^ULONG ARexxSignal(struct ARexxContext *RexxContext/
ARexx_Bind	rexxhandler.c	/^ARexx_Bind( void )$/
ARexx_Execute	rexxhandler.c	/^ARexx_Execute( char *arg1, char *arg2 )$/
ARexx_ExecuteString	rexxhandler.c	/^ARexx_ExecuteString( char *arg )$/
ARexx_Exit	rexxhandler.c	/^ARexx_Exit( void )$/
ARexx_Handler	rexxhandler.c	/^ARexx_Handler( void )$/
ARexx_Init	rexxhandler.c	/^ARexx_Init( void )$/
ARexx_NumPending	rexxhandler.c	/^ARexx_NumPending( void )$/
ApproxSym	define.c	/^ApproxSym( char *arg )$/
ApproxSymIndirect	define.c	/^ApproxSymIndirect( char *arg )$/
AssignMem	ops.c	/^AssignMem( char *arg )$/
BackCount	ops.c	/^BackCount( char *arg )$/
BackFrame	ops.c	/^BackFrame( char *arg )$/
BackWord	ops.c	/^BackWord( char *arg )$/
BadSyntax	ops.c	/^BadSyntax( void )$/
Banner	main.c	/^Banner( void )$/
BindCommand	define.c	/^BindCommand( char *name, CMDFUNC function )$/
BindCommand2	define.c	/^BindCommand2( char *name, CMDFUNC function, char */
BindMacro	define.c	/^BindMacro( char *name, short *type, char *body )$/
BindRexxPrim	rexxhandler.c	/^BindRexxPrim( char *name, rexxfunc function )$/
BindValue	define.c	/^BindValue( char *name, short vtype, long value )$/
BindValueQuick	define.c	/^BindValueQuick( char *name, short vtype, long valu/
CADDR	special.h	15
CHECKEOF	symload.c	/^#define CHECKEOF(x) if (((ULONG)&bufferpos[x]) > (/
CLIB_LINKLIB_PROTOS_H	linklib_protos.h	2
CLIB_WACK_PROTOS_H	wack_protos.h	2
CMDFUNC_1ARG	ops.c	278
CMDFUNC_2ARGS	ops.c	279
Capture	io.c	/^Capture( char *arg )$/
ClearScreen	ops.c	/^ClearScreen( void )$/
CloseLinkLib	link.c	/^CloseLinkLib( APTR linkbase )$/
Conclude	main.c	/^Conclude( void )$/
CreateMenus	menus.c	/^CreateMenus( struct NewMenu *nm, ULONG firsttag, ./
Credits	main.c	/^Credits( void )$/
DATE	wack_rev.h	3
Disassemble	ops.c	/^Disassemble( char *arg )$/
Envoy_Connect	envoylink.c	/^Envoy_Connect( register __a0 STRPTR machine )$/
Envoy_Connection	envoylink.c	/^Envoy_Connection( void )$/
Envoy_Context	envoylink.c	/^Envoy_Context( void )$/
Envoy_Disconnect	envoylink.c	/^Envoy_Disconnect( void )$/
Envoy_Error	envoylink.c	/^Envoy_Error( register __d0 ULONG error )$/
Envoy_InitLib	envoylink.c	/^Envoy_InitLib( APTR lfl )$/
Envoy_Lock	envoylink.c	/^Envoy_Lock( void )$/
Envoy_ObtainValidMem	envoylink.c	/^Envoy_ObtainValidMem( void )$/
Envoy_ReadBlock	envoylink.c	/^Envoy_ReadBlock( register __a0 APTR addr, register/
Envoy_ReadByte	envoylink.c	/^Envoy_ReadByte( register __a0 APTR addr )$/
Envoy_ReadLong	envoylink.c	/^Envoy_ReadLong( register __a0 APTR addr )$/
Envoy_ReadNodeArray	envoylink.c	/^Envoy_ReadNodeArray( register __a0 struct List *ad/
Envoy_ReadString	envoylink.c	/^Envoy_ReadString( register __a0 APTR addr, registe/
Envoy_ReadWord	envoylink.c	/^Envoy_ReadWord( register __a0 APTR addr )$/
Envoy_Reconnect	envoylink.c	/^Envoy_Reconnect( void )$/
Envoy_ReleaseValidMem	envoylink.c	/^Envoy_ReleaseValidMem( register __a0 struct MinLis/
Envoy_Resume	envoylink.c	/^Envoy_Resume( void )$/
Envoy_ShowContext	envoylink.c	/^Envoy_ShowContext( void )$/
Envoy_Symbol	envoylink.c	/^Envoy_Symbol( register __a0 APTR addr )$/
Envoy_Unlock	envoylink.c	/^Envoy_Unlock( void )$/
Envoy_WriteByte	envoylink.c	/^Envoy_WriteByte( register __a0 APTR addr, register/
Envoy_WriteLong	envoylink.c	/^Envoy_WriteLong( register __a0 APTR addr, register/
Envoy_WriteWord	envoylink.c	/^Envoy_WriteWord( register __a0 APTR addr, register/
EvalMenus	menus.c	/^EvalMenus( UWORD menucode )$/
Exdirect	ops.c	/^Exdirect( STRPTR arg )$/
Find	find.c	/^Find( char *arg )$/
FindBase	special.c	/^FindBase( char *name )$/
FindHelp	find.c	/^FindHelp( void )$/
FindSymbol	define.c	/^FindSymbol( char *name, struct SymbolMap *symMap )/
FreeARexx	simplerexx.c	/^void FreeARexx(struct ARexxContext *RexxContext)$/
FreeWackBase	wackbase.c	/^FreeWackBase( struct WackLibBase *wackbase )$/
GetARexxMsg	simplerexx.c	/^struct RexxMsg *GetARexxMsg(struct ARexxContext *R/
GetBSTR	show.c	/^GetBSTR( APTR addr, char *buffer, unsigned long ma/
GetName	show.c	/^GetName( APTR nameAddr, char *nameStr )$/
GetString	show.c	/^GetString( APTR addr, char *buffer, unsigned long /
HASHSIZE	symbols.h	10
IBADDR	special.h	21
Indirect	ops.c	/^Indirect( STRPTR arg )$/
IndirectBptr	ops.c	/^IndirectBptr( STRPTR arg )$/
InitARexx	simplerexx.c	/^struct ARexxContext *InitARexx(struct MsgPort *por/
InitTopMap	bind.c	/^InitTopMap( void )$/
InitWackBase	wackbase.c	/^InitWackBase( void )$/
LINKTABLESIZE	link.h	20
LINK_CUSTOMENTRIES	link.h	12
LINK_ENTRIES	link.h	17
LINK_SKIPENTRIES	link.h	15
LTOB	show.c	/^#define LTOB(b_ptr) (b_ptr << 2)$/
LayoutMenus	menus.c	/^LayoutMenus( struct Menu *menu, struct VisualInfo /
Library	simplerexx.h	28
Library	simplerexx.h	29
Library	wack_protos.h	34
Library	wackbase_proto.h	47
Limit	find.c	/^Limit( UBYTE *arg )$/
LinkFakeLibrary	link.h	27
LinkLibBase	link.h	22
Local_Connect	locallink.c	/^Local_Connect( register __a0 STRPTR machine )$/
Local_Connection	locallink.c	/^Local_Connection( void )$/
Local_Context	locallink.c	/^Local_Context( void )$/
Local_Disconnect	locallink.c	/^Local_Disconnect( void )$/
Local_Error	locallink.c	/^Local_Error( register __d0 ULONG error )$/
Local_InitLib	locallink.c	/^Local_InitLib( APTR lfl )$/
Local_Lock	locallink.c	/^Local_Lock( void )$/
Local_ObtainValidMem	locallink.c	/^Local_ObtainValidMem( void )$/
Local_ReadBlock	locallink.c	/^Local_ReadBlock( register __a0 APTR addr, register/
Local_ReadByte	locallink.c	/^Local_ReadByte( register __a0 APTR addr )$/
Local_ReadLong	locallink.c	/^Local_ReadLong( register __a0 APTR addr )$/
Local_ReadNodeArray	locallink.c	/^Local_ReadNodeArray( register __a0 struct List *ad/
Local_ReadString	locallink.c	/^Local_ReadString( register __a0 APTR addr, registe/
Local_ReadWord	locallink.c	/^Local_ReadWord( register __a0 APTR addr )$/
Local_Reconnect	locallink.c	/^Local_Reconnect( void )$/
Local_ReleaseValidMem	locallink.c	/^Local_ReleaseValidMem( register __a0 struct MinLis/
Local_Resume	locallink.c	/^Local_Resume( void )$/
Local_ShowContext	locallink.c	/^Local_ShowContext( void )$/
Local_Symbol	locallink.c	/^Local_Symbol( register __a0 APTR addr )$/
Local_Unlock	locallink.c	/^Local_Unlock( void )$/
Local_WriteByte	locallink.c	/^Local_WriteByte( register __a0 APTR addr, register/
Local_WriteLong	locallink.c	/^Local_WriteLong( register __a0 APTR addr, register/
Local_WriteWord	locallink.c	/^Local_WriteWord( register __a0 APTR addr, register/
MAX	rexxhandler.c	/^#define MAX(a,b) ((a)>(b)?(a):(b))$/
MAXTOKENLEN	parse.h	15
MYENVOYERR_ALLOCFAIL	envoylink.h	38
MYENVOYERR_LOSTCONTACT	envoylink.h	39
MYSADERR_ALLOCFAIL	sadlink.h	10
MYSADERR_LOSTCONTACT	sadlink.h	11
MemoryBlock	validmem.h	15
MinList	validmem_proto.h	14
MinList	validmem_proto.h	18
MinList	validmem_proto.h	20
MsgPort	simplerexx.h	27
NOREFRESH	special.h	19
NewLine	io.c	/^NewLine( void )$/
NewProcTask	sadapi.c	/^void NewProcTask(void)$/
NewSymbol	define.c	/^NewSymbol( char *name, struct SymbolMap *symMap )$/
NextCount	ops.c	/^NextCount( char *arg )$/
NextFrame	ops.c	/^NextFrame( char *arg )$/
NextWord	ops.c	/^NextWord( char *arg )$/
Node	link_proto.h	34
Nothing1	ops.c	/^Nothing1( void )$/
Nothing2	ops.c	/^Nothing2( void )$/
Nothing3	ops.c	/^Nothing3( void )$/
ObtainNodeArray	link.c	/^ObtainNodeArray( struct List *addr, ULONG size )$/
OpenLinkLib	link.c	/^OpenLinkLib( STRPTR arg )$/
OpenWindowTags	io.c	/^OpenWindowTags( struct NewWindow *nw, ULONG firstt/
PAD	link.h	18
PAD	wackbase.h	39
PPrintf	io.c	/^PPrintf( char *fmt, ... )$/
PPrintf8	decode.c	/^PPrintf8( char *fmt, ... )$/
PrintBSTR	showd.c	/^PrintBSTR( BSTR *bstr )$/
ProtectAddresses	link.c	/^ProtectAddresses( char *arg )$/
Putchar	io.c	/^Putchar( char ch )$/
REFRESH	special.h	18
REVISION	wack_rev.h	2
REXX_RETURN_ERROR	simplerexx.h	38
RWCA_FORBID	envoylink.h	19
RWCA_GETVALIDMEM	envoylink.h	28
RWCA_GETVALIDMEMCOUNT	envoylink.h	29
RWCA_PERMIT	envoylink.h	20
RWCA_READBLOCK	envoylink.h	24
RWCA_READBYTE	envoylink.h	21
RWCA_READLONG	envoylink.h	23
RWCA_READNODEARRAY	envoylink.h	31
RWCA_READSTRING	envoylink.h	30
RWCA_READWORD	envoylink.h	22
RWCA_RNA_TOOSMALL	envoylink.h	36
RWCA_WRITEBYTE	envoylink.h	25
RWCA_WRITELONG	envoylink.h	27
RWCA_WRITEWORD	envoylink.h	26
ReadBlock	link.c	/^ReadBlock( APTR addr, APTR buffer, ULONG size )$/
ReadByte	link.c	/^ReadByte( APTR addr )$/
ReadLong	link.c	/^ReadLong( APTR addr )$/
ReadPointer	link_proto.h	18
ReadString	link.c	/^ReadString( APTR addr, STRPTR buffer, ULONG maxlen/
ReadWord	link.c	/^ReadWord( APTR addr )$/
ReceiveLineAsync	io.c	/^ReceiveLineAsync( void )$/
ReleaseNodeArray	link.c	/^ReleaseNodeArray( struct Node **array )$/
RemoteWackCommand	envoylink.h	10
ReplyARexxMsg	simplerexx.c	/^void ReplyARexxMsg(struct ARexxContext *RexxContex/
RequestLineAsync	io.c	/^RequestLineAsync( void )$/
Resume	ops.c	/^Resume( void )$/
ResumeExecution	link.c	/^ResumeExecution( void )$/
RexxMsg	simplerexx.h	78
RexxPrintfResult	rexxhandler.c	/^RexxPrintfResult( char *fmt, ... )$/
SADAllocateMemory	sadapi.c	/^BOOL SADAllocateMemory(struct SADAPIVars *g, ULONG/
SADCallAddress	sadapi.c	/^BOOL SADCallAddress(struct SADAPIVars *g, void *ad/
SADCmd	sadapi.c	/^BOOL SADCmd(struct SADAPIVars *g, void  *CommandSt/
SADContextFrame	sadlink.h	13
SADDeinit	sadapi.c	/^void SADDeinit(struct SADAPIVars *g)$/
SADGetContextFrame	sadapi.c	/^BOOL SADGetContextFrame(struct SADAPIVars *g, ULON/
SADInit	sadapi.c	/^struct SADAPIVars *SADInit(STRPTR devicename, ULON/
SADNOP	sadapi.c	/^BOOL SADNOP(struct SADAPIVars *g)$/
SADReadArray	sadapi.c	/^BOOL SADReadArray(struct SADAPIVars *g, void *poin/
SADReadByte	sadapi.c	/^BOOL SADReadByte(struct SADAPIVars *g, void *point/
SADReadLong	sadapi.c	/^BOOL SADReadLong(struct SADAPIVars *g, void *point/
SADReadWord	sadapi.c	/^BOOL SADReadWord(struct SADAPIVars *g, void *point/
SADReleaseMemory	sadapi.c	/^BOOL SADReleaseMemory(struct SADAPIVars *g, void */
SADReset	sadapi.c	/^BOOL SADReset(struct SADAPIVars *g)$/
SADReturnToSystem	sadapi.c	/^BOOL SADReturnToSystem(struct SADAPIVars *g)$/
SADSendDelete	sadapi.c	/^ULONG SADSendDelete(struct SADAPIVars *g, ULONG Ti/
SADSetVersion	sadapi.c	/^SADSetVersion( struct SADAPIVars *g )$/
SADTurnOffSingleStepping	sadapi.c	/^BOOL SADTurnOffSingleStepping(struct SADAPIVars *g/
SADTurnOnSingleStepping	sadapi.c	/^BOOL SADTurnOnSingleStepping(struct SADAPIVars *g,/
SADWaitForPrompt	sadapi.c	/^ULONG SADWaitForPrompt(struct SADAPIVars *g, ULONG/
SADWriteArray	sadapi.c	/^BOOL SADWriteArray(struct SADAPIVars *g, void *poi/
SADWriteByte	sadapi.c	/^BOOL SADWriteByte(struct SADAPIVars *g, void *poin/
SADWriteLong	sadapi.c	/^BOOL SADWriteLong(struct SADAPIVars *g, void *poin/
SADWriteWord	sadapi.c	/^BOOL SADWriteWord(struct SADAPIVars *g, void *poin/
SAD_Connect	sadlink.c	/^SAD_Connect( register __a0 STRPTR machine )$/
SAD_Connection	sadlink.c	/^SAD_Connection( void )$/
SAD_Context	sadlink.c	/^SAD_Context( void )$/
SAD_Disconnect	sadlink.c	/^SAD_Disconnect( void )$/
SAD_Error	sadlink.c	/^SAD_Error( register __d0 ULONG error )$/
SAD_InitLib	sadlink.c	/^SAD_InitLib( APTR lfl )$/
SAD_Lock	sadlink.c	/^SAD_Lock( void )$/
SAD_ObtainValidMem	sadlink.c	/^SAD_ObtainValidMem( void )$/
SAD_ReadBlock	sadlink.c	/^SAD_ReadBlock( register __a0 APTR addr, register _/
SAD_ReadByte	sadlink.c	/^SAD_ReadByte( register __a0 APTR addr )$/
SAD_ReadLong	sadlink.c	/^SAD_ReadLong( register __a0 APTR addr )$/
SAD_ReadNodeArray	sadlink.c	/^SAD_ReadNodeArray( register __a0 struct List *addr/
SAD_ReadString	sadlink.c	/^SAD_ReadString( register __a0 APTR addr, register /
SAD_ReadWord	sadlink.c	/^SAD_ReadWord( register __a0 APTR addr )$/
SAD_Reconnect	sadlink.c	/^SAD_Reconnect( void )$/
SAD_ReleaseValidMem	sadlink.c	/^SAD_ReleaseValidMem( register __a0 struct MinList /
SAD_Resume	sadlink.c	/^SAD_Resume( void )$/
SAD_ShowContext	sadlink.c	/^SAD_ShowContext( void )$/
SAD_Symbol	sadlink.c	/^SAD_Symbol( register __a0 APTR addr )$/
SAD_Unlock	sadlink.c	/^SAD_Unlock( void )$/
SAD_WriteByte	sadlink.c	/^SAD_WriteByte( register __a0 APTR addr, register _/
SAD_WriteLong	sadlink.c	/^SAD_WriteLong( register __a0 APTR addr, register _/
SAD_WriteWord	sadlink.c	/^SAD_WriteWord( register __a0 APTR addr, register _/
SHOWONE	showg.c	/^SHOWONE(View)$/
SHOWONE	showi.c	/^SHOWONE(Screen)$/
SHOWONE	special.h	24
SHOWSIMPLE	showg.c	/^SHOWSIMPLE(ViewPort,TRUE)$/
SHOWSIMPLE	showi.c	/^SHOWSIMPLE(ExtGadget,TRUE)$/
SHOWSIMPLE	special.h	31
SIMPLE_REXX_H	simplerexx.h	11
SendARexxMsg	simplerexx.c	/^LONG SendARexxMsg(struct ARexxContext *RexxContext/
SetBreakPoint	ops.c	/^SetBreakPoint( void )$/
SetWackPrompt	io.c	/^SetWackPrompt( char *arg )$/
ShiftBPtr	ops.c	/^ShiftBPtr( char *arg )$/
ShowAScreen	showi.c	/^ShowAScreen( void )$/
ShowAWindow	showi.c	/^ShowAWindow( void )$/
ShowAddress	special.c	/^ShowAddress( char *s, APTR x )$/
ShowConfigHelp	bind.c	/^ShowConfigHelp( void )$/
ShowContext	link.c	/^ShowContext( void )$/
ShowDBase	showd.c	/^ShowDBase( void )$/
ShowDOSList	showd.c	/^ShowDOSList( void )$/
ShowDeviceHead	show.c	/^ShowDeviceHead( struct Node *device )$/
ShowDeviceList	show.c	/^ShowDeviceList( void )$/
ShowExecBase	show.c	/^ShowExecBase( void )$/
ShowExecHelp	bind.c	/^ShowExecHelp( void )$/
ShowFirstGad	showi.c	/^ShowFirstGad( char *arg )$/
ShowFrame	ops.c	/^ShowFrame(void)$/
ShowGeneralHelp	bind.c	/^ShowGeneralHelp( void )$/
ShowGfxBase	showg.c	/^ShowGfxBase( void )$/
ShowGraphicsHelp	bind.c	/^ShowGraphicsHelp( void )$/
ShowHelp	bind.c	/^ShowHelp( char *arg )$/
ShowIBase	showi.c	/^ShowIBase( void )$/
ShowIntVects	show.c	/^ShowIntVects( void )$/
ShowIntuitionHelp	bind.c	/^ShowIntuitionHelp( void )$/
ShowLayerInfoSems	showi.c	/^ShowLayerInfoSems( void )$/
ShowLibraryList	show.c	/^ShowLibraryList( void )$/
ShowMemory	show.c	/^ShowMemory( struct MemRegion *region )$/
ShowMemoryHelp	bind.c	/^ShowMemoryHelp( void )$/
ShowMemoryList	show.c	/^ShowMemoryList( void )$/
ShowMiscHelp	bind.c	/^ShowMiscHelp( void )$/
ShowModule	show.c	/^ShowModule( struct Resident *m )$/
ShowNode	show.c	/^ShowNode( struct Node *n )$/
ShowNodes	show.c	/^ShowNodes( char *arg )$/
ShowObject	showi.c	/^ShowObject( char *arg )$/
ShowPortHead	show.c	/^ShowPortHead( struct Node *port )$/
ShowPortList	show.c	/^ShowPortList( void )$/
ShowProcess	show.c	/^ShowProcess( char *arg )$/
ShowRegion	show.c	/^ShowRegion( struct MemHeader *region )$/
ShowRegionList	show.c	/^ShowRegionList( void )$/
ShowResModules	show.c	/^ShowResModules( void )$/
ShowResourceList	show.c	/^ShowResourceList( void )$/
ShowSem	showlock.c	/^ShowSem( char *arg )$/
ShowSemList	showlock.c	/^ShowSemList( char *arg )$/
ShowSemListNoHeader	showlock.c	/^ShowSemListNoHeader( APTR addr )$/
ShowSemNoHeader	showlock.c	/^ShowSemNoHeader( APTR addr )$/
ShowSymbol	define.c	/^ShowSymbol( struct Symbol *sym )$/
ShowSymbolMap	define.c	/^ShowSymbolMap( struct SymbolMap *symMap )$/
ShowTask	show.c	/^ShowTask( char *arg )$/
ShowTasks	show.c	/^ShowTasks( void )$/
ShowTopSymMap	define.c	/^ShowTopSymMap( void )$/
ShowTraceHelp	bind.c	/^ShowTraceHelp( void )$/
ShowWindowFlags	showi.c	/^ShowWindowFlags( char *arg )$/
SizeFrame	ops.c	/^SizeFrame( char *arg )$/
StackLimit	find.c	/^StackLimit( UBYTE *arg )$/
Symbol	define_proto.h	14
Symbol	define_proto.h	16
Symbol	define_proto.h	34
Symbol	define_proto.h	36
Symbol	symbols.h	16
SymbolMap	symbols.h	38
SystemTags	wackbase.c	/^SystemTags( STRPTR command, ULONG tag, ... )$/
Task	show_proto.h	50
ToDec	ops.c	/^ToDec( char *arg )$/
ToHex	ops.c	/^ToHex( char *arg )$/
ToglTrace	sat.c	/^ToglTrace( void )$/
TryIt	define.c	/^TryIt( void )$/
UnBindSymbolMap	define.c	/^UnBindSymbolMap( struct SymbolMap *symMap )$/
UnBindSymbols	define.c	/^UnBindSymbols( void )$/
UnCtrl	define.c	/^UnCtrl( char c, char *s )$/
VERS	wack_rev.h	4
VERSION	wack_rev.h	1
VERSTAG	wack_rev.h	6
VPPrintf	io.c	/^VPPrintf( char *fmt, ULONG *arglist )$/
VSTRING	wack_rev.h	5
ValidAddress	link.c	/^ValidAddress( APTR addr )$/
ValidAddresses	link.c	/^ValidAddresses( APTR addr, ULONG len )$/
WACKERROR_ALLOCFAIL	std.h	12
WACKERROR_BREAK	std.h	13
WACKERROR_ILLEGALACCESS	std.h	14
WACKTABLESIZE	wackbase.h	41
WACK_CUSTOMENTRIES	wackbase.h	33
WACK_ENTRIES	wackbase.h	38
WACK_SKIPENTRIES	wackbase.h	36
WackFakeLibrary	wackbase.h	49
WackLibBase	wackbase.h	43
WackLibBase	wackbase_proto.h	12
WackPortName	wackbase.c	/^WackPortName( void )$/
WalkList	special.c	/^WalkList( struct List *list, int nodesize, ULONG (/
WalkMinList	special.c	/^WalkMinList( struct MinList *list, int nodesize, U/
WalkSimpleList	special.c	/^WalkSimpleList( APTR firstnode, int nodesize, ULON/
WriteByte	link.c	/^WriteByte( APTR addr, BYTE value )$/
WriteLong	link.c	/^WriteLong( APTR addr, LONG value )$/
WritePointer	link_proto.h	30
WriteWord	link.c	/^WriteWord( APTR addr, WORD value )$/
addMemoryBlock	validmem.c	/^addMemoryBlock( struct MinList *validlist, ULONG s/
addMenuEntry	menus.c	/^addMenuEntry( unsigned long index, UBYTE type, STR/
allocValidMem	validmem.c	/^allocValidMem( void )$/
arg	ops.c	278
arg1	ops.c	279
arg2	ops.c	279
asciiByte	ops.c	/^asciiByte( UBYTE data, char **strptr )$/
bindAlias	define.c	/^bindAlias( char *arg )$/
bindConstant	define.c	/^bindConstant( char *arg )$/
bindHunks	symload.c	/^bindHunks( char *arg )$/
bindMenuHeader	menus.c	/^bindMenuHeader( STRPTR arg )$/
bindMenuItem	menus.c	/^bindMenuItem( STRPTR arg )$/
bindMenuSub	menus.c	/^bindMenuSub( STRPTR arg )$/
bindRexx	define.c	/^bindRexx( char *arg )$/
bindSymbols	symload.c	/^bindSymbols( char *arg )$/
bindSystem	define.c	/^bindSystem( char *arg )$/
bindXWack	define.c	/^bindXWack( char *arg )$/
buildValidMem	validmem.c	/^buildValidMem( void )$/
bwl_6_7	decode.c	/^bwl_6_7( ULONG inst )$/
char	ops.c	278
clearBPT	sat.c	/^clearBPT( void )$/
closeEnvironment	io.c	/^closeEnvironment( STRPTR errorstr )$/
closeWin	io.c	/^closeWin( void )$/
compareTaskName	show.c	/^compareTaskName( struct Task *task, char *arg )$/
copDisasm	copper.c	/^copDisasm( APTR addr, UWORD op, UWORD w, int all )/
createMenuHeader	menus.c	/^createMenuHeader( STRPTR header_name, STRPTR arg )/
createMenuItem	menus.c	/^createMenuItem( STRPTR header_name, STRPTR item_na/
doDumpCops	copper.c	/^doDumpCops( int listtype )$/
doEnvoyTransaction	envoylink.c	/^doEnvoyTransaction( ULONG action, APTR address, UL/
doMinNode	special.c	/^doMinNode( struct MinNode *node, int nodesize, ULO/
doNode	special.c	/^doNode( struct Node *node, int nodesize, ULONG (*n/
do_decode	decode.c	/^do_decode( caddr_t addr )$/
domovecreg	decode.c	/^domovecreg( ULONG reg )$/
dumpAllCops	copper.c	/^dumpAllCops( void )$/
dumpBox	showi.c	/^dumpBox( UBYTE *s, struct IBox *b )$/
dumpCopHeader	copper.c	/^dumpCopHeader( void )$/
dumpCops	copper.c	/^dumpCops( void )$/
dumpCprList	copper.c	/^dumpCprList( struct cprlist *list, int type )$/
dumpExtGadget	showi.c	/^dumpExtGadget( APTR addr, struct Gadget *g )$/
dumpIClass	showi.c	/^dumpIClass( APTR addr, struct IClass *cl )$/
dumpImage	showi.c	/^dumpImage( APTR addr, struct Image *im )$/
dumpIntuiText	showi.c	/^dumpIntuiText( APTR addr, struct IntuiText *it )$/
dumpLayer	showg.c	/^dumpLayer( APTR addr, struct Layer *l )$/
dumpLayer_Info	showg.c	/^dumpLayer_Info( APTR addr, struct Layer_Info *li )/
dumpMenu	showi.c	/^dumpMenu( APTR addr, struct Menu *m )$/
dumpMenuItem	showi.c	/^dumpMenuItem( APTR addr, struct MenuItem *i )$/
dumpNearestSymbol	define.c	/^dumpNearestSymbol( ULONG addr )$/
dumpProcess	show.c	/^dumpProcess( struct Process *proc )$/
dumpPropInfo	showi.c	/^dumpPropInfo( APTR addr, struct PropInfo *pi )$/
dumpRect	showi.c	/^dumpRect( UBYTE *s, struct Rectangle *r )$/
dumpRequester	showi.c	/^dumpRequester( APTR addr, struct Requester *r )$/
dumpScreen	showi.c	/^dumpScreen( APTR addr, struct Screen *s )$/
dumpSem	showlock.c	/^dumpSem( APTR addr, struct SignalSemaphore *sem, c/
dumpSemReq	showlock.c	/^dumpSemReq( APTR addr, struct SemaphoreRequest *sr/
dumpTask	show.c	/^dumpTask( struct Task *task )$/
dumpTaskSummary	show.c	/^dumpTaskSummary( struct Task *task )$/
dumpView	showg.c	/^dumpView( APTR addr, struct View *v )$/
dumpViewExtra	showg.c	/^dumpViewExtra( APTR addr, struct ViewExtra *ve )$/
dumpViewPort	showg.c	/^dumpViewPort( APTR addr, struct ViewPort *vp )$/
dumpWindow	showi.c	/^dumpWindow( APTR addr, struct Window *w )$/
dumpWindowFlags	showi.c	/^dumpWindowFlags( APTR addr, struct Window *w )$/
eff_addr	decode.c	/^eff_addr( ULONG mode, ULONG reg, caddr_t addr, ULO/
effective	decode.c	/^effective( ULONG inst, caddr_t addr )$/
evalBrkPts	sat.c	/^evalBrkPts( void )$/
evaluateSymbol	ops.c	/^evaluateSymbol( struct Symbol *sym, char *argStr )/
executeStartupFile	io.c	/^executeStartupFile( void )$/
exit_Menus	menus.c	/^exit_Menus( void )$/
find	find.c	/^find($/
findHeader	menus.c	/^findHeader( STRPTR header_name )$/
findInc	find.c	/^findInc( ULONG findpat )$/
findItem	menus.c	/^findItem( STRPTR header_name, STRPTR item_name )$/
findLastItem	menus.c	/^findLastItem( STRPTR header_name )$/
findLastMenu	menus.c	/^findLastMenu( void )$/
findLastSub	menus.c	/^findLastSub( STRPTR header_name, STRPTR item_name /
findTask	show.c	/^findTask( char *arg )$/
free	io.c	/^free( APTR addr )$/
freeCPU	sat.c	/^freeCPU( void )$/
freeValidMem	validmem.c	/^freeValidMem( struct MinList *validlist )$/
getBrkCnt	sat.c	/^getBrkCnt( unsigned long addr )$/
getTarget	io.c	/^getTarget( void )$/
get_long	decode.c	/^#define get_long( addr )    ( (LONG)ReadLong(addr)/
get_ulong	decode.c	/^#define get_ulong( addr )   ( (ULONG)ReadLong(addr/
get_uword	decode.c	/^#define get_uword( addr )   ( (ULONG)ReadWord(addr/
get_word	decode.c	/^#define get_word( addr )    ( (LONG)ReadWord(addr)/
hunkFinder	symload.c	/^hunkFinder( ULONG option, STRPTR taskname, ULONG */
illegal	decode.c	/^illegal( ULONG inst )$/
index_mode	decode.c	/^index_mode( ULONG reg, ULONG format )$/
initFunction	wackbase.c	/^initFunction( struct WackFakeLibrary *wfl, ULONG c/
initLinkLVO	link.c	/^initLinkLVO( struct LinkFakeLibrary *lfl, ULONG co/
init_Menus	menus.c	/^init_Menus( void )$/
isAlpha	define.c	/^isAlpha( char ch )$/
isBlank	parse.c	/^isBlank( char ch )$/
isDelimeter	parse.c	/^isDelimeter( char ch )$/
lib_FindLibrary	wackbase.c	/^lib_FindLibrary( register __a0 STRPTR library )$/
lib_ReadBSTR	wackbase.c	/^lib_ReadBSTR( register __a0 APTR address,$/
lib_ReadBlock	wackbase.c	/^lib_ReadBlock( register __a0 APTR address,$/
lib_ReadByte	wackbase.c	/^lib_ReadByte( register __a0 APTR address )$/
lib_ReadContextAddr	wackbase.c	/^lib_ReadContextAddr( void )$/
lib_ReadCurrAddr	wackbase.c	/^lib_ReadCurrAddr( void )$/
lib_ReadLong	wackbase.c	/^lib_ReadLong( register __a0 APTR address )$/
lib_ReadSpareAddr	wackbase.c	/^lib_ReadSpareAddr( void )$/
lib_ReadString	wackbase.c	/^lib_ReadString( register __a0 APTR address,$/
lib_ReadWord	wackbase.c	/^lib_ReadWord( register __a0 APTR address )$/
lib_VPrintf	wackbase.c	/^lib_VPrintf( register __a0 STRPTR fmt, register __/
lib_WriteByte	wackbase.c	/^lib_WriteByte( register __a0 APTR address, registe/
lib_WriteCurrAddr	wackbase.c	/^lib_WriteCurrAddr( register __a0 APTR address )$/
lib_WriteLong	wackbase.c	/^lib_WriteLong( register __a0 APTR address, registe/
lib_WriteSpareAddr	wackbase.c	/^lib_WriteSpareAddr( register __a0 APTR address )$/
lib_WriteWord	wackbase.c	/^lib_WriteWord( register __a0 APTR address, registe/
lib_stubReturn	link.c	/^lib_stubReturn( void )$/
malloc	io.c	/^malloc( ULONG size )$/
match	find.c	/^match( ULONG *p, ULONG pat, WORD size )$/
move_common	decode.c	/^move_common( ULONG inst, caddr_t addr, ULONG bwl )/
mymain	main.c	/^mymain( void )$/
nullroutine	decode.c	/^nullroutine( void )$/
openEnvironment	io.c	/^openEnvironment( void )$/
openWin	io.c	/^openWin()$/
parseAddress	parse.c	/^parseAddress( STRPTR arg, ULONG *value )$/
parseDecNum	parse.c	/^parseDecNum( STRPTR arg, ULONG *value )$/
parseHexNum	parse.c	/^parseHexNum( STRPTR arg, ULONG *value )$/
parseReadTemplate	rexxhandler.c	/^parseReadTemplate( char *arg, long **addressp )$/
parseRemainder	parse.c	/^parseRemainder( STRPTR arg )$/
parseToken	parse.c	/^parseToken( STRPTR arg, STRPTR token )$/
parseWriteTemplate	rexxhandler.c	/^parseWriteTemplate( char *arg, long **addressp, lo/
pingSAD	sadlink.c	/^pingSAD( struct SADAPIVars *sav )$/
prComment	copper.c	/^prComment( char *regname, int w )$/
printReg	decode.c	/^printReg( ULONG reg )$/
printRegList	decode.c	/^printRegList( ULONG regword, ULONG mode )$/
printRegRange	decode.c	/^printRegRange( ULONG firstreg, ULONG lastreg )$/
processInput	io.c	/^processInput( void )$/
processLine	define.c	/^processLine( char *line )$/
put_signed_hex	decode.c	/^put_signed_hex( LONG num )$/
quad_0	decode.c	/^quad_0( ULONG inst, caddr_t addr )$/
quad_1	decode.c	/^quad_1( ULONG inst, caddr_t addr )$/
quad_2	decode.c	/^quad_2( ULONG inst, caddr_t addr )$/
quad_3	decode.c	/^quad_3( ULONG inst, caddr_t addr )$/
quad_4	decode.c	/^quad_4( ULONG inst, caddr_t addr )$/
quad_5	decode.c	/^quad_5( ULONG inst, caddr_t addr )$/
quad_6	decode.c	/^quad_6( ULONG inst, caddr_t addr )$/
quad_7	decode.c	/^quad_7( ULONG inst, caddr_t addr )$/
quad_89bcd	decode.c	/^quad_89bcd( ULONG inst, caddr_t addr )$/
quad_a	decode.c	/^quad_a( ULONG inst, caddr_t addr )$/
quad_e	decode.c	/^quad_e( ULONG inst, caddr_t addr )$/
quad_f	decode.c	/^quad_f( ULONG inst, caddr_t addr )$/
redoMenus	menus.c	/^redoMenus( void )$/
regname	copper.c	/^regname( int reg )$/
resetError	io.c	/^resetError( void )$/
runCommand	wackbase.c	/^runCommand( char *arg1, char *arg2 )$/
runWackCommand	wackbase.c	/^runWackCommand( char *arg1, char *arg2 )$/
rxcmd_Connection	rexxhandler.c	/^rxcmd_Connection( char *arg )$/
rxcmd_Context	rexxhandler.c	/^rxcmd_Context( char *arg )$/
rxcmd_CurrentAddr	rexxhandler.c	/^rxcmd_CurrentAddr( char *arg )$/
rxcmd_FindLibrary	rexxhandler.c	/^rxcmd_FindLibrary( char *arg )$/
rxcmd_Print	rexxhandler.c	/^rxcmd_Print( char *arg )$/
rxcmd_ReadBSTR	rexxhandler.c	/^rxcmd_ReadBSTR( char *arg )$/
rxcmd_ReadByte	rexxhandler.c	/^rxcmd_ReadByte( char *arg )$/
rxcmd_ReadLong	rexxhandler.c	/^rxcmd_ReadLong( char *arg )$/
rxcmd_ReadString	rexxhandler.c	/^rxcmd_ReadString( char *arg )$/
rxcmd_ReadWord	rexxhandler.c	/^rxcmd_ReadWord( char *arg )$/
rxcmd_SpareAddr	rexxhandler.c	/^rxcmd_SpareAddr( char *arg )$/
rxcmd_Version	rexxhandler.c	/^rxcmd_Version( char *arg )$/
rxcmd_WriteByte	rexxhandler.c	/^rxcmd_WriteByte( char *arg )$/
rxcmd_WriteLong	rexxhandler.c	/^rxcmd_WriteLong( char *arg )$/
rxcmd_WriteWord	rexxhandler.c	/^rxcmd_WriteWord( char *arg )$/
sadbroken	sadlink.c	/^sadbroken( void )$/
semHeader	showlock.c	/^semHeader( void )$/
setBrkPt	sat.c	/^setBrkPt( unsigned long addr )$/
setDump	ops.c	/^setDump( char *arg )$/
showCursor	io.c	/^showCursor( BOOL showit )$/
showError	io.c	/^showError( void )$/
showHunks	symload.c	/^showHunks( char *arg )$/
showMenuError	menus.c	/^showMenuError( long error )$/
showPrompt	io.c	/^showPrompt( void )$/
stackCurrent	ops.c	/^stackCurrent( void )$/
swapSpareAddr	ops.c	/^swapSpareAddr( STRPTR arg )$/
sym_Args	symbols.h	36
sym_Function	symbols.h	35
sym_Value1	symbols.h	33
sym_Value2	symbols.h	34
undoMenus	menus.c	/^undoMenus( void )$/
validAddress	validmem.c	/^validAddress( struct MinList *validlist, void *add/
validAddresses	validmem.c	/^validAddresses( struct MinList *validlist, void *a/
wacklib_stubReturn	wackbase.c	/^wacklib_stubReturn( void )$/
writeConsole	io.c	/^writeConsole( STRPTR buffer, LONG len )$/
