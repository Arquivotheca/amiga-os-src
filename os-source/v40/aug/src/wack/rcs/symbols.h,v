head     39.4;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


39.4
date     93.07.16.18.25.21;  author peter;  state Exp;
branches ;
next     39.3;

39.3
date     93.05.07.17.05.38;  author peter;  state Exp;
branches ;
next     39.2;

39.2
date     93.05.03.14.39.50;  author peter;  state Exp;
branches ;
next     39.1;

39.1
date     93.04.27.14.39.13;  author peter;  state Exp;
branches ;
next     39.0;

39.0
date     92.10.30.15.26.42;  author peter;  state Exp;
branches ;
next     ;


desc
@Wack internal symbol structures.
@


39.4
log
@Removed ACT_BASE and ACT_OFFSET.  Defined ACT_PGMSYMBOL.
@
text
@/*
 * Amiga Grand Wack
 *
 * symbols.h - Wack internal symbol structures.
 *
 * $Id: symbols.h,v 39.3 93/05/07 17:05:38 peter Exp Locker: peter $
 *
 */

#define HASHSIZE	27

#define ACT_CONSTANT	0	/* Sets current address to value1 */
#define ACT_COMMAND	1	/* Execute function pointed at by sp->value1 */
#define ACT_PGMSYMBOL	2	/* addr=value1, used by symbol loader */

struct Symbol
{
    struct Symbol *sym_Next;
    char *sym_Name;
    long sym_Type;
    union
    {
	long a1_value;
	void *a1_function;
    } sym_Arg1;
    union
    {
	long a2_value;
	char *a2_args;
    } sym_Arg2;
};

#define sym_Value1 sym_Arg1.a1_value
#define sym_Value2 sym_Arg2.a2_value
#define sym_Function sym_Arg1.a1_function
#define sym_Args sym_Arg2.a2_args

struct SymbolMap
{
    struct Symbol *head[HASHSIZE];
    struct Symbol *tail[HASHSIZE];
};

@


39.3
log
@Cleaned up struct Symbol.  Removed all the key-command support.
@
text
@d6 1
a6 1
 * $Id: symbols.h,v 39.2 93/05/03 14:39:50 peter Exp Locker: peter $
d14 1
a14 2
#define ACT_OFFSET	2	/* Sets current address to value2+value1 */
#define ACT_BASE	3	/* Sets current address to value1 */
@


39.2
log
@Added some comments.
@
text
@d6 1
a6 1
 * $Id: symbols.h,v 39.1 93/04/27 14:39:13 peter Exp Locker: peter $
d13 1
a13 1
#define ACT_PRIM	1	/* ExecuteSym[2]()s sp->value1 */
a15 1
#define ACT_KEYMAP	4
d19 13
a31 5
    struct Symbol *next;
    char *name;
    short stype;
    long value1;
    long value2;
d34 4
a37 14

struct KeyAction
{
    struct KeyAction *next;
    char firstKey;
    char lastKey;
    struct Symbol *symbol;
};

struct KeyMap
{
    struct KeyAction *head;
    struct KeyAction *tail;
};
@


39.1
log
@Removed unneeded define.
@
text
@d6 1
a6 1
 * $Id: symbols.h,v 39.0 92/10/30 15:26:42 peter Exp Locker: peter $
d12 4
a15 4
#define ACT_CONSTANT	0
#define ACT_PRIM	1
#define ACT_OFFSET	2
#define ACT_BASE	3
@


39.0
log
@Initial RCS check-in.
@
text
@d6 1
a6 1
 * $Id: $
a8 2

#define GetBlock getBlock
@
