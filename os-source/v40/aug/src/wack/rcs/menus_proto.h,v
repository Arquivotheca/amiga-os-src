head     39.3;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


39.3
date     93.05.21.17.33.48;  author peter;  state Exp;
branches ;
next     39.2;

39.2
date     93.05.07.17.07.21;  author peter;  state Exp;
branches ;
next     39.1;

39.1
date     93.04.27.14.41.40;  author peter;  state Exp;
branches ;
next     39.0;

39.0
date     92.10.30.15.24.53;  author peter;  state Exp;
branches ;
next     ;


desc
@Prototypes.
@


39.3
log
@Command functions now return NULL string.
@
text
@/*
 * Amiga Grand Wack
 *
 * $Id: menus_proto.h,v 39.2 93/05/07 17:07:21 peter Exp Locker: peter $
 *
 */

long init_Menus( void );

void exit_Menus( void );

STRPTR bindMenuHeader( STRPTR arg );

long createMenuHeader( STRPTR header_name, STRPTR arg );

STRPTR bindMenuItem( STRPTR arg );

long createMenuItem( STRPTR header_name, STRPTR item_name, STRPTR arg );

STRPTR bindMenuSub( STRPTR arg );

long findLastMenu( void );

long findLastItem( STRPTR header_name );

long findLastSub( STRPTR header_name, STRPTR item_name );

long findHeader( STRPTR header_name );

long findItem( STRPTR header_name, STRPTR item_name );

long addMenuEntry( unsigned long index, UBYTE type, STRPTR label, char *arg );

void undoMenus( void );

long redoMenus( void );

ULONG EvalMenus( UWORD menucode );
@


39.2
log
@Minor change to support new parsing routines.
@
text
@d4 1
a4 1
 * $Id: menus_proto.h,v 39.1 93/04/27 14:41:40 peter Exp Locker: peter $
d12 1
a12 1
void bindMenuHeader( STRPTR arg );
d16 1
a16 1
void bindMenuItem( STRPTR arg );
d20 1
a20 1
void bindMenuSub( STRPTR arg );
@


39.1
log
@EvalMenus() now tells if it did anything.
@
text
@d4 1
a4 1
 * $Id: menus_proto.h,v 39.0 92/10/30 15:24:53 peter Exp Locker: peter $
d32 1
a32 1
long addMenuEntry( unsigned long index, UBYTE type, STRPTR label, char **lineptr );
@


39.0
log
@Initial RCS check-in.
@
text
@d4 1
a4 1
 * $Id: $
d38 1
a38 1
void EvalMenus( UWORD menucode );
@
