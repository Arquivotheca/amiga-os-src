head     39.3;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


39.3
date     93.06.02.15.51.39;  author peter;  state Exp;
branches ;
next     39.2;

39.2
date     93.05.21.17.35.38;  author peter;  state Exp;
branches ;
next     39.1;

39.1
date     93.04.27.14.39.07;  author peter;  state Exp;
branches ;
next     39.0;

39.0
date     92.10.30.15.25.27;  author peter;  state Exp;
branches ;
next     ;


desc
@Prototypes.
@


39.3
log
@ShowSemList() now accepts an address argument.
@
text
@/*
 * Amiga Grand Wack
 *
 * $Id: showlock_proto.h,v 39.2 93/05/21 17:35:38 peter Exp Locker: peter $
 *
 */

void semHeader( void );

ULONG dumpSemReq( APTR addr, struct SemaphoreRequest *sr );

ULONG dumpSem( APTR addr, struct SignalSemaphore *sem, char *name );

STRPTR ShowSem( char *arg );

void ShowSemNoHeader( APTR addr );

void ShowSemListNoHeader( APTR addr );

STRPTR ShowSemList( char *arg );

@


39.2
log
@Command functions now return NULL string.
@
text
@d4 1
a4 1
 * $Id: showlock_proto.h,v 39.1 93/04/27 14:39:07 peter Exp Locker: peter $
d20 1
a20 1
STRPTR ShowSemList( void );
@


39.1
log
@Cleaned up prototypes.
@
text
@d4 1
a4 1
 * $Id: showlock_proto.h,v 39.0 92/10/30 15:25:27 peter Exp Locker: peter $
d14 1
a14 1
void ShowSem( char *arg );
d20 1
a20 1
void ShowSemList( void );
@


39.0
log
@Initial RCS check-in.
@
text
@d4 1
a4 1
 * $Id: $
d16 1
a16 1
void showSem( APTR addr );
d18 1
a18 1
void showSemList( APTR addr );
@
