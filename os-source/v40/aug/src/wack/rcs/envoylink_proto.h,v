head     39.4;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


39.4
date     93.04.27.14.38.47;  author peter;  state Exp;
branches ;
next     39.3;

39.3
date     93.03.18.16.27.05;  author peter;  state Exp;
branches ;
next     39.2;

39.2
date     93.03.10.13.05.23;  author peter;  state Exp;
branches ;
next     39.1;

39.1
date     92.11.02.17.08.19;  author peter;  state Exp;
branches ;
next     39.0;

39.0
date     92.10.30.15.23.56;  author peter;  state Exp;
branches ;
next     ;


desc
@Prototypes.
@


39.4
log
@Major rework of link architecture/naming.
@
text
@/*
 * Amiga Grand Wack
 *
 * $Id: envoylink_proto.h,v 39.3 93/03/18 16:27:05 peter Exp Locker: peter $
 *
 */

void Envoy_InitLib( APTR afl );
@


39.3
log
@Deleted Envoy_goTarget().
@
text
@d4 1
a4 1
 * $Id: envoyaccess_proto.h,v 39.2 93/03/10 13:05:23 peter Exp Locker: peter $
d8 1
a8 29
LONG Envoy_Init( STRPTR machine );

void Envoy_Exit( void );

void Envoy_Forbid( void );

void Envoy_Permit( void );

char Envoy_GetMemB( void *addr );

short Envoy_GetMemW( void *addr );

long Envoy_GetMemL( void *addr );

char Envoy_PutMemB( void *addr, char data );

short Envoy_PutMemW( void *addr, short data );

long Envoy_PutMemL( void *addr, long data );

unsigned long Envoy_GetStringBlock( void *addr, char *buffer, long maxlen );

void Envoy_GetBlock( void *addr, void *buffer, long size );

struct MinList * Envoy_obtainValidMemList( void );

void Envoy_releaseValidMemList( struct MinList *validlist );

long Envoy_ShowError( long error );
@


39.2
log
@Added Envoy_goTarget().
@
text
@d4 1
a4 1
 * $Id: envoyaccess_proto.h,v 39.1 92/11/02 17:08:19 peter Exp Locker: peter $
a36 2

void Envoy_goTarget( void );
@


39.1
log
@Prototyped Envoy_GetStringBlock().
@
text
@d4 1
a4 1
 * $Id: envoyaccess_proto.h,v 39.0 92/10/30 15:23:56 peter Exp Locker: peter $
d37 2
@


39.0
log
@Initial RCS check-in.
@
text
@d4 1
a4 1
 * $Id: $
d27 2
@
