head     39.5;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


39.5
date     93.11.05.15.12.04;  author jesup;  state Exp;
branches ;
next     39.4;

39.4
date     93.10.08.16.53.24;  author jesup;  state Exp;
branches ;
next     39.3;

39.3
date     93.04.27.14.42.38;  author peter;  state Exp;
branches ;
next     39.2;

39.2
date     93.03.18.16.28.36;  author peter;  state Exp;
branches ;
next     39.1;

39.1
date     92.11.02.17.09.40;  author peter;  state Exp;
branches ;
next     39.0;

39.0
date     92.10.30.15.27.41;  author peter;  state Exp;
branches ;
next     ;


desc
@sfd file for Wack "fake" library.
@


39.5
log
@added Call function
@
text
@==id $Id: wack_lib.sfd,v 39.4 93/10/08 16:53:24 jesup Exp Locker: jesup $
* "wack"
==base _WackBase
==include <exec/types.h>
==bias 36
==public
*
* WackBase is a pointer to the Wack ARexx port obtained via FindPort().
*
VOID Wack_VPrintf( STRPTR fmt, ULONG *arglist ) (a0,a1)
==varargs
VOID Wack_Printf( STRPTR fmt, ... ) (a0)

APTR Wack_ReadCurrAddr() ()
APTR Wack_WriteCurrAddr( APTR newaddr ) (a0)

APTR Wack_ReadSpareAddr() ()
APTR Wack_WriteSpareAddr( APTR newaddr ) (a0)

UBYTE Wack_ReadByte( APTR address ) (a0)
UWORD Wack_ReadWord( APTR address ) (a0)
ULONG Wack_ReadLong( APTR address ) (a0)
==alias
APTR Wack_ReadPointer( APTR address ) (a0)

VOID Wack_ReadBlock( APTR address, APTR buffer, ULONG size ) (a0,a1,d0)

VOID Wack_WriteByte( APTR address, UBYTE data ) (a0,d0)
VOID Wack_WriteWord( APTR address, UWORD data ) (a0,d0)
VOID Wack_WriteLong( APTR address, ULONG data ) (a0,d0)
==alias
VOID Wack_WritePointer( APTR address, APTR data ) (a0,d0)

struct Library *Wack_FindLibrary( STRPTR library ) (a0)

ULONG Wack_ReadString( STRPTR address, APTR buffer, ULONG maxlen ) (a0,a1,d0)
ULONG Wack_ReadBSTR( STRPTR address, APTR buffer, ULONG maxlen ) (a0,a1,d0)

APTR Wack_ReadContextAddr() ()
VOID Wack_WriteBlock( APTR address, APTR buffer, ULONG size ) (a0,a1,d0)
ULONG Wack_Call(APTR addr) (a0)

==end
@


39.4
log
@added writeblock
@
text
@d1 1
a1 1
==id $Id: wack_lib.sfd,v 39.3 93/04/27 14:42:38 peter Exp Locker: jesup $
d41 1
@


39.3
log
@Write functions no longer return anything.
@
text
@d1 1
a1 1
==id $Id: wack_lib.sfd,v 39.2 93/03/18 16:28:36 peter Exp Locker: peter $
d40 1
@


39.2
log
@Added Wack_ReadContextAddr().
@
text
@d1 1
a1 1
==id $Id: wack_lib.sfd,v 39.1 92/11/02 17:09:40 peter Exp Locker: peter $
d28 3
a30 3
UBYTE Wack_WriteByte( APTR address, UBYTE data ) (a0,d0)
UWORD Wack_WriteWord( APTR address, UWORD data ) (a0,d0)
ULONG Wack_WriteLong( APTR address, ULONG data ) (a0,d0)
d32 1
a32 1
APTR Wack_WritePointer( APTR address, APTR data ) (a0,d0)
@


39.1
log
@Added Wack_ReadString() and Wack_ReadBSTR() LVOs.
@
text
@d1 1
a1 1
==id $Id: wack_lib.sfd,v 39.0 92/10/30 15:27:41 peter Exp Locker: peter $
d38 2
@


39.0
log
@Initial RCS check-in.
@
text
@d1 1
a1 1
==id $Id: wack_lib.sfd,v 39.0 92/08/28 13:05:02 peter Exp $
d33 1
d35 4
@
