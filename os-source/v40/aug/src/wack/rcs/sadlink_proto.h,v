head     1.3;
branch   ;
access   ;
symbols  ;
locks    jesup:1.3; strict;
comment  @ * @;


1.3
date     93.04.27.14.38.17;  author peter;  state Exp;
branches ;
next     1.2;

1.2
date     93.03.18.16.27.23;  author peter;  state Exp;
branches ;
next     1.1;

1.1
date     93.03.10.13.03.09;  author peter;  state Exp;
branches ;
next     ;


desc
@Prototypes for access control functions for SAD.
@


1.3
log
@Major rework of link architecture/naming.
@
text
@/*
 * Amiga Grand Wack
 *
 * $Id: sadlink_proto.h,v 1.2 93/03/18 16:27:23 peter Exp Locker: peter $
 *
 */

void SAD_InitLib( APTR afl );
@


1.2
log
@Added SAD_showContext() command.
@
text
@d4 1
a4 1
 * $Id: sadaccess_proto.h,v 1.1 93/03/10 13:03:09 peter Exp Locker: peter $
d8 1
a8 37
LONG SAD_Init( LONG unit );

void SAD_Exit( void );

unsigned long pingSAD( struct SADAPIVars *sav );

void SAD_Forbid( void );

void SAD_Permit( void );

char SAD_GetMemB( void *addr );

short SAD_GetMemW( void *addr );

long SAD_GetMemL( void *addr );

unsigned long SAD_GetStringBlock( void *addr, char *buffer, long maxlen );

void SAD_GetBlock( void *addr, void *buffer, long size );

char SAD_PutMemB( void *addr, char data );

short SAD_PutMemW( void *addr, short data );

long SAD_PutMemL( void *addr, long data );

struct MinList * SAD_obtainValidMemList( void );

void SAD_releaseValidMemList( struct MinList *validlist );

long SAD_ShowError( long error );

void SAD_goTarget( void );

ULONG SAD_getContextAddr( void );

void SAD_showContext( void );
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
 * $Id: sadaccess_proto.h,v 39.1 92/11/02 17:08:19 peter Exp $
d41 4
@
