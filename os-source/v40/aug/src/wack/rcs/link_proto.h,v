head     39.9;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


39.9
date     93.11.05.15.05.17;  author jesup;  state Exp;
branches ;
next     39.8;

39.8
date     93.10.08.16.52.47;  author jesup;  state Exp;
branches ;
next     39.7;

39.7
date     93.06.02.15.50.31;  author peter;  state Exp;
branches ;
next     39.6;

39.6
date     93.05.21.17.33.20;  author peter;  state Exp;
branches ;
next     39.5;

39.5
date     93.05.07.17.07.54;  author peter;  state Exp;
branches ;
next     39.4;

39.4
date     93.04.27.14.38.40;  author peter;  state Exp;
branches ;
next     39.3;

39.3
date     93.03.18.16.26.41;  author peter;  state Exp;
branches ;
next     39.2;

39.2
date     93.03.10.13.05.10;  author peter;  state Exp;
branches ;
next     39.1;

39.1
date     92.11.02.17.07.58;  author peter;  state Exp;
branches ;
next     39.0;

39.0
date     92.10.30.15.23.11;  author peter;  state Exp;
branches ;
next     ;


desc
@Prototypes
@


39.9
log
@added Call function
@
text
@/*
 * Amiga Grand Wack
 *
 * $Id: link_proto.h,v 39.8 93/10/08 16:52:47 jesup Exp Locker: jesup $
 *
 */

LONG ValidAddress( APTR addr );

LONG ValidAddresses( APTR addr, ULONG len );

BYTE ReadByte( APTR addr );

WORD ReadWord( APTR addr );

LONG ReadLong( APTR addr );

#define ReadPointer( addr ) ((APTR)ReadLong( addr ))

void ReadBlock( APTR addr, APTR buffer, ULONG size );

ULONG ReadString( APTR addr, STRPTR buffer, ULONG maxlen );

void WriteByte( APTR addr, BYTE value );

void WriteWord( APTR addr, WORD value );

void WriteLong( APTR addr, LONG value );

void WriteBlock( APTR addr, APTR buffer, ULONG size );

#define WritePointer( addr,value ) WriteLong( addr, (LONG) value )

STRPTR ResumeExecution( void );

STRPTR CallFunction( APTR addr );

struct Node ** ObtainNodeArray( struct List *addr, ULONG size );

void ReleaseNodeArray( struct Node **array );

STRPTR ShowContext( void );

STRPTR ProtectAddresses( char *arg );

APTR OpenLinkLib( STRPTR arg );

void CloseLinkLib( APTR linkbase );

void initLinkLVO( struct LinkFakeLibrary *afl, ULONG count, APTR funcptr );

ULONG lib_stubReturn( void );
@


39.8
log
@added writeblock
@
text
@d4 1
a4 1
 * $Id: link_proto.h,v 39.7 93/06/02 15:50:31 peter Exp Locker: jesup $
d35 2
@


39.7
log
@Added ValidAddress(), ValidAddresses(), and ReleaseNodeArray() prototypes.
@
text
@d4 1
a4 1
 * $Id: link_proto.h,v 39.6 93/05/21 17:33:20 peter Exp Locker: peter $
d29 2
@


39.6
log
@Command functions now return NULL string.
@
text
@d4 1
a4 1
 * $Id: link_proto.h,v 39.5 93/05/07 17:07:54 peter Exp Locker: peter $
d8 4
d35 2
@


39.5
log
@Added support for ObtainNodeArray(), and address protection control.
@
text
@d4 1
a4 1
 * $Id: link_proto.h,v 39.4 93/04/27 14:38:40 peter Exp Locker: peter $
d28 1
a28 1
void ResumeExecution( void );
d32 1
a32 1
void ShowContext( void );
d34 1
a34 1
void ProtectAddresses( char *arg );
@


39.4
log
@Major rework of link architecture/naming.
@
text
@d4 1
a4 1
 * $Id: link_proto.h,v 39.3 93/03/18 16:26:41 peter Exp Locker: peter $
d30 2
d33 2
@


39.3
log
@Added showContext().
@
text
@d4 1
a4 1
 * $Id: access_proto.h,v 39.2 93/03/10 13:05:10 peter Exp Locker: peter $
d8 1
a8 1
void wackForbid( void );
d10 1
a10 1
void wackPermit( void );
d12 23
a34 23
char PutMemB( void *addr, char val );

short PutMem( void *addr, short val );

long PutMemL( void *addr, long val );

char GetMemB( void *addr );

short GetMem( void *addr );

long GetMemL( void *addr );

unsigned long GetStringBlock( void *addr, char *buffer, long maxlen );

void getBlock( void *addr, void *buffer, long size );

#define GetMemP( addr ) ((void *)GetMemL( addr ))

struct MinList * obtainValidMemList( void );

void releaseValidMemList( struct MinList *validlist );

void goTarget( void );
d36 1
a36 1
ULONG getContextAddr( void );
d38 1
a38 1
void showContext( void );
@


39.2
log
@Added goTarget() function.
@
text
@d4 1
a4 1
 * $Id: access_proto.h,v 39.1 92/11/02 17:07:58 peter Exp Locker: peter $
d35 4
@


39.1
log
@Prototyped GetStringBlock().
@
text
@d4 1
a4 1
 * $Id: access_proto.h,v 39.0 92/10/30 15:23:11 peter Exp Locker: peter $
d33 2
@


39.0
log
@Initial RCS check-in.
@
text
@d4 1
a4 1
 * $Id: $
d23 2
@
