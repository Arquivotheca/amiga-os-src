head     39.7;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


39.7
date     93.11.05.15.04.33;  author jesup;  state Exp;
branches ;
next     39.6;

39.6
date     93.10.08.16.52.07;  author jesup;  state Exp;
branches ;
next     39.5;

39.5
date     93.05.21.17.36.20;  author peter;  state Exp;
branches ;
next     39.4;

39.4
date     93.05.03.14.40.03;  author peter;  state Exp;
branches ;
next     39.3;

39.3
date     93.04.27.14.42.15;  author peter;  state Exp;
branches ;
next     39.2;

39.2
date     93.03.18.16.28.31;  author peter;  state Exp;
branches ;
next     39.1;

39.1
date     92.11.02.17.09.33;  author peter;  state Exp;
branches ;
next     39.0;

39.0
date     92.10.30.15.25.55;  author peter;  state Exp;
branches ;
next     ;


desc
@Prototypes.
@


39.7
log
@added Call function
@
text
@/*
 * Amiga Grand Wack
 *
 * $Id: wackbase_proto.h,v 39.6 93/10/08 16:52:07 jesup Exp Locker: jesup $
 *
 */

STRPTR runCommand( char *arg1, char *arg2 );

STRPTR runWackCommand( char *arg1, char *arg2 );

struct WackLibBase * InitWackBase( void );

void FreeWackBase( struct WackLibBase *wackbase );

STRPTR WackPortName( void );

void initFunction( struct WackFakeLibrary *wfl, ULONG count, APTR funcptr );

ULONG wacklib_stubReturn( void );

void __asm lib_VPrintf( register __a0 STRPTR fmt, register __a1 ULONG *arglist );

APTR __asm lib_ReadCurrAddr( void );

APTR __asm lib_WriteCurrAddr( register __a0 APTR address );

APTR __asm lib_WriteSpareAddr( register __a0 APTR address );

APTR __asm lib_ReadSpareAddr( void );

ULONG __asm lib_ReadByte( register __a0 APTR address );

ULONG __asm lib_ReadWord( register __a0 APTR address );

ULONG __asm lib_ReadLong( register __a0 APTR address );

VOID __asm lib_ReadBlock( register __a0 APTR address, register __a1 APTR buffer,
	register __d0 ULONG size );

void __asm lib_WriteByte( register __a0 APTR address, register __d0 UBYTE data );

void __asm lib_WriteWord( register __a0 APTR address, register __d0 UWORD data );

void __asm lib_WriteLong( register __a0 APTR address, register __d0 ULONG data );

VOID __asm lib_WriteBlock( register __a0 APTR address, register __a1 APTR buffer,
			   register __d0 ULONG size );

struct Library * __asm lib_FindLibrary( register __a0 STRPTR library );

ULONG __asm lib_ReadString( register __a0 APTR address, register __a1 APTR buffer, register __d0 ULONG maxlen );

ULONG __asm lib_ReadBSTR( register __a0 APTR address, register __a1 APTR buffer, register __d0 ULONG maxlen );

APTR __asm lib_ReadContextAddr( void );

ULONG __asm lib_Call( register __a0 APTR address);
@


39.6
log
@added Writeblock
@
text
@d4 1
a4 1
 * $Id: wackbase_proto.h,v 39.5 93/05/21 17:36:20 peter Exp Locker: jesup $
d57 2
@


39.5
log
@Command functions now return NULL string.
@
text
@d4 1
a4 1
 * $Id: wackbase_proto.h,v 39.4 93/05/03 14:40:03 peter Exp Locker: peter $
d46 3
@


39.4
log
@Changes to allow operation without ARexx.
@
text
@d4 1
a4 1
 * $Id: wackbase_proto.h,v 39.3 93/04/27 14:42:15 peter Exp Locker: peter $
d8 1
a8 1
void runCommand( char *arg1, char *arg2 );
d10 1
a10 1
void runWackCommand( char *arg1, char *arg2 );
@


39.3
log
@Write functions no longer return anything.
@
text
@d4 1
a4 1
 * $Id: wackbase_proto.h,v 39.2 93/03/18 16:28:31 peter Exp Locker: peter $
d12 1
a12 1
struct MsgPort * InitWackBase( void );
d14 3
a16 1
void FreeWackBase( struct MsgPort *wackbase );
@


39.2
log
@Added Wack_ReadContextAddr().
@
text
@d4 1
a4 1
 * $Id: wackbase_proto.h,v 39.1 92/11/02 17:09:33 peter Exp Locker: peter $
d18 1
a18 1
ULONG lib_stubReturn( void );
d39 1
a39 1
ULONG __asm lib_WriteByte( register __a0 APTR address, register __d0 UBYTE data );
d41 1
a41 1
ULONG __asm lib_WriteWord( register __a0 APTR address, register __d0 UWORD data );
d43 1
a43 1
ULONG __asm lib_WriteLong( register __a0 APTR address, register __d0 ULONG data );
@


39.1
log
@Added lib_ReadString() and lib_ReadBSTR().
@
text
@d4 1
a4 1
 * $Id: wackbase_proto.h,v 39.0 92/10/30 15:25:55 peter Exp Locker: peter $
d50 2
@


39.0
log
@Initial RCS check-in.
@
text
@d4 1
a4 1
 * $Id: $
d46 4
@
