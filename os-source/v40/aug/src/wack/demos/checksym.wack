/* CheckSym.wack
 *
 * (c) Copyright 1992-1993 Commodore-Amiga, Inc.  All rights reserved.
 *
 * This software is provided as-is and is subject to change; no warranties
 * are made.  All use is at your own risk.  No liability or responsibility
 * is assumed.
 *
 * Uses checksym to look up the specified symbol/address.
 *
 * Bind with 'bindrx where checksym'
 *       and 'bindrx whereis checksym indirect'
 *
 */

options results
indirect = 0
address = ""

if ( arg() > 0 ) then
DO
	address = arg(1)
	if ( upper(left(address,8)) == "INDIRECT" ) then
	DO
		address = substr(address,9)
		indirect = 1
	END
END

if ( address = "" ) then
DO
	currentaddr
	address = result
END
if ( indirect ) then
DO
	readlong address
	address = result
END

options failat 21
address command "checksym" address ">ram:_symout"
checksymrc = rc

call open 'symout', "RAM:_symout"
done = 0
DO until (done)
	line = readln('symout')
	if (eof('symout')) then
		done = 1
	else
		answer = line
END
DO
	if ( ( checksymrc = 0 ) & ( left(answer,1) ~= '<' ) ) then
	DO
		print answer
		parse var answer "Address $" addr .
		SpareAddr addr
	END
	else
	DO
		/* Devolve to internal symbol search */
		where address
	END
END
exit
