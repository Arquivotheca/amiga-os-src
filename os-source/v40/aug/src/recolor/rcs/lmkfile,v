head     37.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


37.2
date     91.05.02.18.37.14;  author mks;  state Exp;
branches ;
next     37.1;

37.1
date     91.05.02.18.31.51;  author mks;  state Exp;
branches ;
next     37.0;

37.0
date     91.02.15.12.19.10;  author mks;  state Exp;
branches ;
next     ;


desc
@Makefile for Recolor tool
@


37.2
log
@Fully set up for V:aug/bin  and aug/doc and aug/src
@
text
@#
# lmkfile for recolor
#

#
# Server directory for the data...
#
REMOTE = V:aug/src/Recolor

#
# Name of the module
#
MODNAME	= recolor

#
# The ".LD" file we want to produce.
#
LD_FILE	= $(MODNAME).ld
LD_STRIP= $(MODNAME)

#
# Compiler, assembler, and linker
#
CC = lc
AS = casm -a
LN = blink

#
# Compiler flags...
#
CFLAGS	= -b1 -v -rr -cfistqm -d2 -O

#
# Assembler flags...  NOTE how they are used below...
#
AFLAGS	= -csy -i include: -o

#
# Linker flags
#
LFLAGS		= ADDSYM SMALLCODE SMALLDATA MAP $(MODNAME).map HLSXF PLAIN SWIDTH 16 DEFINE @@_main=@@_tinymain
LFLAGS_STRIP	= ND

#
# System libraries
#
LIBS= LIB:lcr.lib LIB:amiga.lib

#
# My headers...
#
MY_HDR	=

#
# My C source...
#
MY_C	=	recolor.c

#
# My Assebly source...
#
MY_A	=

#
# My object files...
#
MY_OBJS	=	LIB:c.o recolor.o

#
# My library objects...
#
MY_LIB_OBJS =

#
# My library files...
#
MY_LIBS	=

#
# Build the stripped LD file...
#
$(LD_STRIP):	$(LD_FILE)
	$(LN) FROM $(LD_FILE) TO $(LD_STRIP) $(LFLAGS_STRIP)

#
# Build the LD file...
#
$(LD_FILE):	$(MY_OBJS) $(MY_LIBS)
	$(LN) <with <
FROM $(MY_OBJS)
TO $(LD_FILE)
LIB $(MY_LIBS) $(LIBS)
$(LFLAGS)
<


#
# Default rules...
#
.c.o:
	$(CC) $(CFLAGS) $*.c

.asm.o:
	$(AS) $*.asm $(AFLAGS) $*.o

#
# Specific dependancies...
#
recolor.o:	recolor.c recolor_rev.h

#
# Bump the version...
#
version:
	@@bumprev 37 $(MODNAME)_rev

#
# Release the current build to the server
#
internal:
	@@delete $(REMOTE)/((\#?.(c|h|asm|i|ld|rev|doc))|makefile|lmkfile)
	@@protect ((\#?.(c|h|asm|i|ld|rev|doc))|makefile|lmkfile) +r QUIET
	@@copy ((\#?.(c|h|asm|i|ld|rev|doc))|makefile|lmkfile) $(REMOTE)
	@@copy $(LD_STRIP) $(REMOTE)
	@@copy $(MODNAME).info $(REMOTE)
	@@copy $(MODNAME) V:aug/bin
	@@copy $(MODNAME).info V:aug/bin
	@@copy $(MODNAME).doc V:aug/doc

#
# Blow away all files that would need to be rebuilt
#
clean:
	@@delete \#?.(o|ld|doc)

#
# Make the AutoDocs
#
doc:	$(MODNAME).doc

$(MODNAME).doc:	$(MY_C) $(MY_A)
	@@Echo "Making $(MODNAME).doc"
	@@Join $(MY_C) $(MY_A) as RAM:$(MODNAME).tmp.doc
	@@AutoDoc >$(MODNAME).doc -a RAM:$(MODNAME).tmp.doc
	@@Delete RAM:$(MODNAME).tmp.doc QUIET
	@@Protect $(MODNAME).doc rwd

#
# Make a complete new release (This still is in testing...)
#
release:
	lmk clean
	lmk version
	lmk doc
	lmk $(LD_FILE)
	lmk $(LD_STRIP)
	lmk internal

#
# The following rule is to bring the source down to the local directory
# To do the following you should copy this LMKfile to the local directory
# and make sure it is readable.  Then type MAKE ToLocal to have the
# code copied down...
#
tolocal:
	@@protect \#? rwed QUIET
	@@copy $(REMOTE)/\#? ""
	@@protect \#? +r QUIET
	@@protect \#?_rev\#? rwd QUIET
	@@Echo "Local is updated..."
@


37.1
log
@Changed to be in V:aug/bin
@
text
@d126 3
@


37.0
log
@Initial release
@
text
@d8 1
a8 1
REMOTE = V:src/workbench/utilities/recolor
@
