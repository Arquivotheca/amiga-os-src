This is yet another lens program.  I did this after having
written a *VERY* fast magnify routine.  It was rather trivial
as you can see by the source code: MKS_Lens.c  The Magnify
routine is in Magnify.asm and is as close to optimal as I can
make.  (Only 3 lines optimized by CAPE, so there are some, but
CAPE takes care of that...)

To use, just run from the CLI or WorkBench.

The gadgets are:

Bottom-Left:  The HashMark:  This turns on/off the pixel grid.

              The "+":       This turns on/off the pointer
                             crosshairs.

              The "F":       This turns on/off the "FAST" mode.
                             In Normal use, the program does a
                             Delay() between each update.  With
                             "FAST" on, it will do the updates as
                             quickly as possible...

              The "J":       This is a "Hack" option and should
                             be used "At Your Own Risk"  What this
                             does is "JUMP" the lens to the next
                             screen.  Since this goes to ANY screen
                             and not just PUBLIC screens, this is
                             not a system-legal operation.  Do not
                             complain if you have problems while
                             using this option.

Bottom-Right: The +/- gads:  These change the magnification factor
                             in either X or Y.  The magnification
                             factor is limited to the range of
                             [1,16] (closed interval)

                             Shift-Clicking on the gadget will change
                             both X and Y if possible.
                             (That is:  If you Shift-Click the X+
                              and X can be increased then Y will be
                              increased)

Keyboard:

Display Lock:	F10 or ScrL	This locks the lens to the current display
				position.  Thie makes it possible to move the
				mouse and still see the same location on the
				display.

Clear Origin:	F1		This clears the origin set by the SetOrigin

Set Origin:	F2		This sets the current position as the 0,0
				origin.  This is useful for measurement
				and for dealing within window coordinate
				space.

/----------------------------------------------------------------------\
|      /// Michael Sinz  -  Senior Amiga Software Engineer             |
|     ///                   Operating System Development Group         |
|    ///   BIX:  msinz      UUNET:  rutgers!cbmvax!mks                 |
|\\\///                                                                |
| \XX/     Quantum Physics:  The Dreams that Stuff is made of.         |
\----------------------------------------------------------------------/
