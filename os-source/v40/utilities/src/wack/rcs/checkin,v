head     1.5;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.5
date     88.01.21.18.52.23;  author jimm;  state Exp;
branches ;
next     1.4;

1.4
date     88.01.21.18.38.35;  author jimm;  state Exp;
branches ;
next     1.3;

1.3
date     88.01.21.18.35.47;  author jimm;  state Exp;
branches ;
next     1.2;

1.2
date     88.01.21.18.18.46;  author jimm;  state Exp;
branches ;
next     1.1;

1.1
date     88.01.21.17.58.36;  author jimm;  state Exp;
branches ;
next     ;


desc
@script to check in the files
@


1.5
log
@handles more than one argument now.
@
text
@#!/bin/csh -f
# you'll like this:
#	you can do all the existing RCS files by giving no args,
#	or, you can give local file names as args
#	I don't know if you can add a file to the RCS using this.

set sourced=/batgirl/pub/src/wack

if ( $#argv == 0 ) then
    set args = $sourced/RCS/*
else
    set args = ($*)
endif

foreach file ($args)
    set local=`basename $file ,v`
    set base=$local:r
    set file = $sourced/RCS/$local,v

    # if writable, try to check it in, copy new (read-only) version
    # to sourced, copy .o up if it exists

    if ( -w $local ) then
	echo 
	echo checkin $local
	ci -u $file

	echo update copy in source directory
	pushd $sourced
	co $local
	popd

	# CAN'T HANDLE IT cp $local $sourced
	if ( -e $base.o ) then
	    echo copying $base.o to source directory
	    cp $base.o  $sourced
	else
	    echo no $base.o to copy
	endif
    else
	echo skip $local
    endif
end

if ( -e tags ) cp tags $sourced
@


1.4
log
@oops, I left a bug in.
@
text
@d12 1
a12 1
    set args = $*
@


1.3
log
@now takes local args, default does all files in RCS directory.
@
text
@d10 1
a10 1
    set args = $sourced/RCS/showi.c,v
@


1.2
log
@still working on it
@
text
@d2 4
d9 7
a15 1
foreach file ($sourced/RCS/*)
d18 1
@


1.1
log
@Initial revision
@
text
@d5 1
a5 2
#foreach file ($sourced/RCS/*)
foreach file ($sourced/RCS/showi.c,v)
d13 1
d16 2
d21 1
d27 1
a27 1
	    no $base.o to copy
d33 2
@
