head     36.2;
access   ;
symbols  ;
locks    kodiak:36.2; strict;
comment  @*   @;


36.2
date     90.03.05.11.44.01;  author kodiak;  state Exp;
branches ;
next     36.1;

36.1
date     89.04.11.13.37.04;  author kodiak;  state Exp;
branches ;
next     36.0;

36.0
date     89.04.11.13.00.23;  author kodiak;  state Exp;
branches ;
next     ;


desc
@@


36.2
log
@checkin 89/04/18 version before changing
@
text
@#! /bin/csh -fe
#
#	bumprev [-d] <version> <revname> <dependencies>
#
set desperate=0

if (($#argv > 0) && ("$1" == "-d")) then
    set desperate=1
    shift
endif

if ($#argv < 2) then
    echo "Usage: $0 [-d] <version> <revname> [<dependencies>]"
    exit 1
endif

set revision=0
if (-f $2.rev) then
    set revision=`cat $2.rev`
    if ($#argv > 2) then
	set truebump=(`find $argv[3-] ! -name "*_rev.*" -newer $2.rev -print`)
    else
	set truebump=()
    endif
    if (($#truebump == 0) && (-e $2.h) && (-e $2.i)) then
	echo "bumprev: did not bump $2 from rev $revision -- already up to date"
	exit 0
    endif
endif

rm -rf $2.h $2.i
@@ revision++

echo $revision > $2.rev

set rawdate=(`date`)
set date="$rawdate[3] $rawdate[2] $rawdate[6]"
set subsys=`basename $2 _rev`
set vers="$subsys $1.$revision"

echo   "VERSION		EQU	$1"		>> $2.i
echo   "REVISION	EQU	$revision"	>> $2.i
echo   "DATE	MACRO" 				>> $2.i
echo   "		dc.b	'$date'" 	>> $2.i
echo   "	ENDM" 				>> $2.i
echo   "VERS	MACRO" 				>> $2.i
echo   "		dc.b	'$vers'"	>> $2.i
echo   "	ENDM" 				>> $2.i
echo   "VSTRING	MACRO" 				>> $2.i
if ($desperate) then
    echo   "		dc.b	'$vers',13,10,0" >> $2.i
else
    echo   "		dc.b	'$vers ($date)',13,10,0" >> $2.i
endif
echo   "		ds.w	0" 		>> $2.i
echo   "	ENDM" 				>> $2.i

echo   "#define	VERSION		$1"		>> $2.h
echo   "#define	REVISION	$revision"	>> $2.h
echo   '#define	DATE	"'"$date"'"'		>> $2.h
echo   '#define	VERS	"'"$vers"'"'		>> $2.h

if ($desperate) then
    echo   '#define	VSTRING	"'"$vers\n\r"'"' >> $2.h
    echo "bumprev: bumped $2 to rev $revision without date in VSTRING"
else
    echo   '#define	VSTRING	"'"$vers ($date)\n\r"'"' >> $2.h
    echo "bumprev: bumped $2 to rev $revision"
endif

exit 0
@


36.1
log
@eliminate double bumping (associated w/ change in makemeta)
@
text
@d3 1
a3 1
#	bumprev <version> <revname> <dependencies>
d5 9
a13 2
if ($#argv < 3) then
    echo "Usage: $0 <version> <revname> <dependencies>"
d20 6
a25 2
    set truebump=(`find $3 -newer $2.rev -print`)
    if ($#truebump == 0) then
d50 5
a54 1
echo   "		dc.b	'$vers ($date)',13,10,0" >> $2.i
a61 1
echo   '#define	VSTRING	"'"$vers ($date)\n\r"'"' >> $2.h
d63 7
a69 1
echo "bumprev: bumped $2 to rev $revision"
@


36.0
log
@*** empty log message ***
@
text
@d3 1
a3 1
#	bumprev <version> <dependency>
d5 2
a6 2
if ($#argv != 2) then
    echo "Usage: $0 <version> <dependency>"
d13 5
d49 1
a49 1
echo "bumped $2 to rev $revision"
@
