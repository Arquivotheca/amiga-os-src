Mblib	blib.c	/^main(argc, argv)$/
Mtest	test.c	/^main()$/
abortassembly	asm1.c	/^abortassembly()$/
abs16addr	asm5.c	/^int abs16addr ( addr )$/
absolute	asm6.c	/^int absolute ( ea )$/
addextrnref	asm6.c	/^addextrnref ( symbol, address, size )$/
addref	asm7.c	/^addref ( p, ln )$/
align	asm6.c	/^align ( boundary )$/
alignbuffers	asm2.c	/^alignbuffers ( )$/
aligned	asm2.c	/^int aligned ( boundary )$/
allocatevecs	asm2.c	/^allocatevecs ( )$/
amendlocvalues	asm2.c	/^amendlocvalues ( )$/
amigacodemodule	asm9.c	/^amigacodemodule(csize, cvec, type)$/
amigaget	asm4.c	/^amigaget ( file )$/
amigahunkname	asm9.c	/^amigahunkname ( s, sysword )$/
amigamodule	asm9.c	/^amigamodule ( )$/
amigarelocblock	asm9.c	/^amigarelocblock ( relptr, sysword, snumber )$/
amigarelocinfo	asm9.c	/^amigarelocinfo ( snumber )$/
amigasymboldump	asm9.c	/^int amigasymboldump ( snum, flag )$/
amigaxdefs	asm9.c	/^int amigaxdefs ( snum, outflag )$/
amigaxrefs	asm9.c	/^int amigaxrefs ( snum, size, result )$/
asmerror	asm7.c	/^asmerror ( code, fatal )$/
bclose	blib.c	/^bclose(scb)$/
bflush	blib.c	/^bflush()$/
block1	asm7.c	/^struct EXPRESSNODE *block1 ( a )$/
block2i	asm7.c	/^struct EXPRESSNODE *block2i ( a, b )$/
block2p	asm7.c	/^struct EXPRESSNODE *block2p ( a, b )$/
block3ii	asm7.c	/^struct EXPRESSNODE *block3ii ( a, b, c )$/
block3pp	asm7.c	/^struct EXPRESSNODE *block3pp ( a, b, c )$/
bopen	blib.c	/^SCBPTR bopen(name,mode)$/
bst2cst	blib.c	/^bst2cst( s1, s2 )$/
bytesize	asm6.c	/^int bytesize ( size )$/
bytesized	asm6.c	/^int bytesized ( operand )$/
capitalch	blib.c	/^int capitalch ( ch )$/
changesection	asm6.c	/^changesection ( flag, ptr, type )$/
checkAform	asm3.c	/^int checkAform()$/
checkIargs	asm3.c	/^long checkIargs(special, newmask)$/
checkIform	asm3.c	/^long checkIform()$/
checkcmpm	asm3.c	/^int checkcmpm()$/
checkexpression	asm6.c	/^checkexpression ( type )$/
checkfor	asm7.c	/^checkfor ( symbol, msgnumber )$/
checklabel	asm6.c	/^checklabel ( possible )$/
checklabel_and_none	asm4.c	/^checklabel_and_none ( flag )$/
checknone	asm4.c	/^checknone ( )$/
checkopen	asm1.c	/^checkopen ( stream, r2, name, type )$/
checkregister	asm6.c	/^int checkregister ( reg )$/
checkshort	asm3.c	/^checkshort()$/
checksuffix	asm7.c	/^checksuffix ( s )$/
checktagsize	asm6.c	/^checktagsize ( )$/
clearbits	asm6.c	/^clearbits ( )$/
clearbuffer	asm6.c	/^clearbuffer ( )$/
closefile	asm1.c	/^closefile( stream )$/
coagulatesections	asm9.c	/^coagulatesections ( p_erel32, p_eabs32, p_erel16, /
codebyte	asm6.c	/^codebyte ( b )$/
codebytes	asm6.c	/^codebytes ( dsize, dvalue )$/
codeline	asm6.c	/^codeline ( )$/
codeword	asm6.c	/^codeword ( w )$/
compch	blib.c	/^int compch( ch1, ch2 )$/
complain	asm7.c	/^complain ( code )$/
compstring	blib.c	/^int compstring( s1, s2 )$/
countextrnsymbols	asm9.c	/^word countextrnsymbols ( offset )$/
countrelocs	asm9.c	/^int countrelocs ( relptr, flag, s_in, s_wrt )$/
countxrefs	asm9.c	/^word countxrefs ( refs, relflag, absflag )$/
cst2bst	blib.c	/^cst2bst( s1, s2 )$/
declare	asm7.c	/^declare ( w )$/
declsyswords	asm8.c	/^declsyswords ( )$/
default_rdch	blib.c	/^int default_rdch()$/
default_unrdch	blib.c	/^int default_unrdch()$/
default_wrch	blib.c	/^int default_wrch(c)$/
definebyte	asm6.c	/^definebyte ( )$/
defineconstantblock	asm6.c	/^defineconstantblock ( size )$/
defineconstants	asm6.c	/^defineconstants ( size )$/
definestorage	asm6.c	/^definestorage ( size )$/
defineword	asm6.c	/^defineword ( size, bs )$/
destack_NARG	asm2.c	/^destack_NARG ( )$/
digits	asm2.c	/^int digits ( value )$/
digitval	asm5.c	/^int digitval ( character )$/
dodir	asm4.c	/^dodir()$/
doget	asm4.c	/^int doget ( inputstream, filename )$/
doidnt	asm4.c	/^doidnt ( namevec )$/
doinstr	asm2.c	/^doinstr ( )$/
dolen	asm4.c	/^dolen ( fixedflag, err1, rmin, rmax, err2, parm )$/
doline	asm2.c	/^doline ( )$/
dolist	asm4.c	/^dolist ( parm )$/
domacro	asm2.c	/^domacro()$/
doreg	asm3.c	/^doreg ( )$/
dosection	asm4.c	/^dosection ( namevec )$/
dumpsymboltable	asm9.c	/^dumpsymboltable ( criterion )$/
eafield	asm6.c	/^int eafield ( )$/
effective_address	asm5.c	/^struct EXPRESSNODE *effective_address ( )$/
endread	blib.c	/^endread( )$/
endwrite	blib.c	/^endwrite( )$/
error	asm7.c	/^error ( code )$/
evalexp	asm5.c	/^int evalexp ( ptr )$/
evalm	asm3.c	/^int evalm ( ptr )$/
evalnumexp	asm5.c	/^int evalnumexp ( ptr )$/
evaluate	asm5.c	/^evaluate ( ptr )$/
expandmacro	asm2.c	/^expandmacro ( macroptr, argvec, narg )$/
expression	asm5.c	/^struct EXPRESSNODE *expression()$/
expspace	asm7.c	/^struct EXPRESSNODE *expspace()$/
factor	asm5.c	/^struct EXPRESSNODE *factor()$/
finaltype	asm5.c	/^int finaltype ( type1, type2, op, value )$/
findarg	blib.c	/^int findarg ( keys, w )$/
findinput	blib.c	/^SCBPTR findinput( name, binary )$/
findoutput	blib.c	/^SCBPTR findoutput( name, binary )$/
firstpass	asm2.c	/^firstpass()$/
freenewvec	asm7.c	/^long freenewvec ( )$/
freevec	blib.c	/^freevec( ptr )$/
freevectors	asm1.c	/^freevectors( upb, a, b, c, d, e, f, g, h, i1, j, k/
gbytes	blib.c	/^long gbytes(v,size)$/
genIform	asm3.c	/^genIform ( imask )$/
genNform	asm3.c	/^genNform ( sz )$/
gencmpm	asm3.c	/^gencmpm()$/
genea	asm6.c	/^genea ( )$/
generalmove	asm3.c	/^generalmove()$/
generate	asm6.c	/^generate ( masktype )$/
genmove	asm3.c	/^genmove ( )$/
genmovea	asm3.c	/^genmovea ( )$/
genmovem	asm3.c	/^genmovem ( )$/
genmovep	asm3.c	/^genmovep ( )$/
genmoveq	asm3.c	/^genmoveq()$/
get_operands	asm3.c	/^get_operands ( )$/
getbyte	blib.c	/^int getbyte(v,offset)$/
getscb	blib.c	/^SCBPTR getscb( ch_id )$/
getstring	asm4.c	/^getstring ( ptr, n )$/
getsymbolnumber	asm9.c	/^word getsymbolnumber ( name )$/
getvec	blib.c	/^int *getvec( upb )$/
gvec	asm7.c	/^int *gvec ( n )$/
heap2i	asm7.c	/^struct REFNODE *heap2i ( a, b )$/
heap2p	asm7.c	/^struct XDEFNODE *heap2p ( a, b )$/
heap3ip	asm7.c	/^struct MACRONODE *heap3ip ( a, b, c )$/
heap3pp	asm7.c	/^struct CROSSREFNODE *heap3pp ( a, b, c )$/
heap4	asm7.c	/^struct RELOCNODE *heap4 ( a, b, c, d )$/
initlocvalues	asm2.c	/^initlocvalues ( )$/
input	blib.c	/^SCBPTR input()$/
insert_name	asm1.c	/^struct DIRNODE *insert_name( ptr, strstart, length/
intelcodeblock	asm9.c	/^intelcodeblock ( ptr )$/
intelhexmodule	asm9.c	/^intelhexmodule ( )$/
intelrelocblock	asm9.c	/^intelrelocblock ( absm )$/
listEQU	asm3.c	/^listEQU ( restype )$/
listline	asm6.c	/^listline ( )$/
lookup	asm7.c	/^lookup ( tagvector )$/
makefilelist	asm1.c	/^makefilelist( s, sysdef )$/
modifyxrefs	asm9.c	/^word modifyxrefs ( count, ptr )$/
motorolamodule	asm9.c	/^motorolamodule ( )$/
movesize	asm3.c	/^int movesize ( size )$/
msg	asm7.c	/^char *msg ( code )$/
mydebug	blib.c	/^mydebug(s1,s2,a,b,c,d,e,f,g,h,i,j,k,l)$/
newasmlabel	asm2.c	/^int newasmlabel ( )$/
newline	blib.c	/^newline ( )$/
newvec	asm7.c	/^int *newvec ( n )$/
newvec1	asm7.c	/^struct NEWVECNODE *newvec1 ( n )$/
newvecerr	asm7.c	/^newvecerr ( n )$/
nextline	asm7.c	/^nextline ( )$/
nextsymb	asm6.c	/^nextsymb ( )$/
note	blib.c	/^long note( scb, p )$/
output	blib.c	/^SCBPTR output()$/
pageheading	asm6.c	/^pageheading ( )$/
pbytes	blib.c	/^pbytes(v,size,w)$/
point	blib.c	/^long point(scb,p)$/
pointword	blib.c	/^long pointword( n )$/
pop_cd	asm4.c	/^pop_cd()$/
preparedefaultbuffer	asm6.c	/^preparedefaultbuffer ( )$/
primary	asm5.c	/^struct EXPRESSNODE *primary ( )$/
printbanner	asm1.c	/^printbanner ( )$/
printbuffer	asm6.c	/^printbuffer ( )$/
printequates	asm1.c	/^printequates ( stream, sourcename )$/
printline	asm6.c	/^printline ( )$/
printnode	asm1.c	/^printnode ( node )$/
printxreftable	asm1.c	/^printxreftable ( )$/
processlabel	asm2.c	/^processlabel ( )$/
push_cd	asm4.c	/^push_cd(name,namelength)$/
putbyte	blib.c	/^putbyte(v,offset,b)$/
putinxreftable	asm1.c	/^putinxreftable ( node, ptr )$/
rch	asm7.c	/^rch ( )$/
rdargs	blib.c	/^string rdargs ( keys, argv, size )$/
rdch	blib.c	/^int rdch()$/
rdgetc	blib.c	/^int rdgetc ( )$/
rditem	blib.c	/^int rditem ( vword, size )$/
rdungetc	blib.c	/^int rdungetc()$/
readbytes	blib.c	/^long readbytes( buff, n )$/
readline	asm7.c	/^int readline ( )$/
readmult	asm3.c	/^struct EXPRESSNODE *readmult()$/
readn	blib.c	/^long readn ( )$/
readnumber	asm5.c	/^long readnumber ( base )$/
readreg	asm3.c	/^struct EXPRESSNODE *readreg()$/
readstring	asm4.c	/^int readstring ( namevec )$/
readsymb	asm5.c	/^readsymb ( )$/
readtag	asm7.c	/^readtag ( )$/
readwords	blib.c	/^long readwords( buf , n )$/
relocatable	asm6.c	/^int relocatable ( ea )$/
relocate	asm6.c	/^relocate ( address, size, wrt )$/
resetflags	asm4.c	/^resetflags ( )$/
reverse	asm3.c	/^int reverse ( bits )$/
rewind	asm2.c	/^int rewind ( name )$/
secondary	asm5.c	/^struct EXPRESSNODE *secondary()$/
secondpass	asm2.c	/^secondpass ()$/
selectinput	blib.c	/^selectinput(scb)$/
selectoutput	blib.c	/^selectoutput(scb)$/
setlabel	asm4.c	/^setlabel(type, value, alterable)$/
setloc	asm6.c	/^setloc ( newloc )$/
settitle	asm4.c	/^settitle ( str )$/
sizefield	asm6.c	/^int sizefield ( size )$/
sizevalue	asm5.c	/^int sizevalue ( sizebit )$/
skiplayout	asm7.c	/^skiplayout ( )$/
skiprest	asm7.c	/^skiprest ( )$/
spacelines	asm6.c	/^spacelines ( n )$/
specialinstruction	asm3.c	/^specialinstruction ( inum )$/
stack_NARG	asm2.c	/^stack_NARG ( newvalue )$/
stackvalue	asm6.c	/^stackvalue ( a, b, c, eref, esymb )$/
start	asm1.c	/^start ()$/
stop	blib.c	/^stop( code )$/
swapoperands	asm6.c	/^swapoperands ( )$/
symbolspresent	asm9.c	/^word symbolspresent ( criterion )$/
systemword	asm9.c	/^systemword ( word )$/
term	asm5.c	/^struct EXPRESSNODE *term ()$/
tidyup	asm1.c	/^tidyup ( rc )$/
toobig	asm9.c	/^word toobig ( v )$/
triposget	asm4.c	/^triposget ( file )$/
triposhunk	asm9.c	/^triposhunk ( sword, csize, messno, relflag, absfla/
triposmodule	asm9.c	/^triposmodule ( )$/
triposrelocblock	asm9.c	/^triposrelocblock ( count, sysword, errorcode, ptr,/
triposrelocinfo	asm9.c	/^triposrelocinfo ( count16, count32, msg1, msg2, re/
triposxdefs	asm9.c	/^triposxdefs ( )$/
triposxrefs	asm9.c	/^triposxrefs ( relflag, absflag )$/
unix4_2module	asm9.c	/^unix4_2module ( )$/
unixcodehunk	asm9.c	/^unixcodehunk ( )$/
unixextrelocinfo	asm9.c	/^unixextrelocinfo ( e_refsx, e_countx, r_length )$/
unixheader	asm9.c	/^unixheader ( ecount )$/
unixnametable	asm9.c	/^unixnametable ( offset )$/
unixrelocinfo	asm9.c	/^unixrelocinfo ( ptr, r_length )$/
unixsymboltable	asm9.c	/^word unixsymboltable ( offset )$/
unrdch	blib.c	/^int unrdch()$/
updatecount	asm6.c	/^updatecount( p_relrcount, p_relacount)$/
updaterelocinfo	asm9.c	/^updaterelocinfo ( ptr, size )$/
updaterelsymbols	asm9.c	/^updaterelsymbols ( )$/
updatexrefs	asm9.c	/^updatexrefs ( p_erel32, p_eabs32, p_erel16, p_erel/
warning	asm7.c	/^warning ( code )$/
wbytes	asm9.c	/^wbytes ( ptr, n )$/
wch	asm6.c	/^wch ( ch )$/
wordsized	asm6.c	/^int wordsized ( operand )$/
wrch	blib.c	/^wrch(c)$/
write0	asm7.c	/^write0 ( number, field )$/
writebyte	asm6.c	/^writebyte ( b )$/
writebytes	asm6.c	/^writebytes ( dsize, dvalue )$/
writechar	asm6.c	/^writechar ( c )$/
writed	blib.c	/^writed ( n, d )$/
writef	blib.c	/^writef ( format, a, b, c, d, e, f, g, h, i, j, k )/
writehex	blib.c	/^writehex ( n, d )$/
writehexvalue	asm6.c	/^writehexvalue ( h, d )$/
writen	blib.c	/^writen ( n )$/
writenumber	asm6.c	/^writenumber ( n, d )$/
writeoct	blib.c	/^writeoct ( n, d )$/
writes	blib.c	/^writes ( s )$/
writestring	asm6.c	/^writestring ( s )$/
writet	blib.c	/^writet ( s, n )$/
writeu	blib.c	/^writeu ( n, d )$/
writeword	asm9.c	/^writeword ( word )$/
writewords	blib.c	/^long writewords( buf, n )$/
writewordvec	asm9.c	/^writewordvec ( wordvec, words )$/
xdefsymbol	asm9.c	/^word xdefsymbol ( name )$/
