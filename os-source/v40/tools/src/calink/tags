DecodeArgs	atom.c	/^DecodeArgs(argc,argv)$/
DisplayExternals	atom.c	/^DisplayExternals()$/
DisplayHunkInfo	atom.c	/^DisplayHunkInfo(type)$/
DisplaySymbolInfo	atom.c	/^DisplaySymbolInfo(type)$/
F0000_initialise_and_read_arguments	init.c	/^F0000_initialise_and_read_arguments ( argv )$/
F0001_initialise	init.c	/^F0001_initialise ( )$/
F0002_read_with_file	init.c	/^F0002_read_with_file ( file )$/
F0003_makefilelist	init.c	/^word* F0003_makefilelist ( s, ignore )$/
F0004_read_number	init.c	/^word F0004_read_number ( s, name, default_value, w/
F0006_ungetch	init.c	/^F0006_ungetch ( )$/
F000A_tidy_up_and_stop	resident.c	/^F000A_tidy_up_and_stop ( )$/
F000B_open	resident.c	/^word F000B_open ( file, name, input ,rawflag)$/
F000C_read_descendents	resident.c	/^F000C_read_descendents ( tree, ov_level, total_siz/
F000D_files_rd	resident.c	/^word F000D_files_rd ( files, name, ov_level, ov_or/
F000E_handle_hunk_name	resident.c	/^word F000E_handle_hunk_name ( )$/
F000F_read_resident_library	resident.c	/^F000F_read_resident_library ( file, library )$/
F0010_file_rd	resident.c	/^word F0010_file_rd ( file, ov_level, ov_ord, files/
F0011_read_extblock	resident.c	/^word* F0011_read_extblock ( library, asymbols, byt/
F0012_lookup	resident.c	/^word* F0012_lookup ( s, type )$/
F0013_insert	resident.c	/^F0013_insert ( s )$/
F0014_delete	resident.c	/^F0014_delete ( s )$/
F0015_hashval	resident.c	/^word F0015_hashval ( s )$/
F0016_symtype	resident.c	/^word F0016_symtype ( w )$/
F0017_scan	resident.c	/^F0017_scan ( f, a1, a2, a3 )$/
F001A_getoptword	resident.c	/^word F001A_getoptword ( )$/
F001B_ungetword	resident.c	/^F001B_ungetword ( )$/
F001C_exhausted	resident.c	/^word F001C_exhausted ( )$/
F001D_getwrds	resident.c	/^F001D_getwrds ( v, n )$/
F001E_replenish_input	resident.c	/^word F001E_replenish_input ( )$/
F001F_discard_words	resident.c	/^F001F_discard_words ( n )$/
F0020_putword	resident.c	/^F0020_putword ( w )$/
F0021_putwrds	resident.c	/^F0021_putwrds ( v, n )$/
F0022_deplete_output	resident.c	/^F0022_deplete_output ( )$/
F0023_vec_get	resident.c	/^word* F0023_vec_get ( size )$/
F0024_vec_free	resident.c	/^F0024_vec_free ( v )$/
F0025_getblk	resident.c	/^word* F0025_getblk ( size )$/
F0026_freesymbol	resident.c	/^F0026_freesymbol ( s )$/
F0027_freereferences	resident.c	/^F0027_freereferences ( r )$/
F0028_handle_pu	resident.c	/^F0028_handle_pu ( count, library )$/
F0029_mess	resident.c	/^F0029_mess ( code, arg1, arg2, arg3, arg4 )$/
F002E_writepuname	resident.c	/^F002E_writepuname ( pu )$/
F002F_dop1	pass1.c	/^F002F_dop1 ( )$/
F0030_setclinknumber	pass1.c	/^F0030_setclinknumber ( h, n, size )$/
F0031_tidy_after_pass1	pass1.c	/^F0031_tidy_after_pass1 ( symbol, lv_messageout, lv/
F0032_pass1_read_library	pass1.c	/^F0032_pass1_read_library ( )$/
F0033_pass1_read_hunk	pass1.c	/^word *F0033_pass1_read_hunk ( type, size, ov_level/
F0034_check_references	pass1.c	/^F0034_check_references ( ref, def )$/
F0035_descends_from	pass1.c	/^word F0035_descends_from ( high, low, count )$/
F0036_add_references	pass1.c	/^F0036_add_references ( sfrom, sto )$/
F0037_add_library_xdef	pass1.c	/^F0037_add_library_xdef ( symbol )$/
F0038_add_library_xref	pass1.c	/^F0038_add_library_xref ( symbol )$/
F0039_scan_pu_list	pass1.c	/^F0039_scan_pu_list ( pu )$/
F003A_setpunode	pass1.c	/^F003A_setpunode ( pu )$/
F003B_scan_pu_xrefs	pass1.c	/^F003B_scan_pu_xrefs ( punode )$/
F003C_scan_hunk_list	pass1.c	/^word F003C_scan_hunk_list ( hunkptr )$/
F003D_is_hunk_required	pass1.c	/^word F003D_is_hunk_required ( hunkptr )$/
F003E_freehunk	pass1.c	/^F003E_freehunk ( hunk )$/
F003F_scan_pu_list_again	pass1.c	/^F003F_scan_pu_list_again ( punode )$/
F0040_tidypunode	pass1.c	/^F0040_tidypunode ( punode )$/
F0041_freepunode	pass1.c	/^F0041_freepunode ( punode )$/
F0042_delete_from_reflist	pass1.c	/^F0042_delete_from_reflist ( list, pu )$/
F0043_read_ovly_supervisor	pass1.c	/^F0043_read_ovly_supervisor ( )$/
F0048_o_map_and_xref	map.c	/^F0048_o_map_and_xref ( )$/
F0049_output_map	map.c	/^F0049_output_map ( )$/
F004A_print_header	map.c	/^F004A_print_header ( h )$/
F004B_print_header2	map.c	/^word F004B_print_header2 ( h )$/
F004C_spaces	map.c	/^F004C_spaces ( n )$/
F004D_newlines	map.c	/^F004D_newlines ( n )$/
F004E_output_xref	map.c	/^F004E_output_xref ( )$/
F0050_make_symbol_lists	map.c	/^F0050_make_symbol_lists ( s )$/
F0051_unmangle_symbol_table	map.c	/^F0051_unmangle_symbol_table ( )$/
F0052_dop2	pass2.c	/^F0052_dop2 ( )$/
F0053_output_root_hunks	pass2.c	/^F0053_output_root_hunks ( )$/
F0054_out_ovs	pass2.c	/^F0054_out_ovs ( )$/
F0055_out_bss_hunk	pass2.c	/^F0055_out_bss_hunk ( hunk )$/
F0056_out_ovly_hunks	pass2.c	/^F0056_out_ovly_hunks ( )$/
F0057_mark_file_position	pass2.c	/^F0057_mark_file_position ( v )$/
F0058_set_file_position	pass2.c	/^F0058_set_file_position ( v )$/
F0059_o_hunk_header	pass2.c	/^F0059_o_hunk_header ( list, count )$/
F005A_output_resident_bits	pass2.c	/^F005A_output_resident_bits ( )$/
F005B_pass2_read_hunk	pass2.c	/^word F005B_pass2_read_hunk ( hunk, name )$/
F005C_do_symbol_relocation	pass2.c	/^F005C_do_symbol_relocation ( symbols, codevec, num/
F005D_getw	pass2.c	/^word F005D_getw ( vector, offset )$/
F005E_add	pass2.c	/^word F005E_add ( vector, offset, value )$/
F005F_construct_ovly_symbol	pass2.c	/^F005F_construct_ovly_symbol ( s, n )$/
F0060_do32ref	pass2.c	/^F0060_do32ref ( codevec, symbol, ref, o, bytebase,/
F0061_doref	pass2.c	/^F0061_doref ( codevec, type, l, ref, o, num, bitsi/
F0062_do32bitreloc	pass2.c	/^F0062_do32bitreloc ( relocvec, codevec, bytebase, /
F0063_dorelocation	pass2.c	/^F0063_dorelocation ( codevec, bitsize, bytesize, m/
F0064_handle_relocvec	pass2.c	/^F0064_handle_relocvec ( relocvec )$/
F0065_read_debug	pass2.c	/^F0065_read_debug ( v )$/
F0066_handledebug	pass2.c	/^F0066_handledebug ( v )$/
F0067_read_symbols	pass2.c	/^F0067_read_symbols ( v, base )$/
F0068_handlesymbol	pass2.c	/^F0068_handlesymbol ( v )$/
F0069_getnthhunkinpu	pass2.c	/^word *F0069_getnthhunkinpu ( n, hunk )$/
HandleBreakEnd	atom.c	/^#define HandleBreakEnd() HasHunkName = false$/
Matom	atom.c	/^main(argc,argv)$/
Mblib	blib.c	/^main(argc, argv)$/
PrintSymbol	atom.c	/^PrintSymbol(size)$/
ReadCodeDataOrBss	atom.c	/^ReadCodeDataOrBss(type,flag)$/
ReadDebug	atom.c	/^ReadDebug()$/
ReadExternals	atom.c	/^ReadExternals(flag)$/
ReadHunkName	atom.c	/^ReadHunkName()$/
ReadReloc	atom.c	/^ReadReloc(flag)$/
ReadSymbols	atom.c	/^ReadSymbols(flag)$/
ReadUnitName	atom.c	/^ReadUnitName()$/
WrMemType	objdump.c	/^WrMemType(memtype)$/
WrongObject	atom.c	/^WrongObject()$/
add16_8	pass2.c	/^word add16_8 ( vector, offset, value, n_bytes, max/
bclose	blib.c	/^bclose(scb)$/
bflush	blib.c	/^bflush()$/
bopen	blib.c	/^word bopen(name,mode,rawflag)$/
bst2cst	blib.c	/^bst2cst( s1, s2 )$/
capitalch	blib.c	/^int capitalch ( ch )$/
compch	blib.c	/^int compch( ch1, ch2 )$/
compstring	blib.c	/^int compstring( s1, s2 )$/
cst2bst	blib.c	/^cst2bst( s1, s2 )$/
default_rdch	blib.c	/^int default_rdch()$/
default_unrdch	blib.c	/^int default_unrdch()$/
default_wrch	blib.c	/^int default_wrch(c)$/
display	objdump.c	/^display ( printhunk )$/
editfile	atom.c	/^editfile()$/
endread	blib.c	/^endread( )$/
endwrite	blib.c	/^endwrite( )$/
error	atom.c	/^error(s,a)$/
findarg	blib.c	/^int findarg ( keys, w )$/
findinput	blib.c	/^word findinput( name,rawflag )$/
findoutput	blib.c	/^word findoutput( name ,rawflag)$/
freevec	blib.c	/^freevec( ptr )$/
gbytes	blib.c	/^word gbytes(v,size)$/
getbyte	blib.c	/^int getbyte(v,offset)$/
getch	init.c	/^word getch ( )$/
getlong	atom.c	/^getlong(v,n,flag)$/
getscb	blib.c	/^int *getscb( ch_id )$/
gettype	atom.c	/^long gettype()$/
getvec	blib.c	/^word *getvec( upb )$/
getw	atom.c	/^getw(v,n,flag)$/
getword	resident.c	/^word getword ( )$/
getwords	atom.c	/^getwords(v,n,flag)$/
hunkinfo	resident.c	/^hunkinfo ( hunk )$/
input	blib.c	/^word input()$/
mangle_symbol_table	map.c	/^mangle_symbol_table ( )$/
mygetwords	atom.c	/^mygetwords(size,flag)$/
mypointword	sblib.c	/^word mypointword ( mymark )$/
newline	blib.c	/^newline ( )$/
note	blib.c	/^word note( scb, p )$/
output	blib.c	/^word output()$/
pbytes	blib.c	/^pbytes(v,size,w)$/
point	blib.c	/^word point(scb,p)$/
pointword	blib.c	/^word pointword( n )$/
printc	objdump.c	/^printc ( size )$/
printw	objdump.c	/^printw ( size )$/
putbyte	blib.c	/^putbyte(v,offset,b)$/
rdargs	blib.c	/^word rdargs ( keys, argv, size )$/
rdch	blib.c	/^int rdch()$/
rdgetc	blib.c	/^int rdgetc ( )$/
rditem	blib.c	/^int rditem ( vword, size )$/
rdungetc	blib.c	/^int rdungetc()$/
readbytes	blib.c	/^word readbytes( buff, n )$/
readn	blib.c	/^word readn ( )$/
readwords	blib.c	/^word readwords( buf , n )$/
ref_info	resident.c	/^ref_info ( ref )$/
selectinput	blib.c	/^selectinput(scb)$/
selectoutput	blib.c	/^selectoutput(scb)$/
settype2	atom.c	/^settype2(type,memtype)$/
settypes	atom.c	/^settypes(argv,i,memtype)$/
start	objdump.c	/^start ( )$/
stop	blib.c	/^stop( code )$/
swap	atom.c	/^long swap(val)$/
symbol_info	resident.c	/^symbol_info ( symbol )$/
tidyup	atom.c	/^tidyup(n)$/
unrdch	blib.c	/^int unrdch()$/
vec_get1	resident.c	/^word* vec_get1 ( size )$/
warn	resident.c	/^warn ( code, a1, a2, a3, a4 )$/
wbytes	blib.c	/^word wbytes( buff, n )$/
wrch	blib.c	/^wrch(c)$/
writed	blib.c	/^writed ( n, d )$/
writef	blib.c	/^writef ( format, a, b, c, d, e, f, g, h, i, j, k )/
writehex	blib.c	/^writehex ( n, d )$/
writelong	objdump.c	/^writelong( val )$/
writen	blib.c	/^writen ( n )$/
writeoct	objdump.c	/^writeoct()$/
writes	blib.c	/^writes ( s )$/
writet	blib.c	/^writet ( s, n )$/
writetype	resident.c	/^writetype ( type )$/
writeu	blib.c	/^writeu ( n, d )$/
writewords	blib.c	/^word writewords( buf, n )$/
