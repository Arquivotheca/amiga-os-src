head     36.5;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


36.5
date     88.07.22.15.45.52;  author neil;  state Exp;
branches ;
next     36.4;

36.4
date     88.07.18.15.08.18;  author neil;  state Exp;
branches ;
next     36.3;

36.3
date     88.07.13.19.31.41;  author neil;  state Exp;
branches ;
next     36.2;

36.2
date     88.07.13.19.15.21;  author neil;  state Exp;
branches ;
next     36.1;

36.1
date     88.07.13.18.29.58;  author neil;  state Exp;
branches ;
next     ;


desc
@@


36.5
log
@we no longer remove xx_rev.rev each time
@
text
@#! /bin/csh -fe
#
# usage: newvers <version #> <subsys> [<suffix>]
#	 "newvers 23 timer _rev" is a recommended usage
#
# $Header: makevers,v 36.4 88/07/18 15:08:18 neil Exp $
#
# $Locker:  $
#
if ( $#argv < 2 ) then
    sh -c 'echo "Usage: <version #> <subsystem name> [ <suffix> ]" 1>&2'
    exit 1
endif
set version=$argv[1]
set subsys=$argv[2]

if( $#argv == 2 ) then
    set iname=${subsys}.irev
    set hname=${subsys}.hrev
    set revname=${subsys}.rev
else
    set suffix=$argv[3]
    set iname=${subsys}${suffix}.i
    set hname=${subsys}${suffix}.h
    set revname=${subsys}${suffix}.rev
endif
set date=`date`
if ( ! -f ${revname} ) then
    revision = 0
else
    set revision=`cat ${revname}`
endif
set a=`pwd`

rm -rf $iname $hname
@@ revision++

echo $revision > $revname

set rawdate=(`date`)
set date="$rawdate[3] $rawdate[2] $rawdate[6]"
set vers="$subsys $version.$revision"

echo   "VERSION	EQU	$version"		>> $iname
echo   "REVISION	EQU	$revision"	>> $iname
echo   "DATE	MACRO" 				>> $iname
echo   "	DC.B	'$date'" 		>> $iname
echo   "	ENDM" 				>> $iname
echo   "VERS	MACRO" 				>> $iname
echo   "	DC.B	'$vers'" 		>> $iname
echo   "	ENDM" 				>> $iname
echo   "VSTRING	MACRO" 				>> $iname
echo   "	VERS" 				>> $iname
echo   "	DC.B	' ('" 			>> $iname
echo   "	DATE" 				>> $iname
echo   "	DC.B	')'" 			>> $iname
echo   "	DC.B	13,10,0" 		>> $iname
echo   "	DS.W	0" 			>> $iname
echo   "	ENDM" 				>> $iname

echo "#define	VERSION	$version"		>> $hname
echo "#define	REVISION	$revision"	>> $hname
echo '#define	DATE	"'"$date"'"'		>> $hname
echo '#define	VERS	"'"$vers"'"'		>> $hname
echo '#define	VSTRING	"'"$vers ($date)\n\r"'"'	>> $hname

echo "making $subsys$version.$revision"

exit 0
@


36.4
log
@fixed VSTRING to have \n\r
@
text
@d6 1
a6 1
# $Header: makevers,v 36.3 88/07/13 19:31:41 neil Exp $
d8 1
a8 1
# $Locker: neil $
d35 1
a35 1
rm -rf $iname $hname $revname
@


36.3
log
@forgot to remove "set echo".  sigh
@
text
@d6 1
a6 1
# $Header: makevers,v 36.2 88/07/13 19:15:21 neil Exp $
d65 1
a65 1
echo '#define	VSTRING	"'"$vers ($date)"'"'	>> $hname
@


36.2
log
@new version now add's final NL to xxx_rev.h, and no longer uses
awk to do its work.
@
text
@d6 1
a6 1
# $Header: makevers,v 36.1 88/07/13 18:29:58 neil Exp $
d8 1
a8 1
# $Locker:  $
a9 1
set echo
d66 2
@


36.1
log
@*** empty log message ***
@
text
@d6 1
a6 1
# $Header: makevers.sh,v 1.6 85/08/17 12:09:49 neil Exp $
d10 1
d29 4
a32 2
if( ! -f ${revname} ) then
    echo 0 > ${revname}
a33 2
set revision=`cat ${revname}`
endif
a34 8
cat > awkvers.$$ << 'E*O*F'
NR==1 {
	revision = $2 + 1; version = $1; subsys = $3;
	iname = $4; hname = $5; revname = $6;
    }
NR==2 {	date = sprintf( "%s %s %s", $3, $2, $6 ); }
END {
	vers = sprintf( "%s %d.%d", subsys, version, revision );
d36 2
a37 2
	# update the revision number
	printf( "%d\n", revision ) > revname;
d39 1
a39 10
	# print the stuff for assembly includes
	printf( "VERSION\tEQU\t%d\n", version ) > iname;
	printf( "REVISION\tEQU\t%d\n", revision ) >> iname;
	printf( "DATE\tMACRO\n\tDC.B\t'%s'\n", date ) >> iname;
	printf( "\tENDM\n", date ) >> iname;
	printf( "VERS\tMACRO\n\tDC.B\t'%s'\n", vers ) >> iname;
	printf( "\tENDM\n" ) >> iname;
	printf( "VSTRING\tMACRO\n\tVERS\n" ) >> iname;
	printf( "\tDC.B\t' ('\n\tDATE\n\tDC.B\t')'\n" ) >> iname;
	printf( "\tDC.B\t13,10,0\n\tDS\t0\n\tENDM\n" ) >> iname;
d41 27
a67 11
	# print the stuff for C includes
	printf( "#define\tVERSION\t%d\n", version ) > hname;
	printf( "#define\tREVISION\t%d\n", revision ) >> hname;
	printf( "#define\tDATE\t\"%s\"\n", date ) >> hname;
	printf( "#define\tVERS\t\"%s\"\n", vers ) >> hname;
	printf( "#define\tVSTRING\t\"%s (%s)\\n\\r\"", vers, date ) >> hname;
}
'E*O*F'
( echo $version $revision $subsys $iname $hname $revname ; echo $date ) \
    | awk -f awkvers.$$
rm -f awkvers.$$
@
