.\" @(1L)absload.man 0.0 85/7/14
.ds ]W AMIGA LOCAL
.TH ABSLOAD 1 "13 July 1985"
.SH NAME
absload \- convert Amiga loader format to Motorola srecords.
.SH SYNOPSIS
.B absload 
[\-d] 
[\-m]
[\-x]
[\-s]
[\-b <Ksize>]
[\-o <sfile>] 
[\-T <addr>] 
<lfile>
.SH DESCRIPTION
.I Absload
is a program to convert Amiga Binary object files from the linker
.I alink 
and create a motorola srecord file suitable for down loading to an
Amiga machine.
.LP
The starting address of the code is assumed to be the first code hunk
found in the input file.
.LP
Note when using the srecord file produced, the starting address of the
code is not the same as the starting address in memory unless the -x
option is used.  When you
down load the file with the Amiga debugger's Load command, the starting
address will be printed.  Make sure you use the starting address for
your Go command.
.LP
.TP
.B For debugging purposes:
If you did not use the -m option of 
.I absload 
and need to know the
address of a hunk and you didn't use the -x option, 
it can be found at you memory starting address
plus four times the hunk number (with hunk numbers starting from 
zero).  With the map produced by 
.I alink
and the map from 
.I absload
you should be able to determine the location of all externals.
.BR
Note that 
.I printa
and
.I alink's 
map number hunks starting from 1.
.I Absload 
number hunks starting from 0.
.SH "ABSLOAD OPTIONS"
.LP
.TP
.B \-d
Write debugging information to standard error.  
Default is not to write debugging information.
This option is primarily useful if the linker for some
reason is creating a file that absload can't understand.
Much of this information is similar to that from printa.
The first line printed is the version of 
.I absload.
.TP
.B \-m
Write map of hunk addresses to standard out.  No map is produced by default.
.BR
The map is a list of lines with three fields:
.BR
 decimal hunk number 
.BR
 hexadecimal hunk base byte address 
.BR
 hexadecimal byte length of hunk.
.TP
.B\-x
Exclude the hunk map from memory image.  This option is used to save
memory (e.g. ROMs) but requites that you used the -m option in order to
be able to do debugging.
.TP
.B\-s
Suppress same length.
Write the srecords with the last srecord having the exact length
specified.  Default is to zero pad last srecord to have the same
length as the others.
.TP
.B\-o <sfile>
Writes srecords to <sfile>.  Default is file 'a.srec'.
.TP
.B\-T <addr>
Byte address in hexadecimal to begin allocating memory for
the absolute binary from.
Address must be long word aligned.  Default is hex 20000.
.TP
.B\-b <Ksize>
Specifies the decimal number of kilobytes absload is to use to build its
memory image of the file.  Default for the Sun is 1/2 Megabyte.
Default for the Amiga is 16K bytes.  
.TP
.B <lfile>
File created by alink to be converted.
If no <lfile>, the standard input is used.
.LP
A brief synopsis of the above along with an error message is printed
if the syntax is not followed.

.SH "FILES"
.ta 2i
a.srec default srecord output

.SH "SEE ALSO"
assem(1l), alink(1l), metacc(1l), printa(1l), hexload(1l), bbload(1l)

.SH BUGS
Does not handle overlays.
