head     37.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


37.2
date     91.11.04.10.10.37;  author vertex;  state Exp;
branches ;
next     37.1;

37.1
date     91.11.01.17.42.53;  author vertex;  state Exp;
branches ;
next     36.0;

36.0
date     89.08.19.21.55.57;  author bryce;  state Exp;
branches ;
next     1.0;

1.0
date     89.08.19.20.54.43;  author bryce;  state Exp;
branches ;
next     ;


desc
@Calls CreateExtIO() for "standard" sized IORequests.
@


37.2
log
@Cleaned up autodocs and made them non-internal
@
text
@/***********************************************************************
*
*	Exec Support Functions -- Standard IO Requests
*
***********************************************************************/

#include "exec/types.h"
#include "exec/ports.h"
#include "exec/io.h"


/*
******* amiga.lib/CreateStdIO ************************************************
*
*   NAME
*	CreateStdIO -- create an IOStdReq structure
*
*   SYNOPSIS
*	ioReq = CreateStdIO(port);
*
*	struct IOStdReq *CreateStdIO(struct MsgPort *)
*
*   FUNCTION
*	Allocates memory for and initializes a new IOStdReq structure.
*
*   INPUTS
*	port - an already initialized message port to be used for this IO
*	       request's reply port. If this is NULL this function fails.
*
*   RESULT
*	ioReq - a new IOStdReq structure, or NULL if there was not enough
*		memory
*
*   SEE ALSO
*	DeleteStdIO(), CreateExtIO(), exec.library/CreateIORequest()
*
******************************************************************************
*/

struct IOStdReq *
CreateStdIO( ioReplyPort )
    struct MsgPort *ioReplyPort;
{
    return( (struct IOStdReq *)
	CreateExtIO( ioReplyPort, sizeof( struct IOStdReq ) ) );
}


/*
******* amiga.lib/DeleteStdIO ************************************************
*
*   NAME
*	DeleteStdIO - return memory allocated for IOStdReq
*
*   SYNOPSIS
*	DeleteStdIO(ioReq);
*
*	VOID DeleteStdIO(struct IOStdReq *);
*
*   FUNCTION
*	Frees up an IOStdReq as allocated by CreateStdIO().
*
*   INPUTS
*	ioReq - the IORequest block to be freed, or NULL.
*
*   SEE ALSO
*	CreateStdIO(), DeleteExtIO(), exec.library/CreateIORequest()
*
******************************************************************************
*/

DeleteStdIO( ioStdReq )
    struct IOStdReq *ioStdReq;
{
    return( DeleteExtIO( ioStdReq ) );
}
@


37.1
log
@Initial V37 RCS checkin
@
text
@d12 2
a13 1
/*****i exec_support/CreateStdIO **************************************
d15 2
a16 2
*   NAME	
*	CreateStdIO() -- create a standard IO request
d18 2
a19 1
*	!!!OBSOLETE - USETE CreateExtIO()!!!!
d21 1
a21 2
*   SYNOPSIS
*	ioStdReq = CreateStdIO( ioReplyPort );   
d24 1
a24 1
*	Allocates memory for and initializes a new IO request block.
d27 2
a28 3
*	ioReplyPort - a pointer to an already initialized
*		message port to be used for this IO request's
*		reply port.
d31 2
a32 12
*	Returns a pointer to the new io request block.  A NULL
*	indicates that there was not enough memory for the IO Request,
*	or that the reply port was not a valid port.
*
*   EXAMPLE
*	struct IOStdReq *myBlock;
*	struct MsgPort *port;
*
*	myBlock = CreateStdIO( port );
*	if( myBlock == NULL) {
*		printf( "Insufficient memory" );
*	}
d35 1
a35 1
*	DeleteStdIO, CreateExtIO
d37 2
a38 1
***********************************************************************/
d49 2
a50 1
/*****i exec_support/DeleteStdIO ***************************************
d53 1
a53 1
*	DeleteStdIO( ioStdReq ) - return memory allocated for IO request
d56 1
a56 1
*	DeleteStdIO(ioStdReq);
d58 1
a58 1
*	!!!OBSOLETE - USETE DeleteExtIO()!!!!
d61 1
a61 1
*	Free memory allocate for the io request.
d64 1
a64 8
*	A pointer to the IOStdReq block whose resources are to be freed.
*
*   RESULT
*	no defined return value
*
*   EXAMPLE
*	struct IOStdReq *ioRequest;
*	DeleteStdIO( ioRequest );
d67 1
a67 1
*	CreateStdIO, DeleteExtIO
d69 2
a70 1
**************************************************************************/
@


36.0
log
@Marked as OBSOLETE - USE CreateExtIO() instead.
@
text
@@


1.0
log
@added to rcs
@
text
@a7 4
#include "exec/nodes.h"
#include "exec/lists.h"
#include "exec/memory.h"
#include "exec/interrupts.h"
a8 1
#include "exec/libraries.h"
a9 2
#include "exec/tasks.h"
#include "exec/execbase.h"
d12 1
a12 2

/****** exec_support/CreateStdIO **************************************
d17 2
d58 1
a58 1
/****** exec_support/DeleteStdIO ***************************************
d65 2
@
