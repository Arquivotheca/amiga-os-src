head     37.1;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @*   @;


37.1
date     91.11.01.17.39.25;  author vertex;  state Exp;
branches ;
next     36.1;

36.1
date     89.11.26.02.14.22;  author bryce;  state Exp;
branches ;
next     36.0;

36.0
date     89.08.19.21.04.25;  author bryce;  state Exp;
branches ;
next     1.0;

1.0
date     89.08.19.20.55.05;  author bryce;  state Exp;
branches ;
next     ;


desc
@Call a device's BeginIO() vector directly.
@


37.1
log
@Initial V37 RCS checkin
@
text
@
******* amiga.lib/BeginIO ****************************************************
*
*   NAME
*	BeginIO -- initiate asynchronous device I/O
*
*   SYNOPSIS
*	BeginIO(ioReq)
*
*	VOID BeginIO(struct IORequest *);
*
*   FUNCTION
*	This function takes an IORequest, and passes it directly to the
*	"BeginIO" vector of the proper device.  This is equivalent to
*	SendIO(), except that io_Flags is not cleared. A good understanding
*	of Exec device I/O is required to properly use this function.
*
*	This function does not wait for the I/O to complete.
*
*   INPUTS
*	ioReq - an initialized and opened IORequest structure with the
*	        io_Flags field set to a reasonable value (set to 0 if you do
*		not require io_Flags).
*
*   SEE ALSO
*	exec.library/DoIO(), exec.library/SendIO(), exec.library/WaitIO()
*
******************************************************************************

	INCLUDE	"exec/types.i"
	INCLUDE	"exec/io.i"


;Call the BeginIO vector of a device directly.  Much like exec/SendIO, but
;does not touch IO_FLAGS.

		SECTION	_BeginIO
		XDEF	_BeginIO

_BeginIO:	move.l	4(sp),a1	 ;Get IORequest pointer
		move.l	a6,-(a7)
		move.l	IO_DEVICE(a1),a6 ;Pointer to device
		jsr	DEV_BEGINIO(a6)	 ;Jump to device's BEGINIO vector
		move.l	(a7)+,a6
		rts

		END
@


36.1
log
@Fux sperlun merstak.
@
text
@d2 1
a2 1
******* amiga.lib/BeginIO *****************************************************
d8 1
a8 1
*	BeginIO(iORequest)
d10 1
a10 1
*	void BeginIO(struct IORequest *);
d15 1
a15 1
*	SendIO(), except that io_Flags is not cleared.  A good understanding
d21 3
a23 3
*	iORequest - Pointer to an initialized, open, IORequest structure
*		    with the io_Flags field set to a reasonable value
*		    (use zero if you do not require io_Flags).
d26 1
a26 1
*	exec/DoIO, exec/SendIO, exec/WaitIO  
d28 1
a28 1
*******************************************************************************
d34 2
a35 2
;Call the BeginIO vector of a device directly.  Much like exec/SendIO, but 
;does not touch IO_FLAGS. 
@


36.0
log
@New version.  (Now includes AutoDoc from V1.3 RKM: I&A)
@
text
@d14 1
a14 1
*	"BeginIO" vector of the proper device.  This is equvalent to
@


1.0
log
@added to rcs
@
text
@d2 27
a29 1

a30 4
	INCLUDE	"exec/nodes.i"
	INCLUDE	"exec/lists.i"
	INCLUDE	"exec/libraries.i"
	INCLUDE	"exec/ports.i"
d34 2
a35 2
	section	_BeginIO
	xdef	_BeginIO
d37 8
a44 3
_BeginIO:
		move.l	4(sp),a1
		BEGINIO
d47 1
a47 1
	end
@
