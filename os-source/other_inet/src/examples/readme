This document needs serious work -- to happen after bj is finished with
the next version of socketlib.

-=-=-=-
This directory includes several example programs for using socket.library.
They require 2.0.  They have been tested under SAS 5.10 and under
Manx 5.0d.  A Manx makefile and a SAS lmkfile have been included.


-=-=-=-
"When prototyping new services, it is easiest to hard-code a port number not
in /etc/services, then later install your service there."
	-Sun IPC Primer, page 11

-=-=-=-
This document describes the AACP protocol.

AACP stands for Amiga-to-Amiga Copy Program.  AACP follows the client-server model.

An AACP client initiates a request to the server by sending an integer mode name
followed by a filename.  The two mode names are defined in aacp.h, and simply
indicate whether the client is going to receive a file from the server or if the
client is going to send a file to the server.  The filename is a null-terminated
string of not more than LENGTH characters (LENGTH is defined in aacp.h) and is the
name of the file for the server to read from or write to (depending on the mode).

The server responds with an error string - "\0" if there was no error opening the
file (to read from or write to depending on the mode), else human-readable text.
The error string must be a null-terminated string of not more than LENGTH
characters.  If there was an error, both sides close the connection.

If there was no error, the client then either sends or recieves one buffer of
length LENGTH until the file has been copied or an error condition is reached.
If an error is reached, the side with the error simply closes it's socket.  If
the sending side has an error, the receiving side will never know and will have
an incomplete copy of the file.  OOB data could be used here to signal an
error.
