head     1.1;
branch   ;
access   ;
symbols  ;
locks    gregm:1.1;
comment  @* @;


1.1
date     90.12.01.19.35.11;  author martin;  state Exp;
branches ;
next     ;


desc
@@


1.1
log
@Initial revision
@
text
@;
; Library assembly language support for inet.library.
; 


	entry	.begin
	public	.begin,__LibName,__LibID,_functions
	public	_LibOpen,_LibClose,_LibExpunge
	public	_LibInitTable,_AsmInitStub,_LibInitFunc
	public	EndCode,_SysBase,__H1_org

 INCLUDE "exec/types.i"
 INCLUDE "exec/nodes.i"
 INCLUDE "exec/resident.i"

.begin:
	moveq	#-1,d0
	rts

VERS: 	equ	1
PRIO:	equ	0

Tag:	dc.w	RTC_MATCHWORD	; magic number
	dc.l	Tag		; back pointer to tag structure
	dc.l	EndCode		; points to end of code segment
	dc.b	RTF_AUTOINIT	; automatically init code segment
	dc.b	VERS		; version number
	dc.b	NT_LIBRARY	; this is a lib
	dc.b	PRIO		; priority for list insertion
	dc.l	__LibName	; name of lib, must match lib filename
	dc.l	__LibID		; identifier string
	dc.l	_LibInitTable	; initializer table

_functions:
	dc.l	Open
	dc.l	Close
	dc.l	Expunge
	dc.l	0
	dc.l	Socket
	dc.l	Bind
	dc.l	Ioctl
	dc.l	Listen
	dc.l	Accept
	dc.l	Connect
	dc.l	Sendto
	dc.l	Send
	dc.l	Sendmsg
	dc.l	Recvfrom
	dc.l	Recv
	dc.l	Recvmsg
	dc.l	Shutdown
	dc.l	Setsockopt
	dc.l	Getsockopt
	dc.l	Getsockname
	dc.l	Getpeername
	dc.l	Select
	dc.l	Netclose
	dc.l	Inherit
	dc.l	-1

;
; stubs - MANX saves d4-d7/a2-a3,a5,a7.  We must preserve d1-d3/a0-a1,a4,a6
; 	  before calling C.  We also setup A4 to handle any instances of
;	  near code/data.
;

	far	code
	far	data

;
; Init library call.
;
; a0:	segment list
; d0:	Lib ptr
; 
_AsmInitStub:
	movem.l	d1-d7/a0-a6,-(sp)
	lea	__H1_org+32766,a4
	movem.l	d0/a0,-(sp)
	jsr	_LibInitFunc
	addq.w	#8,sp
	movem.l	(sp)+,d1-d7/a0-a6
	move.l	a6,_SysBase		; save execbase pointer
	rts

;
; Open library call.
;
; a6:	lib ptr
; d0:	version
;
Open:
	movem.l	d1-d3/a0-a1/a4/a6,-(sp)
	lea	__H1_org+32766,a4
	movem.l	a6/d0,-(sp)
	jsr	_LibOpen
	addq.w	#8,sp
	movem.l	(sp)+,d1-d3/a0-a1/a4/a6
	rts

;
; Close library call.
;
; a6:	lib ptr
;
Close:
	movem.l	d1-d3/a0-a1/a4/a6,-(sp)
	lea	__H1_org+32766,a4
	move.l	a6,-(sp)
	jsr	_LibClose
	addq.w	#4,sp
	movem.l	(sp)+,d1-d3/a0-a1/a4/a6
	rts

;
; Expunge library call.
;
; a3:	unit ptr
; a6:	lib ptr
;
Expunge:
	movem.l	d1-d3/a0-a1/a4/a6,-(sp)
	lea	__H1_org+32766,a4
	move.l	a6,-(sp)
	jsr	_LibExpunge
	addq.w	#4,sp
	movem.l	(sp)+,d1-d3/a0-a1/a4/a6
	rts

SCKCALL	macro	(name)
	public	_\1
	move.l	#_\1,a0
	bra	common
	endm

Socket:		SCKCALL _socket
Bind:		SCKCALL	_bind
Ioctl:		SCKCALL	_ioctl
Listen:		SCKCALL	_listen
Accept:		SCKCALL	_accept
Connect:	SCKCALL	_connect
Sendto:		SCKCALL	_sendto
Send:		SCKCALL	_send
Sendmsg:	SCKCALL	_sendmsg
Recvfrom: 	SCKCALL _recvfrom
Recv:		SCKCALL	_recv
Recvmsg:	SCKCALL	_recvmsg
Shutdown: 	SCKCALL _shutdown
Setsockopt: 	SCKCALL _setsockopt
Getsockopt: 	SCKCALL _getsockopt
Getsockname: 	SCKCALL _getsockname
Getpeername: 	SCKCALL _getpeername
Select:		SCKCALL	_select
Netclose:	SCKCALL	_networkclose
Inherit:	SCKCALL _inherit

;
; Common code for stubs.  Routine to jsr to is in (a0).  User supplied
; argument vector is in <d1>.
;
common:	movem.l	d1-d3/a4/a6,-(sp)	; save registers MANX does not
	lea	__H1_org+32766,a4	; set inet.library's idea of A4
	jsr	(a0)			; off to internet code we go
	movem.l	(sp)+,d1-d3/a4/a6	; restore registers
	moveq	#0,d0			; for consistency
	rts
@
