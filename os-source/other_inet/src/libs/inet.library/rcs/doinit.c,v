head     1.2;
branch   ;
access   ;
symbols  ;
locks    gregm:1.2;
comment  @ * @;


1.2
date     91.11.07.12.45.29;  author gregm;  state Exp;
branches ;
next     1.1;

1.1
date     90.12.01.19.39.31;  author martin;  state Exp;
branches ;
next     ;


desc
@@


1.2
log
@*** empty log message ***
@
text
@/*
 * Library startup & init
 */

#include <sys/types.h>
#include <netinet/inet.h>
#include <nlist.h>

#include "proto.h"

#ifdef LATTICE
#include <proto/exec.h>
#include <proto/dos.h>
#endif

#ifndef LATTICE
void *DOSBase;
#endif

void *SysBase;

char _LibName[] = INETNAME;
char _LibID[] = "inet 1.0 (19 Oct 89)\r\n";

#define NLSIZE	32
static struct nlist lib_nl[NLSIZE];

void
enter_nlist(name, value)
	char	*name;
	long	value;
{
	register struct nlist *nl = lib_nl;
	register int i;
    kprintf("now in enter_nlist()\n");
	for(i = 0; i < NLSIZE; i++, nl++){
		if(!nl->n_name){
			nl->n_name = name;
			nl->n_value = value;
			nl->n_type = 1;
			break;
		}
	}
    kprintf("Done with enter_nlist()\n");
}

void doinit (struct InetBase *lib)
{
	static short imp_softc, nfile, file, nimp;

    kprintf("now in doinit()\n");
	SysBase = *(void **)4L;
	if(!(DOSBase = (void *)OpenLibrary("dos.library", 0L))){
		return;
	}
	lib->names = lib_nl;
	lib->nlsize = NLSIZE;
	mbinit();
	domaininit();
	startINET();
	loattach();
	aeattach();
	s2attach();
/*	aaattach(); */

	ifinit();
	raw_init();
	arp_nlist_init();
	route_nlist_init();
	icmp_nlist_init();

	enter_nlist("_imp_softc", &imp_softc);
	enter_nlist("_nfile", &nfile);
	enter_nlist("_file", &file);
	enter_nlist("_nimp", &nimp);
    kprintf("done with doinit()\n");
}

#ifdef LATTICE
extern int	_socket(), _bind(), _ioctl(), _listen(), _accept(), _connect(),
		_sendto(), _send(), _sendmsg(), _recvfrom(), _recv(),
		_recvmsg(), _shutdown(), _setsockopt(), _getsockopt(),
		_getsockname(), _getpeername(), _select(), _networkclose();

extern int _LibOpen(), _LibClose(), _LibExpunge();

int (*_LibFuncTab[])() = {
	_LibOpen,
	_LibClose,
	_LibExpunge,
	0,
	_socket,
	_bind,
	_ioctl,
	_listen,
	_accept,
	_connect,
	_sendto,
	_send,
	_sendmsg,
	_recvfrom,
	_recv,
	_recvmsg,
	_shutdown,
	_setsockopt,
	_getsockopt,
	_getsockname,
	_getpeername,
	_select,
	_networkclose
};

#endif
@


1.1
log
@Initial revision
@
text
@d62 2
a63 1
	aeattach(); 
d80 2
a81 2
extern int 	_socket(), _bind(), _ioctl(), _listen(), _accept(), _connect(),
		_sendto(), _send(), _sendmsg(), _recvfrom(), _recv(), 
d84 1
a84 1
	    
d92 2
a93 2
	_socket, 
	_bind, 
@
