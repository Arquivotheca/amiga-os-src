head     1.6;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.6
date     92.08.14.14.29.23;  author gregm;  state Exp;
branches ;
next     1.5;

1.5
date     92.01.23.13.34.29;  author gregm;  state Exp;
branches ;
next     1.4;

1.4
date     91.11.07.12.46.32;  author gregm;  state Exp;
branches ;
next     1.3;

1.3
date     91.10.21.15.45.15;  author martin;  state Exp;
branches ;
next     1.2;

1.2
date     91.02.02.00.18.10;  author martin;  state Exp;
branches ;
next     1.1;

1.1
date     90.12.01.19.38.26;  author martin;  state Exp;
branches ;
next     ;


desc
@@


1.6
log
@Turned off the attach() functions for the hardcoded interfaces, added an attach() for the
sana-ii interface, and opened/closed Utility.library.
@
text
@/*
 * Library startup & init
 */

#include <exec/types.h>
#include <exec/alerts.h>
#include <dos.h>
#include <sys/types.h>
#include <netinet/inet.h>
#include <nlist.h>

#include <proto/exec.h>
#include <proto/dos.h>

#include "lib_custom.h"
#include "proto.h"

struct ExecBase *SysBase = NULL;
struct InetNode *InetBase = NULL;
extern struct Library *UtilityBase;

#define NLSIZE  32
static struct nlist lib_nl[NLSIZE];


void
enter_nlist(name, value)
        char    *name;
        void    *value;
{
        register struct nlist *nl = lib_nl;
        register int i;

        for(i = 0; i < NLSIZE; i++, nl++){
                if(!nl->n_name){
                        nl->n_name = name;
                        nl->n_value = value;
                        nl->n_type = 1;
                        break;
                }
        }
}


BOOL __saveds __asm CustomLibOpen(register __a6 struct InetNode *lib)
{
        static short imp_softc, nfile, file, nimp;

        SysBase = (struct ExecBase *)(*((ULONG *)4));
        InetBase = lib;

        if(!(DOSBase = (void *)OpenLibrary("dos.library", 0L))){
                return (BOOL)0;
        }
        if (!(UtilityBase = (struct Library *)OpenLibrary("utility.library",37L)))
        {
            CloseLibrary(DOSBase);
            return ((BOOL) 0);
        }
        lib->names = lib_nl;
        lib->nlsize = NLSIZE;

        s2attach();

        mbinit();
        domaininit();
        startINET();

        loattach();

//        aeattach();
//        aaattach();
//        slattach();


        ifinit();
        raw_init();
        arp_nlist_init();
        route_nlist_init();
        icmp_nlist_init();

        enter_nlist("_imp_softc", &imp_softc);
        enter_nlist("_nfile", &nfile);
        enter_nlist("_file", &file);
        enter_nlist("_nimp", &nimp);
        return (BOOL)1;
}


void __saveds __asm CustomLibExpunge(register __a6 struct InetNode *lib)
{
    if (DOSBase)
        CloseLibrary((struct Library *)DOSBase);

    if (UtilityBase)
        CloseLibrary((struct Library *)UtilityBase);
}


@


1.5
log
@pulled all interfaces other than sana ii and loopback.
@
text
@d20 1
d55 5
d62 3
d67 2
d70 3
a72 1
        s2attach();
d74 1
a74 1
        startINET();
d94 3
d98 2
@


1.4
log
@*** empty log message ***
@
text
@d60 1
@


1.3
log
@changed CustomLibInit to CustomLibOpen
@
text
@d21 1
a21 1
#define NLSIZE	32
d27 2
a28 2
	char	*name;
	void	*value;
d30 2
a31 2
	register struct nlist *nl = lib_nl;
	register int i;
d33 8
a40 8
	for(i = 0; i < NLSIZE; i++, nl++){
		if(!nl->n_name){
			nl->n_name = name;
			nl->n_value = value;
			nl->n_type = 1;
			break;
		}
	}
d46 1
a46 1
	static short imp_softc, nfile, file, nimp;
d48 2
a49 2
	SysBase = (struct ExecBase *)(*((ULONG *)4));
	InetBase = lib;
d51 22
a72 24
	if(!(DOSBase = (void *)OpenLibrary("dos.library", 0L))){
		return (BOOL)0;
	}
	lib->names = lib_nl;
	lib->nlsize = NLSIZE;
	mbinit();
	domaininit();
	startINET(); 
	loattach();
	aeattach();
	aaattach();
	slattach(); 

	ifinit();
	raw_init();
	arp_nlist_init();
	route_nlist_init();
	icmp_nlist_init(); 

	enter_nlist("_imp_softc", &imp_softc);
	enter_nlist("_nfile", &nfile);
	enter_nlist("_file", &file);
	enter_nlist("_nimp", &nimp); 
	return (BOOL)1;
d75 1
a75 1
	    
@


1.2
log
@added SLIP and arcnet
@
text
@d44 1
a44 1
BOOL __saveds __asm CustomLibInit(register __a6 struct InetNode *lib)
d52 1
a52 1
		return 0;
@


1.1
log
@Initial revision
@
text
@d61 2
a62 1
/*	aaattach(); */
@
