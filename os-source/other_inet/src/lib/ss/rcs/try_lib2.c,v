head     1.1;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.1
date     91.07.02.12.22.17;  author martin;  state Exp;
branches ;
next     ;


desc
@test program
@



1.1
log
@Initial revision
@
text
@/* program to test development of the shared socket.lib */

#include <exec/types.h>
#include <exec/libraries.h>
#include <exec/execbase.h>
#include <dos/dos.h>
#include <proto/all.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <stdio.h>
#include <errno.h>
#include <pwd.h>

#include <ss/socket.h>
struct Library *SockBase ;

void main(void);

void main()
{
	int num, i;
	gid_t gids[10];
	struct passwd *pwd;

	if((SockBase = OpenLibrary( "inet:libs/socket.library", 1L )) == NULL) {
		printf("Error opening socket.library\n");
		Exit(10);
	}

	setup_sockets( 10, &errno );

    printf("userid = %ld\n",getuid());
    printf("gid = %ld\n",getgid());
    num = getgroups(10,gids);
    printf("%d gids\n",num);
    for(i=0;i<num;i++)
    	printf("%d   ",gids[i]);
    printf("\n\n");

    printf("Your login name is %s\n",getlogin());

    printf("Our timezone offset is %d\n",get_tz());

    printf("The umask is %lx\n",getumask());

	pwd = getpwnam("martin");
	if (pwd)
		printf("username: %s    uid: %d   gid: %d   dir: %s  shell: %s real life: %s\n",
			pwd->pw_name,pwd->pw_uid,pwd->pw_gid,pwd->pw_dir,pwd->pw_shell,pwd->pw_gecos);
	else
		printf("ERROR: martin not found\n");

	pwd = getpwnam("");
	if (pwd)
		printf("username: %s    uid: %d   gid: %d   dir: %s  shell: %s real life: %s\n",
			pwd->pw_name,pwd->pw_uid,pwd->pw_gid,pwd->pw_dir,pwd->pw_shell,pwd->pw_gecos);
	else
		printf("GOOD: NULL not found\n");

	pwd = getpwnam("GUEST");
	if (pwd)
		printf("username: %s    uid: %d   gid: %d   dir: %s  shell: %s real life: %s\n",
			pwd->pw_name,pwd->pw_uid,pwd->pw_gid,pwd->pw_dir,pwd->pw_shell,pwd->pw_gecos);
	else
		printf("ERROR: GUEST not found\n");

	pwd = getpwuid(999);
	if (pwd)
		printf("username: %s    uid: %d   gid: %d   dir: %s  shell: %s real life: %s\n",
			pwd->pw_name,pwd->pw_uid,pwd->pw_gid,pwd->pw_dir,pwd->pw_shell,pwd->pw_gecos);
	else
		printf("ERROR: 999 not found\n");

	pwd = getpwuid(0);
	if (pwd)
		printf("username: %s    uid: %d   gid: %d   dir: %s  shell: %s real life: %s\n",
			pwd->pw_name,pwd->pw_uid,pwd->pw_gid,pwd->pw_dir,pwd->pw_shell,pwd->pw_gecos);
	else
		printf("GOOD: 0 not found\n");



	cleanup_sockets();
	CloseLibrary( SockBase ) ;

}





@
