head     1.1;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.1
date     91.07.02.12.22.05;  author martin;  state Exp;
branches ;
next     ;


desc
@test program
@



1.1
log
@Initial revision
@
text
@#include <ss/socket.h>
#include <sys/socket.h>
#include <netdb.h>
#include "socket_pragmas.h"

struct Library *SockBase;

char *strerror(int);

main()
{
	int i, num;
	int errno;
	long sock[10];
	char str[30];
	gid_t gids[5];
	struct hostent *h;
	struct protoent *pr;
	struct netent *nt;
	struct servent *sp;

	SockBase = OpenLibrary("inet:libs/socket.library",0);
	if (SockBase)
	{
		printf("Library Opened Sucessfully.\n");
		setup_sockets( 10, &errno );

		for(i=0;i<5;i++) {
			sock[i] = socket( AF_INET, SOCK_STREAM, 0 ) ;
			printf("sock = %08lx\n", sock[i] ) ;
		}

		for(i=0;i<5;i++)
                	s_close(i);

		for(i=0;i<5;i++) {
			sock[i] = socket( AF_INET, SOCK_STREAM, 0 ) ;
			printf("sock = %08lx\n", sock[i] ) ;
		}

		for(i=0;i<5;i++)
                	s_close(i);

		for(i=0;i<100;i++)
			printf("Error %d   %s\n",i,strerror(i));

        printf("UID: %ld   GID %ld  TZ: %d\n",getuid(),getgid(),get_tz());
		printf("Groups:  ");
		num = getgroups(5,gids);
		for(i=0;i<num;i++)
			printf("%d  ",gids[i]);
		printf("\n");

		gethostname(str,30);
        printf("username=%s  hostname=%s\n",getlogin(),str);

		sethostent(1);
		printf("Finished sethostent()\n");

		while(h=gethostent()) {
			printf("%s	addr: %lx		",h->h_name,*((u_long *)(h->h_addr)));
			for(i=0;h->h_aliases[i] !=NULL;i++)
				printf("%ld:%s ",i,h->h_aliases[i]);
			printf("\n");
		}

		h = gethostbyname("cbmvax");
		if(h) {
			printf("%s	addr: %lx	",h->h_name,*((u_long *)(h->h_addr)));
			for(i=0;h->h_aliases[i] !=NULL;i++)
			printf("%ld:%s ",i,h->h_aliases[i]);
		} else {
			printf("Error finding cbmvax\n");
		}
		printf("\n");

		h = gethostbyname("cbmvax.CBM.COMMODORE.cOm");
		if(h) {
	                printf("%s	addr: %lx	",h->h_name,*((u_long *)(h->h_addr)));
			for(i=0;h->h_aliases[i] !=NULL;i++)
				printf("%ld:%s ",i,h->h_aliases[i]);
		} else {
			printf("error finding cbmvax.commodore.com\n");
		}
		printf("\n");

		h = gethostbyname("192.9.210.105");
		if(h) {
	                printf("%s	addr: %lx	",h->h_name,*((u_long *)(h->h_addr)));
			for(i=0;h->h_aliases[i] !=NULL;i++)
				printf("%ld:%s ",i,h->h_aliases[i]);
		} else {
			printf("error finding 192.9.210.105\n");
		}
		printf("\n");

		h = gethostbyname("192.9.210");
		if(h) {
	                printf("%s	addr: %lx	",h->h_name,*((u_long *)(h->h_addr)));
			for(i=0;h->h_aliases[i] !=NULL;i++)
				printf("%ld:%s ",i,h->h_aliases[i]);
		} else {
			printf("error finding 192.9.210.105\n");
		}
		printf("\n");
		h = gethostbyname("192.9.210.");
		if(h) {
	                printf("%s	addr: %lx	",h->h_name,*((u_long *)(h->h_addr)));
			for(i=0;h->h_aliases[i] !=NULL;i++)
				printf("%ld:%s ",i,h->h_aliases[i]);
		} else {
			printf("error finding 192.9.210.105\n");
		}
		printf("\n");

		h = gethostbyname("192.9.210.");
		if(h) {
	                printf("%s	addr: %lx	",h->h_name,*((u_long *)(h->h_addr)));
			for(i=0;h->h_aliases[i] !=NULL;i++)
				printf("%ld:%s ",i,h->h_aliases[i]);
		} else {
			printf("error finding 192.9.210.105.202\n");
		}
		printf("\n");

		h = gethostbyname("");
		if(h) {
	        printf("%s	addr: %lx	",h->h_name,*((u_long *)(h->h_addr)));
			for(i=0;h->h_aliases[i] !=NULL;i++)
				printf("%ld:%s ",i,h->h_aliases[i]);
		} else {
			printf("error finding NULL name\n");
		}
		printf("\n");
		h = gethostbyname("abcdefghijklmnopqrstuvwxyz");
		if(h) {
	                printf("%s	addr: %lx	",h->h_name,*((u_long *)(h->h_addr)));
			for(i=0;h->h_aliases[i] !=NULL;i++)
				printf("%ld:%s ",i,h->h_aliases[i]);
		} else {
			printf("error finding abcdefghijklmnopqrstuvwxyz\n");
		}

		printf("\n");

		endhostent();

		sp = getservbyname("shell","tcp");
		if(sp)
			printf("name: %s  protocol: %s   port: %ld\n",sp->s_name,sp->s_proto,sp->s_port);
		else
			printf("Error finding service\n");

		sp = getservbyname("route","udp");
		if(sp)
			printf("name: %s  protocol: %s   port: %ld\n",sp->s_name,sp->s_proto,sp->s_port);
		else
			printf("Error finding service\n");

		sp = getservbyname("","tcp");
		if(sp)
			printf("name: %s  protocol: %s   port: %ld\n",sp->s_name,sp->s_proto,sp->s_port);
		else
			printf("Error finding NULL service\n");

		sp = getservbyname("shell","");
		if(sp)
			printf("name: %s  protocol: %s   port: %ld\n",sp->s_name,sp->s_proto,sp->s_port);
		else
			printf("Error finding NULL protocol for service shell\n");

		sp = getservbyname("domain","tcp");
		if(sp)
			printf("name: %s  protocol: %s   port: %ld\n",sp->s_name,sp->s_proto,sp->s_port);
		else
			printf("Error finding service\n");

		sp = getservbyname("domain","udp");
		if(sp)
			printf("name: %s  protocol: %s   port: %ld\n",sp->s_name,sp->s_proto,sp->s_port);
		else
			printf("Error finding service\n");

		pr = getprotobyname("ip");
		if(pr)
			printf("name: %s  protocol: %ld\n",pr->p_name,pr->p_proto);
		else
			printf("Error finding protocol ip\n");

		pr = getprotobyname("IP");
		if(pr)
			printf("name: %s  protocol: %ld\n",pr->p_name,pr->p_proto);
		else
			printf("Error finding protocol IP\n");

		pr = getprotobyname("");
		if(pr)
			printf("name: %s  protocol: %ld\n",pr->p_name,pr->p_proto);
		else
			printf("Error finding protocol NULL\n");

		pr = getprotobyname("udpx");
		if(pr)
			printf("name: %s  protocol: %ld\n",pr->p_name,pr->p_proto);
		else
			printf("Error finding protocol udpx\n");

		pr = getprotobynumber(17);
		if(pr)
			printf("name: %s  protocol: %ld\n",pr->p_name,pr->p_proto);
		else
			printf("Error finding protocol 17\n");

		pr = getprotobynumber(23);
		if(pr)
			printf("name: %s  protocol: %ld\n",pr->p_name,pr->p_proto);
		else
			printf("Error finding protocol 23\n");

		nt = getnetbyname("arcnet");
		if(nt)
			printf("name: %s  network: %lx\n",nt->n_name,nt->n_net);
		else
			printf("Error finding network arcnet\n");

		nt = getnetbyname("cbm");
		if(nt)
			printf("name: %s  network: %lx\n",nt->n_name,nt->n_net);
		else
			printf("Error finding network cbm\n");

		nt = getnetbyname("foo");
		if(nt)
			printf("name: %s  network: %lx\n",nt->n_name,nt->n_net);
		else
			printf("Error finding network foo\n");

		nt = getnetbyaddr(inet_network("7"),AF_INET);
		if(nt)
			printf("name: %s  network: %lx\n",nt->n_name,nt->n_net);
		else
			printf("Error finding network 7\n");

		nt = getnetbyaddr(inet_network("192.9.210"),AF_INET);
		if(nt)
			printf("name: %s  network: %lx\n",nt->n_name,nt->n_net);
		else
			printf("Error finding network 192.9.210\n");

		cleanup_sockets();

		CloseLibrary(SockBase);
		printf("Library Closed.\n");

	} else
		printf("Library Failed to Open.\n");
}
@
