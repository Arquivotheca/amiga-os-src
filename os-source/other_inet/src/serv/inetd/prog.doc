Inetd - The Internet Superserver

Without inetd every server on a system would have to be loaded
and waiting for connections.  This is fine if you only have a
few small servers, but if the servers are large or very
numerous, your computer will quickly run out of memory.  To
solve this problem, you can have inetd start up a server only
when it sees a request for that server.

OPERATION

On startup inetd reads inet:db/inetd.conf, the inetd
configuration file.  For each service listed, inetd opens a
socket and waits for a connection request.  The Amiga inetd
configuration file is in the same format as in Unix, except for
the login-name field which has been deleted in this release.

A sample line from inetd.conf is

ftp	stream	tcp	nowait	inet:serv/ftpd -d -v -l

"ftp" is the name of the service.  This name must be listed in the
inetd:db/services file.

"stream" specifies a stream connection.  

"tcp" specifies the TCP protocol. Note that in TCP/IP, stream always
goes with TCP and dgram always goes with UDP.

"nowait" tells inetd not to wait until the server is finished.

The rest of the line is the command to be executed to start the
server.

For TCP sockets, when inetd receives a connection on a socket,
it calls accept() to get a new socket which it hands off to the
server process.  If the wait flag is set, inetd will ignore
incoming connection requests for that service until the first
server has finished.  Normally the wait flag will not be set for
TCP servers.

For UDP sockets, there is no equivalent to accept().  This makes
UDP more difficult to use with "nowait".  For that reason, all
UDP servers must use "wait".  If you ask for "nowait" in the
inetd.conf file, inetd will ignore that and still insist on
"wait".

Here is the ReadArgs template for a server being started from inetd:

#define TEMPLATE    "NAME/A,SOCKPTR/A/N,ID/A/N,ARGS/F"

NAME     - the name of the service
SOCKPTR  - passed to s_inherit() to get the socket sent from inetd.
ID       - 0 if server has been started "nowait"
           otherwise, it is the id that must be sent back to the 
           inetd message port when the server is finished with the
           socket it was passed.
ARGS     - the command line arguments for the server.

See timed for an example of how to write a server which handles
both UDP and TCP connections.  Most servers will handle only
one, so they will be simpler.

See also the socket library docs, s_inherit() and s_release().

