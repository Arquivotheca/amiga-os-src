head     39.2;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @* @;


39.2
date     93.07.19.11.46.47;  author spence;  state Exp;
branches ;
next     39.1;

39.1
date     93.07.02.17.20.57;  author spence;  state Exp;
branches ;
next     39.0;

39.0
date     93.03.12.19.14.19;  author spence;  state Exp;
branches ;
next     ;


desc
@Frees an FXHandle
@


39.2
log
@Autodoc cleanup
@
text
@********************************************************************************
*
*	$Id: FreeFX.asm,v 39.1 93/07/02 17:20:57 spence Exp Locker: spence $
*
********************************************************************************

	section	code

	include	'exec/types.i'
	include	'exec/memory.i'

	include	"SpecialFXBase.i"
	include	"SpecialFX_internal.i"

	xdef	_LVOFreeFX
	xref	_LVOFreeMem

******* specialfx.library/FreeFX ***********************************************
*
*   NAME
*	FreeFX -- Free the memory associated with the Special Effect
*
*   SYNOPSIS
*	FreeFX(FXHandle)
*	       a0
*
*	void FreeFX(APTR);
*
*   FUNCTION
*	To free the data associated with a 'Special Effect'.
*
*   INPUTS
*	FXHandle - the handle obtained from AllocFX(). Passing NULL is legal.
*
*   RESULT
*
*   SEE ALSO
*	AllocFX()
*
********************************************************************************

_LVOFreeFX:
	move.l	a6,-(sp)
	move.l	a0,d0
	beq.s	FreeFX.
	move.l	ToFXHandle(a0),a1	; The FXHandle passed is a pointer to
					; the array list, so find the start of
					; the memory allocation.
	move.l	sfxb_ExecBase(a6),a6
	move.l	fxh_AllocSize(a1),d0
	jsr	_LVOFreeMem(a6)
FreeFX.:
	move.l	(sp)+,a6
	rts
@


39.1
log
@Gets true FXHandle from a -ve offset from the passed FXHandle.
@
text
@d3 1
a3 1
*	$Id: FreeFX.asm,v 39.0 93/03/12 19:14:19 spence Exp Locker: spence $
d18 1
a18 1
******* SpecialFX.library/FreeFX ***********************************************
@


39.0
log
@Initial log in
@
text
@d3 1
a3 1
*	$Id: animcontrol.asm,v 40.1 93/03/03 17:11:47 spence Exp Locker: spence $
d24 1
a24 1
*	FreeFX(Handle)
d33 1
a33 1
*	Handle - the handle obtained from AllocFX()
d43 1
a43 1
	movem.l	a5/a6,-(sp)
d46 4
a49 3
	move.l	a0,a1
	move.l	a6,a5
	move.l	sfxb_ExecBase(a5),a6
d53 1
a53 1
	movem.l	(sp)+,a5/a6
@
