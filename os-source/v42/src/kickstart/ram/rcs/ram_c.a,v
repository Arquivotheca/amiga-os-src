head     36.35;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @* @;


36.35
date     91.05.08.22.56.22;  author jesup;  state Exp;
branches ;
next     36.34;

36.34
date     91.03.12.21.12.10;  author jesup;  state Exp;
branches ;
next     36.33;

36.33
date     91.01.10.16.41.05;  author jesup;  state Exp;
branches ;
next     36.32;

36.32
date     90.12.07.13.58.21;  author jesup;  state Exp;
branches ;
next     36.31;

36.31
date     90.12.07.04.08.19;  author jesup;  state Exp;
branches ;
next     36.30;

36.30
date     90.12.02.07.16.30;  author jesup;  state Exp;
branches ;
next     36.29;

36.29
date     90.11.26.19.47.47;  author jesup;  state Exp;
branches ;
next     36.28;

36.28
date     90.11.21.04.54.20;  author jesup;  state Exp;
branches ;
next     36.27;

36.27
date     90.09.13.17.47.06;  author jesup;  state Exp;
branches ;
next     36.26;

36.26
date     90.09.13.14.37.47;  author jesup;  state Exp;
branches ;
next     36.25;

36.25
date     90.08.31.14.52.56;  author jesup;  state Exp;
branches ;
next     36.24;

36.24
date     90.08.09.19.18.36;  author jesup;  state Exp;
branches ;
next     36.23;

36.23
date     90.06.17.20.57.25;  author jesup;  state Exp;
branches ;
next     36.22;

36.22
date     90.06.14.02.48.45;  author jesup;  state Exp;
branches ;
next     36.21;

36.21
date     90.06.13.02.51.27;  author jesup;  state Exp;
branches ;
next     36.20;

36.20
date     90.06.01.01.57.49;  author jesup;  state Exp;
branches ;
next     36.19;

36.19
date     90.05.31.06.39.30;  author jesup;  state Exp;
branches ;
next     36.18;

36.18
date     90.05.30.18.08.44;  author jesup;  state Exp;
branches ;
next     36.17;

36.17
date     90.05.29.05.28.48;  author jesup;  state Exp;
branches ;
next     36.16;

36.16
date     90.04.19.05.20.04;  author jesup;  state Exp;
branches ;
next     36.15;

36.15
date     90.04.18.17.11.19;  author jesup;  state Exp;
branches ;
next     36.14;

36.14
date     90.04.05.05.35.15;  author jesup;  state Exp;
branches ;
next     36.13;

36.13
date     90.04.05.05.22.54;  author jesup;  state Exp;
branches ;
next     36.12;

36.12
date     90.03.18.15.48.55;  author jesup;  state Exp;
branches ;
next     36.11;

36.11
date     90.02.20.20.38.26;  author jesup;  state Exp;
branches ;
next     36.10;

36.10
date     89.12.17.22.33.56;  author jesup;  state Exp;
branches ;
next     36.9;

36.9
date     89.12.15.16.44.24;  author jesup;  state Exp;
branches ;
next     36.8;

36.8
date     89.12.14.21.09.19;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     89.12.14.04.24.34;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     89.12.08.08.26.09;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     89.10.24.19.00.31;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     89.10.18.14.05.02;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.10.06.00.39.20;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.09.18.23.04.35;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.16.22.32.31;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.35
log
@Don't include /libhdr.h - wasn't needed anyways
@
text
@*
* C initial startup procedure under AmigaDOS
* 
* Use the following command line to make c.o
* asm -u -iINCLUDE: c.a
*
        INCLUDE "exec/types.i"
        INCLUDE "exec/alerts.i"
        INCLUDE "exec/nodes.i"
        INCLUDE "exec/lists.i"
        INCLUDE "exec/ports.i"
        INCLUDE "exec/libraries.i"
        INCLUDE "exec/tasks.i"
        INCLUDE "exec/memory.i"
        INCLUDE "exec/execbase.i"
	INCLUDE "exec/resident.i"
        INCLUDE "libraries/dos.i"
        INCLUDE "libraries/dosextens.i"
        INCLUDE "workbench/startup.i"
        INCLUDE "dos/dos_lib.i"
        INCLUDE "dos/exall.i"
	INCLUDE "utility/hooks.i"

FUNCDEF	MACRO
	XREF	_LVO\1
	ENDM

        INCLUDE "exec/exec_lib.i"

*	; BCPL garbage
*	INCLUDE "/libhdr.i"

	INCLUDE "ram_rev.i"

MEMFLAGS	EQU	MEMF_CLEAR+MEMF_PUBLIC
AbsExecBase	EQU	4

        xref    _LinkerDB               * linker defined base value
        xref    __BSSBAS                * linker defined base of BSS
        xref    __BSSLEN                * linker defined length of BSS

        section text,code

	BASEREG a4

	XREF	_SysBase
	
        xref    @@start                   * Name of C program to start with.
	xref	@@dbwrite

	xdef	@@do_match
*
*
Entry:
	;-- C version
	move.l	AbsExecBase.W,a6
	moveq	#pr_MsgPort,D0
	add.l	ThisTask(a6),D0
	move.l	d0,a0
	jsr	_LVOGetMsg(a6)		* get initial packet
	move.l	d0,a0
	move.l	LN_NAME(a0),a3		* ptr to DosPacket

        move.l  #MEMF_CLEAR,d1
        move.l  #__BSSLEN,d0            * get length of BSS in longwords
	lsl.l	#2,d0			* into bytes!
	lea	_LinkerDB,a4
	lea	__BSSBAS,a0
	sub.l	a4,a0
	add.l	a0,d0			* add in initialized data space
	jsr	_LVOAllocMem(a6)	* get global storage (All 0's!)
	move.l	d0,a4			* ptr to mem
	tst.l	d0
	beq.s	exit			* probably not safe!!!

        move.l  A6,_SysBase		; actually (a4)!!!!!

	;-- pass parameter in a0
	move.l	a3,a0
        jsr     @@start(PC)              * call C entrypoint
*        moveq.l #0,d1                   * set successful status (BCPL)
	moveq	#0,d0			* C
exit:
	rts

	;-- failed allocation - exit
error_exit:
	move.l	dp_Link(a3),a1		* message
	move.l	dp_Port(a3),a0		* "reply" port
	jsr	_LVOPutMsg(a6)
	moveq	#-1,d1
	bra.s	exit

*
* Assembler routine for exall to call hook function
*
@@do_match:
	movem.l	d0/a2/a3,-(a7)	; tricky!
	move.l	a7,a2		; points to data (from d0)
	move.l	eac_MatchFunc(a0),a0	; hook structure
	move.l	h_Entry(a0),a3
	jsr	(a3)		; a0=ptr to hook, a1=pointer to param,
				; a2=ptr to object
	movem.l	(a7)+,d1/a2/a3	; don't hit d0!
	rts
*

	XREF	_end
romtag:
	DC.W	RTC_MATCHWORD		;(50) UWORD RT_MATCHWORD
	DC.L	romtag			;(52) APTR  RT_MATCHTAG
	DC.L	_end			;(56) APTR  RT_ENDSKIP
	DC.B	0			;(5A) UBYTE RT_FLAGS
	DC.B	VERSION			;(5B) UBYTE RT_VERSION
	DC.B	NT_UNKNOWN		;(5C) UBYTE RT_TYPE
	DC.B	-123			;(5D) BYTE  RT_PRI
	DC.L	RAMNAME			;(5E) APTR  RT_NAME
	DC.L	idtag			;(62) APTR  RT_IDSTRING
*	DC.L	Seglist			;(66) APTR  RT_INIT
	DC.L	Entry			;(66) APTR  RT_INIT
					;(6A) LABEL RT_SIZE

RAMNAME: DC.B	"ram-handler",0
idtag:	 VSTRING

        END
@


36.34
log
@Fixed do_match, was badly broken
@
text
@d30 2
a31 2
	; BCPL garbage
	INCLUDE "/libhdr.i"
@


36.33
log
@Funcdef.i removed
@
text
@d98 2
a99 3
	movem.l	d0/a2,-(a7)	; tricky!
	move.l	a1,a2		; object (exalldata)
	move.l	a7,a1		; param ptr
d101 2
a102 1
	jsr	h_Entry(a0)	; a0=ptr to hook, a1=pointer to param,
d104 1
a104 1
	movem.l	(a7)+,d1/a2	; don't hit d0!
@


36.32
log
@Fixed VSTRING
@
text
@a19 2
        INCLUDE "exec/funcdef.i"
        INCLUDE "exec/exec_lib.i"
d23 6
@


36.31
log
@use ram_rev.i!!!! finally!!!
@
text
@d120 1
a120 1
idtag:	 DC.B	VSTRING
@


36.30
log
@*** empty log message ***
@
text
@d29 2
a37 5
* FIX! get from bumprev!

VERSION	 EQU	36
REVISION EQU	35

d120 1
a120 2
* FIX! idtag should use VSTRING from ram_rev.i!
idtag:	 DC.B	"ram-handler 36.35 (12/2/90)",13,10,0
@


36.29
log
@*** empty log message ***
@
text
@d39 1
a39 1
REVISION EQU	34
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.34 (11/26/90)",13,10,0
@


36.28
log
@*** empty log message ***
@
text
@d39 1
a39 1
REVISION EQU	33
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.33 (11/21/90)",13,10,0
@


36.27
log
@*** empty log message ***
@
text
@d39 1
a39 1
REVISION EQU	32
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.32 (9/13/90)",13,10,0
@


36.26
log
@*** empty log message ***
@
text
@d39 1
a39 1
REVISION EQU	31
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.31 (9/13/90)",13,10,0
@


36.25
log
@rev 30
@
text
@d39 1
a39 1
REVISION EQU	30
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.30 (8/31/90)",13,10,0
@


36.24
log
@*** empty log message ***
@
text
@d39 1
a39 1
REVISION EQU	28
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.28 (8/9/90)",13,10,0
@


36.23
log
@*** empty log message ***
@
text
@d39 1
a39 1
REVISION EQU	27
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.27 (6/16/90)",13,10,0
@


36.22
log
@*** empty log message ***
@
text
@d39 1
a39 1
REVISION EQU	26
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.26 (6/13/90)",13,10,0
@


36.21
log
@*** empty log message ***
@
text
@d39 1
a39 1
REVISION EQU	25
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.25 (6/12/90)",13,10,0
@


36.20
log
@*** empty log message ***
@
text
@d39 1
a39 1
REVISION EQU	24
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.24 (5/30/90)",13,10,0
@


36.19
log
@*** empty log message ***
@
text
@d39 1
a39 1
REVISION EQU	23
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.23 (5/30/90)",13,10,0
@


36.18
log
@Cape changes, bump version
@
text
@d39 1
a39 1
REVISION EQU	22
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.22 (5/29/90)",13,10,0
@


36.17
log
@*** empty log message ***
@
text
@a35 2
	XREF	_SysBase
	
d39 1
a39 1
REVISION EQU	21
d43 4
d75 1
a75 1
        move.l  A6,_SysBase(A4)
d124 1
a124 1
idtag:	 DC.B	"ram-handler 36.21 (4/18/90)",13,10,0
@


36.16
log
@*** empty log message ***
@
text
@d22 2
a23 2
        INCLUDE "libraries/dos_lib.i"
        INCLUDE "libraries/exall.i"
d41 1
a41 1
REVISION EQU	20
d122 1
a122 1
idtag:	 DC.B	"ram-handler 36.20 (4/18/90)",13,10,0
@


36.15
log
@Bunped rev, removed BCPL stuff entriely
@
text
@d41 1
a41 1
REVISION EQU	19
d122 1
a122 1
idtag:	 DC.B	"ram-handler 36.19 (4/18/90)",13,10,0
@


36.14
log
@*** empty log message ***
@
text
@d41 1
a41 1
REVISION EQU	16
d49 2
a50 5

*Seglist:
*	DC.L	0		; no next hunk
*start:	DC.L	(end-start)/4	; BCPL garbage

a51 5
*	;-- Called from BCPL - a0/a1/a5/a6 live, rest dead
*	movem.l	a0/a1/a6,-(a7)	; save funky bcpl registers
*	lsl.l	#2,d1
*	move.l	d1,a3			* save start param

a67 1
*	move.l	AbsExecBase.W,a6
a82 3
*	movem.l	(a7)+,a0/a1/a6
*       jmp	(a6)			* bcpl return

a103 3
* Brain damaged BCPL code
*
*	CNOP	0,4
a104 5
*	DC.L	0
*	DC.L	G_START/4,(Entry-start)
*	DC.L	G_GLOBMAX/4
*end:

d122 1
a122 1
idtag:	 DC.B	"ram-handler 36.16 (4/4/90)",13,10,0
@


36.13
log
@for rcs 4.x header change
@
text
@d41 1
a41 1
REVISION EQU	15
d142 1
a142 1
idtag:	 DC.B	"ram-handler 36.15 (3/13/90)",13,10,0
@


36.12
log
@C startup conventions
@
text
@@


36.11
log
@*** empty log message ***
@
text
@d29 2
a30 2
MEMFLAGS EQU    MEMF_CLEAR+MEMF_PUBLIC
AbsExecBase EQU 4
a31 6
; some usefull macros:

callsys macro
        CALLLIB _LVO\1
        endm
        
a37 2
*       library references

d41 1
a41 1
REVISION EQU	14
d50 3
a52 3
Seglist:
	DC.L	0		; no next hunk
start:	DC.L	(end-start)/4	; BCPL garbage
d55 14
a68 5
	;-- Called from BCPL - a0/a1/a5/a6 live, rest dead
	movem.l	a0/a1/a6,-(a7)	; save funky bcpl registers
	lsl.l	#2,d1
	move.l	d1,a3			* save start param
	
d76 1
a76 1
	move.l	AbsExecBase.W,a6
d87 2
a88 1
        moveq.l #0,d1                   * set successful status
d90 1
a90 2
	movem.l	(a7)+,a0/a1/a6
        jmp	(a6)			* bcpl return
d92 3
d118 1
a118 1
	CNOP	0,4
d120 4
a123 4
	DC.L	0
	DC.L	G_START/4,(Entry-start)
	DC.L	G_GLOBMAX/4
end:
d136 2
a137 1
	DC.L	Seglist			;(66) APTR  RT_INIT
d142 1
a142 9
idtag:	 DC.B	"ram-handler 36.14 (2/19/90)",13,10,0
	CNOP	0,2

*
*        section __MERGED,BSS
*
*        xdef    _SysBase
*
*_SysBase ds.l	1
@


36.10
log
@Bumped rev to 13
@
text
@d49 1
a49 1
REVISION EQU	13
d137 1
a137 1
idtag:	 DC.B	"ram-handler 36.13 (12/17/89)",13,10,0
@


36.9
log
@*** empty log message ***
@
text
@d49 1
a49 1
REVISION EQU	12
d137 1
a137 1
idtag:	 DC.B	"ram-handler 36.12 (12/15/89)",13,10,0
@


36.8
log
@*** empty log message ***
@
text
@d49 1
a49 1
REVISION EQU	11
d137 1
a137 1
idtag:	 DC.B	"ram-handler 36.11 (12/13/89)",13,10,0
@


36.7
log
@Moved SysBase to global.c
@
text
@d49 1
a49 1
REVISION EQU	10
d137 1
a137 1
idtag:	 DC.B	"ram-handler 36.10 (12/12/89)",13,10,0
@


36.6
log
@Made romable, added hook call
@
text
@d41 2
d49 1
a49 1
REVISION EQU	9
d137 1
a137 1
idtag:	 DC.B	"ram-handler 36.9 (12/8/89)",13,10,0
d141 5
a145 5
        section __MERGED,BSS

        xdef    _SysBase

_SysBase ds.l	1
@


36.5
log
@removed led dimming
@
text
@d23 2
d47 1
a47 1
REVISION EQU	6
d54 4
a57 3
* Define these if put in rom!	
*Seglist:
*	DC.L	0		; no next hunk
d64 1
a64 1
	move.l	d1,a0
d66 1
a66 4
        lea     _LinkerDB,a4            * load base register

        lea     __BSSBAS,a3             * get base of BSS
        moveq   #0,d1
d68 10
a77 5
        bra.s   clr_lp                  * and clear for length given
clr_bss move.l  d1,(a3)+
clr_lp  dbf     d0,clr_bss
	
        move.l  AbsExecBase.W,_SysBase(A4)
d79 2
d82 1
d84 2
a85 2
        moveq.l #0,d0                   * set successful status

d89 8
d98 12
d124 1
a124 1
	DC.B	0; RTW_COLDSTART	;(5A) UBYTE RT_FLAGS
d130 1
a130 1
	DC.L	start-4			;(66) APTR  RT_INIT
d135 1
a135 1
idtag:	 DC.B	"ram-handler 36.6 (10/18/89)",13,10,0
a138 9
	section __MERGED,DATA
*
* BCPL GARBAGE! FIX! REMOVE!  Must be at head of data hunk to fool BCPL GLOBIN
*
x	dc.l	(y-x)/4

	DC.L	0
	DC.L	G_GLOBMAX/4
y:
@


36.4
log
@changed version
@
text
@a58 2
 BCHG	#1,$bfe001

@


36.3
log
@Bumped rev to 36.3, fixed year.
@
text
@d45 1
a45 1
REVISION EQU	2
d109 1
a109 1
idtag:	 DC.B	"ram-handler 36.3 (10/5/89)",13,10,0
@


36.2
log
@
@
text
@d109 1
a109 1
idtag:	 DC.B	"ram-handler 36.2 (9/18/98)",13,10,0
@


36.1
log
@*** empty log message ***
@
text
@d16 1
d24 3
d42 5
d51 13
a64 4
start:
*	nop
*	bra.s	start

d70 1
a70 1
        bra.s   clr_lp                 * and clear for length given
d74 1
a74 2
        move.l  AbsExecBase.W,a6
        move.l  a6,_SysBase(A4)
d76 1
a76 2
*	lea	string(A4),A0
*	jsr	@@dbwrite(PC)
d80 2
a81 1
        rts
a82 1
        section __MERGED,DATA
d84 3
a86 1
        xref    _DOSBase
d88 36
d126 3
a128 4
*
_SysBase        dc.l    0
string		dc.b	"In ram_c.a....",0
               END
@
