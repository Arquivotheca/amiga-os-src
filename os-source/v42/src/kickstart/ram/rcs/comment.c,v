head     36.9;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


36.9
date     90.12.07.13.57.00;  author jesup;  state Exp;
branches ;
next     36.8;

36.8
date     90.12.07.04.00.13;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     90.09.13.14.31.35;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     90.05.30.18.02.29;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     90.04.05.05.21.27;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     90.02.20.20.13.25;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.12.08.08.21.15;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.10.18.14.06.13;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.16.22.31.50;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.9
log
@Handle  SetComment with 0 length ("") by not allocating any space.
Return failuer when getvec fails for comment
@
text
@/* comment.c */

#include "ram_includes.h"
#include "ram.h"

/********************************************************/
/* success := comment(n)                                */
/*                                                      */
/* Handle setting of protection (possibly comments too) */
/********************************************************/

LONG
comment (pkt,objname)
	struct DosPacket *pkt;
	char *objname;
{
/*
   // format of packet is:
   //   arg1 - **unused**
   //   arg2 - lock on directory
   //   arg3 - name of object
   //   arg4 - protection bits OR comment string (BSTR) OR datestamp (CPTR)
*/
	struct node *node;
	char *str;
	LONG type,comm;
	ULONG len;

	str  = (char *) (pkt->dp_Arg4);
	type = pkt->dp_Type;
	comm = (type == ACTION_SET_COMMENT);
	if (type == ACTION_SET_COMMENT)
	{
		str  = (char *) BADDR(str);		/* still in BSTR form */
		len  = *str;
	}

	if (comm && (len > MAX_COMMENT))
	{
		fileerr = ERROR_COMMENT_TOO_BIG;
		return FALSE;
	}

	node = locatenode((struct lock *) (pkt->dp_Arg2 << 2),objname,TRUE);
						/* FIX??? maybe not follow? */
	if (!node)
		return FALSE;

	/* fail attempts to comment on root */
	if (node == root)
	{
		fileerr = ERROR_OBJECT_WRONG_TYPE;
		return FALSE;
	}

	if (comm) {
		freevec(node->comment);		/* freevec(NULL) is ok */
		/* don't allocate for a comment of ""! */
		if (comment)
		{
			node->comment = getvec(len+1);
			if (node->comment)
			{
				memcpy(node->comment,str+1,len);
				node->comment[len] = '\0';
			} else {
				return FALSE;
			}
		} else
			node->comment = NULL;

	} else if (type == ACTION_SET_PROTECT) {

		node->prot = (LONG) str;

	} else /* if (type == ACTION_SET_DATE)*/ {
		/* this MUST be cast! */
		/* arg4 is a CPTR to a datestamp! */
		copydate(node->date,((LONG *) str));

		notifynode(node);
	}

	/* I suppose any of these could be considered a change */
	/* copy makes this a PAIN - I'll try just setdate */
	/*notifynode(node);*/

	/* DateStamp(root->date); */	/* this is wierd - it isn't needed */

	return DOS_TRUE;
}
@


36.8
log
@FreeVec->freevec
AllocVec->getvec
@
text
@d58 2
a59 2
		node->comment = getvec(len);
		if (node->comment)
d61 11
a71 3
			memcpy(node->comment,str+1,len);
			node->comment[len] = '\0';
		}
@


36.7
log
@Removed two unused variables, commented out datestamp of root
@
text
@d57 2
a58 2
		FreeVec(node->comment);		/* freevec(NULL) is ok */
		node->comment = AllocVec(len,0);
@


36.6
log
@optimizations: don't use findentry, etc directly
@
text
@a23 1
	struct node *dptr;
a24 1
	char name[MAX_FILENAME+1];
d80 1
a80 1
	DateStamp(root->date);
@


36.5
log
@for rcs 4.x header change
@
text
@a30 4
	dptr = checklock((struct lock *) (pkt->dp_Arg2 << 2));
	if (dptr == NULL)
		return FALSE;

d46 3
a48 2
	dptr = finddir(dptr,objname,name);
	if (!dptr)
a50 3
	if (!findentry(dptr,name,TRUE))	/* FIX? */
		return FALSE;

a51 1
	node = current_node;
@


36.4
log
@BtoCstr->BtoC
@
text
@@


36.3
log
@*** empty log message ***
@
text
@d13 1
a13 1
comment (pkt)
d15 1
d50 1
a50 3
	BtoCstr(pkt->dp_Arg3);
	dptr = finddir(dptr,(char *) (pkt->dp_Arg3 << 2),name);
	CtoBstr(pkt->dp_Arg3);
d66 2
a67 2
		freevec(node->comment);		/* freevec(NULL) is ok */
		node->comment = getvec((len + 3) >> 2);
d89 1
a89 1
	datstamp(root->date);
@


36.2
log
@Fixed setdate problems, notify only on setdate because of copy.
@
text
@d21 1
a21 1
   //   arg4 - protection bits OR comment string
d76 1
a76 1
		node->prot = pkt->dp_Arg4;
d80 1
a80 1
		/* arg4 is a BPTR to a datestamp */
@


36.1
log
@*** empty log message ***
@
text
@d34 1
d37 5
a41 2
	str  = (char *) (pkt->dp_Arg4 << 2);	/* still in BSTR form */
	len  = *str;
d52 2
d55 1
a55 1
	if (!findentry(dptr,name))
d78 1
a78 1
	} else if (type == ACTION_SET_DATE) {
d82 2
d87 2
a88 1
	notifynode(node);
@
