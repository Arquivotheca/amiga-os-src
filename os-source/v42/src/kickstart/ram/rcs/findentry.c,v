head     36.4;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


36.4
date     92.07.31.20.02.44;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     90.04.05.05.22.04;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.10.18.14.12.47;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.16.22.32.05;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.4
log
@ifdefed out softlink support
@
text
@/* findentry.c */

#include "ram_includes.h"
#include "ram.h"

/********************************************************/
/* res := findentry(dkey,fname,follow_links)            */
/*                                                      */
/* Given a directory key and a filename, this routine   */
/* searches that directory for the specified filename.  */
/* Returns FALSE or TRUE with pointer to file's key in  */
/* the global 'current.node'                            */
/* follow_links = FALSE will return the link entry      */
/* otherwise hard links return the linked object, soft  */
/* links return ERROR_IS_SOFT_LINK.			*/
/********************************************************/

LONG
findentry (dptr,name,follow_links)
	struct node *dptr;
	char *name;
	LONG follow_links;
{
	if ((dptr == NULL) || (dptr->type != ST_USERDIR))
	{
		fileerr = (dptr == NULL ? ERROR_OBJECT_NOT_FOUND :
					  ERROR_OBJECT_WRONG_TYPE);
		return FALSE;
	}

	current_node = dptr->list;

	while (current_node != NULL) {
		/* be case-insensitive */
		if (stricmp(name,current_node->name) == SAME)
		{
			/* Handle hard and soft links */
			if (follow_links)
			{
			    if (current_node->type == ST_LINKDIR ||
			        current_node->type == ST_LINKFILE)
			    {
				/* I store links in 'list' */
				current_node = current_node->list;

#ifdef SOFTLINKS_SUPPORTED
			    } else if (current_node->type == ST_SOFTLINK) {

				fileerr = ERROR_IS_SOFT_LINK;
				return FALSE;
#endif
			    }
			}
			return TRUE;
		}
		current_node = current_node->next;
	}

	fileerr = ERROR_OBJECT_NOT_FOUND;
	return FALSE;
}
@


36.3
log
@for rcs 4.x header change
@
text
@d46 1
d51 1
@


36.2
log
@Changed parms (added follow_links).  Added soft/hard link support (this
is where they really work).
@
text
@@


36.1
log
@*** empty log message ***
@
text
@d7 1
a7 1
/* res := findentry(dkey,fname)                         */
d13 3
d19 1
a19 1
findentry (dptr,name)
d22 1
a30 2
	/* wierd, but works REJ */
	prev_node    = (struct node *) &(dptr->list);
d36 16
d53 1
a53 1
		prev_node = current_node;
@
