head     36.13;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


36.13
date     91.01.10.16.39.07;  author jesup;  state Exp;
branches ;
next     36.12;

36.12
date     90.12.02.07.17.55;  author jesup;  state Exp;
branches ;
next     36.11;

36.11
date     90.11.21.04.56.13;  author jesup;  state Exp;
branches ;
next     36.10;

36.10
date     90.06.14.02.47.55;  author jesup;  state Exp;
branches ;
next     36.9;

36.9
date     90.06.13.02.57.12;  author jesup;  state Exp;
branches ;
next     36.8;

36.8
date     90.05.30.18.10.29;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     90.04.05.05.22.43;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     90.02.20.20.39.47;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     89.12.14.04.25.13;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     89.12.08.08.27.39;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.10.18.14.20.49;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.09.18.23.04.44;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.16.22.32.23;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.13
log
@Math downcoding (forgot to check in last time)
@
text
@/* protos.h */

/* Prototypes for functions defined in transfer.c */
LONG read(struct lock *lock,
          CPTR buf,
          LONG bsize);
LONG write(struct lock *lock,
           CPTR buf,
           LONG bsize);
struct data *growblock(struct data *p,
		       struct node *node);

/* Prototypes for functions defined in seek.c */
LONG seek(struct lock *lock,
         LONG poscount,
         LONG frompos,
	 LONG truncate);

/* Prototypes for functions defined in renamedisk.c */
LONG renamedisk(struct DosPacket *pkt);

/* Prototypes for functions defined in rename.c */
LONG rename(struct lock *from_dir,
           char *from_str,
           struct lock *to_dir,
           char *to_str);

/* Prototypes for functions defined in parent.c */
struct lock *parentfh(struct lock *lock, LONG action);

/* Prototypes for functions defined in mygetvec.c */
void *mygetvec(ULONG n);
void *getvec(ULONG size);

/* Prototypes for functions defined in lock.c */
struct node *checklock(struct lock *lock);
struct lock *getlock(struct node *ptr,
                     LONG access);
LONG freelock(struct lock *lock);
struct lock * find_lock(struct lock *p,
			struct node *node);
LONG change_lock(struct lock *lock,
		 LONG newmode);

/* Prototypes for functions defined in locate.c */
struct lock *locate(struct lock *lock,
     	            char *str,
		    LONG mode);
struct node *locatenode(struct lock *lock,
			char *str,
			LONG follow_links);
struct node *findnode(struct node *dptr,
		      char *str,
		      LONG follow_links);

/* Prototypes for functions defined in findentry.c */
LONG findentry(struct node *dptr,
               char *name,
	       LONG follow_links);

/* Prototypes for functions defined in finddir.c */
struct node *finddir(struct node *dptr,
                     char *string,
                     char *name);

/* Prototypes for functions defined in file.c */
LONG openmakefile(struct FileHandle *scb,
                 struct lock *dlock,
                 char *string,
                 int type);
LONG openfromlock(struct FileHandle *scb,
		  struct lock *lock);

/* Prototypes for functions defined in exall.c */
LONG exnext(struct DosPacket *pkt,
            LONG object);
LONG exall (struct node *node,
	    struct DosPacket *dp);
LONG fill_data (struct ExAllData *ed,
		ULONG data,
		struct node *node,
		LONG *size);

LONG setinfo(struct FileInfoBlock *ivec,
            struct node *ptr);

/* Prototypes for functions defined in diskinfo.c */
LONG diskinfo(struct DosPacket *pkt);

/* Prototypes for functions defined in deletedir.c */
void deletedir(struct node *node);

/* Prototypes for functions defined in delete.c */
LONG delete(struct node *dptr,
           char *string,
	   long notify);
void remove_node(struct node *node);

/* Prototypes for functions defined in create.c */
struct lock *create(struct lock *lock,
                    char *string,
		    LONG mode,
		    LONG is_dir);

/* Prototypes for functions defined in comment.c */
LONG comment(struct DosPacket *pkt,
	     char *objname);

/* Prototypes for functions defined in checkname.c */
LONG checkname(char *name);

/* Prototypes for functions defined in start.c */
void start(struct DosPacket *dp);

/* Prototypes for functions defined in closefile.c */
LONG closefile(struct lock *lock);
struct data *swapblock(struct data *oldblock,
		       LONG size,
		       LONG xfersize);

/* Prototypes for functions defined in makelink.c */
LONG makelink(struct lock *lock,
	      UBYTE *string,
	      LONG arg,
	      LONG soft);
LONG readlink(struct lock *lock,
	      UBYTE *string,
	      UBYTE *buffer,
	      ULONG size);

/* Prototypes for functions defined in notify.c */
LONG addnotify(struct NotifyRequest *req);
LONG remnotify(struct NotifyRequest *req);
struct node *exists(char *file);
void notify(struct lock *lock);
void notifynode(struct node *node);
void do_notify(struct notify *notify);
void find_notifies(struct node *node,
		  long flag);
struct NotifyMessage *FindMsg(void);
void rem_notifies(struct node *node,
		 long flag);
void AddFreeMsg(struct NotifyMessage *msg);
char *tail(char *str);

/* Prototypes for functions defined in notify.c */
LONG lockrecord (struct lock *lock,struct DosPacket *dp);
LONG find_rlock (struct lock *lock, ULONG offset, ULONG length, ULONG mode);
LONG rlock_wait_add (struct lock *lock, struct DosPacket *dp);
LONG unlockrecord (struct lock *lock, ULONG offset, ULONG length);
void wakeup (struct node *node, ULONG offset, ULONG top);
void kill_rwait (struct timerequest *iob);

/* external stuff */

extern char *BtoC(char *string,BPTR bstr);
extern void CtoBcpy(char *dest,char *src);
extern void xfer(char *from,char *to,ULONG number);
extern LONG mult32(LONG val1,LONG val2);
extern LONG div32(LONG val1,LONG val2);
extern LONG rem32(LONG val1,LONG val2);
extern LONG freelist(struct node *list);	/* was unloadseg */
extern void NewList(struct List *list);
extern void freevec(void *ptr);

/* assembler function in ram_c.a */

LONG do_match(struct ExAllControl *ec, ULONG data, struct ExAllData *ed);
@


36.12
log
@*** empty log message ***
@
text
@d159 3
a162 1
extern int  casestrcmp(char *s1,char *s2);
d164 1
@


36.11
log
@*** empty log message ***
@
text
@d32 2
a33 1
CPTR mygetvec(ULONG n);
@


36.10
log
@Added param to create()
@
text
@d101 2
a102 1
		    LONG mode);
@


36.9
log
@*** empty log message ***
@
text
@d100 2
a101 1
                    char *string);
@


36.8
log
@Added missing newList entry, new entries in locate
@
text
@d29 1
a29 1
struct lock *parent(struct DosPacket *pkt);
a157 2
extern struct MsgPort *CreatePort(char *name,LONG flag);
extern void DeletePort(struct MsgPort *port);
@


36.7
log
@for rcs 4.x header change
@
text
@d48 6
d160 1
@


36.6
log
@*** empty log message ***
@
text
@@


36.5
log
@*** empty log message ***
@
text
@d4 6
a9 4
LONG transfer(struct lock *lock,
             CPTR buf,
             LONG bsize,
             int reading);
d97 2
a98 1
LONG comment(struct DosPacket *pkt);
d147 1
a147 2
extern char *BtoCstr(BPTR bstr);
extern BPTR CtoBstr(BPTR str);
a149 3
extern char *getvec(LONG vecsize);
extern void freevec(char *vec);
extern char *getvecclear(LONG vecsize);
a151 4
extern int  splitname(char *source,char split,char *str2,int startpos);
extern void datstamp(long *date);
extern void returnpkt(struct DosPacket *dp,LONG res1,LONG res2);
extern struct DeviceList *adddevice(char *name);
@


36.4
log
@*** empty log message ***
@
text
@d134 8
@


36.3
log
@Changed findentry, added remove_node, readlink, makelink
@
text
@d37 4
d62 2
d68 7
d151 4
@


36.2
log
@
@
text
@d45 2
a46 1
              char *name);
d75 1
d95 10
@


36.1
log
@*** empty log message ***
@
text
@d86 1
a86 1
void start(void);
@
