head     36.19;
branch   ;
access   ;
symbols  ;
locks    jesup:36.19; strict;
comment  @# @;


36.19
date     92.07.31.20.02.17;  author jesup;  state Exp;
branches ;
next     36.18;

36.18
date     92.04.09.00.08.29;  author jesup;  state Exp;
branches ;
next     36.17;

36.17
date     91.05.08.22.52.30;  author jesup;  state Exp;
branches ;
next     36.16;

36.16
date     91.01.17.14.05.15;  author jesup;  state Exp;
branches ;
next     36.15;

36.15
date     91.01.17.13.57.53;  author jesup;  state Exp;
branches ;
next     36.14;

36.14
date     91.01.17.13.56.46;  author jesup;  state Exp;
branches ;
next     36.13;

36.13
date     91.01.17.13.55.02;  author jesup;  state Exp;
branches ;
next     36.12;

36.12
date     91.01.10.16.39.46;  author jesup;  state Exp;
branches ;
next     36.11;

36.11
date     90.11.21.04.56.55;  author jesup;  state Exp;
branches ;
next     36.10;

36.10
date     90.05.30.18.11.25;  author jesup;  state Exp;
branches ;
next     36.9;

36.9
date     90.05.29.05.29.47;  author jesup;  state Exp;
branches ;
next     36.8;

36.8
date     90.04.05.05.22.15;  author jesup;  state Exp;
branches ;
next     36.7;

36.7
date     90.02.20.20.47.34;  author jesup;  state Exp;
branches ;
next     36.6;

36.6
date     89.12.14.04.27.03;  author jesup;  state Exp;
branches ;
next     36.5;

36.5
date     89.12.08.08.26.52;  author jesup;  state Exp;
branches ;
next     36.4;

36.4
date     89.10.18.14.22.18;  author jesup;  state Exp;
branches ;
next     36.3;

36.3
date     89.10.03.18.38.54;  author jesup;  state Exp;
branches ;
next     36.2;

36.2
date     89.09.18.23.05.02;  author jesup;  state Exp;
branches ;
next     36.1;

36.1
date     89.09.16.22.32.16;  author jesup;  state Exp;
branches ;
next     ;


desc
@@


36.19
log
@Brought up to date
@
text
@#
HDRS = ram.h ram_includes.h block_types.h protos.h include:dos/dosextens.h \
       include:dos/dos.h
OBJ = obj/
LC = lc
CASM = casm
PRECOMP = -. -cfims -v -O -ms -rr 		     -d 
LCFLAGS = -. -cfims -v -O -ms -rr -Hincludes.precomp -d -o$(OBJ)
CASMFLAGS = -cqry -iinclude:
LIB = lib:
V = 39
REMOTEDIR = /usr/commodore/amiga/V$(V)/src/kickstart/ram

ram.ld.strip: ram.ld
	blink from ram.ld to ram.ld.strip NODEBUG

ram.ld:      includes.precomp \
	     $(OBJ)start.o $(OBJ)support.o \
	     $(OBJ)checkname.o $(OBJ)comment.o $(OBJ)create.o $(OBJ)delete.o \
	     $(OBJ)deletedir.o $(OBJ)diskinfo.o \
	     $(OBJ)exall.o $(OBJ)file.o $(OBJ)finddir.o $(OBJ)findentry.o \
	     $(OBJ)locate.o $(OBJ)lock.o $(OBJ)mygetvec.o $(OBJ)closefile.o \
	     $(OBJ)parent.o $(OBJ)rename.o $(OBJ)renamedisk.o $(OBJ)seek.o \
	     $(OBJ)transfer.o $(OBJ)global.o $(OBJ)ram_c.o \
	     $(OBJ)notify.o $(OBJ)end.o $(OBJ)makelink.o $(OBJ)record.o \
	     $(OBJ)dbsupp.o
	blink with ram.lnk

#	     $(OBJ)adddevice.o $(OBJ)support2.o \

.c.o:
	$(LC) $(LCFLAGS) $*

.c.precomp:
	$(LC) -ph $(PRECOMP) $*
	copy ram:$*.q $*.precomp

.a.o:
	$(CASM) -a $*.a -o$(OBJ)$*.o $(CASMFLAGS)

.asm.o:
	$(CASM) -a $*.asm -o$(OBJ)$*.o $(CASMFLAGS)

includes.precomp: includes.c $(HDRS) dbwin.h

$(OBJ)start.o: start.c includes.precomp

$(OBJ)record.o: record.c includes.precomp

$(OBJ)checkname.o: checkname.c includes.precomp

$(OBJ)comment.o: comment.c includes.precomp

$(OBJ)create.o: create.c includes.precomp

$(OBJ)delete.o: delete.c includes.precomp

$(OBJ)deletedir.o: deletedir.c includes.precomp

$(OBJ)diskinfo.o: diskinfo.c includes.precomp

$(OBJ)exall.o: exall.c includes.precomp include:dos/exall.h

$(OBJ)file.o: file.c includes.precomp

$(OBJ)finddir.o: finddir.c includes.precomp

#$(OBJ)findentry.o: findentry.c includes.precomp

$(OBJ)locate.o: locate.c includes.precomp

$(OBJ)lock.o: lock.c includes.precomp

$(OBJ)mygetvec.o: mygetvec.c includes.precomp

$(OBJ)parent.o: parent.c includes.precomp

$(OBJ)rename.o: rename.c includes.precomp

$(OBJ)renamedisk.o: renamedisk.c includes.precomp

$(OBJ)seek.o: seek.c includes.precomp

$(OBJ)transfer.o: transfer.c includes.precomp

$(OBJ)global.o: global.c includes.precomp

$(OBJ)adddevice.o: adddevice.c includes.precomp

$(OBJ)closefile.o: closefile.c includes.precomp

$(OBJ)notify.o: notify.c includes.precomp include:dos/notify.h

$(OBJ)makelink.o: makelink.c includes.precomp

$(OBJ)ram_c.o: ram_c.a ram_rev.i

$(OBJ)support.o: support.a

$(OBJ)support2.o: support2.a

$(OBJ)findentry.o: findentry.asm block_types.i ram.i

$(OBJ)end.o: end.a

$(OBJ)dbsupp.o: dbsupp.c dbwin.h

clean:
	delete $(OBJ)\#?.o

version:
	bumprev 39 ram_rev

backup:
	copy "" vax:ram

localbackup:
	copy "" tmp:ram

internal:
	lmk
	copy ram.ld\#? ram.map ram_rev\#? V:src/kickstart/ram
	rsh heartofgold "cd $(REMOTEDIR); co RCS/**"
@


36.18
log
@*** empty log message ***
@
text
@d11 2
d111 1
a111 1
bumprev:
d115 1
a115 2
	rsh rebma -l jesup chmod u+w dos/ram/*
	copy "" sun:dos/ram
a116 3
vaxbackup:
	copy "" vax:dos/ram

d120 1
a120 1
release:
d123 1
@


36.17
log
@removed private idiosyncracies
@
text
@d110 1
a110 1
	bumprev 37 ram_rev
a124 1
	rsh rebma -l jesup "cd /usr/commodore/amiga/V/src/kickstart/ram; co RCS/*"
@


36.16
log
@release now works, rsh was needed
@
text
@d2 2
a3 2
HDRS = ram.h ram_includes.h block_types.h protos.h /dos/dosextens.h \
       /dos/dos.h
d7 3
a9 5
PRECOMP = -. -cfims -v -O -ms -rr 		     -ig:dos/ \
-ig:inc.lattice/ -d 
LCFLAGS = -. -cfims -v -O -ms -rr -Hincludes.precomp -ig:dos/ \
-ig:inc.lattice/ -d -o$(OBJ)
CASMFLAGS = -cqry -ig:dos/ -iinclude:
d60 1
a60 1
$(OBJ)exall.o: exall.c includes.precomp /dos/exall.h
d90 1
a90 1
$(OBJ)notify.o: notify.c includes.precomp /dos/notify.h
d124 1
a124 1
	copy ram.ld\#? ram.map ram_rev\#? ks:ram
@


36.15
log
@Use spat for wildcards
@
text
@d127 1
a127 2
	cd ks:ram
	spat co RCS/\#?
@


36.14
log
@Fixed release
@
text
@d128 1
a128 1
	co RCS/\#?
@


36.13
log
@added release
@
text
@d128 1
a128 1
	co RCS/#?
@


36.12
log
@V37, remove references to inc:
Also forgot to check in when I added bumprev
@
text
@d123 6
@


36.11
log
@*** empty log message ***
@
text
@d7 5
a11 4
PRECOMP = -. -cfims -v -O -ms -rr -ig:dos/ -iinc: -ig:inc.lattice/
LCFLAGS = -. -cfims -v -O -ms -rr -Hincludes.precomp -ig:dos/ -iinc: \
 -d -ig:inc.lattice/ -o$(OBJ)
CASMFLAGS = -cqry -ig:dos/ -iinc:
d25 2
a26 1
	     $(OBJ)notify.o $(OBJ)end.o $(OBJ)makelink.o $(OBJ)record.o
d44 1
a44 1
includes.precomp: includes.c $(HDRS)
d96 1
a96 1
$(OBJ)ram_c.o: ram_c.a
d106 2
d110 3
@


36.10
log
@cape changes, findentry.asm
@
text
@d7 2
a8 2
PRECOMP = -cfims -v -O -ms -rr -ig:dos/ -iinc: -ig:inc.lattice/
LCFLAGS = -cfims -v -O -ms -rr -Hincludes.precomp -ig:dos/ -iinc: \
d113 3
@


36.9
log
@added debug flag
@
text
@d6 1
a6 1
ASM = asm
d10 1
a10 1
ASMFLAGS = -ig:dos/ -iINC: -o$(OBJ)
d37 1
a37 1
	$(ASM) $(ASMFLAGS) $*
d39 3
d66 1
a66 1
$(OBJ)findentry.o: findentry.c includes.precomp
d99 2
@


36.8
log
@for rcs 4.x header change
@
text
@d9 1
a9 1
 -ig:inc.lattice/ -o$(OBJ)
@


36.7
log
@*** empty log message ***
@
text
@@


36.6
log
@*** empty log message ***
@
text
@d13 2
a14 2
ram.ld: ram.ld.sym
	blink from ram.ld.sym to ram.ld NODEBUG
d16 2
a17 2
ram.ld.sym: includes.precomp \
	     $(OBJ)start.o $(OBJ)support.o $(OBJ)support2.o \
d19 1
a19 1
	     $(OBJ)deletedir.o $(OBJ)diskinfo.o $(OBJ)adddevice.o \
d26 2
@


36.5
log
@*** empty log message ***
@
text
@d2 2
a3 2
HDRS = ram.h ram_includes.h block_types.h protos.h /libraries/dosextens.h \
       /libraries/dos.h
d14 1
a14 1
	blink from ram-handler.ld to ram-handler.ld.strip NODEBUG
d24 1
a24 1
	     $(OBJ)notify.o $(OBJ)end.o $(OBJ)makelink.o
d41 2
d55 1
a55 1
$(OBJ)exall.o: exall.c includes.precomp /libraries/exall.h
d85 1
a85 1
$(OBJ)notify.o: notify.c includes.precomp /libraries/notify.h
@


36.4
log
@removed dbsupp.o, added makelink.c
@
text
@d7 4
a10 4
PRECOMP = -cfims -v -O -ms -rr
LCFLAGS = -cfims -v -O -ms -rr -Hincludes.precomp -o$(OBJ)
#LCFLAGS = -cfims -v -O -ms -rr -o$(OBJ)
ASMFLAGS = -iINCLUDE: -o$(OBJ)
d13 4
a16 1
ram-handler: includes.precomp \
a25 1
#	     $(OBJ)dbsupp.o \
a38 2
$(OBJ)dbsupp.o: dbsupp.c

d53 1
a53 1
$(OBJ)exall.o: exall.c includes.precomp
@


36.3
log
@*** empty log message ***
@
text
@d20 2
a21 2
	     $(OBJ)transfer.o $(OBJ)global.o $(OBJ)ram_c.o $(OBJ)dbsupp.o \
	     $(OBJ)notify.o $(OBJ)end.o
d23 1
d84 2
@


36.2
log
@
@
text
@d96 1
@


36.1
log
@*** empty log message ***
@
text
@d1 1
a1 1

d21 1
a21 1
	     $(OBJ)notify.o
d90 2
d97 3
@
