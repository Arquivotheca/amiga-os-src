 # $Header: makemeta.nostrip,v 33.3 86/03/08 12:40:59 neil Exp $
VERSION=	33
VERNUM=		33
VERDIR=		/usr/commodore/amiga/V${VERSION}
TERNAL=		internal
RELNODE=	bullwinkle
SRCPATH=	${VERDIR}/${TERNAL}/src/${SRCDIRPATH}/${SRCDIR}
INCLDIR=	${VERDIR}/${TERNAL}/include/${SUBSYSGROUP}
LIBDIR=		${VERDIR}/${TERNAL}/lib
ROMDIR=		${VERDIR}/${TERNAL}/roms
DOCDIR=		${VERDIR}/${TERNAL}/doc
DISKDIR=	${VERDIR}/${TERNAL}/disk
METAFILE=	${VERDIR}/tools/makemeta
AUTOFD=		${LIBDIR}/autofd
DEPENDFILE=	${SUBSYSNAME}${VERSION}.depend
LFILES=		${MYLIBS} ${VERDIR}/${TERNAL}/lib/amiga.lib
SYSINCL=	${VERDIR}/${TERNAL}/include
AINCL=		-I -I${MYINCL} -I${SYSINCL}
CINCL=		-I -I${MYINCL} -I${SYSINCL}
SYMBOLOPT=	,S
CPP=		/lib/cpp
ASM=		cassem
CC=		nmetacc
LINK=		alink
CONVERT=	convert
SREC=		absload
MAKE=		make
MAKEVERS=	makevers
MUNGE=		mungesrec
NEWROMS=	/usr/commodore/bin/newroms
.SUFFIXES:
.SUFFIXES:	.h .i .fd .rev .odd .even .smap .srec .cmap .crec .dl \
		.ld .lmap .ocm .obj .c .asm
default:
	@echo 'But what do you want to make?'
.INCLUDE=${DEPENDFILE}
.c.obj:
	@echo ${CFLAGS} $<:
	@${CC} -S -X104 -X106 ${CFLAGS} ${CINCL} $*.c
	-@if test "${CAPP}"; \
	    then( \
		 ${CAPP} < $*.asm > $*.asm.TMP; \
		${ASM} $*.asm.TMP -o $*.obj.TMP -c q,a${SYMBOLOPT} ${CAFLAGS}; \
		rm -f $*.asm ; \
		mv -f $*.obj.TMP $@; \
		); \
	    else( \
		${ASM} $*.asm -o $*.obj.TMP -c q,a${SYMBOLOPT} ${CAFLAGS}; \
		rm -f $*.asm; \
		mv -f $*.obj.TMP $@; \
		); \
	    fi
#	@${ASM} $*.asm.TMP -o $*.obj.TMP -c q,a${SYMBOLOPT} ${CAFLAGS}
#	@rm -f $*.asm $*.asm.TMP
#	@mv -f $*.obj.TMP $@
.asm.obj:
	@echo $<:
	-@if test "${APP}"; \
	    then( \
		 ${APP} < $< > $*.asm.TMP; \
		${ASM} $*.asm.TMP -o $*.obj.TMP -c q,a${SYMBOLOPT} ${AFLAGS} \
	    		-i \"${MYINCL} ${SYSINCL}\"; \
		rm -f $*.asm.TMP; \
		mv -f $*.obj.TMP $@; \
		); \
	    else( \
		${ASM} $*.asm -o $*.obj.TMP -c q,a${SYMBOLOPT} ${AFLAGS} \
	    		-i \"${MYINCL} ${SYSINCL}\"; \
		mv -f $*.obj.TMP $@; \
		); \
	    fi
#	@${ASM} $*.asm.TMP -o $*.obj.TMP -c q,a${SYMBOLOPT} ${AFLAGS} \
#	    -i \"${MYINCL} ${SYSINCL}\"
#	@rm -f $*.asm.TMP
#	@mv -f $*.obj.TMP $@
.obj.ocm:
	@echo $<:
	@atom $*.obj $*.obj.TMP -CDB -PC
	@mv -f $*.obj.TMP $@
.ld.dl:
	@rm -f $@
	${CONVERT} <$< >$@
.ld.srec .ld.smap:
	${SREC} -m -o $*.srec -T ${SSTART} -x -s $< >$*.smap
.ld.crec .ld.cmap:
	@echo "[+]sa16o16i${SSTART} _C0000 ${CSTART}z2=apq" >dc.TMP
	@echo "${SREC} -m -o $*.crec -T `dc dc.TMP` -x -s $< >$*.cmap"
	@${SREC} -m -o $*.crec -T `dc dc.TMP` -x -s $< >$*.cmap
	@rm dc.TMP
.srec.even:
	${MUNGE} -s ${START} ${MUNGEFLAGS} -e $< > $@.TMP
	mv $@.TMP $@
.srec.odd:
	${MUNGE} -s ${START} ${MUNGEFLAGS} -o $< > $@.TMP
	mv $@.TMP $@
.rev.i .rev.h:
	@rm -f $@
	${MAKEVERS} ${VERNUM} `basename $* _rev` _rev
.fd.i:
	@echo $@:
	@rm -f $@
	@emacs -l${VERDIR}/tools/gen-lib -egen-lib $* i
clean::	${SUBDIRS} ${SUBMAKES}
	rm -f *.obj *.ocm *.ld *.[cs]rec *TMP[' '0-9] *.lis *.xr0 *.[csl]map \
	    *.even *.odd *.CKP *.BAK *.TMP *.TMP? awkvers.* *.with *.depend \
	    *.cat *.xref core
	rm -rf TMPD
${SUBSYSNAME}.with with:	${SUBDIRS} ${SUBMAKES} ${MAKEFILE} ${METAFILE}
	@echo ${SUBSYSNAME}.with:
	-@if test -z "${WITH}"; \
	    then( \
	    cat < /dev/null > TMP1; \
	    for i in ${STARTUP} ${FIRSTO} ${OFILES} TMP1 ; do \
		( echo $$i | sed -n -e "/TMP1/!s/$$/,*/p" >> TMP1 ); done; \
	    for i in ${OCMFILES} TMP1 ; do \
		( echo $$i | sed -n -e "/TMP1/!s/$$/,*/p" >> TMP1 ); done; \
	    sed -e "\$$s/,\*$$//" TMP1 > TMP2; \
	    echo "FROM *" > TMP1; \
	    cat TMP1 TMP2 > ${SUBSYSNAME}.with.new; \
	    cat < /dev/null > TMP1; \
	    for i in ${LFILES} TMP1 ; do \
		( echo $$i | sed -n -e "/TMP1/!s/$$/,*/p" >> TMP1 ); done; \
	    sed -e "\$$s/,\*$$//" TMP1 > TMP2; \
	    echo "LIBRARY *" > TMP1; \
	    cat TMP1 TMP2 >> ${SUBSYSNAME}.with.new; \
	    rm -f TMP1 TMP2; \
	    mv -f ${SUBSYSNAME}.with.new ${SUBSYSNAME}.with; \
	    ); \
	    else( \
	    cat ${WITH} > TMP1; \
	    cat TMP1 > ${SUBSYSNAME}.with; \
	    rm -f TMP1 \
	    ); fi
${DEPENDFILE} depend::	${SUBDIRS} ${SUBMAKES}
	@echo ${DEPENDFILE}
	@echo "# DO NOT CHANGE THIS FILE" > ${DEPENDFILE}.new
	@rm -f TMP1
	@makeinclude -a ${AFILES} TMP1 -i . ${MYINCL} ${SYSINCL} | \
	    sed -e "s/\.asm:/.obj:/" > ${DEPENDFILE}.new
	@makeinclude -c ${CFILES} TMP1 -i . ${MYINCL} ${SYSINCL} | \
	    sed -e "s/\.c:/.obj:/" >> ${DEPENDFILE}.new
	-@if test "${FIRSTO}"; \
	    then ( \
	    echo "DEPENDS= \\" >> ${DEPENDFILE}.new; \
	    grep ${FIRSTO} ${DEPENDFILE}.new > TMP1; \
	    sed -e "s/.*://" TMP1 > TMP2; \
	    sed -e "\$$!s/$$/ \\\\/" TMP2 >> ${DEPENDFILE}.new \
	); fi
	@for i in ${OCMFILES} TMP2 ; do \
	    ( echo $$i | sed -n -e "s/\(.*\)\.ocm$$/\1.ocm:	\1.obj/p" \
	    >> ${DEPENDFILE}.new ); done;
	@echo '# DO NOT ADD DEPENDANCIES HERE!' >> ${DEPENDFILE}.new
	@echo '# THEY WILL BE REMOVED.' >> ${DEPENDFILE}.new
	@rm -f TMP1 TMP2
	@mv -f ${DEPENDFILE}.new ${DEPENDFILE}
headers::	${SUBDIRS} ${SUBMAKES}
	-rsh ${RELNODE} mkdir ${INCLDIR}
	diffinstall ${RELNODE} ${INCLDIR} ${EXTERNHFILES} ${EXTERNIFILES}
	-if test -r ${SUBSYSNAME}_lib.fd; \
	    then ( \
	    rsh ${RELNODE} mkdir ${AUTOFD}/${SUBSYSNAME}; \
	    diffinstall ${RELNODE} ${AUTOFD}/${SUBSYSNAME} \
		${SUBSYSNAME}_lib.fd \
	    ); fi
internal::	${SUBDIRS} ${SUBMAKES}
	@sh -c 'test "${SRCDIR}" || { echo no SRCDIR macro defined ; exit 1; }'
	@checklocks ${AFILES} ${CFILES} ${IFILES} ${HFILES} \
	    ${MAKEFILE} ${MISCSRC} ${MISCDOC};
	-@if test ! "${LIBNAME}"; then ( \
	    echo make internal: ${SRCDIRPATH}/${SRCDIR}; \
	    if test -r ${SUBSYSNAME}_rev.rev; then \
		revlabel L${VERNUM}_`cat ${SUBSYSNAME}_rev.rev` ${AFILES} \
		    ${CFILES} ${IFILES} ${HFILES} ${MAKEFILE} \
		    ${MISCSRC} ${MISCDOC}; \
	    fi; \
	    rsh ${RELNODE} mkdir ${SRCPATH} ${INCLDIR}; \
	    diffinstall ${RELNODE} ${SRCPATH} \
		${AFILES} ${CFILES} ${HFILES} ${IFILES} ${MAKEFILE} \
		${MISCSRC} ${SUBSYSNAME}_rev.rev ${SUBSYSNAME}_lib.fd \
		${SUBSYSNAME}.lib; \
	    diffinstall ${RELNODE} ${INCLDIR} ${EXTERNHFILES} \
		${EXTERNIFILES}; \
	    diffinstall ${RELNODE} ${DOCDIR} ${SUBSYSNAME}.doc ${MISCDOC}; \
	    if test -r ${SUBSYSNAME}_lib.fd; then ( \
		rsh ${RELNODE} mkdir ${AUTOFD}/${SUBSYSNAME}; \
		diffinstall ${RELNODE} ${AUTOFD}/${SUBSYSNAME} \
		    ${SUBSYSNAME}_lib.fd \
	    ); fi; \
	    if test "${DISKPATH}"; then ( \
		rcp ${SUBSYSNAME}.ld \
		    ${RELNODE}:${DISKDIR}/${DISKPATH}.`cat \
		    ${SUBSYSNAME}_rev.rev`; \
	    ); \
	    elif test -r ${SUBSYSNAME}.ld; then ( \
		    rcp ${SUBSYSNAME}.ld \
			${RELNODE}:${ROMDIR}/${SUBSYSNAME}`cat \
			${SUBSYSNAME}_rev.rev`.ld; \
	    ); fi; \
	); fi
	-@if test "${LIBNAME}"; then ( \
	    echo make internal -- lib/${LIBNAME}/${SRCPATHDIR}/${SRCDIR}; \
	    rsh ${RELNODE} mkdir \
		${LIBDIR}/${LIBNAME}/${SRCPATHDIR}/${SRCDIR}; \
	    diffinstall ${RELNODE} \
		${LIBDIR}/${LIBNAME}/${SRCPATHDIR}/${SRCDIR} \
		${AFILES} ${CFILES} ${IFILES} ${HFILES} ${MAKEFILE} \
		${MISCSRC} ${MISCDOC} ${SUBSYSNAME}_lib.lib; \
	); fi
print::	${SUBDIRS} ${SUBMAKES}
	    -@for i in ${HFILES} ${IFILES} ${CFILES} ; do \
		(echo imprint ${PFLAGS} -2 -O -L -J $$i; \
		imprint ${PFLAGS} -2 -O -L -J $$i); done
	    -@${VERDIR}/tools/imprintlis \
		${PFLAGS} -2 -O -L -J ${AFILES}
	    -@if test -r ${SUBSYSNAME}.doc; then \
		(echo imprint ${PFLAGS} -2 -O -L ${SUBSYSNAME}.doc; \
		imprint ${PFLAGS} -2 -O -L ${SUBSYSNAME}.doc); fi
${SUBSYSNAME}_rev.i ${SUBSYSNAME}_rev.h: ${SUBSYSNAME}_rev.rev \
	    ${OFILES} ${OCMFILES} ${DEPENDS}
${SUBSYSNAME}_rev.rev:
	echo 0 > ${SUBSYSNAME}_rev.rev

${SUBSYSNAME}.ld ${SUBSYSNAME}.lmap: ${OFILES} ${OCMFILES} ${FIRSTO} \
	    ${LFILES} ${SUBSYSNAME}.with
	${LINK} with=${SUBSYSNAME}.with ${LFLAGS} to=${SUBSYSNAME}.ld.TMP
	@mv ${SUBSYSNAME}.ld.TMP ${SUBSYSNAME}.ld
${SUBSYSNAME}_lib.lib:	${OFILES} ${OCMFILES} ${FIRSTO}
	rm -f ${SUBSYSNAME}_lib.lib
	cat ${FIRSTO} ${OFILES} ${OCMFILES} > ${SUBSYSNAME}_lib.lib
${SUBSYSNAME}.lib:	${OFILES} ${OCMFILES} ${FIRSTO}
	rm -f ${SUBSYSNAME}.lib
	cat ${FIRSTO} ${OFILES} ${OCMFILES} > ${SUBSYSNAME}.lib
${SUBSYSNAME}.doc:	${SUBSYSNAME}.cat
	@echo ${SUBSYSNAME}.doc
	@rm -f ${SUBSYSNAME}.doc
	autodoc ${SUBSYSNAME}.cat > ${SUBSYSNAME}.doc
${SUBSYSNAME}.cat:	${SUBMAKES} FRC
	@echo ${SUBSYSNAME}.cat
	@rm -f ${SUBSYSNAME}.cat
	@mkdir TMPD
	@for i in ${SUBDIRS} TMPD ; do \
	    ( ( cd $$i; cat /dev/null `ls *.cat` ) >> ${SUBSYSNAME}.cat \
	    ); done
	@cat ${AFILES} ${CFILES} >> ${SUBSYSNAME}.cat
	@rmdir TMPD
cat:	${SUBDIRS} ${SUBMAKES} ${SUBSYSNAME}.cat
checklocks:	${SUBDIRS} ${SUBMAKES}
	@checklocks ${AFILES} ${CFILES} ${IFILES} ${HFILES} \
	    ${MAKEFILE} ${MISCSRC} /dev/null
TMPD ${SUBMAKES}: FRC
	${MAKE} -f $@ ${MFLAGS} ${MARGS}

TMPD ${SUBDIRS}: FRC
	cd $@; ${MAKE} ${MFLAGS} ${MARGS}

installrom:
	cp ${SUBSYSNAME}.ld ${DESTDIR}

rom:	${SUBSYSNAME}.lib

doc:	${SUBSYSNAME}.doc

FRC: 
