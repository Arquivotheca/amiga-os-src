##########################################################################
#
# $Id: lmkfile,v 39.16 93/04/01 15:23:37 chrisg Exp $
#
##########################################################################

VERSION=        39
V=              v$(VERSION):
MAKEMETA=       v:nativemakemeta/nmakemeta
#SRCDIRPATH=     kickstart/graphics
SRCDIR=         a
SUBSYSNAME=     a
SUBSYSGROUP=    graphics
MAKEFILE=       Makefile
MODULE=graphics
OBJDIR=ram:$(SUBSYSNAME)objs
OBJSTORE=objs
DESTDIR=v$(VERSION):src/kickstart/graphics/$(SUBSYSNAME)

.asm.obj:
	spp $*.asm >ram:tmp1.asm
	hx68 from ram:tmp1.asm TO $(OBJDIR)/$*.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM


AFILES1=AreaMove.asm BltClear.asm Draw.asm InitArea.asm
AFILES2=Move.asm MrgCop.asm MustMem.asm QBlit.asm RectFill.asm
AFILES3=SetRGB4.asm WaitBlit.asm WaitTOF.asm clip.asm
AFILES4=Flood.asm PolyDraw.asm gasm.asm ScrollRaster.asm
AFILES5=InitRastPort.asm LoadRGB4.asm SetRast.asm BltPattern.asm ClearMem.asm
AFILES6=WaitBOVP.asm SimpleSprites.asm InitTmpRas.asm
AFILES7=SetAPen.asm AreaDraw.asm AreaEnd.asm 
AFILES8=AllocRaster.asm FreeRaster.asm
AFILES9=InitView.asm InitVPort.asm LockLayerRom.asm UnlockLayerRom.asm
AFILESA=MakeVPort.asm LoadView.asm QBSBlit.asm InitBitMap.asm
AFILESB=FreeVPortCopLists.asm FreeCopList.asm OwnBlitter.asm
AFILESC=FreeCprList.asm GetColorMap.asm FreeColorMap.asm GetRGB4.asm
AFILESD=ScrollVPort.asm ReadPixel.asm WritePixel.asm BltRastPort.asm
AFILESE=BltBitMapRastPort.asm BltMaskRastPort.asm CalcIVG.asm
AFILESF=cdraw.asm SetRGB4CM.asm Circle.asm Ellipse.asm AttemptLockLayerRom.asm
AFILESG=AreaCircle.asm AreaEllipse.asm GfxMem.asm VideoControl.asm Monitor.asm
AFILESH=rpa8.asm wpa8.asm GetVPModeID.asm EraseRect.asm NewColorStuff.asm GetSet.asm
AFILESI=allocbitmap.asm GetVec.asm changevpbitmap.asm
AFILES=$(AFILES1) $(AFILES2) $(AFILES3) $(AFILES4) $(AFILES5) $(AFILES6) $(AFILES7) $(AFILES8) \
	$(AFILES9) $(AFILESA) $(AFILESB) $(AFILESC) $(AFILESD) $(AFILESE) $(AFILESF) $(AFILESG) \
	$(AFILESH) $(AFILESI)


CFILES=
OTHERFILES=lmkfile $(SUBSYSNAME).lib GetColorMap_aa.obj

EXTERNIFILES=
IFILES=	submacs.i $(EXTERNIFILES)

EXTERNHFILES=
HFILES=	$(EXTERNHFILES)

OFILES1=$(OBJDIR)/AreaMove.obj $(OBJDIR)/BltClear.obj $(OBJDIR)/Draw.obj $(OBJDIR)/InitArea.obj
OFILES2=$(OBJDIR)/Move.obj $(OBJDIR)/MrgCop.obj $(OBJDIR)/MustMem.obj $(OBJDIR)/QBlit.obj $(OBJDIR)/RectFill.obj
OFILES3=$(OBJDIR)/SetRGB4.obj $(OBJDIR)/WaitBlit.obj $(OBJDIR)/WaitTOF.obj $(OBJDIR)/clip.obj
OFILES4=$(OBJDIR)/Flood.obj $(OBJDIR)/PolyDraw.obj $(OBJDIR)/gasm.obj $(OBJDIR)/ScrollRaster.obj
OFILES5=$(OBJDIR)/InitRastPort.obj $(OBJDIR)/LoadRGB4.obj $(OBJDIR)/SetRast.obj $(OBJDIR)/BltPattern.obj $(OBJDIR)/ClearMem.obj
OFILES6=$(OBJDIR)/WaitBOVP.obj $(OBJDIR)/SimpleSprites.obj $(OBJDIR)/InitTmpRas.obj
OFILES7=$(OBJDIR)/SetAPen.obj $(OBJDIR)/AreaDraw.obj $(OBJDIR)/AreaEnd.obj
OFILES8=$(OBJDIR)/AllocRaster.obj $(OBJDIR)/FreeRaster.obj
OFILES9=$(OBJDIR)/InitView.obj $(OBJDIR)/InitVPort.obj $(OBJDIR)/LockLayerRom.obj $(OBJDIR)/UnlockLayerRom.obj
OFILESa=$(OBJDIR)/MakeVPort.obj $(OBJDIR)/LoadView.obj $(OBJDIR)/QBSBlit.obj $(OBJDIR)/InitBitMap.obj
OFILESb=$(OBJDIR)/FreeVPortCopLists.obj $(OBJDIR)/FreeCopList.obj $(OBJDIR)/OwnBlitter.obj
OFILESc=$(OBJDIR)/FreeCprList.obj $(OBJDIR)/GetColorMap.obj $(OBJDIR)/FreeColorMap.obj $(OBJDIR)/GetRGB4.obj
OFILESd=$(OBJDIR)/ScrollVPort.obj $(OBJDIR)/ReadPixel.obj $(OBJDIR)/WritePixel.obj $(OBJDIR)/BltRastPort.obj
OFILESe=$(OBJDIR)/BltBitMapRastPort.obj $(OBJDIR)/BltMaskRastPort.obj $(OBJDIR)/CalcIVG.obj
OFILESf=$(OBJDIR)/cdraw.obj $(OBJDIR)/SetRGB4CM.obj $(OBJDIR)/Circle.obj $(OBJDIR)/Ellipse.obj $(OBJDIR)/AttemptLockLayerRom.obj
OFILESg=$(OBJDIR)/AreaCircle.obj $(OBJDIR)/AreaEllipse.obj $(OBJDIR)/GfxMem.obj $(OBJDIR)/VideoControl.obj $(OBJDIR)/Monitor.obj
OFILESh=$(OBJDIR)/rpa8.obj $(OBJDIR)/wpa8.obj $(OBJDIR)/GetVPModeID.obj $(OBJDIR)/EraseRect.obj $(OBJDIR)/NewColorStuff.obj $(OBJDIR)/GetSet.obj
OFILESi=$(OBJDIR)/allocbitmap.obj $(OBJDIR)/GetVec.obj $(OBJDIR)/changevpbitmap.obj

OFILES= $(OFILES1) $(OFILES2) $(OFILES3) $(OFILES4) $(OFILES5) $(OFILES6) \
		$(OFILES7) $(OFILES8) $(OFILES9) $(OFILESa) $(OFILESb) $(OFILESc) \
		$(OFILESd) $(OFILESe) $(OFILESf) $(OFILESg) $(OFILESh) $(OFILESi)

all :	$(SUBSYSNAME).lib newcolorstuff.aa.obj wpa8.emul.obj wpa8.hw.obj wpa8.nt.obj getcolormap_aa.obj

getcolormap_aa.obj : GetColorMap.asm	/view.i
	hx68 from GetColorMap.asm to GetColorMap_aa.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE SUPPORT_HW=1 DEFINE AA_ONLY=1

wpa8.emul.obj : wpa8.asm
	hx68 from wpa8.asm to wpa8.emul.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE SUPPORT_HW=1 DEFINE EMULATE_HW=1

wpa8.hw.obj : wpa8.asm
	hx68 from wpa8.asm to wpa8.hw.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE SUPPORT_HW=1 DEFINE TEST_HW=1

wpa8.nt.obj : wpa8.asm
	hx68 from wpa8.asm to wpa8.nt.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE SUPPORT_HW=1

$(SUBSYSNAME).lib : $(OBJDIR) $(OFILES)
	join $(OBJDIR)/*.obj as a.lib

$(OBJDIR):
	makedir $(OBJDIR)
	copy $(OBJSTORE)/*.obj $(OBJDIR) clone quiet


newcolorstuff.aa.obj : NewColorStuff.asm	/view.i	/gfx.i	/gfxbase.i	/displayinfo.i	/vp_internal.i	/macros.i
	hx68 from newcolorstuff.asm TO newcolorstuff.aa.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM DEFINE AA_ONLY=1

internal:
	@echo "copying a/"
	copy $(AFILES1) $(DESTDIR) nopro
	copy $(AFILES2) $(DESTDIR) nopro
	copy $(AFILES3) $(DESTDIR) nopro
	copy $(AFILES4) $(DESTDIR) nopro
	copy $(AFILES5) $(DESTDIR) nopro
	copy $(AFILES6) $(DESTDIR) nopro
	copy $(AFILES7) $(DESTDIR) nopro
	copy $(AFILES8) $(DESTDIR) nopro
	copy $(AFILES9) $(DESTDIR) nopro
	copy $(AFILESA) $(DESTDIR) nopro
	copy $(AFILESB) $(DESTDIR) nopro
	copy $(AFILESC) $(DESTDIR) nopro
	copy $(AFILESD) $(DESTDIR) nopro
	copy $(AFILESE) $(DESTDIR) nopro
	copy $(AFILESF) $(DESTDIR) nopro
	copy $(AFILESG) $(DESTDIR) nopro
	copy $(AFILESH) $(DESTDIR) nopro
	copy $(AFILESI) $(DESTDIR) nopro
	copy $(IFILES) $(DESTDIR) nopro
	copy $(OTHERFILES) $(DESTDIR) nopro

saveobjs: $(OBJDIR) $(OFILES)
	copy $(OBJDIR)/*.obj $(OBJSTORE) clone quiet

protos:
	search >ram:a.protos *.asm "__asm" nonum
	search >a.protos ram:a.protos "__asm" nonum
	splat -o "^;" "" a.protos
	splat -o "^ " "" a.protos

clean:
	-delete $(OBJSTORE)/*.obj quiet
	-delete $(OBJDIR) all quiet
	-delete a.lib quiet

depend:
	copy to maked0 from < <
$(AFILES)
<
	splat -o "[\t ]+" "\n" maked0
	splat -o "^..+" "dep1 &" maked0
	echo >ram:maked1 "alias dep1 depend [] makedx"
	join ram:maked1 maked0 as maked1
	splat -o "\x0d" "" maked1
	execute maked1
	splat -o "^" "$(OBJDIR)/&" makedx
	splat -o "^$(OBJDIR)/\n" "\n" makedx
	splat -o ".o " ".obj " makedx
	copy makedx graphics$(VERSION).depend
	delete maked? quiet

doc:
	copy to maked0 from < <
$(AFILES)
$(CFILES)
<
	splat -o "[\t ]+" "\n" maked0
	splat -o "^..+" "type >>$(SUBSYSNAME).doc &" maked0
	splat -o "\x0d" "" maked0
	splat -o "^type >>$(SUBSYSNAME).doc \n" "\n" maked0
	echo >maked1 "if exists $(SUBSYSNAME).doc"
	echo >>maked1 "delete $(SUBSYSNAME).doc quiet"
	echo >>maked1 "endif"
	join maked1 maked0 as ram:x
	execute ram:x
	delete maked? quiet



ram:aobjs/AreaMove.obj : AreaMove.asm	/c/areafill.i

ram:aobjs/BltClear.obj : BltClear.asm	submacs.i	/sane_names.i

ram:aobjs/Draw.obj : Draw.asm	submacs.i	/sane_names.i

ram:aobjs/InitArea.obj : InitArea.asm

ram:aobjs/Move.obj : Move.asm

ram:aobjs/MrgCop.obj : MrgCop.asm	/monitor.i	/macros.i	/gfxbase.i

ram:aobjs/MustMem.obj : MustMem.asm

ram:aobjs/QBlit.obj : QBlit.asm	submacs.i	/sane_names.i

ram:aobjs/RectFill.obj : RectFill.asm	submacs.i

ram:aobjs/SetRGB4.obj : SetRGB4.asm	/view.i	/gfxbase.i

ram:aobjs/WaitBlit.obj : WaitBlit.asm

ram:aobjs/WaitTOF.obj : WaitTOF.asm	submacs.i

ram:aobjs/clip.obj : clip.asm

ram:aobjs/Flood.obj : Flood.asm

ram:aobjs/PolyDraw.obj : PolyDraw.asm

ram:aobjs/gasm.obj : gasm.asm

ram:aobjs/ScrollRaster.obj : ScrollRaster.asm

ram:aobjs/InitRastPort.obj : InitRastPort.asm	/macros.i	submacs.i

ram:aobjs/LoadRGB4.obj : LoadRGB4.asm	/view.i

ram:aobjs/SetRast.obj : SetRast.asm	submacs.i	/sane_names.i	/macros.i

ram:aobjs/BltPattern.obj : BltPattern.asm	/rastport.i	/gfxbase.i	/sane_names.i	submacs.i	/c/gfxblit.i	/macros.i

ram:aobjs/ClearMem.obj : ClearMem.asm

ram:aobjs/WaitBOVP.obj : WaitBOVP.asm

ram:aobjs/SimpleSprites.obj : SimpleSprites.asm	/gfxbase.i	/view.i	/sprite.i	/monitor.i	/macros.i	/copper.i	/gels/gelsinternal.i	/vp_internal.i

ram:aobjs/InitTmpRas.obj : InitTmpRas.asm

ram:aobjs/SetAPen.obj : SetAPen.asm	submacs.i

ram:aobjs/AreaDraw.obj : AreaDraw.asm	/c/areafill.i

ram:aobjs/AreaEnd.obj : AreaEnd.asm	/macros.i	/c/areafill.i	/sane_names.i	submacs.i

ram:aobjs/AllocRaster.obj : AllocRaster.asm	/macros.i

ram:aobjs/FreeRaster.obj : FreeRaster.asm	/macros.i

ram:aobjs/InitView.obj : InitView.asm

ram:aobjs/InitVPort.obj : InitVPort.asm

ram:aobjs/LockLayerRom.obj : LockLayerRom.asm

ram:aobjs/UnlockLayerRom.obj : UnlockLayerRom.asm

ram:aobjs/MakeVPort.obj : MakeVPort.asm

ram:aobjs/LoadView.obj : LoadView.asm	/monitor.i	/view.i	/macros.i

ram:aobjs/QBSBlit.obj : QBSBlit.asm	/cia8520.i	submacs.i	/sane_names.i

ram:aobjs/InitBitMap.obj : InitBitMap.asm

ram:aobjs/FreeVPortCopLists.obj : FreeVPortCopLists.asm

ram:aobjs/FreeCopList.obj : FreeCopList.asm

ram:aobjs/OwnBlitter.obj : OwnBlitter.asm	/a/submacs.i	/sane_names.i

ram:aobjs/FreeCprList.obj : FreeCprList.asm

ram:aobjs/GetColorMap.obj : GetColorMap.asm	/view.i
	hx68 from getcolormap.asm TO $(OBJDIR)/getcolormap.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM

ram:aobjs/FreeColorMap.obj : FreeColorMap.asm	/view.i

ram:aobjs/GetRGB4.obj : GetRGB4.asm

ram:aobjs/ScrollVPort.obj : ScrollVPort.asm	/view.i	/vp_internal.i	/macros.i

ram:aobjs/ReadPixel.obj : ReadPixel.asm	submacs.i	/sane_names.i

ram:aobjs/WritePixel.obj : WritePixel.asm	submacs.i	/sane_names.i

ram:aobjs/BltRastPort.obj : BltRastPort.asm

ram:aobjs/BltBitMapRastPort.obj : BltBitMapRastPort.asm

ram:aobjs/BltMaskRastPort.obj : BltMaskRastPort.asm

ram:aobjs/CalcIVG.obj : CalcIVG.asm	/displayinfo.i	/gfxbase.i	/view.i	/displayinfo_internal.i	/macros.i

ram:aobjs/cdraw.obj : cdraw.asm	/c/cdrawinfo.i	submacs.i

ram:aobjs/SetRGB4CM.obj : SetRGB4CM.asm

ram:aobjs/Circle.obj : Circle.asm

ram:aobjs/Ellipse.obj : Ellipse.asm

ram:aobjs/AttemptLockLayerRom.obj : AttemptLockLayerRom.asm

ram:aobjs/AreaCircle.obj : AreaCircle.asm	/c/areafill.i

ram:aobjs/AreaEllipse.obj : AreaEllipse.asm	/c/areafill.i

ram:aobjs/GfxMem.obj : GfxMem.asm

ram:aobjs/VideoControl.obj : VideoControl.asm

ram:aobjs/Monitor.obj : Monitor.asm

ram:aobjs/rpa8.obj : rpa8.asm

ram:aobjs/wpa8.obj : wpa8.asm

ram:aobjs/GetVPModeID.obj : GetVPModeID.asm

ram:aobjs/EraseRect.obj : EraseRect.asm	/gfxbase.i	submacs.i

ram:aobjs/NewColorStuff.obj : NewColorStuff.asm	/view.i	/gfx.i	/gfxbase.i	/displayinfo.i	/vp_internal.i	/macros.i
	hx68 from newcolorstuff.asm TO $(OBJDIR)/NewColorStuff.obj INCDIR include: OPTIMON 0xfdc00000 ADDSYM

ram:aobjs/GetSet.obj : GetSet.asm	/rastport.i

ram:aobjs/allocbitmap.obj : allocbitmap.asm	/gfxbase.i	/gfx.i	/macros.i

ram:aobjs/GetVec.obj : GetVec.asm	/gfxbase.i	/view.i	/displayinfo.i

ram:aobjs/changevpbitmap.obj : changevpbitmap.asm	/gfxbase.i	/view.i	/macros.i

