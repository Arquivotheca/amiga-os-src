ALENGTH	intuinternal.h	/^#define ALENGTH( array )	( sizeof ( array )\/sizeof/
ActivateGadget	activate.c	/^ActivateGadget(gadget, window, request)$/
ActivateWindow	windows.c	/^ActivateWindow(window)$/
AddClass	pubclasses.c	/^AddClass( cl )$/
AddGList	gadgets.c	/^USHORT AddGList(window, gadget, pos, numgad, reque/
AllocRemember	misc.c	/^CPTR AllocRemember(remember, size, flags)$/
AllocScreenBuffer	scsupp.c	/^struct ScreenBuffer *AllocScreenBuffer( sc, bm, fl/
AlohaWorkbench	screens.c	/^AlohaWorkbench(wbport) $/
AssertLock	ilock.c	/^AssertLock(str, sem)$/
BASEOBJECT	classes.h	/^#define BASEOBJECT( _obj )	( (Object *) (_OBJ(_obj/
BI	intuinternal.h	/^#define BI( gadget ) 	((struct BoolInfo *) (gadget/
BackFit	strings.c	/^BackFit( rp, str, maxnum, te, tconst, negone, widt/
BeginRefresh	isupport.c	/^BeginRefresh( window )$/
BlastPattern	misc.c	/^BlastPattern(RP, left, top, right, bottom, pattern/
BlastPatternBox	misc.c	/^BlastPatternBox( rp, box, pat, size, pena, penb, m/
CLEARFLAG	intuinternal.h	/^#define CLEARFLAG( var, flag ) ((var) &= ~(flag))$/
CUSTOM_HOOK	cghooks.h	/^#define CUSTOM_HOOK( gadget ) ( (struct Hook *) (g/
CalcISG	view.c	/^ULONG CalcISG( sc )$/
ChangeScreenBuffer	scsupp.c	/^LONG ChangeScreenBuffer( sc, sb )$/
ChangeWindowBox	windows.c	/^ChangeWindowBox( window, l, t, w, h )$/
CheckLock	ilock.c	/^CheckLock(str, sem)$/
ClassID	classusr.h	20
ClearDMRequest	requester.c	/^ClearDMRequest(w)$/
ClearMenuStrip	menu.c	/^ClearMenuStrip(window)$/
CloseScreen	screens.c	/^CloseScreen(OScreen)$/
CloseWindow	windows.c	/^CloseWindow(window)$/
CloseWorkBench	screens.c	/^BOOL CloseWorkBench() $/
CurrentTime	misc.c	/^CurrentTime(secs, micros)$/
DE	ilock.c	/^#define DE(x)	x$/
DP	ilock.c	/^#define DP(x)	x$/
DisposeObject	classes.c	/^DisposeObject( o )$/
DoGadgetMethodA	classes.c	/^DoGadgetMethodA( gad, win, req, message )$/
DoubleClick	misc.c	/^DoubleClick(startsec, startmicro, endsec, endmicro/
Draw1P3DBorder	vectorclass.c	/^Draw1P3DBorder( Pens, rp, dir, tx, w, h )$/
DrawBorder	misc.c	/^DrawBorder(rp, border, left, top)$/
DrawImage	imageclass.c	/^DrawImage(rport, image, xoffset, yoffset)$/
DrawImageState	imageclass.c	/^DrawImageState(rport, image, xoffset, yoffset, sta/
ENFORCER	ilock.c	/^#define ENFORCER(x)	DE( *( ( ULONG * ) 0 ) = (x) )/
ENUFPREFS	iprefs.c	/^#define ENUFPREFS( field ) ( ((ULONG) OFFSET(Prefe/
ENUFSCREEN	wbench.c	/^#define ENUFSCREEN( field ) ( ((ULONG) OFFSET(Scre/
EndRefresh	isupport.c	/^EndRefresh( window, complete )$/
EndRequest	requester.c	/^EndRequest(req, window)$/
EraseImage	imageclass.c	/^EraseImage(rport, image, xoffset, yoffset )$/
FULLMENUNUM	intuition.h	/^#define FULLMENUNUM( menu, item, sub )	\\$/
FindClass	pubclasses.c	/^FindClass( classid )$/
FreeClass	pubclasses.c	/^FreeClass( cl )$/
FreeGIRPort	ifunctions.h	/^#define FreeGIRPort( rp ) 	(freeRP( rp ) )$/
FreeRemember	misc.c	/^FreeRemember(remember, reallyforget)$/
FreeScreenBuffer	scsupp.c	/^void FreeScreenBuffer( sc, sb )$/
FreeScreenDrawInfo	scsupp.c	/^FreeScreenDrawInfo( s, dri )$/
FreeSysRequest	ezreq.c	/^FreeSysRequest(window)$/
G	propgadclass.c	/^#define G(o)		((struct Gadget *) (o))		\/* base cla/
GADGET_BOX	imageclass.h	/^#define GADGET_BOX( g )	( (struct IBox *) &((struc/
GA_PACK_ENTRY	gadclass.c	/^#define GA_PACK_ENTRY(tag,field,control) PACK_ENTR/
GA_PACK_EXNEGWORDBIT	gadclass.c	/^#define GA_PACK_EXNEGWORDBIT(tag,field,flags) PACK/
GA_PACK_EXWORDBIT	gadclass.c	/^#define GA_PACK_EXWORDBIT(tag,field,flags) PACK_WO/
GA_PACK_LONGBIT	gadclass.c	/^#define GA_PACK_LONGBIT(tag,field,flags) PACK_LONG/
GA_PACK_NEGWORDBIT	gadclass.c	/^#define GA_PACK_NEGWORDBIT(tag,field,flags) PACK_W/
GA_PACK_WORDBIT	gadclass.c	/^#define GA_PACK_WORDBIT(tag,field,flags) PACK_WORD/
GadgetMouse	genv.c	/^GadgetMouse( g, gi, mouse )$/
GetAttr	classes.c	/^GetAttr( AttrID, o, StoragePtr )$/
GetDefPrefs	prefs.c	/^struct Preferences *GetDefPrefs(preferences, size)/
GetDefaultPubScreen	pubscreen.c	/^GetDefaultPubScreen( Namebuff )$/
GetPrefs	prefs.c	/^struct Preferences *GetPrefs(preferences, size)$/
GetScreenData	wbench.c	/^BOOL GetScreenData(buffer, size, type, customsc )$/
GetScreenDrawInfo	scsupp.c	/^GetScreenDrawInfo( s )$/
GetUserTagData	intuinternal.h	/^#define GetUserTagData(tag,def,list) GetTagDataUse/
GetUserTagData0	intuinternal.h	/^#define GetUserTagData0(tag,list) GetTagDataUser0(/
HelpControl	hitgadgets.c	/^HelpControl( helpwin, help )$/
IActivateGadget	activate.c	/^IActivateGadget( it )$/
ICOLOR	pointer.c	/^#define ICOLOR(c)	 (*((SHORT *)0xdff180) = (c))$/
ICOLORSPEC	iprefs.c	/^#define ICOLORSPEC(p)		((struct ColorSpec *)(p))$/
ICONTROL	iprefs.c	/^#define ICONTROL( p ) 		(( struct IIControlPrefs */
IChangeScreenBuffer	scsupp.c	/^IChangeScreenBuffer( screen, sb )$/
IChangeWindow	zoom.c	/^IChangeWindow( w, newbox, subcommand )$/
ICloseFont	fonts.c	/^ICloseFont(fp)$/
ICloseScreen	screens.c	/^ICloseScreen( OScreen )$/
ICopyScreenBuffer	scsupp.c	/^ICopyScreenBuffer( sc, sb )$/
IDisplayBeep	misc.c	/^IDisplayBeep(screen)$/
IDoGadgetMethodA	classes.c	/^IDoGadgetMethodA( gad, win, message )$/
IEndRequest	requester.c	/^IEndRequest( window, req )$/
IFONT	iprefs.c	/^#define IFONT( p )	 	(( struct IFontPrefs *) (p))$/
IIMSG	ibase.h	/^#define IIMSG(imsg) ((struct TIIntuiMessage *)(ims/
IM	imageclass.c	/^#define IM(o)	((struct Image *)(o))$/
IM_BGPEN	imageclass.h	/^#define IM_BGPEN( im )	( (im)->PlaneOnOff )$/
IM_BOX	imageclass.h	/^#define IM_BOX( im )	( (struct IBox *) &((struct I/
IM_FGPEN	imageclass.h	/^#define IM_FGPEN( im )	( (im)->PlanePick )$/
IModifyIDCMP	idcmp.c	/^IModifyIDCMP( window, flags )$/
IMoveScreen	scsupp.c	/^IMoveScreen( screen, delta, flags )$/
INEWPOINTER	iprefs.c	/^#define	INEWPOINTER(p)		((struct INewPointerPrefs /
INST_DATA	classes.h	/^#define INST_DATA( cl, o )	((VOID *) (((UBYTE *)o)/
IOVERSCAN	iprefs.c	/^#define IOVERSCAN( p ) 		(( struct IOverscanPrefs /
IOnOffMenu	menu.c	/^BOOL IOnOffMenu(window, menuNum, onOrOff)$/
IOpenScreen	screens.c	/^IOpenScreen( sc, taglist )$/
IOpenWindow	windows.c	/^IOpenWindow( w, superbmap, backfill )$/
IPENPREFS	iprefs.c	/^#define IPENPREFS(p)		((struct IPenPrefs *) (p))$/
IPreMoveScreen	scsupp.c	/^IPreMoveScreen( screen, rect, flags )$/
IRequest	requester.c	/^IRequest( req, window, isdmr )$/
ISCREENMODE	iprefs.c	/^#define ISCREENMODE( p ) 	(( struct IScreenModePre/
ISTOGGLE	intuinternal.h	/^#define ISTOGGLE( g ) ( !( (g)->Flags  & 2 ) )$/
IScreenDepth	scsupp.c	/^IScreenDepth( screen, whichway )$/
ISetFont	fonts.c	/^ISetFont(rp, font)$/
ISetWindowPointer	pointer.c	/^ISetWindowPointer( win, newMousePointer )$/
IShowTitle	scsupp.c	/^IShowTitle(screen, showit)$/
ITEMNUM	intuition.h	/^#define ITEMNUM(n) ((n >> 5) & 0x003F)$/
ITEXT	itexticlass.c	/^#define ITEXT(ptr) ((struct IntuiText *)(ptr))$/
ITextLayout	layout.c	/^ITextLayout( rp, it, box, do_layout, xoffset, yoff/
IWindowDepth	zoom.c	/^IWindowDepth(w, whichway, behindwindow)$/
IZoomWindow	zoom.c	/^IZoomWindow( window, interactive )$/
InitClassList	pubclasses.c	/^InitClassList()$/
InitIIHooks	ihooks.c	/^InitIIHooks()$/
InitRequester	init.c	/^InitRequester(req)$/
IntuiRomInit	init.c	/^IntuiRomInit()$/
IntuiTextLength	fonts.c	/^IntuiTextLength(itext)$/
Intuition	ih.c	/^Intuition( ie )$/
IntuitionHandler	ih.c	/^IntuitionHandler( ie )$/
IsHires	scsupp.c	/^BOOL IsHires(s)$/
IsZoomed	zoom.c	/^IsZoomed( window )$/
ItemAddress	misc.c	/^struct MenuItem *ItemAddress(menustrip, menunum)$/
LH_NODESIZE	pools.c	/^#define LH_NODESIZE( list )	(((struct PoolList *)(/
LIB_ScreenDepth	scsupp.c	/^LIB_ScreenDepth( screen, flags, reserved )$/
LIB_SetWindowPointerA	pointer.c	/^LIB_SetWindowPointerA( win, taglist )$/
LN_FREELIST	pools.c	/^#define LN_FREELIST( ln )	( (struct List *)ln->ln_/
LONGTest	sinput.c	/^BOOL LONGTest(buffer, longvar)$/
LendMenus	windows.c	/^LendMenus( fromwindow, towindow )$/
LockFree	ilock.c	/^LockFree(str, sem)$/
LockIBase	ilock.c	/^ULONG LockIBase(lock)$/
LockPubScreen	pubscreen.c	/^LockPubScreen( name )$/
LockPubScreenList	pubscreen.c	/^LockPubScreenList( )$/
MASKBIT	intuinternal.h	/^#define MASKBIT(X)  ((UWORD) 1 << (15 - ((X) & 0x0/
MASKTEST	intuinternal.h	/^#define MASKTEST(p, W, P) ((BOOL) (*MASKWORD(p, W,/
MASKWORD	intuinternal.h	/^#define MASKWORD(p, W, P) ((UWORD *)(((UWORD *) P)/
MAX	intuinternal.h	/^#define	MAX(A, B)	(((A)<(B))?(B):(A))$/
MENUNUM	intuition.h	/^#define MENUNUM(n) (n & 0x1F)$/
MIN	intuinternal.h	/^#define	MIN(A, B)	(((A)>(B))?(B):(A))$/
MONITOR_PART	intuinternal.h	/^#define MONITOR_PART( displayid ) ((displayid) & M/
MPT	pointer.c	/^#define MPT(o) ((struct MousePointer *)(o))$/
MakeClass	pubclasses.c	/^MakeClass( classid, superid, superclass, instsize,/
MakeScreen	view.c	/^MakeScreen(screen)$/
MakeSpriteData	pointer.c	/^MakeSpriteData( mpointer, word_width, scale )$/
ModifyIDCMP	idcmp.c	/^ModifyIDCMP(window, flags)$/
MoveDrawPen	vectorclass.c	/^MoveDrawPen( rport, pen, x, y, dx, dy )$/
MoveWindow	windows.c	/^MoveWindow(window, dx, dy)$/
MoveWindowInFrontOf	windows.c	/^MoveWindowInFrontOf( w, behindw )$/
Msg	classusr.h	31
NS	screens.c	/^#define NS(field)	(ns? (ns->field): 0)$/
NT	ism.c	/^#define NT(it) (it->it_Command != itTIMER  )$/
NUMPOINTERS	pointer.c	/^#define NUMPOINTERS( memtype )	( ( (memtype) + 3 )/
NewModifyProp	gadgets.c	/^NewModifyProp(gadget, aptr, req, flags, hpot, vpot/
NewObject	varargs.c	/^NewObject( cl, classid, tag1, data1 )$/
NewObjectA	classes.c	/^NewObjectA( cl, classid, tags )$/
NextObject	classes.c	/^NextObject( lnptr )$/
NextPubScreen	pubscreen.c	/^NextPubScreen( screen, namebuf )$/
NotifyAttrChanges	varargs.c	/^NotifyAttrChanges( o, ginfo, flags, tag1 )$/
OCLASS	classes.h	/^#define OCLASS( o )	( (_OBJECT(o))->o_Class )$/
Object	classusr.h	18
ObtainGIRPort	misc.c	/^ObtainGIRPort( gi )$/
OffGadget	gadgets.c	/^OffGadget(gadget, ptr, req)$/
OffMenu	menu.c	/^BOOL OffMenu(window, menuNum)$/
OnGadget	gadgets.c	/^OnGadget(gadget, ptr, req)$/
OnMenu	menu.c	/^BOOL OnMenu(window, menuNum)$/
OpenIntuition	isupport.c	/^struct IntuitionBase *OpenIntuition()$/
OpenWindow	windows.c	/^*OpenWindow( nw )$/
OpenWindowTagList	wtags.c	/^struct Window *OpenWindowTagList( nw, tags )$/
PANIC	intuinternal.h	/^#define PANIC( str )	kprintf("panic: %s\\n", str );/
PFU	intuinternal.h	481
PGI	propgadclass.c	/^#define PGI( pgid ) 	(&pgid->pgi_PInfo)$/
PI	intuinternal.h	/^#define PI( gadget ) 	((struct PropInfo *) (gadget/
POINT	imageclass.c	/^#define POINT(x,y)	(((y) & 0xffff) | (x<<16))$/
POINTLONG	buttongclass.c	/^#define POINTLONG( pt )	(*( (ULONG *)  &(pt) ))$/
PointInImage	imageclass.c	/^PointInImage( point, image )$/
PrintIText	misc.c	/^PrintIText(rp, itext, left, top)$/
PubScreenStatus	pubscreen.c	/^PubScreenStatus( screen, status )$/
PutMsgSafely	ih.c	/^PutMsgSafely( port, imsg )$/
QueryOverscan	dclip.c	/^QueryOverscan( displayID, rect, ostype )$/
RASWIDTH	intuinternal.h	/^#define RASWIDTH(W) ( ((W)+15) >> 3 & 0xFFFE )$/
RATIO	intuinternal.h	/^#define RATIO(n, r) ((((n)*(r))+(1<<(ratioFIXEDPAR/
RastPortITextExtent	fonts.c	/^RastPortITextExtent( rp, itext, te )$/
RastPortITextLength	fonts.c	/^RastPortITextLength(rp, itext)$/
RefreshWindowFrame	windows.c	/^RefreshWindowFrame(window)$/
ReleaseGIRPort	misc.c	/^ReleaseGIRPort( rp )$/
RemakeDisplay	view.c	/^RemakeDisplay()$/
RemoveClass	pubclasses.c	/^RemoveClass( cl )$/
RemoveGList	gadgets.c	/^USHORT RemoveGList(window, gadget, numgad)$/
ReportMouse	misc.c	/^ReportMouse(w, bool)$/
Request	requester.c	/^Request(req, window)$/
RethinkDisplay	view.c	/^RethinkDisplay()$/
SCREENFROMNODE	sc.h	/^#define SCREENFROMNODE(n)	((struct Screen *)( ((UL/
SETDITEM	intuinternal.h	/^#define SETDITEM(n) IBase->MenuDrawn = \\$/
SETDMENU	intuinternal.h	/^#define SETDMENU(n) IBase->MenuDrawn = \\$/
SETDSUB	intuinternal.h	/^#define SETDSUB(n) IBase->MenuDrawn = \\$/
SETFLAG	intuinternal.h	/^#define SETFLAG( var, flag ) ((var) |= (flag))$/
SETSITEM	intuinternal.h	/^#define SETSITEM(n) IBase->MenuSelected = \\$/
SETSMENU	intuinternal.h	/^#define SETSMENU(n) IBase->MenuSelected = \\$/
SETSSUB	intuinternal.h	/^#define SETSSUB(n) IBase->MenuSelected = \\$/
SHAKNUM	intuition.h	/^#define SHAKNUM(n)   (n & 0x0F)         \/* SerParS/
SHIFTITEM	intuition.h	/^#define SHIFTITEM(n) ((n & 0x3F) << 5)$/
SHIFTMENU	intuition.h	/^#define SHIFTMENU(n) (n & 0x1F)$/
SHIFTSUB	intuition.h	/^#define SHIFTSUB(n) ((n & 0x1F) << 11)$/
SI	intuinternal.h	/^#define SI( gadget ) 	((struct StringInfo *) ((gad/
SIGN	intuition.h	/^#define SIGN(x) ( ((x) > 0) - ((x) < 0) )$/
SIZEOF_INSTANCE	classes.h	/^#define SIZEOF_INSTANCE( cl )	((cl)->cl_InstOffset/
SPARNUM	intuition.h	/^#define SPARNUM(n)   (n >> 4)           \/* SerParS/
SPR_STORAGE	iprefs.c	/^#define SPR_STORAGE( pheight ) 	(( (pheight) + 2 )/
SRBNUM	intuition.h	/^#define SRBNUM(n)    (0x08 - (n >> 4))  \/* SerRWBi/
SSBNUM	intuition.h	/^#define SSBNUM(n)    (0x01 + (n >> 4))  \/* SerStop/
SUBNUM	intuition.h	/^#define SUBNUM(n) ((n >> 11) & 0x001F)$/
SWBNUM	intuition.h	/^#define SWBNUM(n)    (0x08 - (n & 0x0F))\/* SerRWBi/
SafeRectFill	windows.c	/^SafeRectFill( rp, xmin, ymin, xmax, ymax )$/
Scale	vectorclass.c	/^LONG Scale(sourcesize,destsize,coord)$/
ScreenPosition	scsupp.c	/^ScreenPosition( screen, flags, x1, y1, x2, y2 )$/
ScrollWindowRaster	windows.c	/^void ScrollWindowRaster( win, dx, dy, xmin, ymin, /
SetAttrs	varargs.c	/^SetAttrs( o, tag1 )$/
SetAttrsA	classes.c	/^SetAttrsA( o, tags )$/
SetDMRequest	requester.c	/^SetDMRequest(w, req)$/
SetDefaultPubScreen	pubscreen.c	/^SetDefaultPubScreen( name )$/
SetEditHook	sinput.c	/^SetEditHook( edithook )$/
SetGadgetAttrs	varargs.c	/^SetGadgetAttrs( g, w, req, tag1 )$/
SetGadgetAttrsA	classes.c	/^SetGadgetAttrsA( g, window, req, taglist )$/
SetIPrefs	iprefs.c	/^SetIPrefs( p, psize, ptype  )$/
SetMouseQueue	mouse.c	/^SetMouseQueue( w, qlen )$/
SetPointer	pointer.c	/^SetPointer(win, pointer, height, width, xoffset, y/
SetPubScreenModes	pubscreen.c	/^SetPubScreenModes( modes )$/
SetSuperAttrs	varargs.c	/^SetSuperAttrs( cl, o, t1, d1, t2, d2 )$/
SetWindowTitles	windows.c	/^SetWindowTitles(window, windowtitle, screentitle)$/
ShowTitle	scsupp.c	/^ShowTitle(screen, showit)$/
SizeWindow	windows.c	/^SizeWindow(window, dx, dy)$/
SysReqHandler	ezreq.c	/^SysReqHandler( w, idcmp_ptr, wait_first )$/
TESTFLAG	intuinternal.h	/^#define TESTFLAG( var, flag ) ( (var) & (flag) )$/
UnlockIBase	ilock.c	/^UnlockIBase(lock)$/
UnlockPubScreen	pubscreen.c	/^UnlockPubScreen( name, screen )$/
UnlockPubScreenList	pubscreen.c	/^UnlockPubScreenList( )$/
ViewAddress	misc.c	/^struct View *ViewAddress()$/
ViewPortAddress	misc.c	/^struct ViewPort *ViewPortAddress(window)$/
WindowLimits	windows.c	/^BOOL WindowLimits(window, minwidth, minheight, max/
WindowToBack	windows.c	/^WindowToBack(window)$/
WindowToFront	windows.c	/^WindowToFront(window)$/
WritePixelPen	vectorclass.c	/^WritePixelPen( rport, pen, x, y )$/
XGAD	i.h	/^#define XGAD(g)		((struct ExtGadget *) (g))$/
XNS	sc.h	/^#define XNS(ns)	( (struct ExtNewScreen *) (ns) )$/
XSB	sc.h	/^#define XSB(sb)	((struct XScreenBuffer *)(sb))$/
XSC	sc.h	/^#define XSC(s)	( (struct XScreen *) (s) )$/
XWINDOW	i.h	/^#define XWINDOW(w)	((struct XWindow *) (w))$/
ZipWindow	zoom.c	/^ZipWindow( window )$/
_OBJ	classes.h	/^#define _OBJ( o )	((struct _Object *)(o))$/
_OBJECT	classes.h	/^#define _OBJECT( o )		(_OBJ(o) - 1)$/
accFactor	mouse.c	/^accFactor(n)$/
accelOne	mouse.c	/^accelOne( v )$/
acceloMouse	mouse.c	/^acceloMouse( ie )$/
activeEvent	ih.c	/^activeEvent( ieclass,  code )$/
addButtonEvent	ihfront.c	/^addButtonEvent( ie, tablet )$/
addGadImage	ezreq.c	/^addGadImage( gad, im )$/
addSWGadgets	windows.c	/^addSWGadgets(w, addzoom )$/
allocImageMem	vectorclass.c	/^allocImageMem( im, si )$/
allocMenuBitMap	menu.c	/^struct BitMap *allocMenuBitMap( ascreen, rect )$/
assertLock	intuall.h	/^#define assertLock( a, b )	AssertLock( NULL, b )$/
attachScreen	scsupp.c	/^attachScreen( child, parent )$/
autoRequest	ezreq.c	/^autoRequest( rwin, bodyt, goodt, badt, goodif, bad/
autoScroll	dclip.c	/^autoScroll( sc )$/
badOrder	ilock.c	/^badOrder(task, sem)$/
beepComplement	misc.c	/^ULONG beepComplement(color)$/
beepGrunt	misc.c	/^beepGrunt(screen)$/
beginToken	ism.c	/^beginToken( it )$/
boolGoActive	bhooks.c	/^boolGoActive( g, cgp )$/
boolGoInactive	bhooks.c	/^boolGoInactive( g, cgp )$/
boolHandleInput	bhooks.c	/^boolHandleInput( g, cgp )$/
boolHitTest	bhooks.c	/^boolHitTest( g, cgp )$/
boolHook	bhooks.c	/^boolHook( h, g, cgp )$/
boolRender	bhooks.c	/^boolRender ( g, cgp )$/
boolVisuals	bhooks.c	/^boolVisuals( rp, g, gi, redraw_mode, gbox )$/
borderDamage	size.c	/^borderDamage(w, dx, dy)$/
borderlessProp	prop.c	/^borderlessProp( g, pi )$/
boxModernize	rect.c	/^boxModernize(func, rp, box)$/
boxer	menu.c	/^boxer( screen, item, rect, hullrect, issubmenu )$/
broadcastIEvent	ih.c	/^broadcastIEvent( ieclass )$/
buildEasyRequestArgs	ezreq.c	/^buildEasyRequestArgs( rwin, ez, iflags, args )$/
buildSysRequest	ezreq.c	/^buildSysRequest( rwin, bodyt, retryt, cancelt, ifl/
bumpPSNVisitor	pubscreen.c	/^bumpPSNVisitor( psn )$/
calcSpriteWidth	pointer.c	/^calcSpriteWidth( width )$/
callGadgetHook	drawgadgets.c	/^callGadgetHook( hook, gad, method, ginfo \/* ,...*\//
callGadgetHookPkt	drawgadgets.c	/^callGadgetHookPkt( hook, gad, message )$/
canSlide	scsupp.c	/^LONG canSlide( s, override )$/
changeLayer	zoom.c	/^changeLayer( l, box )$/
checkLock	intuall.h	/^#define checkLock( a, b )	CheckLock( NULL, b )$/
checkmarkMenu	menu.c	/^checkmarkMenu(menu, firstitem, sub)$/
clearPending	idcmp.c	/^clearPending( window, class, qualifier )$/
clearSGW	sinput.c	/^clearSGW( sgw )$/
clearWords	genv.c	/^clearWords( ptr, numwords )$/
clearf	buttongclass.c	/^#define clearf(v,f)	((v) &= ~(f))$/
cloneIEvent	iequeue.c	/^cloneIEvent( ie )$/
cloneRP	misc.c	/^cloneRP( clonerp, rp )$/
cloneRPFont	misc.c	/^cloneRPFont( clonerp, rp )$/
closeScreenCommon	screens.c	/^closeScreenCommon( sc )$/
closeWindowCommon	windows.c	/^closeWindowCommon( window, failure )$/
coerceScreenGrunt	coercion.c	/^coerceScreenGrunt( s, frontmonitor )$/
coerceScreens	coercion.c	/^coerceScreens( onescreen, force )$/
commonBSR	ezreq.c	/^commonBSR( rwin, refscreen, eztitle, itext, glist,/
commonGadgetRender	drawgadgets.c	/^commonGadgetRender( rp, g, gi, gbox, suppress_sele/
commonGadgetTextAndGhost	drawgadgets.c	/^commonGadgetTextAndGhost( rp, g, gi, gbox )$/
conditionalBail	sgadget.c	/^conditionalBail( expression )$/
containerBumpPots	prop.c	/^containerBumpPots( g, gi, coord, knobbox )$/
containerIncrement	prop.c	/^containerIncrement(body)$/
convertMouse	ihfront.c	/^convertMouse( ie )$/
convertPointerPos	ihfront.c	/^convertPointerPos( ie, currpoint )$/
convertRawKey	ihfront.c	/^convertRawKey( ie )$/
copyBox	intuinternal.h	/^#define copyBox( from, to ) (getImageBox( (from), /
copyTAttr	fonts.c	/^copyTAttr( ta, tab )$/
copybuf	sinput.c	/^copybuf(src, size, dest)$/
copyprefs	prefs.c	/^copyprefs(from, size, to)$/
createITGadget	layout.c	/^createITGadget( screen, gtext, remkey, prevgad, id/
createInputTokens	ihfront.c	/^createInputTokens( ie )$/
createMouseToken	ihfront.c	/^createMouseToken( ie, code, command )$/
createNewSysGadget	newlook.c	/^createNewSysGadget( s, res, gindex, gimme )$/
createPoolNode	pools.c	/^createPoolNode( lh )$/
createReqLayer	zoom.c	/^createReqLayer( linfo, bmap, box, flags )$/
createStateImagery	vectorclass.c	/^BOOL createStateImagery( im, si, scd, vi, width, h/
dDMRTimeout	sdmrtimeout.c	/^dDMRTimeout()$/
dGadget	sgadget.c	/^dGadget()$/
dIdleWindow	sidlewindow.c	/^dIdleWindow()$/
dMenu	smenu.c	/^dMenu()$/
dNoWindow	snowindow.c	/^dNoWindow()$/
dRequester	srequester.c	/^dRequester()$/
dScreenDrag	sscreendrag.c	/^dScreenDrag()$/
dVerify	sverify.c	/^dVerify()$/
dWSizeDrag	swsizedrag.c	/^dWSizeDrag()$/
damageWholeLayer	zoom.c	/^damageWholeLayer( l )$/
decPSNVisitor	pubscreen.c	/^decPSNVisitor( psn )$/
defaultPubScreen	pubscreen.c	/^defaultPubScreen()$/
deferToken	ism.c	/^deferToken()$/
delWord	sinput.c	/^delWord( sgw )$/
delinkGadgetList	gadgets.c	/^delinkGadgetList( gadget, firstgadget, numgad )$/
delinkScreen	scsupp.c	/^delinkScreen(OScreen)$/
delinkThing	thing.c	/^delinkThing(thing, prevthing)$/
detachScreen	screens.c	/^detachScreen( sc )$/
dimensionNewKnobForBodys	prop.c	/^dimensionNewKnobForBodys( g, gi, pgx )$/
dispatch	buttongclass.c	/^static ULONG $/
dispatchFillRect	fillrectclass.c	/^ULONG $/
dispatchFrameI	frameiclass.c	/^ULONG $/
dispatchFramedB	frbuttonclass.c	/^static ULONG $/
dispatchITextI	itexticlass.c	/^ULONG $/
dispatchPointerClass	pointer.c	/^dispatchPointerClass( cl, o, msg )$/
dispatchSysI	vectorclass.c	/^dispatchSysI( cl, o, msg )$/
dispatchToken	ism.c	/^dispatchToken( it )$/
displayContents	frbuttonclass.c	/^displayContents( rp, o, drinfo, offsetx, offsety, /
displayOScan	screens.c	/^displayOScan( drecord, displayID, ostype, rect )$/
displayString	strings.c	/^displayString( rp, sg, gi, gbox, sex )$/
disposeGadgetList	ezreq.c	/^disposeGadgetList( g )$/
disposeImageList	ezreq.c	/^disposeImageList( im )$/
disposeToken	ism.c	/^disposeToken( it )$/
divvyUp	layout.c	/^divvyUp( bins, balls, errorp )$/
doDefault	isdefault.c	/^doDefault()$/
doISM	ism.c	/^doISM( command, obj1, obj2, subcommand )$/
doMoveScreen	scsupp.c	/^doMoveScreen( screen, x, y )$/
doSetMenuStrip	menu.c	/^doSetMenuStrip(window, menu, recalc)$/
doTiming	timing.c	/^doTiming()$/
doWindowLayer	zoom.c	/^doWindowLayer( le, windowbox, innerbox )$/
dragIFrame	isupp2.c	/^dragIFrame(delta)$/
dragNewKnob	prop.c	/^dragNewKnob( g, gi, mousept, gbox )$/
drawBlock	misc.c	/^drawBlock(rp, left, up, right, down, apen)$/
drawBox	misc.c	/^drawBox(rp, x, y, width, height, apen, mode, hthic/
drawEmbossedBorder	windows.c	/^drawEmbossedBorder( w, draw_flags )$/
drawEmbossedEdges	windows.c	/^drawEmbossedEdges( w )$/
drawEmbossedWFill	windows.c	/^drawEmbossedWFill( w )$/
drawFillRect	fillrectclass.c	/^drawFillRect( cl, o, msg )$/
drawFrameI	frameiclass.c	/^drawFrameI( cl, o, msg )$/
drawFrames	isupp2.c	/^drawFrames( RP, oldrect, newrect )$/
drawGGrunt	drawgadgets.c	/^drawGGrunt(rp, firstg, ge, numgad, filter_flags )$/
drawGadgets	drawgadgets.c	/^drawGadgets(ptr, gadget, numgad, filter_flags )$/
drawITextI	itexticlass.c	/^drawITextI( cl, o, msg )$/
drawImage	imageclass.c	/^drawImage( cl, o, msg )$/
drawImageGrunt	misc.c	/^drawImageGrunt(rport, image, xoffset, yoffset, min/
drawItem	menu.c	/^drawItem(num)$/
drawKnob	drawgadgets.c	/^drawKnob( g, gi, rp, pgx )$/
drawRequester	requester.c	/^drawRequester(req, w)$/
drawScreenBar	scsupp.c	/^drawScreenBar( rp, s, blockpen )$/
drawSub	menu.c	/^drawSub(num)$/
drawSysI	vectorclass.c	/^drawSysI( cl, o, msg )$/
drawVectorImage	vectorclass.c	/^drawVectorImage( rport, vi, Width, Height, state, /
easyRequestArgs	ezreq.c	/^easyRequestArgs( rwin, ez, idcmp_ptr, args )$/
embossedBoxTrim	newlook.c	/^embossedBoxTrim( rp, b, ulpen, lrpen, meeting_type/
embossedFillPen	windows.c	/^embossedFillPen( w )$/
enableLockCheck	intuall.h	/^#define enableLockCheck()	SETFLAG( IBase->DebugFla/
eraseImage	imageclass.c	/^eraseImage( cl, o, msg )$/
eraseItem	menu.c	/^eraseItem()$/
eraseRect	rect.c	/^eraseRect( rp, r )$/
eraseRemnants	rect.c	/^eraseRemnants(rp, oldbox, newbox, offset, pen, pat/
eraseSub	menu.c	/^eraseSub()$/
establishReqLayer3	zoom.c	/^establishReqLayer3( req, windowbox, gzzdims )$/
fakeLockLayerInfo	ilock.c	/^fakeLockLayerInfo(x)$/
fakeLockLayerRom	ilock.c	/^fakeLockLayerRom(x)$/
fakeLockLayers	ilock.c	/^fakeLockLayers(x)$/
fakeUnlockLayerInfo	ilock.c	/^fakeUnlockLayerInfo(x)$/
fakeUnlockLayerRom	ilock.c	/^fakeUnlockLayerRom(x)$/
fakeUnlockLayers	ilock.c	/^fakeUnlockLayers(x)$/
fetchIBase	intuinternal.h	/^#define fetchIBase()	((struct IntuitionBase *) *((/
fillAround	rect.c	/^fillAround( rp, yesrect, norect, pen, patternpen)$/
findFreeMessage	idcmp.c	/^struct IntuiMessage *findFreeMessage(AWindow)$/
findGadgetRequest	genv.c	/^findGadgetRequest(gadget, window)$/
findMenuKey	smenu.c	/^findMenuKey( menu, code )$/
findPubScreen	pubscreen.c	/^findPubScreen( name )$/
findWorkBench	wbench.c	/^struct Screen *findWorkBench() $/
fixBitMapPokers	view.c	/^fixBitMapPokers( sc )$/
fixWindowBorders	wtags.c	/^fixWindowBorders()$/
fmtPass1	format.c	/^fmtPass1( fmt, arglist, ccountp, itcountp )$/
fmtPass2	format.c	/^fmtPass2( fmt, arglist, buffer, itext )$/
forceBarBack	scsupp.c	/^forceBarBack(s)$/
forceBarCenter	scsupp.c	/^forceBarCenter(s)$/
forceBarFront	scsupp.c	/^forceBarFront(s)$/
formatITList	format.c	/^formatITList( fmt, arglist, nextargp, remkey, sepa/
frameBox	frameiclass.c	/^frameBox( cl, o, msg )$/
freeITList	format.c	/^freeITList( itl )$/
freeImageMem	vectorclass.c	/^freeImageMem( si )$/
freeMenuBitMap	menu.c	/^#define freeMenuBitMap( bm ) FreeBitMap( bm )$/
freeMouse	mouse.c	/^freeMouse()$/
freePubScreenNode	pubscreen.c	/^freePubScreenNode( psn )$/
freeRP	misc.c	/^freeRP(rp)$/
freeSysGadgets	windows.c	/^freeSysGadgets(g)$/
gListDomain	genv.c	/^gListDomain( g, window,  ge )$/
gadgetBoundingBox	genv.c	/^gadgetBoundingBox( g, gi, box )$/
gadgetBox	genv.c	/^gadgetBox( g, gi, box )$/
gadgetBoxGrunt	genv.c	/^gadgetBoxGrunt( g, gi, box )$/
gadgetDamage	size.c	/^gadgetDamage(w, dx, dy)$/
gadgetDispatch	gadclass.c	/^gadgetDispatch( cl, o, msg )$/
gadgetDrawState	drawgadgets.c	/^gadgetDrawState( g, gi, suppress_selected )$/
gadgetHelpTimer	hitgadgets.c	/^gadgetHelpTimer()$/
gadgetHook	genv.c	/^gadgetHook( g )$/
gadgetInfo	genv.c	/^gadgetInfo( g, ge )$/
gadgetMouse	genv.c	/^gadgetMouse( g, gi, mouse, gbox )$/
gadgetPoint	genv.c	/^gadgetPoint( g, gi, windowcoord, gadgetcoord, gbox/
getAllButMenuOK	idcmp.c	/^USHORT getAllButMenuOK( ie )$/
getContainerPens	drawgadgets.c	/^getContainerPens( g, gi, cpens )$/
getContentsExtent	frbuttonclass.c	/^getContentsExtent( o, drinfo, contents )$/
getGadgetAttr	gadclass.c	/^getGadgetAttr( cl, o, msg )$/
getGimmeLayer	misc.c	/^struct Layer *getGimmeLayer(w)$/
getICAttrs	icclass.c	/^getICAttrs( cl, o, msg, icd )$/
getITextList	format.c	/^getITextList( num, remkey )$/
getImageAttr	imageclass.c	/^getImageAttr( cl, o, msg )$/
getImageBox	genv.c	/^getImageBox(im, box)$/
getMenu	menu.c	/^getMenu()$/
getPropGadgetAttrs	propgadclass.c	/^getPropGadgetAttrs( cl, o, msg )$/
getSEx	strings.c	/^getSEx( g )$/
getScreenSysImage	newlook.c	/^getScreenSysImage( s, gindex )$/
getSizeGDims	newlook.c	/^getSizeGDims( sc, dims )$/
getStrGadgetAttrs	strgadclass.c	/^getStrGadgetAttrs( cl, o, msg )$/
getleft	windows.c	/^int getleft(w)$/
getright	windows.c	/^int getright( w )$/
ggDispatch	ggclass.c	/^ggDispatch( cl, o, msg )$/
ghResult	sgadget.c	/^ghResult( ghreturn, upcode )$/
glistExtentBox	layout.c	/^glistExtentBox( g, box, gadspace )$/
grabItem	menu.c	/^struct MenuItem *grabItem(menu, menuNum)$/
grabMenu	menu.c	/^struct Menu *grabMenu(menu, menuNum)$/
grabSub	menu.c	/^struct MenuItem *grabSub(item, menuNum)$/
hResDivide	scale.c	/^hResDivide( drinfo, ticks )$/
haveActiveRequest	sidlewindow.c	/^haveActiveRequest()$/
highGrunt	menu.c	/^highGrunt(item, left, top, AScreen)$/
highItem	menu.c	/^highItem()$/
highMenu	menu.c	/^highMenu()$/
highPrimeGrunt	menu.c	/^highPrimeGrunt(subsearch)$/
highSub	menu.c	/^highSub()$/
hitGGrunt	hitgadgets.c	/^hitGGrunt( g, gi, gbox, methodid )$/
hitGadgets	hitgadgets.c	/^hitGadgets(layer)$/
hitGrunt	menu.c	/^SHORT hitGrunt(subsearch)$/
hitItem	menu.c	/^USHORT hitItem()$/
hitMenu	menu.c	/^SHORT hitMenu()$/
hitScreen	windows.c	/^hitScreen()$/
hitSub	menu.c	/^SHORT hitSub()$/
hitUpfront	windows.c	/^struct Window *hitUpfront(layerhit)$/
hittestImage	imageclass.c	/^hittestImage( cl, o, msg )$/
hookfunc_t	ihooks.c	37
iEdit	sinput.c	/^iEdit( hook, sgw )$/
iHandleMouse	sinput.c	/^iHandleMouse( sgw, redisplay, gbox )$/
iMouse	sinput.c	/^iMouse( ie, g, gi, sex, redisplay, gbox )$/
icDispatch	icclass.c	/^ULONG $/
imageDispatch	imageclass.c	/^imageDispatch( cl, o, msg )$/
inGList	gadgets.c	/^inGList( gadget, firstgadget, numgad )$/
initButtonGClass	buttongclass.c	/^initButtonGClass()$/
initCursorInc	ihfront.c	/^initCursorInc( )$/
initFillRectClass	fillrectclass.c	/^initFillRectClass()$/
initFrameIClass	frameiclass.c	/^initFrameIClass()$/
initFramedButtonClass	frbuttonclass.c	/^initFramedButtonClass()$/
initGGClass	ggclass.c	/^initGGClass()$/
initGadgetClass	gadclass.c	/^initGadgetClass()$/
initGadgets	gadgets.c	/^initGadgets( win, g, numgad )$/
initHook	ihooks.c	/^initHook( hook, dispatch )$/
initICClass	icclass.c	/^initICClass()$/
initIClasses	classes.c	/^initIClasses()$/
initIEvents	iequeue.c	/^initIEvents()$/
initIMsg	idcmp.c	/^initIMsg( class, code, ie, window, tablet )$/
initITextIClass	itexticlass.c	/^initITextIClass()$/
initImageClass	imageclass.c	/^initImageClass()$/
initIntuition	init.c	/^initIntuition()$/
initModelClass	modclass.c	/^initModelClass()$/
initMousePointer	pointer.c	/^initMousePointer()$/
initPointerClass	pointer.c	/^initPointerClass()$/
initPropGadgetClass	propgadclass.c	/^initPropGadgetClass()$/
initPubScreen	pubscreen.c	/^initPubScreen( pubname, pubtask, pubsig, errorptr /
initRootClass	rootclass.c	/^initRootClass()$/
initStrGadgetClass	strgadclass.c	/^initStrGadgetClass()$/
initSysIClass	vectorclass.c	/^*initSysIClass()$/
initTokens	ism.c	/^initTokens()$/
initWBMessage	screens.c	/^initWBMessage( imsg, replyport, code )$/
innerWindowBox	zoom.c	/^innerWindowBox( w, windowbox, innerbox )$/
interiorBox	frameiclass.c	/^interiorBox( rp, b, xw, yw, pen )$/
internalBorderPatrol	isupport.c	/^internalBorderPatrol( s )$/
intersectBox	windows.c	/^intersectBox( box1, box2 )$/
isSelectup	isupp2.c	/^isSelectup(ie)$/
isTick	isupp2.c	/^isTick(ie)$/
itemExtent	menu.c	/^itemExtent( rp, mit, rect )$/
kbdHMouse	ihfront.c	/^kbdHMouse( ie )$/
kbdVMouse	ihfront.c	/^kbdVMouse( ie )$/
knownScreen	isupport.c	/^BOOL knownScreen(s)$/
knownWindow	isupport.c	/^BOOL knownWindow(w)$/
laceCheck	view.c	/^laceCheck()$/
lastThing	thing.c	/^lastThing(thing)$/
legalWindowBox	zoom.c	/^legalWindowBox( window, box )$/
linkPubScreen	pubscreen.c	/^linkPubScreen( sc, pubnode )$/
lockClassList	pubclasses.c	/^lockClassList()$/
lockFree	intuall.h	/^#define lockFree( a, b )	LockFree( NULL, b )$/
lockGDomain	genv.c	/^lockGDomain(ge)$/
lockIBase	ilock.c	/^lockIBase( isem )$/
longmouseToScreen	scale.c	/^longmouseToScreen( pt, screen )$/
makeMyClass	pubclasses.c	/^makeMyClass( myclassid, superid, superclass, insts/
makePublicClass	pubclasses.c	/^makePublicClass( classid, superid, instsize, dispa/
menuBlit	menu.c	/^menuBlit( sc, savebm, bounds, toscreen )$/
menuImage	menu.c	/^menuImage(firstitem, menurect, realrect, disabled)/
metaDrag	ihfront.c	/^metaDrag( ie )$/
modDispatch	modclass.c	/^modDispatch( cl, o, msg )$/
modeSnoop	view.c	/^modeSnoop( screen, force )$/
modeVerify	view.c	/^modeVerify( force )$/
monitorCheck	view.c	/^monitorCheck()$/
mouseError	mouse.c	/^mouseError(errorsum, pos, delta)$/
mouseToSprite	scale.c	/^mouseToSprite( pt )$/
moverastermouse	mouse.c	/^moverastermouse()$/
myRectangle	vectorclass.c	/^myRectangle( rport, x1, y1, x2, y2 )$/
newActiveGadget	sgadget.c	/^newActiveGadget( current, ghreturn )$/
newDMRequest	requester.c	/^BOOL newDMRequest(w, req)$/
newIEToken	ihfront.c	/^newIEToken( ie, command )$/
newImageBox	genv.c	/^newImageBox(im, box)$/
newMakeScreen	view.c	/^newMakeScreen(screen,rethink)$/
newPointerPos	ihfront.c	/^newPointerPos( newcoord, ie, currpoint,  relative,/
newToken	ism.c	/^newToken()$/
newlookProp	newlook.c	/^newlookProp( g, gi )$/
notePointerKill	pointer.c	/^notePointerKill( passedIBase )$/
notifyMod	modclass.c	/^notifyMod( cl, o, msg, md )$/
notifyToken	ism.c	/^notifyToken( it )$/
nthThing	thing.c	/^nthThing(thing, n, realn)$/
obtainRP	misc.c	/^struct RastPort *obtainRP( clonee, layer )$/
obtainRenderStuff	vectorclass.c	/^obtainRenderStuff( im, si, scd )$/
openScreen	screens.c	/^openScreen( ns )$/
openScreenTagList	screens.c	/^openScreenTagList( ns, tags )$/
openSysScreen	screens.c	/^struct Screen *openSysScreen(type)$/
openWorkBench	wbench.c	/^struct Screen *openWorkBench() $/
openwbscreen	wbench.c	/^openwbscreen()$/
outbox	misc.c	/^outbox(rp, left, top, width, height)$/
parentOriginX	scsupp.c	/^parentOriginX( child, parent )$/
parentOriginY	scsupp.c	/^parentOriginY( child, parent )$/
pointRel	requester.c	/^pointRel( r, window, x, y )$/
pokeWorkbench	wbench.c	/^pokeWorkbench()$/
poolGet	pools.c	/^poolGet( lh )$/
poolInit	pools.c	/^poolInit( lh, size, initnum )$/
poolReturn	pools.c	/^poolReturn( ln )$/
positionNewKnobForPots	prop.c	/^positionNewKnobForPots( g, gi, pgx )$/
potInRange	prop.c	/^potInRange(potval)$/
potToTop	prop.c	/^potToTop(pot, body)$/
preSendISM	ism.c	/^preSendISM( command, obj1, obj2, subcommand )$/
previousLink	thing.c	/^struct Thing *previousLink(first, current)$/
previousThing	thing.c	/^previousThing(thing, prevthing, pos)$/
printEmbossedTitle	windows.c	/^printEmbossedTitle( rp, w, clearout )$/
printIText	misc.c	/^printIText(rp, itext, left, top,  use_it_pens_and_/
processFail	ezreq.c	/^processFail( fail )$/
propBody	propgadclass.c	/^propBody( ss )$/
propGoActive	phooks.c	/^propGoActive( g, cgp )$/
propGoInactive	phooks.c	/^propGoInactive( g, cgp )$/
propHandleInput	phooks.c	/^propHandleInput( g, cgp )$/
propHidden	propgadclass.c	/^propHidden( ss )$/
propHook	phooks.c	/^propHook( h, g, cgp )$/
propPot	propgadclass.c	/^propPot( ss )$/
propRender	drawgadgets.c	/^propRender( g, cgp )$/
propSetupInfo	phooks.c	/^propSetupInfo( g, cgp )$/
propTop	propgadclass.c	/^propTop( pgi )$/
propagateHit	ggclass.c	/^propagateHit( o, gg, msg )$/
propgadgetDispatch	propgadclass.c	/^propgadgetDispatch( cl, o, msg )$/
queueIEvent	iequeue.c	/^queueIEvent()$/
rastermouse	mouse.c	/^rastermouse(x,y)$/
rawkeyButtonDown	ihfront.c	/^rawkeyButtonDown( ie )$/
rawkeyButtonUpClone	ihfront.c	/^rawkeyButtonUpClone( ie )$/
rawkeyCommandKeys	ihfront.c	/^rawkeyCommandKeys( ie )$/
rawkeyCursorKeys	ihfront.c	/^rawkeyCursorKeys( ie )$/
realOpenScreenTagList	screens.c	/^realOpenScreenTagList( ns, sm, tags )$/
realSetMenuStrip	menu.c	/^realSetMenuStrip(window, menu, precalc_sizes )$/
realStartMenu	smenu.c	/^realStartMenu()$/
reclaimIEvents	iequeue.c	/^reclaimIEvents()$/
reclaimMessages	idcmp.c	/^reclaimMessages(window)$/
reclaimWBMsg	idcmp.c	/^reclaimWBMsg()$/
refreshScreenBar	scsupp.c	/^refreshScreenBar( sc )$/
reinstatePointer	pointer.c	/^reinstatePointer()$/
releaseRenderStuff	vectorclass.c	/^releaseRenderStuff( scd )$/
relinkScreen	scsupp.c	/^relinkScreen( screen, flags )$/
remakeCopList	view.c	/^remakeCopList()$/
removeMStrip	menu.c	/^removeMStrip( s )$/
renderButtonG	buttongclass.c	/^renderButtonG( rp, gi, o, redraw_mode )$/
renderFramedB	frbuttonclass.c	/^renderFramedB( rp, gi, o, lod, redraw_mode )$/
renderNewKnob	drawgadgets.c	/^renderNewKnob( g, gi, pgx, rp )$/
repeatCursorInc	ihfront.c	/^repeatCursorInc()$/
reqTitleLength	ezreq.c	/^reqTitleLength( rp, title )$/
reqWindow	ezreq.c	/^reqWindow( rwin, screen, title, glist, reqWidth, r/
resetMenu	menu.c	/^resetMenu(w, mflags, iflags, sflags)$/
rethinkMouseLimits	dclip.c	/^rethinkMouseLimits()$/
rethinkVPorts	view.c	/^rethinkVPorts( force )$/
returnAllButMenuOK	smenu.c	/^returnAllButMenuOK( okcode )$/
returnDMROK	smenu.c	/^returnDMROK( okcode )$/
returnGadget	sgadget.c	/^returnGadget()$/
returnIEvents	iequeue.c	/^returnIEvents()$/
returnIdleWindow	sidlewindow.c	/^returnIdleWindow()$/
returnIdleZoom	sidlewindow.c	/^returnIdleZoom( okcode )$/
returnMenuDMR	smenu.c	/^returnMenuDMR( okcode )$/
returnMenuKey	smenu.c	/^returnMenuKey( okcode )$/
returnMenuOK	smenu.c	/^returnMenuOK( okcode )$/
returnNoWindow	snowindow.c	/^returnNoWindow()$/
returnRequesterGadget	srequester.c	/^returnRequesterGadget( endrequest )$/
returnRequesterSDrag	srequester.c	/^returnRequesterSDrag()$/
returnRequesterZoom	srequester.c	/^returnRequesterZoom( okcode )$/
returnSysGadget	sgadget.c	/^returnSysGadget( )$/
returnWSDOK	swsizedrag.c	/^returnWSDOK( okcode )$/
reuseToken	ism.c	/^reuseToken()$/
rootDispatch	rootclass.c	/^rootDispatch( cl, o, msg )$/
runIntuition	ih.c	/^runIntuition( ie )$/
safeDisplayProp	phooks.c	/^safeDisplayProp( g, gi, pgx )$/
safeDisplayString	shooks.c	/^safeDisplayString( g, gi )$/
scaleConversion	scale.c	/^scaleConversion( pt, res1, res2 )$/
scaleScreenMouse	scale.c	/^scaleScreenMouse(rect, screen)$/
screenDrag	sscreendrag.c	/^screenDrag()$/
screenFamily	scsupp.c	/^screenFamily( s )$/
screenFontHeight	fonts.c	/^screenFontHeight( screen )$/
screenGadgets	scsupp.c	/^screenGadgets( s )$/
screenLegalPosition	dclip.c	/^screenLegalPosition( screen, limitrect, flags )$/
screenMouse	mouse.c	/^screenMouse( s )$/
screenToLongMouse	scale.c	/^screenToLongMouse( pt, screen )$/
screenToMouse	scale.c	/^screenToMouse( pt, screen )$/
screenVisitorCount	pubscreen.c	/^screenVisitorCount( sc )$/
screenbar	scsupp.c	/^screenbar( s )$/
sendAllAll	idcmp.c	/^sendAllAll( class, sendflag)$/
sendAllMenuClear	smenu.c	/^sendAllMenuClear( screen )$/
sendAllNewPrefs	idcmp.c	/^sendAllNewPrefs( ie )$/
sendAllOne	idcmp.c	/^sendAllOne( class, code, sendflag, screen)$/
sendCompatibleImageMessage	imageclass.c	/^sendCompatibleImageMessage( image, msg1 )$/
sendIDCMP	ih.c	/^sendIDCMP( ieclass, code, it, window, iaddress )$/
sendISM	ism.c	/^sendISM( command, obj1, obj2, subcommand )$/
sendISMNoQuick	ism.c	/^sendISMNoQuick( command, obj1, obj2, subcommand )$/
sendNotifyIDCMP	classes.c	/^sendNotifyIDCMP( msg )$/
sendWindowMouse	isdefault.c	/^sendWindowMouse()$/
setButtonAttrs	buttongclass.c	/^setButtonAttrs( cl, o, msg )$/
setColorPrefs	iprefs.c	/^setColorPrefs( prefcolor, firstcolor, numcolors )$/
setDefaultMousePointer	pointer.c	/^setDefaultMousePointer( bm, xoffset, yoffset, xres/
setFillRectAttrs	fillrectclass.c	/^setFillRectAttrs( cl, o, msg )$/
setFrameIAttrs	frameiclass.c	/^#define setFrameIAttrs( cl, o, msg ) \\$/
setFramedBAttrs	frbuttonclass.c	/^setFramedBAttrs( cl, o, msg )$/
setGGAttrs	ggclass.c	/^setGGAttrs( cl, o, msg )$/
setGHigh	gadclass.c	/^setGHigh( g, highlight )$/
setGadgetAttrs	gadclass.c	/^setGadgetAttrs( cl, o, msg )$/
setIBasePrefs	prefs.c	/^setIBasePrefs()$/
setICAttrs	icclass.c	/^setICAttrs( cl, o, msg )$/
setIFrame	swsizedrag.c	/^setIFrame()	\/* save current window\/mouse stuff *\/$/
setIPrefs	iprefs.c	/^setIPrefs( pp, psize, ptype, backsync  )$/
setImageAttrs	imageclass.c	/^#define setImageAttrs( cl, o, msg ) \\$/
setImageBox	prop.c	/^#define setImageBox(T, F) getImageBox(F, T)$/
setMenuRPMask	menu.c	/^setMenuRPMask( rport )$/
setMousePointer	pointer.c	/^setMousePointer()$/
setPointerClassAttrs	pointer.c	/^#define setPointerClassAttrs( cl, o, msg ) \\$/
setPotsForKnobPosition	prop.c	/^setPotsForKnobPosition( g, gi, pt, pgx )$/
setPrefs	prefs.c	/^struct Preferences *setPrefs(preferences, size, Re/
setPropGadgetAttrs	propgadclass.c	/^setPropGadgetAttrs( cl, o, msg )$/
setScreen	scsupp.c	/^setScreen(s)$/
setScreenDisplayID	coercion.c	/^setScreenDisplayID( sc, displayID, ecodeptr, force/
setSpriteHeight	pointer.c	/^setSpriteHeight()$/
setSpriteSpeed	pointer.c	/^setSpriteSpeed( sc )$/
setState	vectorclass.c	/^setState( im, si, state, scd )$/
setStrGadgetAttrs	strgadclass.c	/^setStrGadgetAttrs( cl, o, msg )$/
setWBColorsGrunt	prefs.c	/^setWBColorsGrunt( screen, allcolors )$/
setWBColorsGruntGrunt	prefs.c	/^setWBColorsGruntGrunt( screen, firstcolor, numcolo/
setWindow	windows.c	/^setWindow( w, initial )$/
setf	buttongclass.c	/^#define setf(v,f)	((v) |= (f))$/
setupLCS	zoom.c	/^setupLCS( w, lcs, le, wbox )$/
setupMonitor	coercion.c	/^setupMonitor( force )$/
setupPGX	prop.c	/^setupPGX( g, gi, pgx )$/
setupSGWork	sinput.c	/^setupSGWork( sgw, g, gi, sex, ie )$/
sgAction	sinput.c	/^sgAction( sgw, redisplay, gadgetupcode )$/
sgiSEX	strgadclass.c	/^#define sgiSEX( sgid ) 	(&sgid->sgi_SEx)   \/* stri/
sgiSINFO	strgadclass.c	/^#define sgiSINFO( sgid ) 	(&sgid->sgi_SInfo)$/
showAcc	mouse.c	/^showAcc( factor )$/
showMStrip	menu.c	/^showMStrip(w)$/
sizeDamage	size.c	/^sizeDamage(w, dx, dy)$/
sniffWindowGadgets	gadgets.c	/^sniffWindowGadgets( w, g, numgad )$/
snoopVerifyReply	idcmp.c	/^snoopVerifyReply()$/
spreadLayoutGadgets	layout.c	/^spreadLayoutGadgets( g, gadcount, box, totalwidth,/
startDMRTimeout	sdmrtimeout.c	/^startDMRTimeout( dmrreturn, okcode )$/
startGadget	sgadget.c	/^startGadget( gadgetreturn )$/
startIdleWindow	sidlewindow.c	/^startIdleWindow()$/
startMenu	smenu.c	/^startMenu()$/
startMenuKey	smenu.c	/^startMenuKey( menunum )$/
startNoWindow	snowindow.c	/^startNoWindow()$/
startRequester	srequester.c	/^startRequester()$/
startScreenDrag	sscreendrag.c	/^startScreenDrag( sdreturn )$/
startVerify	sverify.c	/^startVerify( vreturn, window, class, code )$/
startWSizeDrag	swsizedrag.c	/^startWSizeDrag( wsdreturn, size_drag )$/
stretchIFrame	isupp2.c	/^stretchIFrame(delta)$/
strgadgetDispatch	strgadclass.c	/^strgadgetDispatch( cl, o, msg )$/
stringBackspace	sinput.c	/^stringBackspace( sgw, numkill )$/
stringClick	sinput.c	/^stringClick( g, gi, clickx)$/
stringDelete	sinput.c	/^stringDelete( sgw, del_to_end )$/
stringGoActive	shooks.c	/^stringGoActive( g, cgp )$/
stringGoInactive	shooks.c	/^stringGoInactive( g, cgp )$/
stringHandleInput	shooks.c	/^stringHandleInput( g, cgp )$/
stringHitTest	shooks.c	/^stringHitTest()$/
stringHook	shooks.c	/^stringHook( h, g, cgp )$/
stringInput	sinput.c	/^stringInput(ie, g, gi, redisplay, gadgetupcode ) $/
stringRender	shooks.c	/^stringRender( g, cgp )$/
stringSetupInfo	shooks.c	/^stringSetupInfo( g, cgp )$/
sumabs	mouse.c	/^sumabs(x, y)$/
swapMenuIn	menu.c	/^swapMenuIn( sc, cr )$/
swapMenuOut	menu.c	/^#define swapMenuOut( sc, cr ) menuBlit( sc, (cr)->/
syncIPrefs	iprefs.c	/^syncIPrefs( size )$/
syncKnobs	prop.c	/^syncKnobs( g, gi, pgx )$/
testf	buttongclass.c	/^#define testf(v,f) ((v) & (f))$/
timedDisplayAlert	alert.c	/^ULONG timedDisplayAlert(alertnum, string, height, /
toggleBoolGadget	bhooks.c	/^toggleBoolGadget( g, gi, gbox )$/
toggleBoolHighlight	bhooks.c	/^toggleBoolHighlight( rp, g, gi, gbox )$/
tooFarDMR	sdmrtimeout.c	/^tooFarDMR()$/
trackViewPos	iprefs.c	/^trackViewPos()$/
translateCGPInput	ggclass.c	/^translateCGPInput( o, g, msg )$/
translateIEtoIDCMP	idcmp.c	/^translateIEtoIDCMP( ieclass, iecode )$/
turnOffGadget	sgadget.c	/^turnOffGadget( abort )$/
unlockClassList	pubclasses.c	/^unlockClassList()$/
unlockGDomain	genv.c	/^unlockGDomain( ge )$/
unlockIBase	ilock.c	/^unlockIBase(isem)$/
updateEmbossedTitle	windows.c	/^updateEmbossedTitle( w )$/
updateFrame	swsizedrag.c	/^updateFrame( initial )$/
updateMousePointer	pointer.c	/^updateMousePointer( newSprite )$/
updateOptions	isupport.c	/^updateOptions(firstoption, draw)$/
updatePropInfo	propgadclass.c	/^updatePropInfo( pgi )$/
upperLeft	intuinternal.h	/^#define upperLeft(A) (*((struct Point *) (A)))$/
vResDivide	scale.c	/^vResDivide( drinfo, ticks )$/
verifyAbort	sverify.c	/^verifyAbort( okcode )$/
windowBorders	wtags.c	/^windowBorders( rect, sc, flags, g, title, width, h/
windowEvent	ih.c	/^windowEvent( sendwindow, ieclass, iecode )$/
windowFrontLayer	zoom.c	/^windowFrontLayer( window, req )$/
windowLayerList	zoom.c	/^windowLayerList( w, list, countnulllayers )$/
windowMouse	mouse.c	/^windowMouse( w )$/
windowObscured	windows.c	/^windowObscured( win )$/
windowPositionLimits	zoom.c	/^windowPositionLimits( w, rect )$/
windowPubScreen	pubscreen.c	/^windowPubScreen( pubname, fallback )$/
windowSizeLimits	zoom.c	/^windowSizeLimits( w, rect )$/
xorbox	misc.c	/^xorbox(rp, left, top, width, height)$/
xorboxmask	misc.c	/^xorboxmask(rp, left, top, width, height)$/
xormask	bhooks.c	/^xormask(rp, box, mask )$/
REVNUM	abs.asm	/^REVNUM/
VERNUM	abs.asm	/^VERNUM/
VERSTRING	abs.asm	/^VERSTRING/
_BorderPatrol	downcode.asm	/^_BorderPatrol/
_CM	classface.asm	/^_CM/
_CheckButtons	mousebuttons.asm	/^_CheckButtons/
_CoerceMessage	classface.asm	/^_CoerceMessage/
_DisplayBeep	intuitionface.asm	/^_DisplayBeep/
_GetTagDataUser	downcode.asm	/^_GetTagDataUser/
_GetTagDataUser0	downcode.asm	/^_GetTagDataUser0/
_IntuiLeap	intuileap.asm	/^_IntuiLeap/
_IntuiName	iwork.asm	/^_IntuiName/
_IntuiVecs	iwork.asm	/^_IntuiVecs/
_LOCKGADGETS	downcode.asm	/^_LOCKGADGETS/
_LOCKIBASE	downcode.asm	/^_LOCKIBASE/
_LOCKRP	downcode.asm	/^_LOCKRP/
_LOCKSTATE	downcode.asm	/^_LOCKSTATE/
_LOCKVIEW	downcode.asm	/^_LOCKVIEW/
_LOCKVIEWCPR	downcode.asm	/^_LOCKVIEWCPR/
_LockLayerInfo	lockstub.asm	/^_LockLayerInfo/
_LockLayerRom	lockstub.asm	/^_LockLayerRom/
_LockLayers	lockstub.asm	/^_LockLayers/
_OpenScreen	intuitionface.asm	/^_OpenScreen/
_OpenScreenTagList	intuitionface.asm	/^_OpenScreenTagList/
_OpenWorkBench	intuitionface.asm	/^_OpenWorkBench/
_REVISION	abs.asm	/^_REVISION/
_SM	classface.asm	/^_SM/
_SSM	classface.asm	/^_SSM/
_ScreenDepth	intuitionface.asm	/^_ScreenDepth/
_SendMessage	classface.asm	/^_SendMessage/
_SendSuperMessage	classface.asm	/^_SendSuperMessage/
_SetWindowPointerA	intuitionface.asm	/^_SetWindowPointerA/
_UNLOCKGADGETS	downcode.asm	/^_UNLOCKGADGETS/
_UNLOCKIBASE	downcode.asm	/^_UNLOCKIBASE/
_UNLOCKRP	downcode.asm	/^_UNLOCKRP/
_UNLOCKSTATE	downcode.asm	/^_UNLOCKSTATE/
_UNLOCKVIEW	downcode.asm	/^_UNLOCKVIEW/
_UNLOCKVIEWCPR	downcode.asm	/^_UNLOCKVIEWCPR/
_UnlockLayerInfo	lockstub.asm	/^_UnlockLayerInfo/
_UnlockLayerRom	lockstub.asm	/^_UnlockLayerRom/
_UnlockLayers	lockstub.asm	/^_UnlockLayers/
_VERSION	abs.asm	/^_VERSION/
_Vbase	xsysidata.asm	/^_Vbase/
_amky	xsysidata.asm	/^_amky/
_boxBottom	downcode.asm	/^_boxBottom/
_boxFit	downcode.asm	/^_boxFit/
_boxRight	downcode.asm	/^_boxRight/
_boxToRect	downcode.asm	/^_boxToRect/
_callHook	hookface.asm	/^_callHook/
_callHookPkt	hookface.asm	/^_callHookPkt/
_ckmk	xsysidata.asm	/^_ckmk/
_currMouse	downcode.asm	/^_currMouse/
_degenerateRect	downcode.asm	/^_degenerateRect/
_divMod	downcode.asm	/^_divMod/
_dnar	xsysidata.asm	/^_dnar/
_fetchIBase	iwork.asm	/^_fetchIBase/
_fmtPass1	aformat.asm	/^_fmtPass1/
_fmtPass2	aformat.asm	/^_fmtPass2/
_hookEntry	hookface.asm	/^_hookEntry/
_iabs	downcode.asm	/^_iabs/
_imax	downcode.asm	/^_imax/
_imin	downcode.asm	/^_imin/
_inrect	downcode.asm	/^_inrect/
_jsprintf	aformat.asm	/^_jsprintf/
_jstreq	downcode.asm	/^_jstreq/
_jstrncpy	downcode.asm	/^_jstrncpy/
_lfar	xsysidata.asm	/^_lfar/
_limitLongPoint	downcode.asm	/^_limitLongPoint/
_limitPoint	downcode.asm	/^_limitPoint/
_limitRect	downcode.asm	/^_limitRect/
_mchk	xsysidata.asm	/^_mchk/
_mutx	xsysidata.asm	/^_mutx/
_nonDegenerate	downcode.asm	/^_nonDegenerate/
_offsetRect	downcode.asm	/^_offsetRect/
_openScreenOnlyTags	downcode.asm	/^_openScreenOnlyTags/
_openWindowOnlyTags	downcode.asm	/^_openWindowOnlyTags/
_pointerKill	downcode.asm	/^_pointerKill/
_ptInBox	downcode.asm	/^_ptInBox/
_realLockLayerInfo	lockstub.asm	/^_realLockLayerInfo/
_realLockLayerRom	lockstub.asm	/^_realLockLayerRom/
_realLockLayers	lockstub.asm	/^_realLockLayers/
_realUnlockLayerInfo	lockstub.asm	/^_realUnlockLayerInfo/
_realUnlockLayerRom	lockstub.asm	/^_realUnlockLayerRom/
_realUnlockLayers	lockstub.asm	/^_realUnlockLayers/
_rectHeight	downcode.asm	/^_rectHeight/
_rectHull	downcode.asm	/^_rectHull/
_rectToBox	downcode.asm	/^_rectToBox/
_rectWidth	downcode.asm	/^_rectWidth/
_rtar	xsysidata.asm	/^_rtar/
_stackSwap	sysreqstack.asm	/^_stackSwap/
_strlen	downcode.asm	/^_strlen/
_stubReturn	hookface.asm	/^_stubReturn/
_transfPoint	downcode.asm	/^_transfPoint/
_upar	xsysidata.asm	/^_upar/
_upperRectHull	downcode.asm	/^_upperRectHull/
_vclose	xsysidata.asm	/^_vclose/
_vdepth	xsysidata.asm	/^_vdepth/
_vsdepth	xsysidata.asm	/^_vsdepth/
_vsize	xsysidata.asm	/^_vsize/
_vzoom	xsysidata.asm	/^_vzoom/
_windowBox	downcode.asm	/^_windowBox/
_windowInnerBox	downcode.asm	/^_windowInnerBox/
_windowObscured	downcode.asm	/^_windowObscured/
activategadget	intuitionface.asm	/^activategadget/
activatewindow	intuitionface.asm	/^activatewindow/
addclass	intuitionface.asm	/^addclass/
addgadget	intuitionface.asm	/^addgadget/
addglist	intuitionface.asm	/^addglist/
allocremember	intuitionface.asm	/^allocremember/
allocscreenbuffer	intuitionface.asm	/^allocscreenbuffer/
alohaworkbench	intuitionface.asm	/^alohaworkbench/
autorequest	intuitionface.asm	/^autorequest/
beginrefresh	intuitionface.asm	/^beginrefresh/
buildeasyrequestargs	intuitionface.asm	/^buildeasyrequestargs/
buildsysrequest	intuitionface.asm	/^buildsysrequest/
changescreenbuffer	intuitionface.asm	/^changescreenbuffer/
changewindowbox	intuitionface.asm	/^changewindowbox/
cleardmrequest	intuitionface.asm	/^cleardmrequest/
clearmenustrip	intuitionface.asm	/^clearmenustrip/
clearpointer	intuitionface.asm	/^clearpointer/
closescreen	intuitionface.asm	/^closescreen/
closewindow	intuitionface.asm	/^closewindow/
currenttime	intuitionface.asm	/^currenttime/
displayalert	intuitionface.asm	/^displayalert/
displaybeep	intuitionface.asm	/^displaybeep/
disposeobject	intuitionface.asm	/^disposeobject/
dogadgetmethoda	intuitionface.asm	/^dogadgetmethoda/
doubleclick	intuitionface.asm	/^doubleclick/
drawborder	intuitionface.asm	/^drawborder/
drawimage	intuitionface.asm	/^drawimage/
drawimagestate	intuitionface.asm	/^drawimagestate/
easyrequestargs	intuitionface.asm	/^easyrequestargs/
endrefresh	intuitionface.asm	/^endrefresh/
endrequest	intuitionface.asm	/^endrequest/
eraseimage	intuitionface.asm	/^eraseimage/
findclass	intuitionface.asm	/^findclass/
freeclass	intuitionface.asm	/^freeclass/
freeremember	intuitionface.asm	/^freeremember/
freescreenbuffer	intuitionface.asm	/^freescreenbuffer/
freescreendrawinfo	intuitionface.asm	/^freescreendrawinfo/
freesysrequest	intuitionface.asm	/^freesysrequest/
gadgetmouse	intuitionface.asm	/^gadgetmouse/
getattr	intuitionface.asm	/^getattr/
getdefaultpubscreen	intuitionface.asm	/^getdefaultpubscreen/
getdefprefs	intuitionface.asm	/^getdefprefs/
getprefs	intuitionface.asm	/^getprefs/
getscreendata	intuitionface.asm	/^getscreendata/
getscreendrawinfo	intuitionface.asm	/^getscreendrawinfo/
helpcontrol	intuitionface.asm	/^helpcontrol/
initrequester	intuitionface.asm	/^initrequester/
intuitextlength	intuitionface.asm	/^intuitextlength/
itemaddress	intuitionface.asm	/^itemaddress/
ldivt	downcode.asm	/^ldivt/
lendmenus	intuitionface.asm	/^lendmenus/
lmodt	downcode.asm	/^lmodt/
lmult	downcode.asm	/^lmult/
lockibase;	downcode.asm	/^lockibase;/
lockpubscreen	intuitionface.asm	/^lockpubscreen/
makeclass	intuitionface.asm	/^makeclass/
makescreen	intuitionface.asm	/^makescreen/
modifyidcmp	intuitionface.asm	/^modifyidcmp/
modifyprop	intuitionface.asm	/^modifyprop/
movescreen	intuitionface.asm	/^movescreen/
movewindow	intuitionface.asm	/^movewindow/
movewindowinfrontof	intuitionface.asm	/^movewindowinfrontof/
newmodifyprop	intuitionface.asm	/^newmodifyprop/
newobjecta	intuitionface.asm	/^newobjecta/
nextobject	intuitionface.asm	/^nextobject/
nextpubscreen	intuitionface.asm	/^nextpubscreen/
obtaingirport	intuitionface.asm	/^obtaingirport/
offgadget	intuitionface.asm	/^offgadget/
offmenu	intuitionface.asm	/^offmenu/
ongadget	intuitionface.asm	/^ongadget/
onmenu	intuitionface.asm	/^onmenu/
openscreen	intuitionface.asm	/^openscreen/
openscreentaglist	intuitionface.asm	/^openscreentaglist/
openwindow	intuitionface.asm	/^openwindow/
openwindowtaglist	intuitionface.asm	/^openwindowtaglist/
openworkbench	intuitionface.asm	/^openworkbench/
pointinimage	intuitionface.asm	/^pointinimage/
printitext	intuitionface.asm	/^printitext/
pubscreenstatus	intuitionface.asm	/^pubscreenstatus/
queryoverscan	intuitionface.asm	/^queryoverscan/
refreshgadgets	intuitionface.asm	/^refreshgadgets/
refreshglist	intuitionface.asm	/^refreshglist/
refreshwindowframe	intuitionface.asm	/^refreshwindowframe/
releasegirport	intuitionface.asm	/^releasegirport/
removeclass	intuitionface.asm	/^removeclass/
removegadget	intuitionface.asm	/^removegadget/
removeglist	intuitionface.asm	/^removeglist/
reportmouse	downcode.asm	/^reportmouse/
request	intuitionface.asm	/^request/
resetmenustrip	intuitionface.asm	/^resetmenustrip/
screendepth	intuitionface.asm	/^screendepth/
screenposition	intuitionface.asm	/^screenposition/
screentoback	intuitionface.asm	/^screentoback/
screentofront	intuitionface.asm	/^screentofront/
scrollwindowraster	intuitionface.asm	/^scrollwindowraster/
setattrsa	intuitionface.asm	/^setattrsa/
setdefaultpubscreen	intuitionface.asm	/^setdefaultpubscreen/
setdmrequest	intuitionface.asm	/^setdmrequest/
setedithook	intuitionface.asm	/^setedithook/
setgadgetattrsa	intuitionface.asm	/^setgadgetattrsa/
setiprefs	intuitionface.asm	/^setiprefs/
setmenustrip	intuitionface.asm	/^setmenustrip/
setmousequeue	intuitionface.asm	/^setmousequeue/
setpointer	intuitionface.asm	/^setpointer/
setprefs	intuitionface.asm	/^setprefs/
setpubscreenmodes	intuitionface.asm	/^setpubscreenmodes/
setwindowpointera	intuitionface.asm	/^setwindowpointera/
setwindowtitles	intuitionface.asm	/^setwindowtitles/
showtitle	intuitionface.asm	/^showtitle/
sizewindow	intuitionface.asm	/^sizewindow/
sysreqhandler	intuitionface.asm	/^sysreqhandler/
timeddisplayalert	intuitionface.asm	/^timeddisplayalert/
uldivt	downcode.asm	/^uldivt/
ulmult	downcode.asm	/^ulmult/
unlockibase;	downcode.asm	/^unlockibase;/
unlockpubscreen	intuitionface.asm	/^unlockpubscreen/
viewportaddress	downcode.asm	/^viewportaddress/
wbenchtoback	intuitionface.asm	/^wbenchtoback/
wbenchtofront	intuitionface.asm	/^wbenchtofront/
windowlimits	intuitionface.asm	/^windowlimits/
windowtoback	intuitionface.asm	/^windowtoback/
windowtofront	intuitionface.asm	/^windowtofront/
zipwindow	intuitionface.asm	/^zipwindow/
