Open procedures:Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-1
Winchester Disk Driver  (INT 13H)                           


WD_SETUP . . . . . . . . . . . .  	
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-1


				 page 60,132
				include	title.inc
			     C	title	AT-BIOS Copyright FARADAY Electronics 1985
			     C	
			     C	
				subttl	Winchester Disk Driver  (INT 13H)
				
				.list
				
				;	--------------------------------------------------------------------
				;      |	INT 13H		Hard Disk Driver       Faraday Electronics  |
				;	--------------------------------------------------------------------
				
				
				;
				;	define some equates for this code.....
				;
				
				;	error codes returned to the user
				
 = 0001				bad_cmd_err	equ	1		;bad command passed to wd_drv
 = 0002				bad_addr_err	equ	2		;bad address mark error
 = 0004				bad_rec_err	equ	4		;specified record not found
 = 0005				reset_err		equ	5		;reset error
 = 0007				wd_init_err	equ	7		;initialization error
 = 0009				dma_bound_err	equ	9		;DMA boubdary error
 = 000A				bad_sec_err	equ	0Ah		;
 = 000B				bad_trk_err	equ	0Bh		;
 = 0010				ecc_err		equ	10h		;ECC error during read i/o
 = 0011				data_valid_err	equ	11h		;ECC corrected data error
 = 0020				wd_cntrl_err	equ	20h		;bad hard disk controller
 = 0040				wd_seek_err	equ	40h		;
 = 0080				wd_time_out	equ	80h		;
				
				
				;	define bit positions for the Error register
				
 = 0001				err_reg_bit0	equ	1		;bit 0 = data address mark not found
 = 0002				err_reg_bit1	equ	2		;bit 1 = track 00 index not found
 = 0004				err_reg_bit2	equ	4		;bit 2 = command terminated
 = 0010				err_reg_bit4	equ	10h		;bit 4 = sector id not found
 = 0040				err_reg_bit6	equ	40h		;bit 6 = ECC data error
 = 0080				err_reg_bit7	equ	80h		;bit 7 = bad block detected
				
				;	define some controller error codes
				
 = 00AA				drv_not_rdy	equ	0aah		;drive not ready
 = 00BB				cntrl_err		equ	0bbh		;undefined controller error
 = 00CC				cntrl_wrt_flt	equ	0cch		;write fault error
				
				;	define controller commands
				
 = 0010				wd_recal		equ	10h		;drive recaliberate
 = 0020				wd_read		equ	20h		;
 = 0030				wd_write		equ	30h		;
 = 0040				wd_verify		equ	40h		;
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-2
Winchester Disk Driver  (INT 13H)                           

 = 0050				wd_fmt_trk		equ	50h		;
 = 0060				wd_init		equ	60h		;
 = 0070				wd_seek		equ	70h		;
 = 0090				wd_diag		equ	90h		;
 = 0091				wd_set_parms	equ	91h		;set drive parameters
				
 = 0001				retries		equ	1		;retries enable or disable
 = 0002				ecc_mode		equ	2		;ecc mode (long or short)
 = 0008				buffer_mode	equ	8		;
 = 0020				op_wait		equ	20h		;wait for operation complete
 = 0600				rdy_wait		equ	600h		;wait for drive ready
 = 0100				drq_wait		equ	100h		;wait for data request line
				
 = 0008				hd_fail		equ	8		;
 = 00F7				hd_pass		equ	0f7h		;
				
 = 01F0				wd_port		equ	01F0h		;base port address
 = 01F7				wd_stat_port	equ	wd_port+7	;status port
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-3
Winchester Disk Driver  (INT 13H)                           

				page
				;
				;		START OF MAIN CODE .......
				;
				
 0000				zero	segment at 0			;start of absolute segment
 0000				zero	ends
				
 0000				dataa	segment	at 40h			;start of data segment
 0000				dataa	ends
				
 0000				eproma	segment	byte public
					assume	cs:eproma,ds:dataa,es:dataa
				
				
				.list
				
				;	Perform initial Power-on diagnostics on the hard disk.
				;	This routine is called just once at boot-up time.
				;	input AH = fixed disk type byte from CMOS RAM
				
 0000				wd_setup		proc	near		
 0000  50				push	ax		;save the fixed disk configuration
 0001  E8 062F R			call	Init_Int2		;Initialize second 8259
 0004  E8 0628 R			call	Init_Int1		;let Interrupts pass through
								; the first 8259
 0007  58				pop	ax		;restore the fixed disk configuration
				
				; check how many disk drives do we have
				
 0008  BB 0000				mov	bx,0
 000B  88 3E 0000 E			mov	port_off,bh	;	
 000F  1E				push	ds		;save DS reg
 0010  8E DB				mov	ds,bx		;setup DS register to 0
					assume	ds:zero
				
 0012  8A DC				mov	bl,ah		;save it
 0014  B5 00				mov	ch,0		;# of fixed disk
 0016  C0 EC 04				shr	ah,4		;drive C type to low nibble
 0019  B0 99				mov	al,19h+80h	;extended drive C type
 001B  BE 0000 E			mov	si,offset wd0_parm_vec	;interrupt vector addr. of INT 41
 001E  E8 0168 R			call	get_tbl_addr	;get fixed disk parameter addr.
 0021  72 0D				jc	wd_setup1		;invalid drive type
				
 0023  8A E3				mov	ah,bl		;restore drive D type
 0025  80 E4 0F				and	ah,0fh		;mask off drive C type
 0028  B0 9A				mov	al,1ah+80h	;extended drive D type addr. in CMOS
 002A  BE 0000 E			mov	si,offset wd1_parm_vec	;interrupt vector addr. of INT 46
 002D  E8 0168 R			call	get_tbl_addr	;get fixed disk parameter addr.
 0030				wd_setup1:
 0030  1F				pop	ds		;restore DS reg
					assume	ds:dataa
				
 0031  88 2E 0000 E			mov	hf_num,ch		;save # of available hard disks
 0035  0A ED				or	ch,ch		;no fixed disk?
 0037  74 33				jz	wd_setup_rtn	;yes, return to POD
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-4
Winchester Disk Driver  (INT 13H)                           

				
 0039  BA 0080				mov	dx,80h		;check the controller
 003C  B4 14				mov	ah,14h		;perform controller diagnostics
 003E  CD 13				int	13h		;DISK IO
 0040  73 19				jnc	reset_drives	;no error ,go reset drives
				
 0042  B0 8E				mov	al,cmos_status_1+80h	;go write cmos status byte
 0044  E8 0000 E			call	read_cmos
 0047  80 CC 08				or	ah,hd_fail	;set hard disk fail bit
 004A  FE C8				dec	al		;cmos_status_1
 004C  E8 0000 E			call	write_cmos
 004F  BE 06AD R			mov	si,offset wd_err_msg2	;error go tell the user
								;'1782-Disk controller failure'
 0052  E8 0000 E			call	display		;go print a messages
 0055  B4 00				mov	ah,0
 0057  0A E4				or	ah,ah		;ZF=1
 0059  EB 11				jmp	short wd_setup_rtn	;yes,return
				
 005B				reset_drives:
 005B  8A 36 0000 E			mov	dh,hf_num		;# of drives to reset
 005F				reset_1:
 005F  52				push	dx		;save # of disk & drive code
 0060  E8 006D R			call	wd_reset		;set drive parameter & recalibrate
 0063  5A				pop	dx		;restore # of disk & drive code
 0064  75 06				jnz	wd_setup_rtn	;error
 0066  FE C2				inc	dl		;do next drive
 0068  FE CE				dec	dh		;all drive done?
 006A  75 F3				jnz	reset_1		;no do more
 006C				wd_setup_rtn:
 006C  C3				ret			;and return
				
				
				; reset drives, set parameters and recaliberate
				
 006D				wd_reset	proc	near
 006D  52				push	dx			;save drive code in DL
 006E  B4 08				mov	ah,8			;get drive parameter
 0070  CD 13				int	13h			;DISK IO
 0072  80 FE 00				cmp	dh,0			;# of heads = 0?
 0075  5A				pop	dx			;restore drive code in DL
 0076  74 12				je	wd_err3			;error if # of heads = 0
				
 0078  51				push	cx			;save # of cyls
 0079  80 E1 3F				and	cl,3fh			;remove cyls in bits 7,6
 007C  80 F9 00				cmp	cl,0			;# of sectors = 0?
 007F  59				pop	cx			;restore # of cyls
 0080  74 08				je	wd_err3			;error if # of sectors = 0
				
 0082  80 E1 C0				and	cl,0c0h			;remove # of sectors in bits 5-0
 0085  83 F9 00				cmp	cx,0			;# of cyls = 0?
 0088  75 14				jne	wd_reset4		;no
 008A				wd_err3:
 008A  BE 06CC R			mov	si,offset wd_err_msg3	;print error messages
									;'1790-Disk 0 error'
 008D  80 FA 80				cmp	dl,80h			;is it first drive?
 0090  74 03				je	wd_err4			;yes,go print error messages
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-5
Winchester Disk Driver  (INT 13H)                           

				
 0092  BE 06E0 R			mov	si,offset wd_err_msg4	;report an error on drive 1
									;'1791-Disk 1 error'
 0095				wd_err4:
 0095  E8 0000 E			call	display			;display messages
 0098  B4 FF				mov	ah,0ffh
 009A  0A E4				or	ah,ah			;ZF=0
 009C  EB 3F				jmp	short wd_reset_ret
				
 009E				wd_reset4:
 009E  B3 0A				mov	bl,10			;try 10 times
 00A0				wd_reset1:
 00A0  B4 09				mov	ah,9			;set drive parameters
 00A2  CD 13				int	13h			;DISK IO
 00A4  73 09				jnc	wd_reset2		;no errors
				
 00A6  E8 0424 R			call	wait_5_secs		;wait 5 secs
 00A9  FE CB				dec	bl			;decrement loop counter
 00AB  75 F3				jnz	wd_reset1		;try again
 00AD  EB 0F				jmp	short wd_err1		;error
				
				;	recalibrate drive
				
 00AF				wd_reset2:
 00AF  B3 05				mov	bl,5			;retry 5 times
 00B1				wd_reset3:
 00B1  B4 11				mov	ah,11h			;recalibrate
 00B3  CD 13				int 	13h			;DISK IO
 00B5  73 22				jnc	wd_reset5		;if no error
				
 00B7  E8 0424 R			call	wait_5_secs		;wait for 5 secs
 00BA  FE CB				dec	bl			;decrement retry count
 00BC  75 F3				jnz	wd_reset3		;try again
				
				; go print error messages and return
				
 00BE				wd_err1:
 00BE  BE 0697 R			mov	si,offset wd_err_msg1	;assume disk 1 failure
									;'1781-Disk 1 failure'
 00C1  80 FA 81				cmp	dl,81h			;is it second drive?
 00C4  74 10				je	wd_err2			;yes
				
 00C6  BE 0681 R			mov	si,offset wd_err_msg0	;'1780-Disk 0 failure'
 00C9  B0 8E				mov	al,cmos_status_1+80h	;go set disk fail error
 00CB  E8 0000 E			call	read_cmos
 00CE  80 CC 08				or	ah,hd_fail		;set disk fail bit
 00D1  FE C8				dec	al			;cmos_status_1
 00D3  E8 0000 E			call	write_cmos		;go write it
 00D6				wd_err2:
 00D6  E8 0000 E			call	display			;display messages
 00D9				wd_reset5:
 00D9  B4 00				mov	ah,0
 00DB  0A E4				or	ah,ah			;ZF=1
 00DD				wd_reset_ret:
 00DD  C3				ret				;rerurn to caller
 00DE				wd_reset	endp			;end wd_reset
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-6
Winchester Disk Driver  (INT 13H)                           

				
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-7
Winchester Disk Driver  (INT 13H)                           

				page
				;	setup parameters for eventual disk command
				
 00DE				set_cmd_parms	proc	near
 00DE  E8 0151 R			call	get_parm_vec		;get address of the disk parms
 00E1  26: 8A 47 08			mov	al,es:[bx+8]		;get control byte modifier
 00E5  8A 26 0000 E			mov	ah,ctrl_byte		;
 00E9  80 E4 C0				and	ah,0c0h			;
 00EC  0A E0				or	ah,al			;
 00EE  88 26 0000 E			mov	ctrl_byte,ah		;save it back
 00F2  52				push	dx
 00F3  BA 03F6				mov	dx,03f6h		;
 00F6  EE				out	dx,al			;set extra head option if any
 00F7  8B 46 10				mov	ax,[bp+bp_ax]		;get # of sectors to read
 00FA  80 FC 05				cmp	ah,5			;check for format command
 00FD  75 04				jnz	parms_1			;no, then leave al alone
 00FF  26: 8A 47 0E		 	mov	al,es:[bx+14]		;yes, then get max sector number
 0103				parms_1:
 0103  A2 0001 E			mov	wd_cmd_file+1,al	;save sector count
 0106  51				push	cx			;
 0107  80 E1 3F				and	cl,03fh			;get rid of high 2 bits
 010A  88 0E 0002 E			mov	wd_cmd_file+2,cl	;save sector # to read (max = 17)
 010E  88 2E 0003 E			mov	wd_cmd_file+3,ch	;save low byte of cylinder #
 0112  58				pop	ax			;get cx in ax
				;	mov	cl,6			;
 0113  C0 E8 06				shr	al,6			;get 2 high bits of cyl from cl
 0116  A2 0004 E			mov	wd_cmd_file+4,al	;save it
 0119  5A				pop	dx			;
				;	mov	cl,4			;shift drive code 4 bits
 011A  C0 E2 04				shl	dl,4			;
 011D  80 E6 0F				and	dh,0fh			;make sure head # is between 0-15
 0120  0A D6				or	dl,dh			;add them
 0122  80 CA A0				or	dl,0a0h			;set ECC and sector size (512 bytes)
 0125  88 16 0005 E			mov	wd_cmd_file+5,dl	;save it
 0129  26: 8B 47 05			mov	ax,word ptr es:[bx+5]	;get precomp cylinder #
 012D  C1 E8 02				shr	ax,2			;divide by 4
				;	shr	ax,1			;
 0130  A2 0000 E			mov	wd_cmd_file,al		;save it
 0133  8B 46 10				mov	ax,[bp+bp_ax]		;restore few registers		
 0136  50				push	ax
 0137  86 C4				xchg	al,ah
 0139  B4 00				mov	ah,0
 013B  8B F0				mov	si,ax
 013D  2E: 8A 84 0662 R			mov	al,cs:[si+offset wd_cmd_tbl]
 0142  A2 0006 E			mov	wd_cmd_file+6,al
 0145  58				pop	ax
 0146  8B 4E 0C				mov	cx,[bp+bp_cx]		;
 0149  8B 56 0A				mov	dx,[bp+bp_dx]		;leave ES and BX alone
 014C  81 E2 0F01			and	dx,0f01h		;drive code must be 0 or 1 and head
 0150  C3				ret				;and return
 0151				set_cmd_parms	endp
				
				
				;
				;	Get parameter table address for the drive code in dl
				;	ES:BX point to the address
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-8
Winchester Disk Driver  (INT 13H)                           

				;
				
 0151				get_parm_vec	proc	near
 0151  50				push	ax			;
 0152  1E				push	ds			;
 0153  B8 0000				mov	ax,0			;
 0156  8E D8				mov	ds,ax			;
 0158  C4 1E 0000 E			les	bx,wd0_parm_vec		;assume drive code is 0
 015C  F6 C2 01				test	dl,1			;make sure
 015F  74 04				jz	parm_vec_rtn		;yes we are sure
 0161  C4 1E 0000 E			les	bx,wd1_parm_vec		;no drive code is 1	12/27/84
 0165				parm_vec_rtn:
 0165  1F				pop	ds			;
 0166  58				pop	ax			;changed  rlm   12/27/84
 0167  C3				ret				;
 0168				get_parm_vec	endp			;
				
				
				;get fixed disk parameter table
				;input	AH - disk type in low nibble (0-15)
				;	AL - extended drive type addr. in CMOS
				;	DS:SI - interrupt vector addr. of parameter table
				;output	if CY = 0, fixed disk type is valid
				;	if CY = 1, invalid fixed disk type
				
 0168				get_tbl_addr	proc	near
 0168  80 FC 00				cmp	ah,0			;type 0?
 016B  74 27				je	gta_err			;drive not present
 016D  80 FC 0F				cmp	ah,0fh			;type 15?
 0170  75 0D				jne	gta_1			;no, use this type byte
 0172  E8 0000 E			call	read_cmos		;get extended type
 0175  80 FC 00				cmp	ah,0			;type 0?
 0178  74 1A				je	gta_err			;invalid type
 017A  80 FC 30				cmp	ah,48			;type 48 or above?
 017D  73 15				jae	gta_err			;invalid type
 017F				gta_1:
 017F  FE CC				dec	ah			;table start from type 1
 0181  B0 00				mov	al,0
 0183  86 C4				xchg	al,ah
 0185  C1 E0 04				shl	ax,4			;16 bytes each
 0188  05 0000 E			add	ax,offset wd_config_tbl	;add base table addr.
 018B  89 04				mov	word ptr [si],ax	;offset of int vector
 018D  8C 4C 02				mov	word ptr [si+2],cs	;segment of int vector
 0190  FE C5				inc	ch			;increment # of fixed disk
 0192  F8				clc				;no error
 0193  C3				ret
				public gta_err
 0194				gta_err:
 0194  F9				stc				;invalid drive type
 0195  C3				ret
 0196				get_tbl_addr	endp
				
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-9
Winchester Disk Driver  (INT 13H)                           

				page
				
				;	|----------------------------------------------------------|
				;	|	Start of Main Hard Disk Driver code.               |
				;	|	This is the entry point  for INT 13H               |
				;	|----------------------------------------------------------|
				
 0197					org	197h
				
 0197				wd_drv	proc	far
					assume ds:nothing, es:nothing
 0197  80 FA 01				cmp	dl,1			;check for floppy or hard disk
 019A  77 05				ja	wd_drv1			;hard disk
 019C  CD 40				int	40h			;no diskette driver
 019E				wd_quick_rtn:
 019E  CA 0002				ret	2			;quick return
 01A1				wd_drv1:
					assume	ds:dataa
 01A1  FB				sti				;enable interrupts again
 01A2  80 FC 00				cmp	ah,0			;do we need to reset the disk
 01A5  75 0E				jne	wd_drv2			;no
 01A7  52				push	dx			;save drive code
 01A8  80 E2 01				and	dl,1			;make sure drive code is correct
 01AB  CD 40				int	40h			;
 01AD  5A				pop	dx			;get drive code back
 01AE  B4 00				mov	ah,0			;ignore status from int40
 01B0  80 FA 81				cmp	dl,81h			;
 01B3  77 E9				ja	wd_quick_rtn		;illegal drive code for reset
				
				
				;	check for drive code
				
 01B5				wd_drv2:
 01B5  50				push	ax			;save registers
 01B6  E8 0000 E			call	save_all		;
 01B9  E8 01E0 R			call	branch			;go execute the command
 01BC  E8 0000 E			call	set_data		;set data segment
 01BF  80 3E 0000 E FF			cmp	disk_stat_1,0ffh	;special error code from DASD_type Fn
 01C4  75 08				jne	wd_drv3			;no
 01C6  C6 06 0000 E 00			mov	disk_stat_1,0		;yes,then change it to 0
 01CB  F9				stc				;set carry
 01CC  EB 0B				jmp	short wd_drv4		;
 01CE				wd_drv3:
 01CE  8A 26 0000 E			mov	ah,disk_stat_1		;get status of the operation
 01D2  89 46 10				mov	[bp+bp_ax],ax		;save it to be returned to user
 01D5  80 FC 01				cmp	ah,1			;set carry or clear carry
 01D8  F5				cmc				;
 01D9				wd_drv4:
 01D9  E8 0000 E			call	restore_all		;restore register
 01DC  58				pop	ax			;and ax
 01DD  CA 0002				ret	2			;return without flags
 01E0				wd_drv	endp
				
				
				;
				;	this routine will execute the command and return to user
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-10
Winchester Disk Driver  (INT 13H)                           

				;
				
 01E0				branch	proc	near
				
 01E0  80 FC 01				cmp	ah,1			;check for command code of 0 or 1
 01E3  76 0A				jbe	wd_drv5			;if equal then do not check DL
 01E5  80 E2 01				and	dl,1			;get the drive code  0 or 1
 01E8  A0 0000 E			mov	al,hf_num		;how many drives are connected
 01EB  3A D0				cmp	dl,al			;
 01ED  73 1B				jae	wd_unused_cmd		;bad command,return
				
				
				;	check for valid command
				
 01EF				wd_drv5:
 01EF  8B 46 10				mov	ax,[bp+bp_ax]		;get ax back
 01F2  80 FC 16 90			cmp	ah,max_cmd		;valid command
 01F6  73 12				jae	wd_unused_cmd		;
 01F8  E8 00DE R			call	set_cmd_parms		;go setup parameters 
 01FB  50				push	ax			;# must be from 0 - 15
 01FC  86 C4				xchg	al,ah			;
 01FE  B4 00				mov	ah,0			;
 0200  D1 E0				shl	ax,1			;setup ax for jump
 0202  8B F0				mov	si,ax			;
 0204  58				pop	ax			;restore ax
 0205  2E: FF A4 0636 R			jmp	word ptr cs:[si+offset wd_func_tbl]
				
				
 020A				wd_unused_cmd:
 020A  C6 06 0000 E 01			mov	disk_stat_1,1		;
 020F  B0 00				mov	al,0			;
 0211  C3				ret				;
				
 0212				branch	endp				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-11
Winchester Disk Driver  (INT 13H)                           

				page
				
				
				
				;
				;	Reset the disk system   AH = 0
				;
				
 0212				wd_reset_cmd	proc	near
 0212  FA				cli				;clear interrupts
 0213  E8 062F R			call	Init_Int2		;go initialize second 8259
 0216  FB				sti				;and turn on the interrupts
 0217  B0 04				mov	al,4			;issue a reset to disk controller
 0219  BA 03F6				mov	dx,03F6h		;
 021C  EE				out	dx,al			;
 021D  53				push	bx
 021E  B3 03				mov	bl,3			;give some time to controller to reset
 0220				reset_cmd1:
 0220  E8 0000 E			call	delay			;
 0223  FE CB				dec	bl
 0225  75 F9				jnz	reset_cmd1		;
 0227  5B				pop	bx			;
 0228  A0 0000 E			mov	al,ctrl_byte		;
 022B  24 0F				and	al,0fh			;turn off reset
 022D  EE				out	dx,al			;
 022E  53				push	bx
 022F  E8 0456 R			call	chk_4_ready		;wait for controller to be ready
 0232  5B				pop	bx			;
 0233  75 24				jnz	reset_cmd_err		;if error jump
 0235  BA 01F1				mov	dx,01F1h		;get reset status
 0238  EC				in	al,dx
 0239  3C 01				cmp	al,1			;
 023B  75 1C				jnz	reset_cmd_err		;
				
				;	reset and recalibrate drives
				
 023D  53				push	bx
 023E  8A 1E 0000 E			mov	bl,hf_num		;get # of physical drives connected
 0242  B2 FF				mov	dl,0ffh			;
 0244				reset_cmd2:
 0244  FE C2				inc	dl
				
				;save the # of fixed disk & drive # - V2.56
				
 0246  52				push	dx			;save drive #
 0247  53				push	bx			;save # of fixed disk 
 0248  E8 025F R			call	issue_reset		;
 024B  5B				pop	bx			;restore # of fixed disk
 024C  5A				pop	dx			;restore drive #
 024D  FE CB				dec	bl			;
 024F  75 F3				jnz	reset_cmd2		;do second drive
 0251  5B				pop	bx			;
 0252  C6 06 0000 E 00			mov	disk_stat_1,0		;
 0257  EB 05				jmp	short reset_cmd4	;03/11/85
 0259				reset_cmd_err:
 0259  C6 06 0000 E 05			mov	disk_stat_1,5		;controller bad
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-12
Winchester Disk Driver  (INT 13H)                           

 025E				reset_cmd4:
 025E  C3				ret
				
 025F				wd_reset_cmd	endp
				
				
 025F				issue_reset	proc	near
				
 025F  80 FA 00				cmp	dl,0			;
 0262  75 07				jnz	issue_reset1		;
				;clear drive code for unit 0 - V2.56
 0264  80 26 0005 E EF			and	wd_cmd_file+5,0efh	;clear drive code for unit 0
 0269  EB 05				jmp	short issue_reset2	;
				
 026B				issue_reset1:
 026B  80 0E 0005 E 10			or	wd_cmd_file+5,10h	;or drive code for unit 1
 0270				issue_reset2:
 0270  C6 06 0006 E 91			mov	wd_cmd_file+6,wd_set_parms
 0275  E8 0311 R			call	wd_init_drv		;go initialize drive
 0278  C6 06 0006 E 10			mov	wd_cmd_file+6,wd_recal
 027D  E8 0365 R			call	wd_recal_drv		;
 0280  C3				ret				;
 0281				issue_reset	endp
				
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-13
Winchester Disk Driver  (INT 13H)                           

				page
				
				
				;
				;	wd_get_status:	AH = 1
				;			return current disk status and reset it to 0
				;	
				
 0281				wd_get_status	proc	near
 0281  A0 0000 E			mov	al,disk_stat_1		;get current status in al
 0284  C6 06 0000 E 00			mov	disk_stat_1,0		;and reset it to 0
 0289  C3				ret
 028A				wd_get_status	endp
				
				
				
				
				;
				;	wd_read_sec:	Read a sector from the hard disk
				;			AH = 2, DL = drive code, DH = head number
				;			CL = sector # ( 1-17) bits; 6,7 high bits of cyl #
				;			CH = cylinder # ,low 8 bits 
				;			AL = number of sectors to read
				;			ES:BX = transfer address
				
				
 028A				wd_read_sec	proc	near
 028A  50				push	ax			;
 028B  B8 8000				mov	ax,8000h		;
 028E  E8 04FB R			call	check_dma		;go check dma boundary for xfer address
 0291  58				pop	ax			;
 0292  72 1D				jc	abort_wd_cmd		;error, return
 0294  E9 057A R			jmp	In_cmd			;go execute
 0297				wd_read_sec	endp
				
				
				
				
				;
				;	wd_write_sec:	Write a sector to the hard disk
				;			AH = 3
				;			BX,CX,DX & ES same as in Read command
				;
				
 0297				wd_write_sec	proc	near
				
 0297  50				push	ax
 0298  B8 8000				mov	ax,8000h		;check xfer address
 029B  E8 04FB R			call	check_dma		;
 029E  58				pop	ax
 029F  72 10				jc	abort_wd_cmd		;abort if error
 02A1  E9 05BE R			jmp	Out_cmd			;go execute 
 02A4				wd_write_sec	endp
				
				
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-14
Winchester Disk Driver  (INT 13H)                           

				
				
				;	wd_read_long:	AH = 0AH
				;			Rest of the input parameters same as read sec
				;
				
 02A4				wd_read_long	proc	near
 02A4  50				push	ax			;
 02A5  B8 7F04				mov	ax,7f04h		;
 02A8  E8 04FB R			call	check_dma		;check for valid xfer address
 02AB  58				pop	ax
 02AC  72 03				jc	abort_wd_cmd		;abort if error
 02AE  E9 057A R			jmp	In_cmd			;go execute
 02B1				abort_wd_cmd:
 02B1  C3				ret
 02B2				wd_read_long	endp
				
				
				
				
				;
				;	wd_write_long:	AH = 0Bh
				;			Rest of the input parameters same as in Read_sec
				;
				
 02B2				wd_write_long	proc	near
 02B2  50				push	ax
 02B3  B8 7F04				mov	ax,7f04h		;
 02B6  E8 04FB R			call	check_dma		;
 02B9  58				pop	ax
 02BA  72 F5				jc	abort_wd_cmd		;abort if error
 02BC  E9 05BE R			jmp	Out_cmd			;go execute
 02BF				wd_write_long	endp
				
				
				
				;
				;	wd_verify_cmd:	Verify desired sectors
				;			AH = 4
				;
				
 02BF				wd_verify_cmd	proc	near
 02BF  E9 036C R			jmp	execute_cmd		;go execute the command
 02C2				wd_verify_cmd	endp
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-15
Winchester Disk Driver  (INT 13H)                           

				page
				
				
				;
				;	wd_fmt_track:	Format a track
				;			AH = 5
				;			ES:BX points to 512 byte buffer of which only first
				;			34 are valid. (2 bytes/sector for 17 sectors/track)
				;
				
				
 02C2				wd_fmt_track	proc	near
 02C2  E8 060D R			call	fix_xfer_addr		;
 02C5  E9 05BE R			jmp	Out_cmd			;go execute the command
 02C8				wd_fmt_track	endp
				
				
				
				
				
				;
				;	wd_get_parm:	Get disk parameters
				;			AH = 8
				;	Output Registers:	dl = #of physical drives attached to 1st controller
				;				dh = maximum # of heads
				;				ch = maximum # of cylinders (low 8 bits)
				;				cl = sectors/track (bits 0-5),
				;				     & high two bits of max cyl # (bits 6,7)
				;
				
				
 02C8				wd_get_parms	proc	near
 02C8  80 FA 02				cmp	dl,2			;check for valid drive code
 02CB  73 2D				jae	parms_err		;error,return
 02CD  E8 0151 R			call	get_parm_vec		;get parameter vector
 02D0  26: 8B 0F			mov	cx,es:[bx]		;get max # of cylinders
 02D3  49				dec	cx			;adjust to 0 - N number
 02D4  49				dec	cx			;leave one for diagnostic purpose
 02D5  86 CD				xchg	cl,ch			;
 02D7  80 E1 03				and	cl,3			;adjust two high bits of cylinder
 02DA  D0 C9				ror	cl,1			;
 02DC  D0 C9				ror	cl,1			;
 02DE  26: 0A 4F 0E			or	cl,es:[bx][14]		;add sectors per track
 02E2  89 4E 0C				mov	[bp+bp_cx],cx		;save it for return parameters
 02E5  8A 16 0000 E			mov	dl,hf_num		;get # of drive
 02E9  26: 8A 77 02			mov	dh,es:[bx][2]		;get # of heads
 02ED  FE CE				dec	dh			;adjust to # 0 - N
 02EF  89 56 0A				mov	[bp+bp_dx],dx		;save dx for return
 02F2  F8				clc				;clear carry
 02F3  C6 06 0000 E 00			mov	disk_stat_1,0		;set no error on return
 02F8  EB 16				jmp	short get_parms_rtn	;return
 02FA				parms_err:
 02FA  B4 07				mov	ah,wd_init_err		;return error code
 02FC  88 26 0000 E			mov	disk_stat_1,ah		;
 0300  B0 00				mov	al,0			;
 0302  89 46 10				mov	[bp+bp_ax],ax		;return error
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-16
Winchester Disk Driver  (INT 13H)                           

 0305  C7 46 0C 0000			mov	word ptr [bp+bp_cx],0		;
 030A  C7 46 0A 0000			mov	word ptr [bp+bp_dx],0		;
 030F  F9				stc				;set carry
				
 0310				get_parms_rtn:
 0310  C3				ret
 0311				wd_get_parms	endp
					
				;
				;	wd_init_drv:	Initialize drive 
				;			AH = 9, DL = drive code
				;
				
 0311				wd_init_drv	proc	near
				
 0311  E8 0151 R			call	get_parm_vec		;get drive parameters
 0314  51				push	cx			;
 0315  26: 8A 4F 0E			mov	cl,es:[bx][14]		;get maximum sector number
 0319  88 0E 0001 E			mov	wd_cmd_file+1,cl	;store it in command file
 031D  8A 2E 0005 E			mov	ch,wd_cmd_file+5	;get sectors/drive/head register
				
				;clear lower 4 bits for head # - V2.56
				
 0321  80 E5 F0				and	ch,0f0h			;
 0324  26: 8A 4F 02			mov	cl,es:[bx][2]		;get # of heads
 0328  FE C9				dec	cl			;
 032A  0A E9				or	ch,cl			;merge # of heads
 032C  88 2E 0005 E			mov	wd_cmd_file+5,ch	;and save it
 0330  B8 0000				mov	ax,0
 0333  C6 06 0003 E 00			mov	wd_cmd_file+3,0		;reset all flags
 0338  59				pop	cx
 0339  E8 0515 R			call	issue_cmd		;go issue command
 033C  75 0A				jnz	wd_init_cmd_exit	;return
 033E  53				push	bx			;
 033F  E8 0456 R			call	chk_4_ready		;
 0342  5B				pop	bx
 0343  75 03				jnz	wd_init_cmd_exit	;
 0345  E8 04CB R			call	check_status
 0348				wd_init_cmd_exit:
 0348  C3				ret
 0349				wd_init_drv	endp
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-17
Winchester Disk Driver  (INT 13H)                           

				page
				
				;
				;	wd_seek_cmd:	seek to desired cylinder
				;			AH = 0Ch
				;
				
				
 0349				wd_seek_cmd	proc	near
 0349  EB 21 90				jmp	execute_cmd			;
 034C				wd_seek_cmd	endp
				
				
				;
				;	Test disk for ready status: AH = 010h, DL = drive code
				;
				
 034C				wd_rdy_test	proc	near
 034C  53				push	bx
 034D  E8 0456 R			call	chk_4_ready
 0350  5B				pop	bx
 0351  75 11				jnz	wd_rdy_test1
 0353  BA 01F6				mov	dx,1F6h			;
 0356  A0 0005 E			mov	al,wd_cmd_file+5	;go select the drive
 0359  EE				out	dx,al			;
 035A  E8 0491 R			call	check_stat		;go check status
 035D  75 05				jnz	wd_rdy_test1		;
 035F  C6 06 0000 E 00			mov	disk_stat_1,0
 0364				wd_rdy_test1:
 0364  C3				ret
 0365				wd_rdy_test	endp
				
				
				;
				;	wd_recal_drv:	recalibrate desired drive.
				;			AH = 11h, DL = drive code 0,1
				;
				
 0365				wd_recal_drv	proc	near
 0365  E8 036C R			call	execute_cmd_sub		;
 0368  E8 0476 R			call	test_4_results		;
 036B  C3				ret				;
 036C				wd_recal_drv	endp
				
				
				;
				;	Execute_cmd:	Come here via a jump instruction
				;	Execute_cmd_sub:	Come here via call instruction
				;
				
 036C				Execute_cmd	label	near
 036C				Execute_cmd_sub	proc	near
				
 036C  E8 0515 R			call	issue_cmd		;go send command file to the cntrl
 036F  75 14				jnz	exit_exec_cmd		;exit if error
 0371  E8 03F4 R			call	wait_4_intr		;go wait for an interrupt
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-18
Winchester Disk Driver  (INT 13H)                           

 0374  75 0F				jnz	exit_exec_cmd		;exit if error
 0376  E8 04CB R			call	check_status		;
 0379  80 3E 0000 E 40			cmp	disk_stat_1,wd_seek_err	;if seek error,let it go
 037E  75 05				jne	exit_exec_cmd		;if not then leave it alone
 0380  80 26 0000 E 00			and	disk_stat_1,0		;3/11/8+
 0385				exit_exec_cmd:
 0385  C3				ret
 0386				Execute_cmd_sub	endp			
				
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-19
Winchester Disk Driver  (INT 13H)                           

				page
				
				;
				;	wd_cntrl_diag:	Perform controller diagnostics
				;			AH = 14h
				;
				
 0386				wd_cntrl_diag	proc	near
 0386  E8 062F R			call	Init_Int2		;initialize second interrupt controller
 0389  E8 0628 R			call	Init_Int1		;let interrupts pass through 1st 8259
 038C  C6 06 0000 E 00			mov	disk_stat_1,0		;set status to no error
 0391  B0 90				mov	al,wd_diag		;get diagnostic command
 0393  BA 01F7				mov	dx,01F7h		;get port address
 0396  EE				out	dx,al			;
 0397  53				push	bx			;
 0398  E8 0456 R			call	chk_4_ready		;
 039B  5B				pop	bx			;
 039C  75 09				jnz	wd_diag_err		;report an error
 039E  BA 01F1				mov	dx,01F1h		;
 03A1  EC				in	al,dx			;get error register
 03A2  3C 01				cmp	al,1			;any errors
 03A4  75 01				jne	wd_diag_err		;yes,
 03A6  C3				ret
 03A7				wd_diag_err:
 03A7  C6 06 0000 E 20			mov	disk_stat_1,20h 		;set bad controler status
 03AC  C3				ret
 03AD				wd_cntrl_diag	endp
				
				
				;
				;	wd_DASD_type:	return type of disk drive 
				;			AH = 15h,  DL =80 or 81
				;	On return AH = 3 if valid fixed disk or = 0 if invalid
				;		CX,DX contains # of 512 byte sectors ob the disk or = 0
				;
				
 03AD				wd_DASD_type	proc	near
 03AD  A0 0000 E			mov	al,hf_num		;get # of fixed drives connnected
 03B0  3A C2				cmp	al,dl			;are we within the range
 03B2  76 2A				jbe	type_error		;no
 03B4  E8 0151 R			call	get_parm_vec		;
 03B7  26: 8A 47 0E			mov	al,es:[bx][14]		;get # of sectors/track
 03BB  26: 8A 4F 02			mov	cl,es:[bx][2]		;get # of heads
 03BF  F6 E9				imul	cl			;AX = number of sectors/cylinder
 03C1  26: 8B 0F			mov	cx,es:[bx]		;get maximum # of cylinders
 03C4  49				dec	cx			;leave one for diagnostic purpose
 03C5  F7 E9				imul	cx			;(# ofsectors/cyl) X (# of cyl)
 03C7  52				push	dx			;results in DX:AX
 03C8  50				push	ax			;put results in CX:DX
 03C9  8F 46 0A				pop	[bp+bp_dx]		;
 03CC  8F 46 0C				pop	[bp+bp_cx]		;
 03CF  33 C0				xor	ax,ax			;
 03D1  B4 03				mov	ah,03			;
 03D3  89 46 10				mov	[bp+bp_ax],ax		;
 03D6  C6 06 0000 E 00			mov	disk_stat_1,0		;set no error status
 03DB  F8				clc				;clear carry
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-20
Winchester Disk Driver  (INT 13H)                           

 03DC  EB 15				jmp	short DASD_type_rtn	;return
				
 03DE				type_error:
 03DE  C7 46 10 0000			mov	word ptr [bp+bp_ax],0		;return 0 in AX,CX and DX
 03E3  C7 46 0C 0000			mov	word ptr [bp+bp_cx],0
 03E8  C7 46 0A 0000			mov	word ptr [bp+bp_dx],0
 03ED  C6 06 0000 E FF			mov	disk_stat_1,0ffh	;set this unique code to be checked
									;before returning to the user
 03F2  F9				stc				;set carry	
				
 03F3				DASD_type_rtn:
 03F3  C3				ret
 03F4				wd_DASD_type	endp
					
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-21
Winchester Disk Driver  (INT 13H)                           

				page
				
				
				;
				;	Wait_4_intr:	wait here for interrupt to occur. If no interrupt
				;			then report timeout error
				;
				
 03F4				wait_4_intr	proc	near
 03F4  FB				sti				;enable interrupts
 03F5  C6 06 0000 E 00			mov	disk_stat_1,0		;assume no error
 03FA  B4 90				mov	ah,90h			;
 03FC  B0 00				mov	al,0			;serial device
 03FE  CD 15				int	15h			;process some thing else
 0400  72 12				jc	wait_4_intr1		;error if carry set
 0402  B9 0000				mov	cx,0			;start of wait loop
 0405  B0 20				mov	al,op_wait
 0407				wait_1:
 0407  F6 06 0000 E 80			test	hf_int_flg,80h		;has interrupt occured
 040C  75 0D				jnz	wait_4_intr2		;yes,tehn exit from loop
 040E  E2 F7				loop	wait_1
 0410  FE C8				dec	al
 0412  75 F3				jnz	wait_1			;loop again
				
 0414				wait_4_intr1:
 0414  C6 06 0000 E 80			mov	disk_stat_1,80h		;time out error
 0419  EB 05				jmp	short wait_4_intr3	;
				
 041B				wait_4_intr2:
 041B  80 26 0000 E 00			and	hf_int_flg,0		;initialize interrupt flag
				
 0420				wait_4_intr3:
 0420  E8 0476 R			call	test_4_results		;set Z flag
 0423  C3				ret
				
 0424				wait_4_intr	endp
				
				
				
				; delay routines for 5 seconds
				
 0424				wait_5_secs	proc	near
 0424  51				push	cx			;save regs
 0425  53				push	bx
 0426  B3 80				mov	bl,80h			;give a beep   2/26/85 rlm
 0428  E8 0000 E			call	beep
 042B  B3 05				mov	bl,5			;4943 ms = 988.65886 * 5
 042D  B9 0000				mov	cx,0			;988.65886 ms = 15.085737 * 65536
 0430				wait_5_1:
 0430  E8 0000 E			call	fixed_wait		;15.085737 us
 0433  FE CB				dec	bl			;decrement loop count
 0435  75 F9				jnz	wait_5_1		;wait more...
 0437  5B				pop	bx			;restore regs
 0438  59				pop	cx
 0439  C3				ret
 043A				wait_5_secs	endp
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-22
Winchester Disk Driver  (INT 13H)                           

				
				
				;	
				;	wd_intr:	This is a hard disk interrupt service routine
				;
				
 043A				wd_intr	proc	near
				
 043A  50				push	ax			;save registers
 043B  1E				push	ds			;
 043C  E8 0000 E			call	set_data		;
 043F  80 0E 0000 E 80			or	hf_int_flg,80h		;set high bit
 0444  B0 20				mov	al,EOI			;set end of interrupt
 0446  E6 A0				out	int2,al			;
 0448  E8 0000 E			call	delay
 044B  E6 20				out	int1,al			;
 044D  FB				sti				;start interrupts
 044E  B8 9100				mov	ax,9100h		;tell it to user
 0451  CD 15				int	15h			;
 0453  1F				pop	ds
 0454  58				pop	ax			;
 0455  CF				iret				;return from interrupt
 0456				wd_intr	endp
				
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-23
Winchester Disk Driver  (INT 13H)                           

				page
				
				
				;	Check controller for not busy (ready) status
				;	register used ax,bx,cx and dx
				;
				
 0456				chk_4_ready	proc	near
 0456  FB				sti				;make sure interrupts are enabled
 0457  33 C9				xor	cx,cx			;
 0459  88 0E 0000 E			mov	disk_stat_1,cl		;assume no error
 045D  B3 20				mov	bl,op_wait		;operation delay
 045F  BA 01F7				mov	dx,wd_stat_port		;
 0462				chk_1:
 0462  EC				in	al,dx			;read status
 0463  A8 80				test	al,80h			;is it ready
 0465  74 0B				jz	chk_2			;yes
 0467  E2 F9				loop	chk_1			;try again
 0469  FE CB				dec	bl			;
 046B  75 F5				jnz	chk_1			;
 046D  C6 06 0000 E 80			mov	disk_stat_1,time_out	;post error condition
 0472				chk_2:
 0472  E8 0476 R			call	test_4_results		;set flag for results
 0475  C3				ret				;
 0476				chk_4_ready	endp			;
				
				
 0476				test_4_results	proc	near
 0476  80 3E 0000 E 00			cmp	disk_stat_1,0		;set Z flag
 047B  C3				ret				;and return
 047C				test_4_results	endp
				
				
				;
				;	Wait_4_DRQ:	routine to wait for data request ready
				;	from controller
				;
				
 047C				Wait_4_DRQ	proc	near
 047C  BA 01F7				mov	dx,wd_stat_port
 047F  B9 0100				mov	cx,drq_wait		;get wait delay constant
 0482  F8				clc				;clear carry
 0483				wait_4_DRQ1:
 0483  EC				in	al,dx			;get status
 0484  A8 08				test	al,8
 0486  75 08				jnz	wait_4_DRQ2		;all done retrun
 0488  E2 F9				loop	wait_4_DRQ1		;wait more
 048A  C6 06 0000 E 80			mov	disk_stat_1,time_out	;set timeout error
 048F  F5				cmc				;set carry
 0490				wait_4_DRQ2:
 0490  C3				ret				;
 0491				Wait_4_DRQ	endp		
				
				
				
				;	Check_stat:	routine to check controller's status byte
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-24
Winchester Disk Driver  (INT 13H)                           

				;	and return error code in AH
				
 0491				check_stat	proc	near
 0491  B8 0000				mov	ax,0			;
 0494  BA 01F7				mov	dx,wd_stat_port		;
 0497  EC				in	al,dx			;get disk status
 0498  A2 0000 E			mov	hf_st_reg,al		;save it
 049B  D0 E0				shl	al,1			;
 049D  72 1C				jc	check_stat1		;jump if bit 7 is set (busy bit)
 049F  B4 AA				mov	ah,drv_not_rdy		;set error code for not ready
 04A1  D0 E0				shl	al,1			;
 04A3  73 16				jnc	check_stat1		;jump  if bit 6 is zero (ready bit)
 04A5  B4 CC				mov	ah,cntrl_wrt_flt	;set error code for write fault
 04A7  D0 E0				shl	al,1			;see if bit 5 is set
 04A9  72 10				jc	check_stat1		;jump if write fault
 04AB  B4 40				mov	ah,wd_seek_err		;
 04AD  D0 E0				shl	al,1			;check if bit 4 is zero
 04AF  73 0A				jnc	check_stat1		;jump if seek complete error
 04B1  B4 11				mov	ah,data_valid_err	;set error for ECC
 04B3  D0 E0				shl	al,1			;
 04B5  D0 E0				shl	al,1			;see if bit 2 is set
 04B7  72 02				jc	check_stat1		;
 04B9  B4 00				mov	ah,0			;if non of above,then set it to 0
 04BB				check_stat1:
 04BB  A0 0000 E			mov	al,hf_st_reg		;get the original status back
 04BE  88 26 0000 E			mov	disk_stat_1,ah		;set error code
 04C2  80 FC 11				cmp	ah,11h			;
 04C5  74 03				jz	check_stat2
 04C7  E8 0476 R			call	test_4_results
 04CA				check_stat2:
 04CA  C3				ret				;
 04CB				check_stat	endp			;
				
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-25
Winchester Disk Driver  (INT 13H)                           

				page
				
				;
				;	Check_status:	Routine to check status 
				;
				
				
 04CB				Check_status	proc	near
 04CB  52				push	dx
 04CC  E8 0491 R			call	check_stat		;go read status
 04CF  75 25				jnz	check_status1		;
 04D1  A8 01				test	al,1			;any other errors
 04D3  74 21				jz	check_status1		;no
 04D5  BA 01F1				mov	dx,wd_port+1		;get error register
 04D8  EC				in	al,dx			;
 04D9  A2 0000 E			mov	hf_err_reg,al		;save error register
 04DC  53				push	bx
 04DD  51				push	cx
 04DE  BB 0678 R			mov	bx, offset err_tbl	;get address of the map table
 04E1  B9 0008				mov	cx,8			;check 8 bits
 04E4				wd_map_1:
 04E4  2E: 8A 27			mov	ah,byte ptr cs:[bx]	;assume bit is set
 04E7  D0 E0				shl	al,1			;check it
 04E9  72 05				jc	wd_map_2		;if we are right then return
 04EB  43				inc	bx			;no, check next bit
 04EC  E2 F6				loop	wd_map_1		;
 04EE  B4 E0				mov	ah,0E0h			;make sure we get no error
 04F0				wd_map_2:
 04F0  88 26 0000 E			mov	disk_stat_1,ah		;set disk status
 04F4  59				pop	cx
 04F5  5B				pop	bx
				
 04F6				check_status1:
 04F6  E8 0476 R			call	test_4_results		;set condition code
 04F9  5A				pop	dx			;
 04FA  C3				ret				;
 04FB				check_status	endp
				
				
				
				;
				;	check_dma:	This routine checks if the data transfer does
				;			occur across 64k boundary
				;	AX = 8000h if no ECC is requested or
				;	AX = 7F04h if ECC is requested (long reads & writes)
				;
				
 04FB				check_dma	proc	near
 04FB  50				push	ax			;
 04FC  E8 060D R			call	fix_xfer_addr		;
 04FF  58				pop	ax			;
 0500  3A 26 0001 E			cmp	ah,wd_cmd_file+1	;check # of sectors
 0504  77 07				ja	dma_ok			;if above then ok
 0506  72 06				jb	dma_error		;if below then error
 0508  3A C3				cmp	al,bl			;
 050A  72 02				jb	dma_error		;
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-26
Winchester Disk Driver  (INT 13H)                           

 050C  F8				clc				;
 050D				dma_ok:
 050D  C3				ret				;
 050E				dma_error:
 050E  C6 06 0000 E 09			mov	disk_stat_1,9		;send error code back
 0513  F9				stc				;set carry
 0514  C3				ret				;return
 0515				check_dma	endp
					
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-27
Winchester Disk Driver  (INT 13H)                           

				page
				
				;
				;	Issue_cmd:	This routine send the wd_cmd_file to the controller
				;
				;	Output	AL = status register,  AH = error register
				;
				
				
 0515				Issue_cmd	proc	near
					
 0515  E8 0558 R			call	wait_4_cntrl		;wait till controller is ready
 0518  75 3D				jnz	issue_cmd_rtn		;not ready, error
 051A  C6 06 0000 E 00			mov	hf_int_flg,0		;reset interrupt flag
 051F  C6 06 0000 E 00			mov	disk_stat_1,0		;assume no errors
 0524  E8 062F R			call	Init_Int2		;initialize second 8259
 0527  E8 0628 R			call	Init_Int1		;let the interrupts pass through 1st
 052A  B9 0007				mov	cx,7			;send 7 bytes to controller
 052D  F6 06 0000 E C0			test	ctrl_byte,0c0h		;check for retries allowed
 0532  74 13				jz	Issue_cmd3		;no
 0534  8A 1E 0006 E			mov	bl,wd_cmd_file+6	;get opcode
 0538  80 FB 20				cmp	bl,20h			;check for read,write and verify
 053B  72 0A				jb	Issue_cmd3		;commands
 053D  80 FB 42				cmp	bl,42h			;add ECC mode
 0540  77 05				ja	Issue_cmd3		;
 0542  80 0E 0006 E 01			or	wd_cmd_file+6,retries	;set retry bit
				
 0547				Issue_cmd3:
 0547  BF 0000 E			mov	di,offset wd_cmd_file
 054A  BA 01F1				mov	dx,1F1h			;get port address
				
 054D				Issue_cmd4:
 054D  8A 05				mov	al,[di]			;get parameter
 054F  EE				out	dx,al			;send it
 0550  47				inc	di
 0551  42				inc	dx			;
 0552  E2 F9				loop	Issue_cmd4		;send 7 bytes
 0554  E8 0476 R			call	test_4_results
 0557				Issue_cmd_rtn:
 0557  C3				ret				;
 0558				 Issue_cmd	endp
				
				
				;
				;	Routine to check for controller ready
				;
				
 0558				wait_4_cntrl	proc	near
				
 0558  53				push	bx			;save it
 0559  57				push	di			;
 055A  B9 0600				mov	cx,rdy_wait		;
				
 055D				wait_4_1:
 055D  51				push	cx			;
 055E  E8 034C R			call	wd_rdy_test		;
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-28
Winchester Disk Driver  (INT 13H)                           

 0561  59				pop	cx			;
 0562  74 10				jz	wait_rtn		;ready, exit from loop
 0564  80 3E 0000 E 80			cmp	disk_stat_1,time_out	;was it time out
 0569  75 07				jnz	Issue_cmd5		;no, then retry
 056B  C6 06 0000 E 20			mov	disk_stat_1,20h		;if timeout, then controller is bad
 0570  EB 02				jmp	short wait_rtn		;
				
 0572				Issue_cmd5:
 0572  E2 E9				loop	wait_4_1		;
				
 0574				wait_rtn:
 0574  5F				pop	di			;restore registers
 0575  5B				pop	bx			;
 0576  E8 0476 R			call	test_4_results		;set results flag
 0579  C3				ret				;and return
 057A				wait_4_cntrl	endp
				
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-29
Winchester Disk Driver  (INT 13H)                           

				page
				
				;
				;	In_cmd:	Routine to read data from the disk
				;
				
 057A				In_cmd	proc	near
					
 057A  E8 0515 R			call	issue_cmd 		;go send command file to the controller
 057D  75 25				jnz	In_cmd_exit		;exit if error
 057F  E8 03F4 R			call	wait_4_intr		;wait for interrupt completion
 0582  75 20				jnz	In_cmd_exit		;return if error
 0584  8B FB				mov	di,bx			;setup di for block input
				
 0586				In_cmd_1:
 0586  B9 0100				mov	cx,256			;setup cx for word count
 0589  BA 01F0				mov	dx,wd_port		;data port address
				
				;disable interrupt during repeated input - V2.56
				
 058C  FA				cli				;clear interrupt during input
 058D  FC				cld				;set direction
 058E  F3 6D				db	0F3h,06Dh		;hard code rep_insw instruction
 0590  FB				sti				;interrupt back on
 0591  E8 05A5 R			call	get_ecc_bytes		;go get ecc bytes if applicable
 0594  E8 04CB R			call	check_status		;go read status
 0597  75 0B				jnz	In_cmd_exit		;error
				;	test	hf_st_reg,80h		;do we need to read more data
				
				;check command buffer to see if more xfer needed - V2.56
				
 0599  FE 0E 0001 E			dec	byte ptr wd_cmd_file+1
 059D  74 05				jz	In_cmd_exit		;no
 059F  E8 03F4 R			call	wait_4_intr		;wait for interrupt
 05A2  74 E2				jz	short In_cmd_1		;go read more
				
 05A4				In_cmd_exit:
 05A4  C3				ret				;
 05A5				In_cmd	endp
				
				
				;
				;	get_ecc_bytes:	Routine to read 4 bytes of ECC 
				;
				
 05A5				get_ecc_bytes	proc	near
					
 05A5  F6 06 0006 E 02			test	wd_cmd_file+6,ecc_mode	;is ECC requested
 05AA  74 0F				jz	get_ecc_2		;no then exit
 05AC  E8 047C R			call	wait_4_drq		;wait for data request
 05AF  72 0B				jc	get_ecc_exit		;error
 05B1  BA 01F0				mov	dx,wd_port		;
 05B4  B9 0004				mov	cx,4			;
 05B7				get_ecc_3:
 05B7  FC				cld				;	
 05B8  6C				db	06Ch			;read 4 bytes	rlm 04/2/85
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-30
Winchester Disk Driver  (INT 13H)                           

 05B9  E2 FC				loop	get_ecc_3		;hard coded INSB instruction
 05BB				get_ecc_2:
 05BB  C3				ret				;
 05BC				get_ecc_exit:
 05BC  59				pop	cx			;get rid of return address
 05BD  C3				ret				;return 1 level high
 05BE				get_ecc_bytes	endp
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-31
Winchester Disk Driver  (INT 13H)                           

				page
				
				;	
				;	Out_cmd:	Routine to send data to the controller
				;
				
 05BE				Out_cmd		proc	near
				
 05BE  E8 0515 R			call	issue_cmd		;go send command file to controller
 05C1  75 2A				jnz	out_cmd_exit		;error? exit
 05C3  E8 047C R			call	wait_4_drq		;
 05C6  72 25				jc	out_cmd_exit		;
 05C8  8B F3				mov	si,bx			;source address
 05CA				out_cmd_1:
 05CA  B9 0100				mov	cx,256			;send 256 words
 05CD  BA 01F0				mov	dx,wd_port		;
 05D0  1E				push	ds			;save ds
 05D1  8C C0				mov	ax,es			;
 05D3  8E D8				mov	ds,ax			;set ds to new value
 05D5  FC				cld				;set direction
 05D6  F3 6F				db	0F3h,06Fh		;hard code rep_outsw instruction
 05D8  1F				pop	ds			;restore ds
 05D9  E8 05EE R			call	send_ecc_bytes		;send ECC bytes if required
 05DC  E8 03F4 R			call	wait_4_intr		;wait till command is done
 05DF  75 0C				jnz	out_cmd_exit		;error
 05E1  E8 04CB R			call	check_status
 05E4  75 07				jnz	out_cmd_exit		;
 05E6  F6 06 0000 E 08			test	hf_st_reg,8		;need to send more data
 05EB  75 DD				jnz	short out_cmd_1
 05ED				out_cmd_exit:
 05ED  C3				ret
				
 05EE				out_cmd	endp
				
				
				
				;	send_ecc_bytes:
				
 05EE				send_ecc_bytes	proc	near
					
 05EE  F6 06 0006 E 02			test	wd_cmd_file+6,ecc_mode	;do we require ECC
 05F3  74 15				jz	send_ecc2		;no then exit
 05F5  E8 047C R			call	wait_4_drq		;
 05F8  72 11				jc	send_ecc_exit		;error
 05FA  1E				push	ds			;save ds register
 05FB  8C C0				mov	ax,es			;put es register in ds  01/02/85
 05FD  8E D8				mov	ds,ax			;
 05FF  BA 01F0				mov	dx,wd_port
 0602  B9 0004				mov	cx,4			;
 0605				send_ecc_3:
 0605  FC				cld				;
 0606  6E				db	06Eh			;output 4 bytes	rlm  04/02/85
 0607  E2 FC				loop	send_ecc_3		;hard coded OUTSB instruction
 0609  1F				pop	ds			;restore ds
 060A				send_ecc2:
 060A  C3				ret				;
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-32
Winchester Disk Driver  (INT 13H)                           

				
 060B				send_ecc_exit:
 060B  59				pop	cx			;get rid of return address
 060C  C3				ret				;and go to 1 level high
 060D				send_ecc_bytes	endp
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-33
Winchester Disk Driver  (INT 13H)                           

				page
				
				;
				;	fix data transfer address
				;
				
 060D				fix_xfer_addr	proc	near
 060D  8B 5E 0E				mov	bx,[bp+bp_bx]		;get original values
 0610  8E 46 06				mov	es,[bp+bp_es]		;
 0613  51				push	cx			;
 0614  B1 04				mov	cl,4			;
 0616  D3 EB				shr	bx,cl			;use only high 3 nibbles
 0618  59				pop	cx
 0619  50				push	ax			;
 061A  8C C0				mov	ax,es			;
 061C  03 C3				add	ax,bx			;add then together
 061E  8E C0				mov	es,ax			;back into es
 0620  58				pop	ax
 0621  8B 5E 0E				mov	bx,[bp+bp_bx]		;get original bx
 0624  83 E3 0F				and	bx,0fh			;use only lower nibble now
 0627  C3				ret				;
 0628				fix_xfer_addr	endp			;
				
				
				;
				;	Init_Int1:  Initialize Interrupt controller # 1
				;
				
 0628				Init_Int1	proc	near
 0628  E4 21				in	al,Int1+1
 062A  24 FB				and	al,0fbh			;let interrupts pass through the second
 062C  E6 21				out	Int1+1,al		;8259 chip
 062E  C3				ret
 062F				Init_Int1	endp
				
				
				
				;
				;	Init_Int2:  Initialize Interrupt Controller # 2
				;
				
 062F				Init_Int2	proc	near
 062F  E4 A1				in	al,Int2+1		;turn on the interrupts for hard
 0631  24 BF				and	al,0bfh			;disk
 0633  E6 A1				out	Int2+1,al		;
 0635  C3				ret
 0636				Init_Int2	endp
				
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-34
Winchester Disk Driver  (INT 13H)                           

				page
				
				;	define command branch table for hard disk
				
 0636				wd_func_tbl	label	word
 0636  0212 R				dw	wd_reset_cmd		;ah = 0	 reset the disk system
 0638  0281 R				dw	wd_get_status		;ah = 1  get current status
 063A  028A R				dw	wd_read_sec		;ah = 2  read a sector into memory
 063C  0297 R				dw	wd_write_sec		;ah = 3	 write a sector to the disk
 063E  02BF R				dw	wd_verify_cmd		;ah = 4  verify disk data
 0640  02C2 R				dw	wd_fmt_track		;ah = 5  format hard disk track
 0642  020A R				dw	wd_unused_cmd		;ah = 6  unused command code
 0644  020A R				dw	wd_unused_cmd		;ah = 7  unused command code
 0646  02C8 R				dw	wd_get_parms		;ah = 8  get parameters
 0648  0311 R				dw	wd_init_drv		;ah = 9  initialize drives
 064A  02A4 R				dw	wd_read_long		;ah = A  read long
 064C  02B2 R				dw	wd_write_long		;ah = B  write long
 064E  0349 R				dw	wd_seek_cmd		;ah = C  seek to desired track
 0650  0212 R				dw	wd_reset_cmd		;ah = D	 same as ah = 0
 0652  020A R				dw	wd_unused_cmd		;ah = E  unused command code
 0654  020A R				dw	wd_unused_cmd		;ah = F  unused command code
 0656  034C R				dw	wd_rdy_test		;ah = 10 test for drive ready
 0658  0365 R				dw	wd_recal_drv		;ah = 11 recalibrate drive
 065A  020A R				dw	wd_unused_cmd		;ah = 12 unused command code
 065C  020A R				dw	wd_unused_cmd		;ah = 13 unused command code
 065E  0386 R				dw	wd_cntrl_diag		;ah = 14 controller internal diag
 0660  03AD R				dw	wd_dasd_type		;ah = 15 read DASD type
 = 0016				max_cmd	equ	($ - wd_func_tbl)/2	;maximum # of valid command
				
				
				
				;	define command table
				
 0662				wd_cmd_tbl	label	byte
				
 0662  00				db	0			;ah = 0 Reset 
 0663  00				db	0			;ah = 1 Read status
 0664  20				db	wd_read			;ah = 2 read
 0665  30				db	wd_write		;ah = 3 write
 0666  40				db	wd_verify		;ah = 4 verify
 0667  50				db	wd_fmt_trk		;ah = 5 format track
 0668  00				db	0			;ah = 6
 0669  00				db	0			;ah = 7
 066A  00				db	0			;ah = 8
 066B  91				db	wd_set_parms		;ah = 9 set drive parameters
 066C  22				db	wd_read+ecc_mode	;ah = 0A read long
 066D  32				db	wd_write+ecc_mode	;ah = 0B write long
 066E  70				db	wd_seek			;ah = 0C seek
 066F  00				db	0			;ah = 0D alternate disk reset
 0670  00				db	0			;ah = 0E
 0671  00				db	0			;ah = 0F
 0672  00				db	0			;ah = 10 test drive ready
 0673  10				db	wd_recal		;ah = 11 drive recalibrate
 0674  00				db	0			;ah = 12
 0675  00				db	0			;ah = 13
 0676  90				db	wd_diag			;ah = 14 controller diagnostics
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-35
Winchester Disk Driver  (INT 13H)                           

 0677  00				db	0			;ah = 15
				
				
 0678  0A			err_tbl	db	0ah			;bad sector error
 0679  10				db	10h			;ECC error
 067A  BB				db	0BBh			;don't know error
 067B  04				db	04			;bad record error
 067C  BB				db	0bbh			;don't know error
 067D  01				db	1			;bad command error
 067E  40				db	40h			;seek error
 067F  02				db	02			;bad address mark error
 0680  E0				db	0e0h			;no error
				
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-36
Winchester Disk Driver  (INT 13H)                           

				page  
				
				
 0681  31 37 38 30 2D 44	wd_err_msg0	db 	'1780-Disk 0 failure',cr,lf,-1
       69 73 6B 20 30 20	
       66 61 69 6C 75 72	
       65 0D 0A FF		
				
 0697  31 37 38 31 2D 44	wd_err_msg1 	db 	"1781-Disk 1 failure", CR, LF, -1
       69 73 6B 20 31 20	
       66 61 69 6C 75 72	
       65 0D 0A FF		
				
 06AD  31 37 38 32 2D 44	wd_err_msg2 	db 	"1782-Disk controller failure", CR, LF, -1
       69 73 6B 20 63 6F	
       6E 74 72 6F 6C 6C	
       65 72 20 66 61 69	
       6C 75 72 65 0D 0A	
       FF			
				
 06CC  31 37 39 30 2D 44	wd_err_msg3 	db 	"1790-Disk 0 error", CR, LF, -1
       69 73 6B 20 30 20	
       65 72 72 6F 72 0D	
       0A FF			
				
 06E0  31 37 39 31 2D 44	wd_err_msg4 	db 	"1791-Disk 1 error", CR, LF, -1
       69 73 6B 20 31 20	
       65 72 72 6F 72 0D	
       0A FF			
				
				
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Page     1-37
Winchester Disk Driver  (INT 13H)                           

				page
				
				;************************Please take note of this *************************
				;
				;	The size of this module must be 06EEh
				;
				
 06F4  000F[			empty_space	db	15 dup (0)
	   00			
			 ]	
				
				
 0703				end_of_int13	label	byte
				
					if	(end_of_int13 - begin)
				
				;	error
				
					endif
				
 0703				eproma	ends
				
				
					end
Open procedures:
WD_SETUP . . . . . . . . . . . .  	
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

DATAA  . . . . . . . . . . . . .  	0000	AT	0040	
EPROMA . . . . . . . . . . . . .  	0703	BYTE	PUBLIC	
ZERO . . . . . . . . . . . . . .  	0000	AT	0000	

Symbols:            

                N a m e         	Type	 Value	 Attr

ABORT_WD_CMD . . . . . . . . . .  	L NEAR	02B1	EPROMA
ADDR_MARK_ERR  . . . . . . . . .  	NUMBER	0002	
A_TEASE  . . . . . . . . . . . .  	NUMBER	00FC	

BAD_ADDR_ERR . . . . . . . . . .  	NUMBER	0002	
BAD_CMD_ERR  . . . . . . . . . .  	NUMBER	0001	
BAD_REC_ERR  . . . . . . . . . .  	NUMBER	0004	
BAD_SEC_ERR  . . . . . . . . . .  	NUMBER	000A	
BAD_TRK_ERR  . . . . . . . . . .  	NUMBER	000B	
BASE_HIGH_RAM  . . . . . . . . .  	NUMBER	0016	
BASE_LOW_RAM . . . . . . . . . .  	NUMBER	0015	
BATTERY  . . . . . . . . . . . .  	NUMBER	000D	
BEEP . . . . . . . . . . . . . .  	L NEAR	0000		External
BEGIN  . . . . . . . . . . . . .  	NEAR	06EE	EPROMA
BP_AX  . . . . . . . . . . . . .  	NUMBER	0010	
BP_BP  . . . . . . . . . . . . .  	NUMBER	0000	
BP_BX  . . . . . . . . . . . . .  	NUMBER	000E	
BP_CX  . . . . . . . . . . . . .  	NUMBER	000C	
BP_DI  . . . . . . . . . . . . .  	NUMBER	0002	
BP_DS  . . . . . . . . . . . . .  	NUMBER	0008	
BP_DX  . . . . . . . . . . . . .  	NUMBER	000A	
BP_ES  . . . . . . . . . . . . .  	NUMBER	0006	
BP_SI  . . . . . . . . . . . . .  	NUMBER	0004	
BRANCH . . . . . . . . . . . . .  	N PROC	01E0	EPROMA	Length = 0032
BS . . . . . . . . . . . . . . .  	NUMBER	0008	
BUFFER_MODE  . . . . . . . . . .  	NUMBER	0008	
BUS_AT . . . . . . . . . . . . .  	NUMBER	00FD	
BW_EQU . . . . . . . . . . . . .  	NUMBER	03B0	

CENTURY  . . . . . . . . . . . .  	NUMBER	0032	
CHECKSUM_ADR . . . . . . . . . .  	NUMBER	002E	
CHECK_DMA  . . . . . . . . . . .  	N PROC	04FB	EPROMA	Length = 001A
CHECK_STAT . . . . . . . . . . .  	N PROC	0491	EPROMA	Length = 003A
CHECK_STAT1  . . . . . . . . . .  	L NEAR	04BB	EPROMA
CHECK_STAT2  . . . . . . . . . .  	L NEAR	04CA	EPROMA
CHECK_STATUS . . . . . . . . . .  	N PROC	04CB	EPROMA	Length = 0030
CHECK_STATUS1  . . . . . . . . .  	L NEAR	04F6	EPROMA
CHK_1  . . . . . . . . . . . . .  	L NEAR	0462	EPROMA
CHK_2  . . . . . . . . . . . . .  	L NEAR	0472	EPROMA
CHK_4_READY  . . . . . . . . . .  	N PROC	0456	EPROMA	Length = 0020
CHK_CMOS_GOOD  . . . . . . . . .  	L NEAR	0000		External
CMD_ERR  . . . . . . . . . . . .  	NUMBER	0001	
CMOS . . . . . . . . . . . . . .  	NUMBER	0070	
CMOS_DISKETTE_TYPE . . . . . . .  	NUMBER	0010	
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Symbols-2


CMOS_EQUIP . . . . . . . . . . .  	NUMBER	0014	
CMOS_INF_FLAG  . . . . . . . . .  	NUMBER	0033	
CMOS_SIZE  . . . . . . . . . . .  	NUMBER	001E	
CMOS_SP_FLAG . . . . . . . . . .  	NUMBER	003F	
CMOS_START . . . . . . . . . . .  	NUMBER	0010	
CMOS_STATUS_1  . . . . . . . . .  	NUMBER	000E	
CNTRL_ERR  . . . . . . . . . . .  	NUMBER	00BB	
CNTRL_WRT_FLT  . . . . . . . . .  	NUMBER	00CC	
COLOR_MONITOR  . . . . . . . . .  	NUMBER	03D0	
COM1 . . . . . . . . . . . . . .  	NUMBER	03F8	
COM2 . . . . . . . . . . . . . .  	NUMBER	02F8	
COPROCESSOR  . . . . . . . . . .  	NUMBER	00F8	
COPROCESSOR_CLR  . . . . . . . .  	NUMBER	00F0	
CR . . . . . . . . . . . . . . .  	NUMBER	000D	
CRC_ERR  . . . . . . . . . . . .  	NUMBER	0010	
CTRL_BYTE  . . . . . . . . . . .  	V BYTE	0000		External

DASD_TYPE_RTN  . . . . . . . . .  	L NEAR	03F3	EPROMA
DATA . . . . . . . . . . . . . .  	NUMBER	0040	
DATA_RATE  . . . . . . . . . . .  	V BYTE	0000		External
DATA_VALID_ERR . . . . . . . . .  	NUMBER	0011	
DATE . . . . . . . . . . . . . .  	NUMBER	0007	
DAY  . . . . . . . . . . . . . .  	NUMBER	0006	
DEFAULT  . . . . . . . . . . . .  	NUMBER	0061	
DELAY  . . . . . . . . . . . . .  	L NEAR	0000		External
DIAG_PORT  . . . . . . . . . . .  	NUMBER	0378	
DISK_STAT_1  . . . . . . . . . .  	V BYTE	0000		External
DISPLAY  . . . . . . . . . . . .  	L NEAR	0000		External
DISP_BFR_SEG . . . . . . . . . .  	NUMBER	B000	
DMA1 . . . . . . . . . . . . . .  	NUMBER	0000	
DMA2 . . . . . . . . . . . . . .  	NUMBER	00C0	
DMA_BNDRY_ERR  . . . . . . . . .  	NUMBER	0009	
DMA_BOUND_ERR  . . . . . . . . .  	NUMBER	0009	
DMA_ERROR  . . . . . . . . . . .  	L NEAR	050E	EPROMA
DMA_OK . . . . . . . . . . . . .  	L NEAR	050D	EPROMA
DMA_OVERRUN  . . . . . . . . . .  	NUMBER	0008	
DMA_PAGE . . . . . . . . . . . .  	NUMBER	0081	
DMA_PAGE_REG . . . . . . . . . .  	NUMBER	0080	
DOR  . . . . . . . . . . . . . .  	NUMBER	03F2	
DOUBLE_RATE  . . . . . . . . . .  	NUMBER	0020	
DRQ_WAIT . . . . . . . . . . . .  	NUMBER	0100	
DRV_0_CYL  . . . . . . . . . . .  	V BYTE	0000		External
DRV_0_MEDIA  . . . . . . . . . .  	V BYTE	0000		External
DRV_0_OP . . . . . . . . . . . .  	V BYTE	0000		External
DRV_1_CYL  . . . . . . . . . . .  	V BYTE	0000		External
DRV_1_MEDIA  . . . . . . . . . .  	V BYTE	0000		External
DRV_1_OP . . . . . . . . . . . .  	V BYTE	0000		External
DRV_NOT_RDY  . . . . . . . . . .  	NUMBER	00AA	
DSK_OPN_STATUS . . . . . . . . .  	V BYTE	0000		External
DSK_PARM_PTR . . . . . . . . . .  	V DWORD	0000		External

ECC_ERR  . . . . . . . . . . . .  	NUMBER	0010	
ECC_MODE . . . . . . . . . . . .  	NUMBER	0002	
EMPTY_SPACE  . . . . . . . . . .  	L BYTE	06F4	EPROMA	Length = 000F
ENBKB  . . . . . . . . . . . . .  	NUMBER	0080	
END_OF_INT13 . . . . . . . . . .  	L BYTE	0703	EPROMA
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Symbols-3


EOI  . . . . . . . . . . . . . .  	NUMBER	0020	
EPROM_ADDR_HIGH  . . . . . . . .  	NUMBER	E000	
EPROM_ADDR_LOW . . . . . . . . .  	NUMBER	0000	
EPROM_SIZE . . . . . . . . . . .  	NUMBER	1000	
ERR_REG_BIT0 . . . . . . . . . .  	NUMBER	0001	
ERR_REG_BIT1 . . . . . . . . . .  	NUMBER	0002	
ERR_REG_BIT2 . . . . . . . . . .  	NUMBER	0004	
ERR_REG_BIT4 . . . . . . . . . .  	NUMBER	0010	
ERR_REG_BIT6 . . . . . . . . . .  	NUMBER	0040	
ERR_REG_BIT7 . . . . . . . . . .  	NUMBER	0080	
ERR_TBL  . . . . . . . . . . . .  	L BYTE	0678	EPROMA
ESTABLISHED  . . . . . . . . . .  	NUMBER	0010	
EXECUTE_CMD  . . . . . . . . . .  	L NEAR	036C	EPROMA
EXECUTE_CMD_SUB  . . . . . . . .  	N PROC	036C	EPROMA	Length = 001A
EXIT_EXEC_CMD  . . . . . . . . .  	L NEAR	0385	EPROMA

FCR  . . . . . . . . . . . . . .  	NUMBER	03F7	
FDC  . . . . . . . . . . . . . .  	NUMBER	03F4	
FDC_ERR  . . . . . . . . . . . .  	NUMBER	0020	
FDC_RESULTS  . . . . . . . . . .  	V BYTE	0000		External
FDISK_TYPE . . . . . . . . . . .  	NUMBER	0010	
FE3010 . . . . . . . . . . . . .  	NUMBER	0001	
FIXED_WAIT . . . . . . . . . . .  	L NEAR	0000		External
FIX_XFER_ADDR  . . . . . . . . .  	N PROC	060D	EPROMA	Length = 001B
FLOPPY_DSDD  . . . . . . . . . .  	NUMBER	0093	
FLOPPY_HD  . . . . . . . . . . .  	NUMBER	0015	
FLP_DD_DD  . . . . . . . . . . .  	NUMBER	0080	
FLP_DD_HD  . . . . . . . . . . .  	NUMBER	0074	
FLP_TYPE . . . . . . . . . . . .  	NUMBER	0010	

GAME_PORT  . . . . . . . . . . .  	NUMBER	0201	
GET_ECC_2  . . . . . . . . . . .  	L NEAR	05BB	EPROMA
GET_ECC_3  . . . . . . . . . . .  	L NEAR	05B7	EPROMA
GET_ECC_BYTES  . . . . . . . . .  	N PROC	05A5	EPROMA	Length = 0019
GET_ECC_EXIT . . . . . . . . . .  	L NEAR	05BC	EPROMA
GET_PARMS_RTN  . . . . . . . . .  	L NEAR	0310	EPROMA
GET_PARM_VEC . . . . . . . . . .  	N PROC	0151	EPROMA	Length = 0017
GET_TBL_ADDR . . . . . . . . . .  	N PROC	0168	EPROMA	Length = 002E
GTA_1  . . . . . . . . . . . . .  	L NEAR	017F	EPROMA
GTA_ERR  . . . . . . . . . . . .  	L NEAR	0194	EPROMA	Global

HDISK_TYPE . . . . . . . . . . .  	NUMBER	0012	
HD_FAIL  . . . . . . . . . . . .  	NUMBER	0008	
HD_PASS  . . . . . . . . . . . .  	NUMBER	00F7	
HF_CNTRL . . . . . . . . . . . .  	V BYTE	0000		External
HF_ERR_REG . . . . . . . . . . .  	V BYTE	0000		External
HF_INT_FLG . . . . . . . . . . .  	V BYTE	0000		External
HF_NUM . . . . . . . . . . . . .  	V BYTE	0000		External
HF_ST_REG  . . . . . . . . . . .  	V BYTE	0000		External
HIGH_RAM . . . . . . . . . . . .  	NUMBER	0030	
HOURS  . . . . . . . . . . . . .  	NUMBER	0004	
HOUR_ALARM . . . . . . . . . . .  	NUMBER	0005	

INIT_INT1  . . . . . . . . . . .  	N PROC	0628	EPROMA	Length = 0007
INIT_INT2  . . . . . . . . . . .  	N PROC	062F	EPROMA	Length = 0007
INT1 . . . . . . . . . . . . . .  	NUMBER	0020	
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Symbols-4


INT2 . . . . . . . . . . . . . .  	NUMBER	00A0	
INTR_FLAG  . . . . . . . . . . .  	NUMBER	0080	
IN_CMD . . . . . . . . . . . . .  	N PROC	057A	EPROMA	Length = 002B
IN_CMD_1 . . . . . . . . . . . .  	L NEAR	0586	EPROMA
IN_CMD_EXIT  . . . . . . . . . .  	L NEAR	05A4	EPROMA
ISSUE_CMD  . . . . . . . . . . .  	N PROC	0515	EPROMA	Length = 0043
ISSUE_CMD3 . . . . . . . . . . .  	L NEAR	0547	EPROMA
ISSUE_CMD4 . . . . . . . . . . .  	L NEAR	054D	EPROMA
ISSUE_CMD5 . . . . . . . . . . .  	L NEAR	0572	EPROMA
ISSUE_CMD_RTN  . . . . . . . . .  	L NEAR	0557	EPROMA
ISSUE_RESET  . . . . . . . . . .  	N PROC	025F	EPROMA	Length = 0022
ISSUE_RESET1 . . . . . . . . . .  	L NEAR	026B	EPROMA
ISSUE_RESET2 . . . . . . . . . .  	L NEAR	0270	EPROMA

LF . . . . . . . . . . . . . . .  	NUMBER	000A	
LOOPBACKTEST . . . . . . . . . .  	NUMBER	0000	
LOW_RAM  . . . . . . . . . . . .  	NUMBER	0015	

MAX_CMD  . . . . . . . . . . . .  	NUMBER	0016	
MAX_DRV  . . . . . . . . . . . .  	NUMBER	0002	
MICRO_AT . . . . . . . . . . . .  	NUMBER	00FE	
MINUTES  . . . . . . . . . . . .  	NUMBER	0002	
MIN_ALARM  . . . . . . . . . . .  	NUMBER	0003	
MONTH  . . . . . . . . . . . . .  	NUMBER	0008	
MOTOR_ON . . . . . . . . . . . .  	V BYTE	0000		External
MOTOR_TIMOUT . . . . . . . . . .  	V BYTE	0000		External
MOTOR_WAIT . . . . . . . . . . .  	NUMBER	0025	

NMI  . . . . . . . . . . . . . .  	NUMBER	0070	
NOP_PROC . . . . . . . . . . . .  	L NEAR	0000		External

OP_WAIT  . . . . . . . . . . . .  	NUMBER	0020	
OUT_CMD  . . . . . . . . . . . .  	N PROC	05BE	EPROMA	Length = 0030
OUT_CMD_1  . . . . . . . . . . .  	L NEAR	05CA	EPROMA
OUT_CMD_EXIT . . . . . . . . . .  	L NEAR	05ED	EPROMA

PARALLEL . . . . . . . . . . . .  	NUMBER	0378	
PARMS_1  . . . . . . . . . . . .  	L NEAR	0103	EPROMA
PARMS_ERR  . . . . . . . . . . .  	L NEAR	02FA	EPROMA
PARM_LENGTH  . . . . . . . . . .  	NUMBER	0010	
PARM_VEC_RTN . . . . . . . . . .  	L NEAR	0165	EPROMA
PIO  . . . . . . . . . . . . . .  	NUMBER	0061	
PORT_OFF . . . . . . . . . . . .  	V BYTE	0000		External

RDY_WAIT . . . . . . . . . . . .  	NUMBER	0600	
READ_CMOS  . . . . . . . . . . .  	L NEAR	0000		External
READ_KBD_ID  . . . . . . . . . .  	NUMBER	00F2	
RECAL_REQD . . . . . . . . . . .  	V BYTE	0000		External
REC_NOT_FOUND  . . . . . . . . .  	NUMBER	0004	
REFRESH_DIV  . . . . . . . . . .  	NUMBER	0012	
REGISTER_A . . . . . . . . . . .  	NUMBER	000A	
REGISTER_B . . . . . . . . . . .  	NUMBER	000B	
REGISTER_C . . . . . . . . . . .  	NUMBER	000C	
RESET_1  . . . . . . . . . . . .  	L NEAR	005F	EPROMA
RESET_CMD1 . . . . . . . . . . .  	L NEAR	0220	EPROMA
RESET_CMD2 . . . . . . . . . . .  	L NEAR	0244	EPROMA
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Symbols-5


RESET_CMD4 . . . . . . . . . . .  	L NEAR	025E	EPROMA
RESET_CMD_ERR  . . . . . . . . .  	L NEAR	0259	EPROMA
RESET_DRIVES . . . . . . . . . .  	L NEAR	005B	EPROMA
RESET_ERR  . . . . . . . . . . .  	NUMBER	0005	
RESTORE_ALL  . . . . . . . . . .  	L NEAR	0000		External
RETRIES  . . . . . . . . . . . .  	NUMBER	0001	
RW_8042_A  . . . . . . . . . . .  	NUMBER	0060	
RW_8042_B  . . . . . . . . . . .  	NUMBER	0061	

SAVE_ALL . . . . . . . . . . . .  	L NEAR	0000		External
SECONDS  . . . . . . . . . . . .  	NUMBER	0000	
SEC_ALARM  . . . . . . . . . . .  	NUMBER	0001	
SEEK_ERR . . . . . . . . . . . .  	NUMBER	0040	
SEND_ECC2  . . . . . . . . . . .  	L NEAR	060A	EPROMA
SEND_ECC_3 . . . . . . . . . . .  	L NEAR	0605	EPROMA
SEND_ECC_BYTES . . . . . . . . .  	N PROC	05EE	EPROMA	Length = 001F
SEND_ECC_EXIT  . . . . . . . . .  	L NEAR	060B	EPROMA
SET_CMD_PARMS  . . . . . . . . .  	N PROC	00DE	EPROMA	Length = 0073
SET_DATA . . . . . . . . . . . .  	L NEAR	0000		External
SHUTDOWN . . . . . . . . . . . .  	NUMBER	000F	
STACK_SEG  . . . . . . . . . . .  	NUMBER	0030	
SYSTEM_ID  . . . . . . . . . . .  	ALIAS	 A_TEASE		

TEST_4_RESULTS . . . . . . . . .  	N PROC	0476	EPROMA	Length = 0006
TIMER  . . . . . . . . . . . . .  	NUMBER	0040	
TIME_OUT . . . . . . . . . . . .  	NUMBER	0080	
TOP_OF_STACK . . . . . . . . . .  	NUMBER	0100	
TRACK_80 . . . . . . . . . . . .  	NUMBER	0001	
TYPE_ERROR . . . . . . . . . . .  	L NEAR	03DE	EPROMA

UPI  . . . . . . . . . . . . . .  	NUMBER	0060	
UPI_STAT_PORT  . . . . . . . . .  	NUMBER	0064	

WAIT_1 . . . . . . . . . . . . .  	L NEAR	0407	EPROMA
WAIT_4_1 . . . . . . . . . . . .  	L NEAR	055D	EPROMA
WAIT_4_CNTRL . . . . . . . . . .  	N PROC	0558	EPROMA	Length = 0022
WAIT_4_DRQ . . . . . . . . . . .  	N PROC	047C	EPROMA	Length = 0015
WAIT_4_DRQ1  . . . . . . . . . .  	L NEAR	0483	EPROMA
WAIT_4_DRQ2  . . . . . . . . . .  	L NEAR	0490	EPROMA
WAIT_4_INTR  . . . . . . . . . .  	N PROC	03F4	EPROMA	Length = 0030
WAIT_4_INTR1 . . . . . . . . . .  	L NEAR	0414	EPROMA
WAIT_4_INTR2 . . . . . . . . . .  	L NEAR	041B	EPROMA
WAIT_4_INTR3 . . . . . . . . . .  	L NEAR	0420	EPROMA
WAIT_5_1 . . . . . . . . . . . .  	L NEAR	0430	EPROMA
WAIT_5_SECS  . . . . . . . . . .  	N PROC	0424	EPROMA	Length = 0016
WAIT_RTN . . . . . . . . . . . .  	L NEAR	0574	EPROMA
WD0_PARM_VEC . . . . . . . . . .  	V DWORD	0000		External
WD1_PARM_VEC . . . . . . . . . .  	V DWORD	0000		External
WD_CMD_FILE  . . . . . . . . . .  	V BYTE	0000		External
WD_CMD_TBL . . . . . . . . . . .  	L BYTE	0662	EPROMA
WD_CNTRL_DIAG  . . . . . . . . .  	N PROC	0386	EPROMA	Length = 0027
WD_CNTRL_ERR . . . . . . . . . .  	NUMBER	0020	
WD_CONFIG_TBL  . . . . . . . . .  	L NEAR	0000		External
WD_DASD_TYPE . . . . . . . . . .  	N PROC	03AD	EPROMA	Length = 0047
WD_DIAG  . . . . . . . . . . . .  	NUMBER	0090	
WD_DIAG_ERR  . . . . . . . . . .  	L NEAR	03A7	EPROMA
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Symbols-6


WD_DRV . . . . . . . . . . . . .  	F PROC	0197	EPROMA	Global	Length = 0049
WD_DRV1  . . . . . . . . . . . .  	L NEAR	01A1	EPROMA
WD_DRV2  . . . . . . . . . . . .  	L NEAR	01B5	EPROMA
WD_DRV3  . . . . . . . . . . . .  	L NEAR	01CE	EPROMA
WD_DRV4  . . . . . . . . . . . .  	L NEAR	01D9	EPROMA
WD_DRV5  . . . . . . . . . . . .  	L NEAR	01EF	EPROMA
WD_ERR1  . . . . . . . . . . . .  	L NEAR	00BE	EPROMA
WD_ERR2  . . . . . . . . . . . .  	L NEAR	00D6	EPROMA
WD_ERR3  . . . . . . . . . . . .  	L NEAR	008A	EPROMA
WD_ERR4  . . . . . . . . . . . .  	L NEAR	0095	EPROMA
WD_ERR_MSG0  . . . . . . . . . .  	L BYTE	0681	EPROMA
WD_ERR_MSG1  . . . . . . . . . .  	L BYTE	0697	EPROMA
WD_ERR_MSG2  . . . . . . . . . .  	L BYTE	06AD	EPROMA
WD_ERR_MSG3  . . . . . . . . . .  	L BYTE	06CC	EPROMA
WD_ERR_MSG4  . . . . . . . . . .  	L BYTE	06E0	EPROMA
WD_FMT_TRACK . . . . . . . . . .  	N PROC	02C2	EPROMA	Length = 0006
WD_FMT_TRK . . . . . . . . . . .  	NUMBER	0050	
WD_FUNC_TBL  . . . . . . . . . .  	L WORD	0636	EPROMA
WD_GET_PARMS . . . . . . . . . .  	N PROC	02C8	EPROMA	Length = 0049
WD_GET_STATUS  . . . . . . . . .  	N PROC	0281	EPROMA	Length = 0009
WD_INIT  . . . . . . . . . . . .  	NUMBER	0060	
WD_INIT_CMD_EXIT . . . . . . . .  	L NEAR	0348	EPROMA
WD_INIT_DRV  . . . . . . . . . .  	N PROC	0311	EPROMA	Length = 0038
WD_INIT_ERR  . . . . . . . . . .  	NUMBER	0007	
WD_INTR  . . . . . . . . . . . .  	N PROC	043A	EPROMA	Global	Length = 001C
WD_MAP_1 . . . . . . . . . . . .  	L NEAR	04E4	EPROMA
WD_MAP_2 . . . . . . . . . . . .  	L NEAR	04F0	EPROMA
WD_PORT  . . . . . . . . . . . .  	NUMBER	01F0	
WD_QUICK_RTN . . . . . . . . . .  	L NEAR	019E	EPROMA
WD_RDY_TEST  . . . . . . . . . .  	N PROC	034C	EPROMA	Length = 0019
WD_RDY_TEST1 . . . . . . . . . .  	L NEAR	0364	EPROMA
WD_READ  . . . . . . . . . . . .  	NUMBER	0020	
WD_READ_LONG . . . . . . . . . .  	N PROC	02A4	EPROMA	Length = 000E
WD_READ_SEC  . . . . . . . . . .  	N PROC	028A	EPROMA	Length = 000D
WD_RECAL . . . . . . . . . . . .  	NUMBER	0010	
WD_RECAL_DRV . . . . . . . . . .  	N PROC	0365	EPROMA	Length = 0007
WD_RESET . . . . . . . . . . . .  	N PROC	006D	EPROMA	Length = 0071
WD_RESET1  . . . . . . . . . . .  	L NEAR	00A0	EPROMA
WD_RESET2  . . . . . . . . . . .  	L NEAR	00AF	EPROMA
WD_RESET3  . . . . . . . . . . .  	L NEAR	00B1	EPROMA
WD_RESET4  . . . . . . . . . . .  	L NEAR	009E	EPROMA
WD_RESET5  . . . . . . . . . . .  	L NEAR	00D9	EPROMA
WD_RESET_CMD . . . . . . . . . .  	N PROC	0212	EPROMA	Length = 004D
WD_RESET_RET . . . . . . . . . .  	L NEAR	00DD	EPROMA
WD_SEEK  . . . . . . . . . . . .  	NUMBER	0070	
WD_SEEK_CMD  . . . . . . . . . .  	N PROC	0349	EPROMA	Length = 0003
WD_SEEK_ERR  . . . . . . . . . .  	NUMBER	0040	
WD_SETUP . . . . . . . . . . . .  	N PROC	0000	EPROMA	Global	Length = 0000
WD_SETUP1  . . . . . . . . . . .  	L NEAR	0030	EPROMA
WD_SETUP_RTN . . . . . . . . . .  	L NEAR	006C	EPROMA
WD_SET_PARMS . . . . . . . . . .  	NUMBER	0091	
WD_STAT_PORT . . . . . . . . . .  	NUMBER	01F7	
WD_TIME_OUT  . . . . . . . . . .  	NUMBER	0080	
WD_UNUSED_CMD  . . . . . . . . .  	L NEAR	020A	EPROMA
WD_VERIFY  . . . . . . . . . . .  	NUMBER	0040	
WD_VERIFY_CMD  . . . . . . . . .  	N PROC	02BF	EPROMA	Length = 0003
Microsoft (R) Macro Assembler Version 5.10                  9/29/89 14:38:47
AT-BIOS Copyright FARADAY Electronics 1985                  Symbols-7


WD_WRITE . . . . . . . . . . . .  	NUMBER	0030	
WD_WRITE_LONG  . . . . . . . . .  	N PROC	02B2	EPROMA	Length = 000D
WD_WRITE_SEC . . . . . . . . . .  	N PROC	0297	EPROMA	Length = 000D
WRITE_CMOS . . . . . . . . . . .  	L NEAR	0000		External
WR_PROT_ERR  . . . . . . . . . .  	NUMBER	0003	

YEAR . . . . . . . . . . . . . .  	NUMBER	0009	

@CPU . . . . . . . . . . . . . .  	TEXT  1287		
@FILENAME  . . . . . . . . . . .  	TEXT  int13		
@VERSION . . . . . . . . . . . .  	TEXT  510		


   1667 Source  Lines
   1667 Total   Lines
    320 Symbols

  47084 + 354234 Bytes symbol space free

      0 Warning Errors
      1 Severe  Errors
