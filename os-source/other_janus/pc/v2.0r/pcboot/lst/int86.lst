Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:34
INT86  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Page     1-1


				TITLE	INT86  -  COPYRIGHT (C) 1986 - 1988 Com
				modore Amiga Inc.  
				PAGE	60,132	 
				;************************************************************************** 
				;* Module: int86     Entry: int86		  Type: Near		  * 
				;*									  * 
				;* Function: Execute a PC Software INT from Amiga			  * 
				;*									  * 
				;* Parameters: ES:DI - Pointer to a syscall structure			  * 
				;*									  * 
				;* Returns: results in syscall structure				  * 
				;*									  * 
				;* All Registers preserved.						  *  
				;*									  * 
				;* Note: This code is not reentrant and must run in RAM.		  * 
				;************************************************************************** 
				 
				public	  int86 
				 
 0000				cseg segment   para public 'code' 
				assume cs:cseg,ds:nothing    
				 
				include   janus\syscall.inc 
			     C	;********************************************************************** 
			     C	; (PC side file) 
			     C	; 
			     C	; syscall.inc -- interface definitions between amiga and commodore-pc 
			     C	; 
			     C	; Copyright (c) 1986, Commodore Amiga Inc., All rights reserved 
			     C	; 
			     C	;********************************************************************** 
			     C	 
			     C	 
			     C	; All registers in this section are arranged to be read and written 
			     C	; from the WordAccessOffset area of the shared memory.   If you really 
			     C	; need to use the ByteAccessArea, all the words will need to be byte 
			     C	; swapped. 
			     C	 
			     C	 
			     C	; Syscall86 -- how the 8086/8088 wants its parameter block arranged 
			     C	 
			     C	Syscall86   struc 
			     C	 
 0000  0000                  C	    s86_AX   	dw 0 
 0002  0000                  C	    s86_BX   	dw 0 
 0004  0000                  C	    s86_CX   	dw 0 
 0006  0000                  C	    s86_DX   	dw 0 
 0008  0000                  C	    s86_SI   	dw 0 
 000A  0000                  C	    s86_DS   	dw 0 
 000C  0000                  C	    s86_DI   	dw 0 
 000E  0000                  C	    s86_ES   	dw 0 
 0010  0000                  C	    s86_BP   	dw 0 
 0012  0000                  C	    s86_PSW  	dw 0 
 0014  0000                  C	    s86_INT  	dw 0	; 8086 int # that will be called 
			     C	 
 0016                        C	Syscall86   ends 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:34
INT86  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Page     1-2


			     C	 
			     C	 
			     C	 
			     C	; Syscall68 -- the way the 68000 wants its parameters arranged 
			     C	 
			     C	Syscall68   struc 
			     C	 
 0000  00000000              C	   s68_D0         dd 0 
 0004  00000000              C	   s68_D1         dd 0 
 0008  00000000              C	   s68_D2         dd 0 
 000C  00000000              C	   s68_D3         dd 0 
 0010  00000000              C	   s68_D4         dd 0 
 0014  00000000              C	   s68_D5         dd 0 
 0018  00000000              C	   s68_D6         dd 0 
 001C  00000000              C	   s68_D7         dd 0 
 0020  00000000              C	   s68_A0         dd 0 
 0024  00000000              C	   s68_A1         dd 0 
 0028  00000000              C	   s68_A2         dd 0 
 002C  00000000              C	   s68_A3         dd 0 
 0030  00000000              C	   s68_A4         dd 0 
 0034  00000000              C	   s68_A5         dd 0 
 0038  00000000              C	   s68_A6         dd 0 
 003C  00000000              C	   s68_PC         dd 0	; pc to start execution from 
 0040  00000000              C	   s68_ArgStack   dd 0	; array to be pushed onto stack 
 0044  00000000              C	   s68_ArgLength  dd 0	; number of bytes to be pushed (must be even) 
 0048  00000000              C	   s68_MinStack   dd 0	; minimum necessary stack (0 = use default) 
 004C  00000000              C	   s68_CCR        dd 0	; condition code register 
 0050  00000000              C	   s68_Process    dd 0	; ptr to process for this block. 
 0054  0000                  C	   s68_Command    dw 0	; special commands: see below 
 0056  0000                  C	   s68_Status     dw 0	; 
 0058  0000                  C	   s68_SigNum     dw 0	; internal use: signal to wake up process 
			     C	 
 005A                        C	Syscall68   ends 
			     C	 
			     C	 
 = 0000                      C	S68COM_DOCALL  = 0       ; normal case -- jsr to specified Program cntr 
 = 0001                      C	S68COM_REMPROC = 1       ; kill process 
 = 0002                      C	S68COM_CRPROC  = 2       ; create the proces, but do not call anything 
			     C	 
			     C	 
			     C	 
			     C	 
				 
				include   macros.inc 
			     C	;***************************************************************************** 
			     C	; 
			     C	; macros.inc	        
			     C	; 
			     C	;***************************************************************************** 
			     C	.list 
			     C	 
			     C	 
			     C	 
			     C	 
				 
				 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:34
INT86  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Page     1-3


				extrn	  parmptr:word 
				extrn	  sstack:word 
				 
				 
 0000				int86	  proc near 
					  pushall			     ; keep clean ... 
 0000  06                    1		push	es 
 0001  1E                    1		push	ds 
 0002  56                    1		push	si 
 0003  57                    1		push	di 
 0004  55                    1		push	bp 
 0005  52                    2		push	dx 
 0006  51                    2		push	cx 
 0007  53                    2		push	bx 
 0008  50                    2		push	ax 
				 
 0009  2E: 89 3E 0000 E			  mov  	cs:parmptr,di		     ; save parameter pointer 
 000E  2E: 8C 06 0002 E			  mov	cs:parmptr+2,es 
				 
 0013  8B F7				  mov   si,di			     ; swap pointers 
 0015  06				  push 	es			     ; and segments 
 0016  1F				  pop  	ds 
				 
 0017  8A 44 14				  mov  	al,byte ptr [si].s86_int     ; interrupt number 
 001A  2E: A2 003A R			  mov  	byte ptr cs:intinst+1,al 
				 
 001E  8B 04				  mov  	ax,[si].s86_ax		     ; registers 
 0020  8B 5C 02				  mov  	bx,[si].s86_bx 
 0023  8B 4C 04				  mov  	cx,[si].s86_cx 
 0026  8B 54 06				  mov  	dx,[si].s86_dx 
 0029  8B 7C 0C				  mov  	di,[si].s86_di 
 002C  8E 44 0E				  mov  	es,[si].s86_es 
 002F  8B 6C 10				  mov  	bp,[si].s86_bp 
 0032  FF 74 12				  push 	[si].s86_psw 
 0035  9D				  popf 
 0036  C5 74 08				  lds  	si,dword ptr [si].s86_si     ; last fetch 
					      
 0039  CD FF			intinst:  int  	255			     ; do it 
									     ; with some luck we come here ... 
 003B  9C				  pushf 			     ; temp save 
 003C  1E				  push 	ds			     ; save them first 
 003D  56				  push 	si 
				 
 003E  2E: C6 06 003A R FF		  mov  	byte ptr cs:intinst+1,255    ; restore old value for checksum 
 0044  2E: C5 36 0000 E			  lds  	si,dword ptr cs:[parmptr]    ; parameter pointer fetch 
				 
 0049  89 04				  mov  	[si].s86_ax,ax		     ; result store 
 004B  89 5C 02				  mov  	[si].s86_bx,bx		     ; result store 
 004E  89 4C 04				  mov  	[si].s86_cx,cx		     ; result store 
 0051  89 54 06				  mov  	[si].s86_dx,dx		     ; result store 
 0054  89 7C 0C				  mov  	[si].s86_di,di		     ; result store 
 0057  8C 44 0E				  mov  	[si].s86_es,es		     ; result store 
 005A  89 6C 10				  mov  	[si].s86_bp,bp		     ; result store 
				 
 005D  58				  pop  	ax			     ; was si 
 005E  89 44 08				  mov  	[si].s86_si,ax		     ; result store 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:34
INT86  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Page     1-4


 0061  58				  pop  	ax			     ; was ds 
 0062  89 44 0A				  mov  	[si].s86_ds,ax		     ; result store 
 0065  58				  pop  	ax			     ; were flags 
 0066  89 44 12				  mov  	[si].s86_psw,ax		     ; result store 
				 
					  popall			     ; as they were b4 
 0069  58                    2		pop	ax 
 006A  5B                    2		pop	bx 
 006B  59                    2		pop	cx 
 006C  5A                    2		pop	dx 
 006D  5D                    1		pop	bp 
 006E  5F                    1		pop	di 
 006F  5E                    1		pop	si 
 0070  1F                    1		pop	ds 
 0071  07                    1		pop	es 
 0072  C3				  ret 
				 
 0073				int86	  endp 
				 
 0073				cseg	  ends 
				 
					  end 

Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:34
INT86  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Symbols-1


Macros:

		N a m e			Lines

ICALL  . . . . . . . . . . . . .  	   2
IFLAGS . . . . . . . . . . . . .  	  13
INFO . . . . . . . . . . . . . .  	  13
INFO_AX  . . . . . . . . . . . .  	  16
INFO_AX_BX . . . . . . . . . . .  	  20
JLOCK  . . . . . . . . . . . . .  	   8
POPAC  . . . . . . . . . . . . .  	   4
POPALL . . . . . . . . . . . . .  	   6
PUSHAC . . . . . . . . . . . . .  	   4
PUSHALL  . . . . . . . . . . . .  	   6
UNLOCK . . . . . . . . . . . . .  	   1

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

STACKFRAME . . . . . . . . . . .  	0012	0009
  REGAX  . . . . . . . . . . . .  	0000
  REGBX  . . . . . . . . . . . .  	0002
  REGCX  . . . . . . . . . . . .  	0004
  REGDX  . . . . . . . . . . . .  	0006
  REGBP  . . . . . . . . . . . .  	0008
  REGDI  . . . . . . . . . . . .  	000A
  REGSI  . . . . . . . . . . . .  	000C
  REGDS  . . . . . . . . . . . .  	000E
  REGES  . . . . . . . . . . . .  	0010
SYSCALL68  . . . . . . . . . . .  	005A	0018
  S68_D0 . . . . . . . . . . . .  	0000
  S68_D1 . . . . . . . . . . . .  	0004
  S68_D2 . . . . . . . . . . . .  	0008
  S68_D3 . . . . . . . . . . . .  	000C
  S68_D4 . . . . . . . . . . . .  	0010
  S68_D5 . . . . . . . . . . . .  	0014
  S68_D6 . . . . . . . . . . . .  	0018
  S68_D7 . . . . . . . . . . . .  	001C
  S68_A0 . . . . . . . . . . . .  	0020
  S68_A1 . . . . . . . . . . . .  	0024
  S68_A2 . . . . . . . . . . . .  	0028
  S68_A3 . . . . . . . . . . . .  	002C
  S68_A4 . . . . . . . . . . . .  	0030
  S68_A5 . . . . . . . . . . . .  	0034
  S68_A6 . . . . . . . . . . . .  	0038
  S68_PC . . . . . . . . . . . .  	003C
  S68_ARGSTACK . . . . . . . . .  	0040
  S68_ARGLENGTH  . . . . . . . .  	0044
  S68_MINSTACK . . . . . . . . .  	0048
  S68_CCR  . . . . . . . . . . .  	004C
  S68_PROCESS  . . . . . . . . .  	0050
  S68_COMMAND  . . . . . . . . .  	0054
  S68_STATUS . . . . . . . . . .  	0056
  S68_SIGNUM . . . . . . . . . .  	0058
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:34
INT86  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Symbols-2


SYSCALL86  . . . . . . . . . . .  	0016	000B
  S86_AX . . . . . . . . . . . .  	0000
  S86_BX . . . . . . . . . . . .  	0002
  S86_CX . . . . . . . . . . . .  	0004
  S86_DX . . . . . . . . . . . .  	0006
  S86_SI . . . . . . . . . . . .  	0008
  S86_DS . . . . . . . . . . . .  	000A
  S86_DI . . . . . . . . . . . .  	000C
  S86_ES . . . . . . . . . . . .  	000E
  S86_BP . . . . . . . . . . . .  	0010
  S86_PSW  . . . . . . . . . . .  	0012
  S86_INT  . . . . . . . . . . .  	0014

Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CSEG . . . . . . . . . . . . . .  	0073	PARA	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

INFOLEVEL  . . . . . . . . . . .  	NUMBER	000A	
INT86  . . . . . . . . . . . . .  	N PROC	0000	CSEG	Global	Length = 0073
INTINST  . . . . . . . . . . . .  	L NEAR	0039	CSEG

PARMPTR  . . . . . . . . . . . .  	V WORD	0000	CSEG	External

S68COM_CRPROC  . . . . . . . . .  	NUMBER	0002	
S68COM_DOCALL  . . . . . . . . .  	NUMBER	0000	
S68COM_REMPROC . . . . . . . . .  	NUMBER	0001	
SSTACK . . . . . . . . . . . . .  	V WORD	0000	CSEG	External

@FILENAME  . . . . . . . . . . .  	TEXT  INT86		


    348 Source  Lines
    370 Total   Lines
     74 Symbols

  48104 + 230392 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
