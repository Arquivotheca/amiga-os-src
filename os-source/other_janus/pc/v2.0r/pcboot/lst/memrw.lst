Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:39
MEMRW  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Page     1-1


				TITLE	MEMRW  -  COPYRIGHT (C) 1986 - 1988 Com
				modore Amiga Inc.  
				PAGE	60,132	 
				;************************************************************************** 
				;* Module: memrw     Entry: memrw		  Type: Near		  * 
				;*									  * 
				;* Function: Memory Read / Write service for AMIGA			  * 
				;*									  * 
				;* Parameters: ES:DI - Pointer to MemReadWrite Structure		  * 
				;*									  * 
				;* Returns: Status in ES:[DI].mrw_Status				  * 
				;*									  * 
				;* All Registers preserved.						  *  
				;************************************************************************** 
				 
				public    memrw 
				 
 0000				cseg 	segment	para public 'code' 
				assume 	cs:cseg,ds:nothing,es:nothing,ss:nothing 
				 
				include 	janus\memrw.inc 
			     C	;************************************************************************ 
			     C	; (PC side file) 
			     C	; 
			     C	; memrw.inc -- parameter area definition for access to other processors mem 
			     C	; 
			     C	; Copyright (c) 1986, Commodore Amiga Inc.,  All rights reserved 
			     C	; 
			     C	;************************************************************************ 
			     C	 
			     C	 
			     C	; this is the parameter block for the JSERV_READPC and JSERV_READAMIGA 
			     C	; services -- read and/or write the other processors memory. 
			     C	 
			     C	MemReadWrite   struc 
			     C	 
 0000  0000                  C	    mrw_Command dw 0      ; see below for list of commands 
 0002  0000                  C	    mrw_Count   dw 0      ; number of bytes to transfer 
 0004  00000000              C	    mrw_Address dd 0      ; local address to access.  This is 
			     C	                          ;   a machine pointer for the 68000, and 
			     C	                          ;   a segment/offset pair for the 808x. 
			     C	                          ;   The address is arranged so the native 
			     C	                          ;   processor may read it directly. 
 0008  0000                  C	    mrw_Buffer  dw 0      ; The offset in buffer memory for the 
			     C	                          ;   other buffer. 
 000A  0000                  C	    mrw_Status  dw 0      ; See below for status. 
			     C	 
 000C                        C	MemReadWrite   ends 
			     C	 
			     C	 
			     C	; command definitions 
			     C	 
 = 0000                      C	MRWC_NOP          =   0  ; do nothing -- return OK status code 
 = 0001                      C	MRWC_READ         =   1  ; xfer from address to buffer 
 = 0002                      C	MRWC_WRITE        =   2  ; xfer from buffer to address 
 = 0003                      C	MRWC_READIO       =   3  ; only on 808x -- read from IO space 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:39
MEMRW  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Page     1-2


 = 0004                      C	MRWC_WRITEIO      =   4  ; only on 808x -- write to IO space 
 = 0005                      C	MRWC_WRITEREAD    =   5  ; write from buffer, then read back 
			     C	 
			     C	 
			     C	; status definitions 
			     C	 
 = FFFF                      C	MRWS_INPROGRESS   =   0ffffh ; we've noticed command and are working on it 
 = 0000                      C	MRWS_OK           =   00000h ; completed OK 
 = 0001                      C	MRWS_ACCESSERR    =   00001h ; some sort of protection violation 
 = 0002                      C	MRWS_BADCMD       =   00002h ; command that the server doesn't understand 
			     C	 
			     C	 
			     C	 
			     C	 
			     C	 
				 
				include 	vars_ext.inc	    
			     C	;***************************************************************************** 
			     C	; 
			     C	; vars_ext.inc declares variable datas of PC janus handler as external; 
			     C	;	       these datas are defined in vars.inc	    
			     C	; 
			     C	;--- external data ----------------------------------------------------------- 
			     C	.list 
			     C	 
			     C	 
				 
				include 	words.inc 
			     C	;************************************************ 
			     C	; File: words.inc 
			     C	;************************************************ 
			     C	; To access low words, the pc uses reverse order 
			     C	; to access them in memory to maintain 68000 long  
			     C	; word order. A DD sould be seen as: 
			     C	; 
			     C	;   offset	  0	1     2     3 to address 
			     C	;   -------------------------------------------- 
			     C	;    byte#	  2	3     0     1  of long word 
			     C	; 
			     C	; So we define: 
			     C	; 
 = 0000                      C	high_word =    0 
 = 0002                      C	low_word  =    2 
			     C	; 
			     C	;************************************************ 
			     C	 
				 
				include 	macros.inc 
			     C	;***************************************************************************** 
			     C	; 
			     C	; macros.inc	        
			     C	; 
			     C	;***************************************************************************** 
			     C	.list 
			     C	 
			     C	 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:39
MEMRW  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Page     1-3


			     C	 
			     C	 
				 
				 
 =				w 	equ	word ptr 
				 
				 
 0000				memrw	  proc near 
					  pushall 
 0000  06                    1		push	es 
 0001  1E                    1		push	ds 
 0002  56                    1		push	si 
 0003  57                    1		push	di 
 0004  55                    1		push	bp 
 0005  52                    2		push	dx 
 0006  51                    2		push	cx 
 0007  53                    2		push	bx 
 0008  50                    2		push	ax 
				 
 0009  26: 8B 1D			  mov  bx,es:[di].mrw_Command	     ; what shall we do ? 
 000C  B8 0002				  mov  ax,MRWS_BADCMD		     ; check for valid command 
 000F  83 FB 05				  cmp  bx,5			     ; out of range ? 
 0012  77 70				  ja   mrwdone			     ; yes if above 
				 
 0014  D1 E3				  shl  bx,1 
 0016  26: C7 45 0A FFFF		  mov  es:[di].mrw_Status,MRWS_INPROGRESS 
 001C  26: 8B 4D 02			  mov  cx,es:[di].mrw_Count 
 0020  FC				  cld 
 0021  2E: FF A7 0092 R			  jmp  cs:jmptbl [bx] 
				 
 0026  06			write:	  push es 
 0027  57				  push di 
 0028  26: 8B 75 08			  mov  si,es:[di].mrw_Buffer  
 002C  2E: 8E 1E 0000 E			  mov  ds,cs:janus_buffer_seg 
 0031  26: C4 7D 04			  les  di,es:[di].mrw_Address  
 0035  F3/ A4				  rep  movsb 
 0037  5F				  pop  di 
 0038  07				  pop  es 
 0039  83 FB 05				  cmp  bx,MRWC_WRITEREAD       ; read after write ? 
 003C  75 44				  jne  mrw_ok		       ; no if ne    
 003E  26: 8B 4D 02			  mov  cx,es:[di].mrw_Count    ; else restore count 
								       ; and fall into read 
 0042  26: C5 75 04		read:	  lds  si,es:[di].mrw_Address 
 0046  06				  push es 
 0047  57				  push di 
 0048  26: 8B 7D 08			  mov  di,es:[di].mrw_buffer 
 004C  2E: 8E 06 0000 E			  mov  es,cs:janus_buffer_seg 
 0051  F3/ A4				  rep  movsb 
 0053  5F				  pop  di 
 0054  07				  pop  es 
 0055  EB 2B 90				  jmp  mrw_ok 
				 
 0058  26: 8B 55 06		readio:   mov  dx,w es:[di].mrw_Address+low_word 
 005C  06				  push es 
 005D  57				  push di 
 005E  26: 8B 7D 08			  mov  di,es:[di].mrw_buffer 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:39
MEMRW  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Page     1-4


 0062  2E: 8E 06 0000 E			  mov  es,cs:janus_buffer_seg 
				 
 0067  EC			rdiolp:   in   al,dx 
 0068  42				  inc  dx 
 0069  AA				  stosb      
 006A  E2 FB				  loop rdiolp 
				 
 006C  5F				  pop  di 
 006D  07				  pop  es 
 006E  EB 12				  jmp  short mrw_ok    
				 
 0070  26: 8B 55 06		writeio:  mov  dx,w es:[di].mrw_Address+low_word 
 0074  26: 8B 75 08			  mov  si,es:[di].mrw_buffer 
 0078  2E: 8E 1E 0000 E			  mov  ds,cs:janus_buffer_seg 
				 
 007D  AC			wriolp:   lodsb       
 007E  42				  inc  dx 
 007F  EE				  out  dx,al 
 0080  E2 FB				  loop wriolp 
				 
 0082				mrw_ok: 
 0082  2B C0				  sub  ax,ax 
 0084				mrwdone: 
 0084  26: 89 45 0A			  mov  es:[di].mrw_status,ax 
					  popall 
 0088  58                    2		pop	ax 
 0089  5B                    2		pop	bx 
 008A  59                    2		pop	cx 
 008B  5A                    2		pop	dx 
 008C  5D                    1		pop	bp 
 008D  5F                    1		pop	di 
 008E  5E                    1		pop	si 
 008F  1F                    1		pop	ds 
 0090  07                    1		pop	es 
 0091  C3				  ret 
				 
 0092				memrw	  endp 
				 
 0092  0084 R			jmptbl	  dw   offset	 mrwdone	     ; 0 
 0094  0042 R				  dw   offset	 read		     ; 1 
 0096  0026 R				  dw   offset	 write		     ; 2 
 0098  0058 R				  dw   offset	 readio 	     ; 3 
 009A  0070 R				  dw   offset	 writeio	     ; 4 
 009C  0026 R				  dw   offset	 write		     ; 5 
				 
				 
 009E				cseg ends 
				 
				     end 

Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:39
MEMRW  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Symbols-1


Macros:

		N a m e			Lines

ICALL  . . . . . . . . . . . . .  	   2
IFLAGS . . . . . . . . . . . . .  	  13
INFO . . . . . . . . . . . . . .  	  13
INFO_AX  . . . . . . . . . . . .  	  16
INFO_AX_BX . . . . . . . . . . .  	  20
JLOCK  . . . . . . . . . . . . .  	   8
POPAC  . . . . . . . . . . . . .  	   4
POPALL . . . . . . . . . . . . .  	   6
PUSHAC . . . . . . . . . . . . .  	   4
PUSHALL  . . . . . . . . . . . .  	   6
UNLOCK . . . . . . . . . . . . .  	   1

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

MEMREADWRITE . . . . . . . . . .  	000C	0005
  MRW_COMMAND  . . . . . . . . .  	0000
  MRW_COUNT  . . . . . . . . . .  	0002
  MRW_ADDRESS  . . . . . . . . .  	0004
  MRW_BUFFER . . . . . . . . . .  	0008
  MRW_STATUS . . . . . . . . . .  	000A
STACKFRAME . . . . . . . . . . .  	0012	0009
  REGAX  . . . . . . . . . . . .  	0000
  REGBX  . . . . . . . . . . . .  	0002
  REGCX  . . . . . . . . . . . .  	0004
  REGDX  . . . . . . . . . . . .  	0006
  REGBP  . . . . . . . . . . . .  	0008
  REGDI  . . . . . . . . . . . .  	000A
  REGSI  . . . . . . . . . . . .  	000C
  REGDS  . . . . . . . . . . . .  	000E
  REGES  . . . . . . . . . . . .  	0010

Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CSEG . . . . . . . . . . . . . .  	009E	PARA	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

ACTIVEFLAG . . . . . . . . . . .  	V BYTE	0000	CSEG	External

BIOS_INT10 . . . . . . . . . . .  	V DWORD	0000	CSEG	External
BIOS_INT13 . . . . . . . . . . .  	V DWORD	0000	CSEG	External
BIOS_INT16 . . . . . . . . . . .  	V DWORD	0000	CSEG	External
BIOS_INT1C . . . . . . . . . . .  	V DWORD	0000	CSEG	External

CHAIN_VEC  . . . . . . . . . . .  	V DWORD	0000	CSEG	External
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:39
MEMRW  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Symbols-2



DOS_INT28  . . . . . . . . . . .  	V DWORD	0000	CSEG	External
DUMMYFLAG  . . . . . . . . . . .  	V BYTE	0000	CSEG	External

FAKEDOSFLAG  . . . . . . . . . .  	V BYTE	0000	CSEG	External

HANDLERPTR . . . . . . . . . . .  	V DWORD	0000	CSEG	External
HIGH_WORD  . . . . . . . . . . .  	NUMBER	0000	

INFOLEVEL  . . . . . . . . . . .  	NUMBER	000A	
INTCOUNT . . . . . . . . . . . .  	V WORD	0000	CSEG	External
INT_ENABLE . . . . . . . . . . .  	V DWORD	0000	CSEG	External
INT_REQ  . . . . . . . . . . . .  	V DWORD	0000	CSEG	External

JANUS_BASE_SEG . . . . . . . . .  	V WORD	0000	CSEG	External
JANUS_BUFFER_SEG . . . . . . . .  	V WORD	0000	CSEG	External
JANUS_PARAM_SEG  . . . . . . . .  	V WORD	0000	CSEG	External
JANUS_PART_BASE  . . . . . . . .  	V WORD	0000	CSEG	External
JMPTBL . . . . . . . . . . . . .  	L WORD	0092	CSEG

LOW_WORD . . . . . . . . . . . .  	NUMBER	0002	

MEMRW  . . . . . . . . . . . . .  	N PROC	0000	CSEG	Global	Length = 0092
MRWC_NOP . . . . . . . . . . . .  	NUMBER	0000	
MRWC_READ  . . . . . . . . . . .  	NUMBER	0001	
MRWC_READIO  . . . . . . . . . .  	NUMBER	0003	
MRWC_WRITE . . . . . . . . . . .  	NUMBER	0002	
MRWC_WRITEIO . . . . . . . . . .  	NUMBER	0004	
MRWC_WRITEREAD . . . . . . . . .  	NUMBER	0005	
MRWDONE  . . . . . . . . . . . .  	L NEAR	0084	CSEG
MRWS_ACCESSERR . . . . . . . . .  	NUMBER	0001	
MRWS_BADCMD  . . . . . . . . . .  	NUMBER	0002	
MRWS_INPROGRESS  . . . . . . . .  	NUMBER	FFFF	
MRWS_OK  . . . . . . . . . . . .  	NUMBER	0000	
MRW_OK . . . . . . . . . . . . .  	L NEAR	0082	CSEG

RDIOLP . . . . . . . . . . . . .  	L NEAR	0067	CSEG
READ . . . . . . . . . . . . . .  	L NEAR	0042	CSEG
READIO . . . . . . . . . . . . .  	L NEAR	0058	CSEG

SCROLLFLAG . . . . . . . . . . .  	V BYTE	0000	CSEG	External
SERVSTATTAB  . . . . . . . . . .  	V BYTE	0000	CSEG	External
SPACE  . . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
SSTACK . . . . . . . . . . . . .  	V WORD	0000	CSEG	External

TICKS  . . . . . . . . . . . . .  	V WORD	0000	CSEG	External

USTACK . . . . . . . . . . . . .  	V WORD	0000	CSEG	External

W  . . . . . . . . . . . . . . .  	TEXT  word ptr		
WAITFLAG . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
WRIOLP . . . . . . . . . . . . .  	L NEAR	007D	CSEG
WRITE  . . . . . . . . . . . . .  	L NEAR	0026	CSEG
WRITEIO  . . . . . . . . . . . .  	L NEAR	0070	CSEG

@FILENAME  . . . . . . . . . . .  	TEXT  MEMRW		
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:36:39
MEMRW  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.    Symbols-3




    407 Source  Lines
    431 Total   Lines
     83 Symbols

  49708 + 228788 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
