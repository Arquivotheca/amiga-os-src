Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-1


				TITLE	VAR  -  COPYRIGHT (C) 1986 - 1988 Commo
				dore Amiga Inc.  
				PAGE	60,132	 
				;****************************************************************************** 
				; VAR:		Here we define our variables at an offset greater 2000h 
				; ====  	for load module,	      
				;	     	contains variable datas and messageses for PC janus handler; 
				;	    
				;***************************************************************************** 
				 
 0000				cseg segment   para public 'code' 
				 
				     assume    cs:cseg,ss:cseg,ds:cseg,es:nothing 
				 
				include        	HDPart.inc 
			     C	;**************************************************************************** 
			     C	; File: HDpart.inc 
			     C	; 
			     C	; Structures for accessing the partition block of DOS harddisk drives 
			     C	; 
			     C	;**************************************************************************** 
			     C	; HD Partition structure	 
			     C	;**************************************************************************** 
			     C	 
			     C	 
			     C	HDPart0 	struc 
			     C	 
 0000  ??                    C	BootFlag	db	? 
 0001  ??                    C	HeadStart	db	? 
 0002  ??                    C	SecStart	db	? 
 0003  ??                    C	CylStart	db	? 
 0004  ??                    C	SysFlag 	db	? 
 0005  ??                    C	HeadEnd 	db	? 
 0006  ??                    C	SecEnd		db	? 
 0007  ??                    C	CylEnd		db	? 
 0008  ????                  C	SecOffLow	dw	? 
 000A  ????                  C	SecOffHigh	dw	? 
 000C  ????                  C	SecNumLow	dw	? 
 000E  ????                  C	SecNumHigh	dw	? 
			     C	 
 0010                        C	HDPart0 	ends 
			     C	 
 = 0004                      C	MaxPart		=    	04	; maximum number of partitions on harddisk 
 = 0200                      C	sectorsize	=    	200h	; 512 BYTE/SECTOR 
			     C	 
			     C	;**************************************************************************** 
			     C	 
				 
				include 	janus\harddisk.inc 
			     C	;************************************************************************* 
			     C	; (PC side file) 
			     C	; 
			     C	; HardDisk.inc -- Structures for using the PC hard disk with JSERV_HARDISK 
			     C	; 
			     C	; Copyright (c) 1986, Commodore Amiga Inc.,  All rights reserved. 
			     C	; 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-2


			     C	;************************************************************************* 
			     C	 
			     C	 
			     C	; disk request structure for raw amiga access to 8086's disk 
			     C	; goes directly to PC BOIS (via PC int 13 scheduler) 
			     C	 
			     C	HDskAbsReq struc 
			     C	 
 0000  0000                  C	    har_FktCode dw 0   ; bios function code (see ibm tech ref) 
 0002  0000                  C	    har_Count   dw 0   ; sector count 
 0004  0000                  C	    har_Track   dw 0   ; cylinder # 
 0006  0000                  C	    har_Sector  dw 0   ; sector # 
 0008  0000                  C	    har_Drive   dw 0   ; drive 
 000A  0000                  C	    har_Head    dw 0   ; head 
 000C  0000                  C	    har_Offset  dw 0   ; offset of buffer in MEMF_BUFFER memory 
 000E  0000                  C	    har_Status  dw 0   ; return status 
			     C	 
 0010                        C	HDskAbsReq  ends 
			     C	 
			     C	 
			     C	; definition of an AMIGA disk partition.  returned by info function 
			     C	 
			     C	HDskPartition  struc 
			     C	 
 0000  0000                  C	    hdp_Next     dw 0   ; 8088 ptr to next part.  0 -> end of list 
 0002  0000                  C	    hdp_BaseCyl  dw 0   ; cyl # where partition starts 
 0004  0000                  C	    hdp_EndCyl   dw 0   ; last cyclinder # of this partition 
 0006  0000                  C	    hdp_DrvNum   dw 0   ; DOS drive number (80H, 81H, ...) 
 0008  0000                  C	    hdp_NumHeads dw 0   ; number of heads for this drive 
 000A  0000                  C	    hdp_NumSecs  dw 0   ; number of sectors per track for this drive 
			     C	 
 000C                        C	HDskPartition  ends 
			     C	 
			     C	 
			     C	; disk request structure for higher level amiga disk request to 8086 
			     C	 
			     C	HardDskReq  struc 
			     C	 
 0000  0000                  C	    hdr_Fnctn      dw 0 ; function code (see below) 
 0002  0000                  C	    hdr_Part       dw 0 ; partition number (0 is first partition) 
 0004  00000000              C	    hdr_Offset     dd 0 ; byte offset into partition 
 0008  00000000              C	    hdr_Count      dd 0 ; number of bytes to transfer 
 000C  0000                  C	    hdr_BufferAddr dw 0 ; offset into MEMF_BUFFER memory for buffer 
 000E  0000                  C	    hdr_Err        dw 0 ; return code, 0 if all OK 
			     C	 
 0010                        C	HardDskReq  ends 
			     C	 
			     C	 
			     C	; function codes for HardDskReq hdr_Fnctn word 
			     C	 
 = 0000                      C	HDR_FNCTN_INIT       =   0  ; given nothings, sets adr_Part to # partitions 
 = 0001                      C	HDR_FNCTN_READ       =   1  ; given partition, offset, count, buffer 
 = 0002                      C	HDR_FNCTN_WRITE      =   2  ; given partition, offset, count, buffer 
 = 0003                      C	HDR_FNCTN_SEEK       =   3  ; given partition, offset 
 = 0004                      C	HDR_FNCTN_INFO       =   4  ; given part, buff adr, cnt, copys in a 
			     C	                            ;   DskPartition structure. cnt set to actual 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-3


			     C	                            ;   number of bytes copied. 
			     C	 
			     C	 
			     C	; error codes for hdr_Err, returned in low byte 
			     C	 
 = 0000                      C	HDR_ERR_OK           =   0  ; no error 
 = 0001                      C	HDR_ERR_OFFSET       =   1  ; offset not on sector boundary 
 = 0002                      C	HDR_ERR_COUNT        =   2  ; dsk_count not a multiple of sector size 
 = 0003                      C	HDR_ERR_PART         =   3  ; partition does not exist 
 = 0004                      C	HDR_ERR_FNCT         =   4  ; illegal function code 
 = 0005                      C	HDR_ERR_EOF          =   5  ; offset past end of partition 
 = 0006                      C	HDR_ERR_MULPL        =   6  ; multiple calls while pending service 
 = 0007                      C	HDR_ERR_FILE_COUNT   =   7  ; too many open files 
			     C	 
			     C	; error condition from IBM-PC BIOS, returned in high byte 
			     C	 
 = 00FF                      C	HDR_ERR_SENSE_FAIL      =   0ffh 
 = 00BB                      C	HDR_ERR_UNDEF_ERR       =   0bbh 
 = 0080                      C	HDR_ERR_TIME_OUT        =   080h 
 = 0040                      C	HDR_ERR_BAD_SEEK        =   040h 
 = 0020                      C	HDR_ERR_BAD_CNTRLR      =   020h 
 = 0011                      C	HDR_ERR_DATA_CORRECTED  =   011h   ; data corrected 
 = 0010                      C	HDR_ERR_BAD_ECC         =   010h 
 = 000B                      C	HDR_ERR_BAD_TRACK       =   00bh 
 = 0009                      C	HDR_ERR_DMA_BOUNDARY    =   009h 
 = 0007                      C	HDR_ERR_INIT_FAIL       =   007h 
 = 0005                      C	HDR_ERR_BAD_RESET       =   005h 
 = 0004                      C	HDR_ERR_RECRD_NOT_FOUND =   004h 
 = 0002                      C	HDR_ERR_BAD_ADDR_MARK   =   002h 
 = 0001                      C	HDR_ERR_BAD_CMD         =   001h 
			     C	 
			     C	 
			     C	 
				 
				 
				 
				public		dummy_null, datatag, dataend 
				; 
 0000  0900[			dummy_null     	db   0900h dup ('a')	; the next offset must be greater 
	   61			
			 ]	
				
									; then 2000h 
 0900  2A 2A 2A 2A 2A 44 41	datatag		db	'*****DATA START*****' 
       54 41 20 53 54 41 52	
       54 2A 2A 2A 2A 2A	
				; 
				; 
				;--- global data definition -------------------------------------------------- 
				; 
				public	  	chain_vec 
				public	       	bios_int10 
				public	       	bios_int13 
				public	       	bios_int16 
				public	       	bios_int1c 
				public	       	DOS_int28 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-4


				; 
						even 
 0914  00000000			chain_vec	dd	 0		; save redirected pointers here 
 0918  00000000			bios_int10	dd	 0		; pointer to bios int10 service 
 091C  00000000			bios_int13	dd	 0		; pointer to bios int13 service 
 0920  00000000			bios_int16	dd	 0		; pointer to bios int16 service 
 0924  00000000			bios_int1c	dd	 0		; pointer to timer tick 
 0928  00000000			DOS_int28	dd	 0		; pointer to DOS idle int28 
				;		 
				; 
				public	        janus_base_seg 
				public	       	janus_param_seg 
				public	       	janus_buffer_seg 
				public	       	janus_part_base 
				;	       	 
							even 
 092C  0000			janus_base_seg	dw	 0		; segment of janus base 
 092E  0000			janus_param_seg dw	 0		; segment of janus parameter area 
 0930  0000			janus_buffer_seg dw	 0		; segment of janus buffer ram 
 0932  0000			janus_part_base	dw	 0		; points to janus HD partition 
				; 
				; 
				public	       	int_req 
				public	       	int_enable 
				; 
						even 
 0934  00000000			int_req 	dd	 0		; save AMIGA int requests here 
 0938  00FFFFFF			int_enable	dd	 0ffffff00h	; mask AMIGA interrupt requests 
								     	; FOR TESTING: disable all HW ints 
								     	; enable all AMIGA SW-ints 8-31 
				; 
				public	       	ActiveFlag 
				public	       	FakeDosFlag	 
				public	       	ScrollFlag 
				public	       	WaitFlag 
				public	       	DummyFlag	 
				; 
 093C  00			ActiveFlag	db	0		; save int level here 
 093D  00			FakeDosFlag	db   	0		; set, if called before 
 093E  00			ScrollFlag	db	0		; set, if we are scrolling 
 093F  00			WaitFlag	db   	0		; set, if service came available 
 0940  00			DummyFlag	db   	0		; free 
				; 
				; 
				public	       	ustack 
				public	       	sstack 
				; 
 0941  90					even 
 0942  00000000			sstack		dd	 0		; pointer to user stack 
 0946  00000000			ustack		dd	 0		; save old stack pointer here 
				;		       
				; 
				public	       	ticks 
				public		IntCount 
 094A  0000			ticks		dw	 0		; timer ticks counter	 
 094C  0000			IntCount       	dw   	 0		; interrupt counter for HW diagnostic 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-5


				; 
				; 
				public	      	ParmPtr 
				public	      	HandlerPtr 
				; 
 094E  0000 0000		ParmPtr 	dw	 0,0		; temp pointer to int86 handler 
 0952  0000 0000		HandlerPtr 	dw	 0,0		; temp pointer to service handler 
				; 
				; 
				public	       	ServStatTab 
 0956  0020[			ServStatTab	db   32 dup(0ffh)	; Status for Janus interrupts	 
	   FF			
			 ]	
				
				; 
				 
				public	       	PCint_done 
						even 
 0976  00000000			PCint_done	dd	 0		; save done PC interrupts here 
				; 
				public	       	space 
 097A  0064[			space		db	 100 dup(0)	; free space for later upgrades 
	   00			
			 ]	
				
				;					 
				; 
				;------ PARTITION TABLE :  READ VIA INT 13;2 ------------------------------ 
				; 
				public	       BootBlock, Partmarker 
				public	       HDPart1, HDPart2, HDPart3, HDPart4 
				; 
 09DE  01BE[			BootBlock	db	sectorsize-(4*size HDPart0)-2 DUP (?) 
	    ??			
			 ]	
				
 0B9C  0010[			HDPart1:	db	size HDPart0 DUP (0) 
	   00			
			 ]	
				
 0BAC  0010[			HDPart2:	db	size HDPart0 DUP (0) 
	   00			
			 ]	
				
 0BBC  0010[			HDPart3:	db	size HDPart0 DUP (0) 
	   00			
			 ]	
				
 0BCC  0010[			HDPart4:	db	size HDPart0 DUP (0) 
	   00			
			 ]	
				
 0BDC  0002[			PartMarker	db	2 DUP (?)	; 55AAh, if bootblock is defined 
	    ??			
			 ]	
				
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-6


				; 
				;------ VARIABLES :  USED BY ADISK ---------------------------------------- 
				; 
				public		Max_drive, Max_head, Max_cyl, Max_sec 
				public		CurDrive, CurTable, PartCount, AM_HD 
				; 
 0BDE  ??			Max_drive	db	?		; current drive parameters 
 0BDF  ??			Max_head	db	? 
 0BE0  ????			Max_cyl 	dw	? 
 0BE2  ??			Max_sec 	db	? 
 0BE3  00			CurDrive	DB	0		; CURRENT DRIVE NUMBER 
 0BE4  ????			CurTable	dw	?		; pointer to current dsk_partition 
 0BE6  ??			PartCount	DB	?		; NUMBER OF amiga partitions	   
 0BE7  0054[			AM_HD:		db	7*(size HDskPartition) dup (0) 
	   00			
			 ]	
				
				; 
				;--- messageses ----------------------------------------------------------- 
				;		       		    Priority 
				; 
				public	       NoDriveMsg	      ;	 0 
				public	       NoPartMsg	      ;	 0 
				public	       LoadErrMsg	      ;	 0 
				public	       LoadMsg		      ;	 0 
				public	       HandlerVersionMsg      ;	10 
				public	       LibVersionMsg	      ;	10 
				public	       WrongVersionMsg	      ;	10 
				public	       UpdateMsg	      ;	20 
				public	       BaseMsg		      ; 20 
				public	       NoBaseMsg 	      ; 20 
				public	       NoServiceBaseMsg	      ; 20 
				public	       IntsMsg		      ; 20 
				public	       IdleMsg		      ; 20 
				public	       ParasMsg		      ; 20 
				public	       BufferMsg	      ; 20 
				public	       MemChunk		      ; 20 
				public	       HWMsgP		      ;	40 
				public	       HWMsgPC		      ;	40 
				public	       HWMsgR		      ;	40 
				public	       NoHanMes		      ;	40 
				public	       TestIntMes	      ;	40 
				public	       FoundIntMes	      ;	46 
				public	       ExeIntMes	      ;	47 
				public	       ESDI_Mes		      ;	47 
				public	       NoIntMes		      ;	47 
				public	       Diskmsg1		      ;	48 
				public	       IntCtrlMes	      ;	48 
				public	       RegMsg		      ;	49 
				public	       DosMsgA		      ;	50 
				public	       DosMsgN		      ;	50 
				public	       IntTblMes	      ;	55 
				public	       WaitStatus 
				public	       ServiceSearch 
				public	       MakeService 
				public	       AllocParam 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-7


				public	       InitPointers 
				public	       InitWaitPointers 
				public	       ServiceAvailable 
				public	       ServiceAdded 
				public	       GotServiceInt  
				public	       CallAmigaService 
				public	       ChannelMsg 
				public	       HandlerMsg     
				public	       NextSlotMsg 
				public	       ExitSDMsg	 
				public	       UCountMsg 
				public	       RemoveMsg	 
				public	       ServiceDeleted	 
				public	       AmigaCallMsg 
				public	       AmigaAddMsg 
				public	       AmigaDeleteMsg 
				; 
				; 
 0C3B  4A 61 6E 75 73 20 48	HandlerVersionMsg     	db   	"Janus Handler Version ",0 
       61 6E 64 6C 65 72 20	
       56 65 72 73 69 6F 6E	
       20 00			
 0C52  4A 61 6E 75 73 20 4C	LibVersionMsg     	db   	"Janus Library Version ",0 
       69 62 72 61 72 79 20	
       56 65 72 73 69 6F 6E	
       20 00			
 0C69  20 57 72 6F 6E 67 20	WrongVersionMsg		db  	" Wrong version of Janus.Library!" 
       76 65 72 73 69 6F 6E	
       20 6F 66 20 4A 61 6E	
       75 73 2E 4C 69 62 72	
       61 72 79 21		
 0C89  20 4A 61 6E 75 73 20				db	" Janus Handler not loaded. ",13,10,0	 
       48 61 6E 64 6C 65 72	
       20 6E 6F 74 20 6C 6F	
       61 64 65 64 2E 20 0D	
       0A 00			
 0CA7  20 4E 6F 20 4A 61 6E	NoBaseMsg      		db   	" No Janus Memory Structure found!",13,10,0 
       75 73 20 4D 65 6D 6F	
       72 79 20 53 74 72 75	
       63 74 75 72 65 20 66	
       6F 75 6E 64 21 0D 0A	
       00			
 0CCB  20 4E 6F 20 53 65 72	NoServiceBaseMsg 	db	" No Service Structure found!",13,10,0 
       76 69 63 65 20 53 74	
       72 75 63 74 75 72 65	
       20 66 6F 75 6E 64 21	
       0D 0A 00			
 0CEA  20 4A 61 6E 75 73 20	LoadMsg	       		db   	" Janus Handler found at segment ",0 
       48 61 6E 64 6C 65 72	
       20 66 6F 75 6E 64 20	
       61 74 20 73 65 67 6D	
       65 6E 74 20 00		
 0D0B  20 4A 61 6E 75 73 42	BaseMsg        		db   	" JanusBase found at  = ",0 
       61 73 65 20 66 6F 75	
       6E 64 20 61 74 20 20	
       3D 20 00			
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-8


 0D23  20 49 6E 74 20 54 61	IntsMsg        		db   	" Int Table offset    = ",0 
       62 6C 65 20 6F 66 66	
       73 65 74 20 20 20 20	
       3D 20 00			
 0D3B  20 49 6E 74 20 50 61	ParasMsg       		db   	" Int Paras offset    = ",0 
       72 61 73 20 6F 66 66	
       73 65 74 20 20 20 20	
       3D 20 00			
 0D53  20 42 75 66 66 65 72	BufferMsg      		db   	" Buffer Mem found at = ",0 
       20 4D 65 6D 20 66 6F	
       75 6E 64 20 61 74 20	
       3D 20 00			
 0D6B  20 44 4F 53 20 49 64	IdleMsg        		db   	" DOS Idle ",0 
       6C 65 20 00		
 0D76  20 53 57 20 49 6E 74	DosMsgA        		db   	" SW Int13 active ",13,10,0 
       31 33 20 61 63 74 69	
       76 65 20 0D 0A 00	
 0D8A  20 53 57 20 49 6E 74	DosMsgN        		db   	" SW Int13 ready ",13,10,0 
       31 33 20 72 65 61 64	
       79 20 0D 0A 00		
 0D9D  20 48 57 20 69 6E 74	HWMsgP	       		db   	" HW interrupt pending ",0 
       65 72 72 75 70 74 20	
       70 65 6E 64 69 6E 67	
       20 00			
 0DB4  20 53 57 20 49 6E 74	HWMsgPC	       		db   	" SW IntB active ",0 
       42 20 61 63 74 69 76	
       65 20 00			
 0DC5  20 48 57 20 69 6E 74	HWMsgR	       		db   	" HW interrupt ready ",13,10,0 
       65 72 72 75 70 74 20	
       72 65 61 64 79 20 0D	
       0A 00			
 0DDC  20 2D 41 58 2D 2D 42	RegMsg	       		db   	" -AX--BX--CX--DX- Regs before INT13",13,10,0 
       58 2D 2D 43 58 2D 2D	
       44 58 2D 20 52 65 67	
       73 20 62 65 66 6F 72	
       65 20 49 4E 54 31 33	
       0D 0A 00			
 0E02  20 4A 61 6E 75 73 20	IntTblMes      		db   	" Janus Interrupt Table at offset ",0 
       49 6E 74 65 72 72 75	
       70 74 20 54 61 62 6C	
       65 20 61 74 20 6F 66	
       66 73 65 74 20 00	
 0E24  20 46 6F 75 6E 64 20	FoundIntMes    		db   	" Found pending interrupt #: ",0 
       70 65 6E 64 69 6E 67	
       20 69 6E 74 65 72 72	
       75 70 74 20 23 3A 20	
       00			
 0E41  20 45 78 65 63 75 74	ExeIntMes      		db   	" Executing interrupt #: ",0 
       69 6E 67 20 69 6E 74	
       65 72 72 75 70 74 20	
       23 3A 20 00		
 0E5A  20 45 53 3A 44 49 20	ESDI_Mes       		db   	" ES:DI points at  ",0 
       70 6F 69 6E 74 73 20	
       61 74 20 20 00		
 0E6D  20 41 6D 69 67 61 20	TestIntMes     		db   	" Amiga Interrupt Diagnostic :   ",0 
       49 6E 74 65 72 72 75	
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-9


       70 74 20 44 69 61 67	
       6E 6F 73 74 69 63 20	
       3A 20 20 20 00		
 0E8E  20 3D 3E 20 49 6E 74	IntCtrlMes     		db   	" => Interrupt Enable Register :  ",0 
       65 72 72 75 70 74 20	
       45 6E 61 62 6C 65 20	
       52 65 67 69 73 74 65	
       72 20 3A 20 20 00	
 0EB0  07 20 45 52 52 4F 52	NoHanMes       		db   	7," ERROR! No handler installed on PC side. ",13,10,0 
       21 20 4E 6F 20 68 61	
       6E 64 6C 65 72 20 69	
       6E 73 74 61 6C 6C 65	
       64 20 6F 6E 20 50 43	
       20 73 69 64 65 2E 20	
       0D 0A 00			
 0EDD  07 20 45 52 52 4F 52	NoIntMes       		db   	7," ERROR! No enabled interrupt found. ",13,10,0 
       21 20 4E 6F 20 65 6E	
       61 62 6C 65 64 20 69	
       6E 74 65 72 72 75 70	
       74 20 66 6F 75 6E 64	
       2E 20 0D 0A 00		
 0F05  20 4E 6F 20 68 61 72	NoDriveMsg     		db   	" No harddisk found. ",13,10,0 
       64 64 69 73 6B 20 66	
       6F 75 6E 64 2E 20 0D	
       0A 00			
 0F1C  07 20 45 52 52 4F 52	NoPartMsg      		db   	7," ERROR! Incorrect partition on harddisk. ",13,10,0 
       21 20 49 6E 63 6F 72	
       72 65 63 74 20 70 61	
       72 74 69 74 69 6F 6E	
       20 6F 6E 20 68 61 72	
       64 64 69 73 6B 2E 20	
       0D 0A 00			
 0F49  07 20 45 52 52 4F 52	LoadErrMsg     		db   	7," ERROR! Unable to read partition table. ",13,10,0 
       21 20 55 6E 61 62 6C	
       65 20 74 6F 20 72 65	
       61 64 20 70 61 72 74	
       69 74 69 6F 6E 20 74	
       61 62 6C 65 2E 20 0D	
       0A 00			
 0F75  20 44 69 73 6B 20 49	Diskmsg1       		db   	" Disk I/O: Function ",0 
       2F 4F 3A 20 46 75 6E	
       63 74 69 6F 6E 20 00	
 0F8A  20 50 49 43 20 75 70	UpdateMsg      		db   	" PIC updated ! ",13,10,0	 
       64 61 74 65 64 20 21	
       20 0D 0A 00		
 0F9C  20 53 74 61 74 75 73	WaitStatus     		db   	" Status : ",0		 
       20 3A 20 00		
 0FA7  20 4D 65 6D 6F 72 79	MemChunk       		db   	" Memory Chunk found ! ",13,10,0	 
       20 43 68 75 6E 6B 20	
       66 6F 75 6E 64 20 21	
       20 0D 0A 00		
 0FC0  20 53 65 61 72 63 68	ServiceSearch  		db   	" Search for ServiceData structure. ",13,10,0 
       20 66 6F 72 20 53 65	
       72 76 69 63 65 44 61	
       74 61 20 73 74 72 75	
       63 74 75 72 65 2E 20	
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-10


       0D 0A 00			
 0FE6  20 41 6C 6C 6F 63 61	MakeService    		db   	" Allocate ServiceData structure. ",13,10,0 
       74 65 20 53 65 72 76	
       69 63 65 44 61 74 61	
       20 73 74 72 75 63 74	
       75 72 65 2E 20 0D 0A	
       00			
 100A  20 41 6C 6C 6F 63 61	AllocParam     		db   	" Allocate memory. ",13,10,0 
       74 65 20 6D 65 6D 6F	
       72 79 2E 20 0D 0A 00	
 101F  20 49 6E 69 74 20 53	InitPointers   		db   	" Init ServiceData structure. ",13,10,0 
       65 72 76 69 63 65 44	
       61 74 61 20 73 74 72	
       75 63 74 75 72 65 2E	
       20 0D 0A 00		
 103F  20 49 6E 69 74 20 57	InitWaitPointers 	db 	" Init Wait pointer. ",13,10,0 
       61 69 74 20 70 6F 69	
       6E 74 65 72 2E 20 0D	
       0A 00			
 1056  20 53 65 72 76 69 63	ServiceAvailable 	db 	" Service now available. ",13,10,0	  
       65 20 6E 6F 77 20 61	
       76 61 69 6C 61 62 6C	
       65 2E 20 0D 0A 00	
 1071  20 53 65 72 76 69 63	ServiceAdded   		db   	" Service added! ",13,10,0 
       65 20 61 64 64 65 64	
       21 20 0D 0A 00		
 1084  20 43 61 6C 6C 20 53	CallAmigaService 	db 	" Call ServiceData at : ",0 
       65 72 76 69 63 65 44	
       61 74 61 20 61 74 20	
       3A 20 00			
 109C  20 47 6F 74 20 53 65	GotServiceInt  		db   	" Got Service Interrupt ",13,10,0	  
       72 76 69 63 65 20 49	
       6E 74 65 72 72 75 70	
       74 20 0D 0A 00		
 10B6  20 43 68 61 6E 6E 65	ChannelMsg     		db   	" Channel # : ",0	 
       6C 20 23 20 3A 20 00	
 10C4  20 43 61 6C 6C 20 48	HandlerMsg     		db   	" Call Handler at : ",0	     
       61 6E 64 6C 65 72 20	
       61 74 20 3A 20 00	
 10D8  20 43 68 65 63 6B 69	NextSlotMsg    		db   	" Checking next slot for channel number. ",13,10,0	 
       6E 67 20 6E 65 78 74	
       20 73 6C 6F 74 20 66	
       6F 72 20 63 68 61 6E	
       6E 65 6C 20 6E 75 6D	
       62 65 72 2E 20 0D 0A	
       00			
 1103  20 4C 65 61 76 69 6E	ExitSDMsg      		db   	" Leaving Service Dispatcher. ",13,10,0	 
       67 20 53 65 72 76 69	
       63 65 20 44 69 73 70	
       61 74 63 68 65 72 2E	
       20 0D 0A 00		
 1123  20 55 73 65 72 43 6F	UCountMsg      		db   	" UserCount was : ",0 
       75 6E 74 20 77 61 73	
       20 3A 20 00		
 1135  20 52 65 6D 6F 76 65	RemoveMsg      		db   	" Remove ServiceData structure at :	",0 
       20 53 65 72 76 69 63	
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-11


       65 44 61 74 61 20 73	
       74 72 75 63 74 75 72	
       65 20 61 74 20 3A 09	
       00			
 1159  20 53 65 72 76 69 63	ServiceDeleted 		db   	" Service deleted!",13,10,0 
       65 20 64 65 6C 65 74	
       65 64 21 0D 0A 00	
 116D  20 41 6D 69 67 61 20	AmigaCallMsg   		db   	" Amiga calls structure at : ",0	 
       63 61 6C 6C 73 20 73	
       74 72 75 63 74 75 72	
       65 20 61 74 20 3A 20	
       00			
 118A  20 41 6D 69 67 61 20	AmigaAddMsg    		db   	" Amiga adds structure at : ",0	 
       61 64 64 73 20 73 74	
       72 75 63 74 75 72 65	
       20 61 74 20 3A 20 00	
 11A6  20 41 6D 69 67 61 20	AmigaDeleteMsg 		db   	" Amiga deletes structure at : ",0	 
       64 65 6C 65 74 65 73	
       20 73 74 72 75 63 74	
       75 72 65 20 61 74 20	
       3A 20 00			
				; 
				;************ bill variables ********** 
				; 
 11C5  90					even 
				include	abvars.inc 
			     C	;************bill variables ********** 
			     C	 
			     C	public 		AB_bill_int13 
 11C6  01000000              C	AB_bill_int13	dd	1	;Storage for old int 13 vector 
			     C	 
			     C	public		AB_Cyl 
			     C	public		AB_Head 
			     C	public		AB_Sec 
			     C	public		AB_Secs 
			     C	public		AB_SecsDone 
 11CA  0000                  C	AB_Cyl		dw	0  	; 
 11CC  0000                  C	AB_Head		dw	0 
 11CE  0000                  C	AB_Sec		dw	0 
 11D0  0000                  C	AB_Secs		dw	0 
 11D2  0000                  C	AB_SecsDone	dw	0 
			     C	 
			     C	public		AB_jparmseg 
			     C	public		AB_jparmoff 
			     C	public		AB_jbuffseg 
			     C	public		AB_jbuffoff 
 11D4  0000                  C	AB_jparmseg	dw	0  	;Pointer to janus structures, returned by 
 11D6  0000                  C	AB_jparmoff	dw	0	;GetBase(pcdisk) 
 11D8  0000                  C	AB_jbuffseg	dw	0 
 11DA  0000                  C	AB_jbuffoff	dw	0 
			     C	 
			     C	public		AB_dataseg 
			     C	public		AB_dataoff 
 11DC  0000                  C	AB_dataseg   	dw	0 
 11DE  0000                  C	AB_dataoff 	dw	0 
			     C	 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-12


			     C	public		AB_FileOpen 
			     C	public		AB_NumHeads 
			     C	public		AB_TrackSecs 
			     C	public		AB_Cyls 
			     C	public		AB_File 
			     C	public		AB_TFile 
 11E0  0000                  C	AB_FileOpen	dw	0	;File open flag, 0 = not open 
 11E2  0004                  C	AB_NumHeads	dw	4	;# heads for fake device = 4 
 11E4  0011                  C	AB_TrackSecs	dw	17	;Tracks / sec for fake device 
 11E6  00A8                  C	AB_Cyls		dw	168	;Cylinders 
 11E8  00FF                  C	AB_File		dw	0ffh	;File # returned by pcdisk 
 11EA  00FF                  C	AB_TFile	dw	0ffh	;Temp file handle for aboot.ctrl 
			     C	 
			     C	public		AB_billmsg0 
			     C	public		AB_billmsg1 
			     C	public		AB_billmsg2 
			     C	public		AB_billmsg3 
			     C	public		AB_billmsg4 
			     C	public		AB_billmsg5 
 11EC  41 42 20 49 4E 54 20  C	AB_billmsg0	db	"AB INT 13 Func = ",0 
       31 33 20 46 75 6E 63  C	
       20 3D 20 00           C	
 11FE  20 44 72 69 76 65 20  C	AB_billmsg1	db	" Drive = ",0 
       3D 20 00              C	
 1208  20 43 79 6C 20 3D 20  C	AB_billmsg2	db	" Cyl = ",0 
       00                    C	
 1210  20 48 65 61 64 20 3D  C	AB_billmsg3	db	" Head = ",0 
       20 00                 C	
 1219  20 53 65 63 20 3D 20  C	AB_billmsg4	db	" Sec = ",0 
       00                    C	
 1221  20 23 53 65 63 73 20  C	AB_billmsg5	db	" #Secs = ",0 
       3D 20 00              C	
			     C	 
			     C	public		AB_READPARMS 
			     C	public		AB_COPENFAILMSG 
			     C	public		AB_OPENFAILMSG 
			     C	public		AB_FTEXITMSG 
			     C	public		AB_FileName 
			     C	public		AB_okflag 
 122B  52 65 61 64 69 6E 67  C	AB_READPARMS	db	"Reading AutoBoot Parms.",0 
       20 41 75 74 6F 42 6F  C	
       6F 74 20 50 61 72 6D  C	
       73 2E 00              C	
 1243  43 6F 75 6C 64 20 4E  C	AB_COPENFAILMSG	db	"Could Not Open AutoBoot Control File SYS:PC/System/ABoot.CTRL.",0 
       6F 74 20 4F 70 65 6E  C	
       20 41 75 74 6F 42 6F  C	
       6F 74 20 43 6F 6E 74  C	
       72 6F 6C 20 46 69 6C  C	
       65 20 53 59 53 3A 50  C	
       43 2F 53 79 73 74 65  C	
       6D 2F 41 42 6F 6F 74  C	
       2E 43 54 52 4C 2E 00  C	
 1282  43 6F 75 6C 64 20 4E  C	AB_OPENFAILMSG	db	"Could Not Open AutoBoot File.",0 
       6F 74 20 4F 70 65 6E  C	
       20 41 75 74 6F 42 6F  C	
       6F 74 20 46 69 6C 65  C	
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Page     1-13


       2E 00                 C	
 12A0  46 69 72 73 74 5F 74  C	AB_FTEXITMSG	db	"First_time exits.",0 
       69 6D 65 20 65 78 69  C	
       74 73 2E 00           C	
 12B2  53 59 53 3A 50 43 2F  C	AB_FileName	db	"SYS:PC/System/aboot.ctrl",0,0,"end" 
       53 79 73 74 65 6D 2F  C	
       61 62 6F 6F 74 2E 63  C	
       74 72 6C 00 00 65 6E  C	
       64                    C	
 12CF  0001                  C	AB_okflag	dw	1 
			     C	 
			     C	 
			     C	 
				 
				 
				; 
 12D1  2A 2A 2A 2A 2A 44 41		       db   '*****DATA END****' 
       54 41 20 45 4E 44 2A	
       2A 2A 2A			
 12E2  2A			dataend	       db   '*' 
				; 
 12E3				cseg	ends 
				  
				end  
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Symbols-1


Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

HARDDSKREQ . . . . . . . . . . .  	0010	0006
  HDR_FNCTN  . . . . . . . . . .  	0000
  HDR_PART . . . . . . . . . . .  	0002
  HDR_OFFSET . . . . . . . . . .  	0004
  HDR_COUNT  . . . . . . . . . .  	0008
  HDR_BUFFERADDR . . . . . . . .  	000C
  HDR_ERR  . . . . . . . . . . .  	000E
HDPART0  . . . . . . . . . . . .  	0010	000C
  BOOTFLAG . . . . . . . . . . .  	0000
  HEADSTART  . . . . . . . . . .  	0001
  SECSTART . . . . . . . . . . .  	0002
  CYLSTART . . . . . . . . . . .  	0003
  SYSFLAG  . . . . . . . . . . .  	0004
  HEADEND  . . . . . . . . . . .  	0005
  SECEND . . . . . . . . . . . .  	0006
  CYLEND . . . . . . . . . . . .  	0007
  SECOFFLOW  . . . . . . . . . .  	0008
  SECOFFHIGH . . . . . . . . . .  	000A
  SECNUMLOW  . . . . . . . . . .  	000C
  SECNUMHIGH . . . . . . . . . .  	000E
HDSKABSREQ . . . . . . . . . . .  	0010	0008
  HAR_FKTCODE  . . . . . . . . .  	0000
  HAR_COUNT  . . . . . . . . . .  	0002
  HAR_TRACK  . . . . . . . . . .  	0004
  HAR_SECTOR . . . . . . . . . .  	0006
  HAR_DRIVE  . . . . . . . . . .  	0008
  HAR_HEAD . . . . . . . . . . .  	000A
  HAR_OFFSET . . . . . . . . . .  	000C
  HAR_STATUS . . . . . . . . . .  	000E
HDSKPARTITION  . . . . . . . . .  	000C	0006
  HDP_NEXT . . . . . . . . . . .  	0000
  HDP_BASECYL  . . . . . . . . .  	0002
  HDP_ENDCYL . . . . . . . . . .  	0004
  HDP_DRVNUM . . . . . . . . . .  	0006
  HDP_NUMHEADS . . . . . . . . .  	0008
  HDP_NUMSECS  . . . . . . . . .  	000A

Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CSEG . . . . . . . . . . . . . .  	12E3	PARA	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

AB_BILLMSG0  . . . . . . . . . .  	L BYTE	11EC	CSEG	Global
AB_BILLMSG1  . . . . . . . . . .  	L BYTE	11FE	CSEG	Global
AB_BILLMSG2  . . . . . . . . . .  	L BYTE	1208	CSEG	Global
AB_BILLMSG3  . . . . . . . . . .  	L BYTE	1210	CSEG	Global
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Symbols-2


AB_BILLMSG4  . . . . . . . . . .  	L BYTE	1219	CSEG	Global
AB_BILLMSG5  . . . . . . . . . .  	L BYTE	1221	CSEG	Global
AB_BILL_INT13  . . . . . . . . .  	L DWORD	11C6	CSEG	Global
AB_COPENFAILMSG  . . . . . . . .  	L BYTE	1243	CSEG	Global
AB_CYL . . . . . . . . . . . . .  	L WORD	11CA	CSEG	Global
AB_CYLS  . . . . . . . . . . . .  	L WORD	11E6	CSEG	Global
AB_DATAOFF . . . . . . . . . . .  	L WORD	11DE	CSEG	Global
AB_DATASEG . . . . . . . . . . .  	L WORD	11DC	CSEG	Global
AB_FILE  . . . . . . . . . . . .  	L WORD	11E8	CSEG	Global
AB_FILENAME  . . . . . . . . . .  	L BYTE	12B2	CSEG	Global
AB_FILEOPEN  . . . . . . . . . .  	L WORD	11E0	CSEG	Global
AB_FTEXITMSG . . . . . . . . . .  	L BYTE	12A0	CSEG	Global
AB_HEAD  . . . . . . . . . . . .  	L WORD	11CC	CSEG	Global
AB_JBUFFOFF  . . . . . . . . . .  	L WORD	11DA	CSEG	Global
AB_JBUFFSEG  . . . . . . . . . .  	L WORD	11D8	CSEG	Global
AB_JPARMOFF  . . . . . . . . . .  	L WORD	11D6	CSEG	Global
AB_JPARMSEG  . . . . . . . . . .  	L WORD	11D4	CSEG	Global
AB_NUMHEADS  . . . . . . . . . .  	L WORD	11E2	CSEG	Global
AB_OKFLAG  . . . . . . . . . . .  	L WORD	12CF	CSEG	Global
AB_OPENFAILMSG . . . . . . . . .  	L BYTE	1282	CSEG	Global
AB_READPARMS . . . . . . . . . .  	L BYTE	122B	CSEG	Global
AB_SEC . . . . . . . . . . . . .  	L WORD	11CE	CSEG	Global
AB_SECS  . . . . . . . . . . . .  	L WORD	11D0	CSEG	Global
AB_SECSDONE  . . . . . . . . . .  	L WORD	11D2	CSEG	Global
AB_TFILE . . . . . . . . . . . .  	L WORD	11EA	CSEG	Global
AB_TRACKSECS . . . . . . . . . .  	L WORD	11E4	CSEG	Global
ACTIVEFLAG . . . . . . . . . . .  	L BYTE	093C	CSEG	Global
ALLOCPARAM . . . . . . . . . . .  	L BYTE	100A	CSEG	Global
AMIGAADDMSG  . . . . . . . . . .  	L BYTE	118A	CSEG	Global
AMIGACALLMSG . . . . . . . . . .  	L BYTE	116D	CSEG	Global
AMIGADELETEMSG . . . . . . . . .  	L BYTE	11A6	CSEG	Global
AM_HD  . . . . . . . . . . . . .  	L NEAR	0BE7	CSEG	Global

BASEMSG  . . . . . . . . . . . .  	L BYTE	0D0B	CSEG	Global
BIOS_INT10 . . . . . . . . . . .  	L DWORD	0918	CSEG	Global
BIOS_INT13 . . . . . . . . . . .  	L DWORD	091C	CSEG	Global
BIOS_INT16 . . . . . . . . . . .  	L DWORD	0920	CSEG	Global
BIOS_INT1C . . . . . . . . . . .  	L DWORD	0924	CSEG	Global
BOOTBLOCK  . . . . . . . . . . .  	L BYTE	09DE	CSEG	Global	Length = 01BE
BUFFERMSG  . . . . . . . . . . .  	L BYTE	0D53	CSEG	Global

CALLAMIGASERVICE . . . . . . . .  	L BYTE	1084	CSEG	Global
CHAIN_VEC  . . . . . . . . . . .  	L DWORD	0914	CSEG	Global
CHANNELMSG . . . . . . . . . . .  	L BYTE	10B6	CSEG	Global
CURDRIVE . . . . . . . . . . . .  	L BYTE	0BE3	CSEG	Global
CURTABLE . . . . . . . . . . . .  	L WORD	0BE4	CSEG	Global

DATAEND  . . . . . . . . . . . .  	L BYTE	12E2	CSEG	Global
DATATAG  . . . . . . . . . . . .  	L BYTE	0900	CSEG	Global
DISKMSG1 . . . . . . . . . . . .  	L BYTE	0F75	CSEG	Global
DOSMSGA  . . . . . . . . . . . .  	L BYTE	0D76	CSEG	Global
DOSMSGN  . . . . . . . . . . . .  	L BYTE	0D8A	CSEG	Global
DOS_INT28  . . . . . . . . . . .  	L DWORD	0928	CSEG	Global
DUMMYFLAG  . . . . . . . . . . .  	L BYTE	0940	CSEG	Global
DUMMY_NULL . . . . . . . . . . .  	L BYTE	0000	CSEG	Global	Length = 0900

Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Symbols-3


ESDI_MES . . . . . . . . . . . .  	L BYTE	0E5A	CSEG	Global
EXEINTMES  . . . . . . . . . . .  	L BYTE	0E41	CSEG	Global
EXITSDMSG  . . . . . . . . . . .  	L BYTE	1103	CSEG	Global

FAKEDOSFLAG  . . . . . . . . . .  	L BYTE	093D	CSEG	Global
FOUNDINTMES  . . . . . . . . . .  	L BYTE	0E24	CSEG	Global

GOTSERVICEINT  . . . . . . . . .  	L BYTE	109C	CSEG	Global

HANDLERMSG . . . . . . . . . . .  	L BYTE	10C4	CSEG	Global
HANDLERPTR . . . . . . . . . . .  	L WORD	0952	CSEG	Global
HANDLERVERSIONMSG  . . . . . . .  	L BYTE	0C3B	CSEG	Global
HDPART1  . . . . . . . . . . . .  	L NEAR	0B9C	CSEG	Global
HDPART2  . . . . . . . . . . . .  	L NEAR	0BAC	CSEG	Global
HDPART3  . . . . . . . . . . . .  	L NEAR	0BBC	CSEG	Global
HDPART4  . . . . . . . . . . . .  	L NEAR	0BCC	CSEG	Global
HDR_ERR_BAD_ADDR_MARK  . . . . .  	NUMBER	0002	
HDR_ERR_BAD_CMD  . . . . . . . .  	NUMBER	0001	
HDR_ERR_BAD_CNTRLR . . . . . . .  	NUMBER	0020	
HDR_ERR_BAD_ECC  . . . . . . . .  	NUMBER	0010	
HDR_ERR_BAD_RESET  . . . . . . .  	NUMBER	0005	
HDR_ERR_BAD_SEEK . . . . . . . .  	NUMBER	0040	
HDR_ERR_BAD_TRACK  . . . . . . .  	NUMBER	000B	
HDR_ERR_COUNT  . . . . . . . . .  	NUMBER	0002	
HDR_ERR_DATA_CORRECTED . . . . .  	NUMBER	0011	
HDR_ERR_DMA_BOUNDARY . . . . . .  	NUMBER	0009	
HDR_ERR_EOF  . . . . . . . . . .  	NUMBER	0005	
HDR_ERR_FILE_COUNT . . . . . . .  	NUMBER	0007	
HDR_ERR_FNCT . . . . . . . . . .  	NUMBER	0004	
HDR_ERR_INIT_FAIL  . . . . . . .  	NUMBER	0007	
HDR_ERR_MULPL  . . . . . . . . .  	NUMBER	0006	
HDR_ERR_OFFSET . . . . . . . . .  	NUMBER	0001	
HDR_ERR_OK . . . . . . . . . . .  	NUMBER	0000	
HDR_ERR_PART . . . . . . . . . .  	NUMBER	0003	
HDR_ERR_RECRD_NOT_FOUND  . . . .  	NUMBER	0004	
HDR_ERR_SENSE_FAIL . . . . . . .  	NUMBER	00FF	
HDR_ERR_TIME_OUT . . . . . . . .  	NUMBER	0080	
HDR_ERR_UNDEF_ERR  . . . . . . .  	NUMBER	00BB	
HDR_FNCTN_INFO . . . . . . . . .  	NUMBER	0004	
HDR_FNCTN_INIT . . . . . . . . .  	NUMBER	0000	
HDR_FNCTN_READ . . . . . . . . .  	NUMBER	0001	
HDR_FNCTN_SEEK . . . . . . . . .  	NUMBER	0003	
HDR_FNCTN_WRITE  . . . . . . . .  	NUMBER	0002	
HWMSGP . . . . . . . . . . . . .  	L BYTE	0D9D	CSEG	Global
HWMSGPC  . . . . . . . . . . . .  	L BYTE	0DB4	CSEG	Global
HWMSGR . . . . . . . . . . . . .  	L BYTE	0DC5	CSEG	Global

IDLEMSG  . . . . . . . . . . . .  	L BYTE	0D6B	CSEG	Global
INITPOINTERS . . . . . . . . . .  	L BYTE	101F	CSEG	Global
INITWAITPOINTERS . . . . . . . .  	L BYTE	103F	CSEG	Global
INTCOUNT . . . . . . . . . . . .  	L WORD	094C	CSEG	Global
INTCTRLMES . . . . . . . . . . .  	L BYTE	0E8E	CSEG	Global
INTSMSG  . . . . . . . . . . . .  	L BYTE	0D23	CSEG	Global
INTTBLMES  . . . . . . . . . . .  	L BYTE	0E02	CSEG	Global
INT_ENABLE . . . . . . . . . . .  	L DWORD	0938	CSEG	Global
INT_REQ  . . . . . . . . . . . .  	L DWORD	0934	CSEG	Global
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Symbols-4



JANUS_BASE_SEG . . . . . . . . .  	L WORD	092C	CSEG	Global
JANUS_BUFFER_SEG . . . . . . . .  	L WORD	0930	CSEG	Global
JANUS_PARAM_SEG  . . . . . . . .  	L WORD	092E	CSEG	Global
JANUS_PART_BASE  . . . . . . . .  	L WORD	0932	CSEG	Global

LIBVERSIONMSG  . . . . . . . . .  	L BYTE	0C52	CSEG	Global
LOADERRMSG . . . . . . . . . . .  	L BYTE	0F49	CSEG	Global
LOADMSG  . . . . . . . . . . . .  	L BYTE	0CEA	CSEG	Global

MAKESERVICE  . . . . . . . . . .  	L BYTE	0FE6	CSEG	Global
MAXPART  . . . . . . . . . . . .  	NUMBER	0004	
MAX_CYL  . . . . . . . . . . . .  	L WORD	0BE0	CSEG	Global
MAX_DRIVE  . . . . . . . . . . .  	L BYTE	0BDE	CSEG	Global
MAX_HEAD . . . . . . . . . . . .  	L BYTE	0BDF	CSEG	Global
MAX_SEC  . . . . . . . . . . . .  	L BYTE	0BE2	CSEG	Global
MEMCHUNK . . . . . . . . . . . .  	L BYTE	0FA7	CSEG	Global

NEXTSLOTMSG  . . . . . . . . . .  	L BYTE	10D8	CSEG	Global
NOBASEMSG  . . . . . . . . . . .  	L BYTE	0CA7	CSEG	Global
NODRIVEMSG . . . . . . . . . . .  	L BYTE	0F05	CSEG	Global
NOHANMES . . . . . . . . . . . .  	L BYTE	0EB0	CSEG	Global
NOINTMES . . . . . . . . . . . .  	L BYTE	0EDD	CSEG	Global
NOPARTMSG  . . . . . . . . . . .  	L BYTE	0F1C	CSEG	Global
NOSERVICEBASEMSG . . . . . . . .  	L BYTE	0CCB	CSEG	Global

PARASMSG . . . . . . . . . . . .  	L BYTE	0D3B	CSEG	Global
PARMPTR  . . . . . . . . . . . .  	L WORD	094E	CSEG	Global
PARTCOUNT  . . . . . . . . . . .  	L BYTE	0BE6	CSEG	Global
PARTMARKER . . . . . . . . . . .  	L BYTE	0BDC	CSEG	Global	Length = 0002
PCINT_DONE . . . . . . . . . . .  	L DWORD	0976	CSEG	Global

REGMSG . . . . . . . . . . . . .  	L BYTE	0DDC	CSEG	Global
REMOVEMSG  . . . . . . . . . . .  	L BYTE	1135	CSEG	Global

SCROLLFLAG . . . . . . . . . . .  	L BYTE	093E	CSEG	Global
SECTORSIZE . . . . . . . . . . .  	NUMBER	0200	
SERVICEADDED . . . . . . . . . .  	L BYTE	1071	CSEG	Global
SERVICEAVAILABLE . . . . . . . .  	L BYTE	1056	CSEG	Global
SERVICEDELETED . . . . . . . . .  	L BYTE	1159	CSEG	Global
SERVICESEARCH  . . . . . . . . .  	L BYTE	0FC0	CSEG	Global
SERVSTATTAB  . . . . . . . . . .  	L BYTE	0956	CSEG	Global	Length = 0020
SPACE  . . . . . . . . . . . . .  	L BYTE	097A	CSEG	Global	Length = 0064
SSTACK . . . . . . . . . . . . .  	L DWORD	0942	CSEG	Global

TESTINTMES . . . . . . . . . . .  	L BYTE	0E6D	CSEG	Global
TICKS  . . . . . . . . . . . . .  	L WORD	094A	CSEG	Global

UCOUNTMSG  . . . . . . . . . . .  	L BYTE	1123	CSEG	Global
UPDATEMSG  . . . . . . . . . . .  	L BYTE	0F8A	CSEG	Global
USTACK . . . . . . . . . . . . .  	L DWORD	0946	CSEG	Global

WAITFLAG . . . . . . . . . . . .  	L BYTE	093F	CSEG	Global
WAITSTATUS . . . . . . . . . . .  	L BYTE	0F9C	CSEG	Global
WRONGVERSIONMSG  . . . . . . . .  	L BYTE	0C69	CSEG	Global

Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:37:09
VAR  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc.      Symbols-5


@FILENAME  . . . . . . . . . . .  	TEXT  VAR		


    455 Source  Lines
    458 Total   Lines
    197 Symbols

  48382 + 197346 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
