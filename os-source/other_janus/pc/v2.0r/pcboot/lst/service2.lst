Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-1


				TITLE	SERVICE2  -  COPYRIGHT (C) 1986 - 1988 
				Commodore Amiga Inc.  
				PAGE	60,132	 
				;***************************************************************************** 
				;* 
				;* Janus Services 2.Generation: 
				;* 
				; 
				; New code  :	30-Mar-88 Torsten Burgdorff 
				; 45.Update :  	 2-Apr-88 TB	add service 10,11,12 
				; 46.Update :  	10-Apr-88 TB	change structures according to RJ 
				; 47.Update :	14-Apr-88 TB    change memory locking, add service 13,14 
				; 49.Update :	26-Apr-88 TB    forget channeling 
				; 51.Update :	14-Jun-88 TB    fix "Wait-for-service" in service 11 
				; 53.Update :	23-Jun-88 TB    cleanup and fix service 14 
				; 54.Update :   24-Jun-88 TB	use new set of include files 
				; 55.Update :   28-jun-88 TB    add service 15,16 
				; 56.Update :   18-jul-88 TB    add flags to service 10,11 
				; 57.Update :   20-jul-88 TB	use memory.inc 
				; 58.Update :   21-jul-88 TB	RJ fixed UserCount 
				; 59.Update :   25-jul-88 TB	add Amiga/PC UserCount, fix service 12 
				; 60.Update :   27-jul-88 TB	fixed Seg/Off order of PCMemPtr	and 
				;				 update AmigaMemPtr in service 10 
				; 63.Update :    6-oct-88 TB	implement PCWait flag 
				; 
				;****************************************************************************** 
				 
 0000				cseg segment   	para public 'code' 
				 
				     assume    	cs:cseg,ss:cseg,ds:cseg,es:nothing 
				 
				; 
				; external utilities			 
				;	       	 
				extrn	       	outhxw:near		     ; prints hex word in ax 
				extrn	       	outhxb:near		     ; prints hex byte in al 
				extrn	       	outint:near		     ; prints integer in ax 
				extrn	       	newline:near		     ; prints cr,lf 
				extrn	       	pstrng:near		     ; prints out string 
				; 
				extrn		SendJanusInt:near 
				extrn		GetBase:near	 
				extrn		SetParam:near 
				extrn		AllocMem:near 
				extrn		FreeMem:near 
				extrn		Dummy:near 
					 
 =				w	       	equ     word ptr 
					 
				include        	janus\janusvar.inc 
			     C	;************************************************************************* 
			     C	; (PC side file) 
			     C	; 
			     C	; janusvar.inc -- the software data structures for the janus board 
			     C	; 
			     C	; Copyright (c) 1986, Commodore Amiga Inc.,  All rights reserved. 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-2


			     C	; 
			     C	; Date       Name 
			     C	; --------   -------------	--------------------------------------------- 
			     C	; 07-15-88 - Bill Koester  - Modified for self inclusion of required files 
			     C	; 07-26-88 - Bill Koester  - Added ja_Reserved to JanusAmiga 
			     C	;                            Added ja_AmigaState, ja_PCState and related 
			     C	; 10-05-88 - Bill Koester  - Added Rev/Ver fields to JanusAmiga struc				
										flags to JanusAmiga 
			     C	; 10-06-88 - Bill Koester  - Added HandlerLoaded field to Janus Amiga 
			     C	;************************************************************************* 
			     C	 
			     C	;NOTE Needs Memory.inc 
			     C	 
			     C	; all bytes described here are described in the byte order of the 8088. 
			     C	; Note that words and longwords in these structures will be accessed from 
			     C	; the word access space to preserve the byte order in a word -- the 8088 
			     C	; will access longwords by reversing the words : like a 68000 access to the 
			     C	; word access memory 
			     C	 
			     C	JanusAmiga  struc 
			     C	 
 0000  00                    C	   ja_Lock           db 0        ; also used to handshake at 8088 reset 
 0001  00                    C	   ja_8088Go         db 0        ; unlocked to signal 8088 to initialize 
			     C	;------------------------------- JanusMemHead of ParamMem 
 0002  00                    C	   jpm_Lock          db 0 
 0003  00                    C	   jpm_pad0          db 0 
 0004  00000000              C	   jpm_68000Base     dd 0 
 0008  0000                  C	   jpm_8088Segment   dw 0 
 000A  0000                  C	   jpm_First         dw 0 
 000C  0000                  C	   jpm_Max           dw 0 
 000E  0000                  C	   jpm_Free          dw 0 
			     C	;------------------------------- JanusMemHead of BufferMem 
 0010  00                    C	   jbm_Lock          db 0 
 0011  00                    C	   jbm_pad0          db 0 
 0012  00000000              C	   jbm_68000Base     dd 0 
 0016  0000                  C	   jbm_8088Segment   dw 0 
 0018  0000                  C	   jbm_First         dw 0 
 001A  0000                  C	   jbm_Max           dw 0 
 001C  0000                  C	   jbm_Free          dw 0 
			     C	;------------------------------- 
 001E  0000                  C	   ja_Interrupts     dw 0 
 0020  0000                  C	   ja_Parameters     dw 0 
 0022  0000                  C	   ja_NumInterrupts  dw 0 
			     C	 
			     C	   ; This field is used by Janus.library to communicate Amiga states 
			     C	   ; to the PC. The bits of this field may be read by anyone, but 
			     C	   ; may be written only by janus.library. 
			     C	    
 0024  0000                  C	   ja_AmigaState	dw 0 
			     C	   ; This field is used by the PC to communicate PC states 
			     C	   ; to the Amiga. The bits of this field may be read by anyone, but 
			     C	   ; may be written only by the PC operating system. 
			     C	    
 0026  0000                  C	   ja_PCState	dw 0 
			     C	 
			     C	   ; These fields are set by janus.library and the PC Janus handler so 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-3


			     C	   ; they can read each others version numbers. 
			     C	   ; 
 0028  0000                  C	   ja_JLibRev		dw	0 
 002A  0000                  C	   ja_JLibVer		dw	0 
 002C  0000                  C	   ja_JHandlerRev	dw	0 
 002E  0000                  C	   ja_JHandlerVer	dw	0 
			     C	 
			     C	   ; This field is zero before the PC is running and is set to nonzero 
			     C	   ; when the PC's JanusHandler has finished initializing. 
			     C	   ; 
 0030  0000                  C	   ja_HandlerLoaded	dw	0 
			     C	    
 0032  0004[                 C	   ja_Reserved dd 4 dup (0) 
	   00000000          C	
			 ]   C	
			     C	
			     C	 
 0042                        C	JanusAmiga  ends 
			     C	 
			     C	; === AmigaState Definitions ===  
 = FFFE                      C	AMIGASTATE_RESERVED	= 0FFFEh 
 = 0001                      C	AMIGA_NUMLOCK_SET	= 0001h 
 = 0000                      C	AMIGA_NUMLOCK_SETn      = 0 
 = 0002                      C	AMIGA_NUMLOCK_RESET     = 0002h 
 = 0001                      C	AMIGA_NUMLOCK_RESETn    = 1 
			     C	 
			     C	; === PCState Definitions ===  
 = FFFF                      C	PCSTATE_RESERVED	= 0FFFFh 
			     C	 
			     C	 
			     C	;------ constant to set to indicate a pending software interrupt 
			     C	 
 = 007F                      C	JSETINT  	=   07fh 
			     C	 
			     C	 
				 
				include		janus\services.inc 
			     C	;* *** services.inc ******************************************************** 
			     C	;* (PC side file) 
			     C	;* 
			     C	;* services.inc -- Service Definitions and Data Structures 
			     C	;* 
			     C	;* Copyright (c) 1986, 1987, 1988, Commodore Amiga Inc., All rights reserved 
			     C	;*  
			     C	;* HISTORY 
			     C	;* Date       name               Description 
			     C	;* ---------  -----------------  ------------------------------------------- 
			     C	;* early 86 - Burns/Katin clone - Created this file 
			     C	;* 02-22-88 - RJ Mical          - Added service data structures 
			     C	;* 07-25-88 - Bill Koester      - Added ServiceCustomer structure 
			     C	;* 07-26-88 - Bill Koester      - Added sd_PCUserCount to ServiceData 
			     C	;*                                Changed sd_UserCount to sd_AmigaUserCount 
			     C	;*                                Added sd_ReservedByte to ServiceData 
			     C	;* 10-05-88 - Bill Koester	- Added SERVICE_PCWAIT flag definitions 
			     C	;* 10-09-88 - Bill Koester      - Added PC/AMIGA_EXCLUSVIE & SERVICE_ADDED 
			     C	;*                                flag definitions. 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-4


			     C	;*                              - Added sd_Semaphore field to ServiceData 
			     C	;* ************************************************************************* 
			     C	 
			     C	 
			     C	;* As a coding convenience, we assume a maximum of 32 handlers. 
			     C	;* People should avoid using this in their code, because we want 
			     C	;* to be able to relax this constraint in the future.  All the 
			     C	;* standard commands' syntactically support any number of interrupts, 
			     C	;* but the internals are limited to 32. 
			     C	 
			     C	 
 = 0020                      C	MAXHANDLER   =   32 
			     C	 
			     C	 
			     C	;* 
			     C	;* this is the table of hard coded services.  Other services may exist 
			     C	;* that are dynamically allocated. 
			     C	;* 
			     C	 
			     C	 
			     C	;* service numbers constrained by hardware  
			     C	 
 = 0000                      C	JSERV_MINT           =      0  ; monochrome display written to 
 = 0001                      C	JSERV_GINT           =      1  ; color display written to 
 = 0002                      C	JSERV_CRT1INT        =      2  ; mono display's control registers changed 
 = 0003                      C	JSERV_CRT2INT        =      3  ; color display's control registers changed 
 = 0004                      C	JSERV_ENBKB          =      4  ; keyboard ready for next character 
 = 0005                      C	JSERV_LPT1INT        =      5  ; parallel control register 
 = 0006                      C	JSERV_COM2INT        =      6  ; serial control register 
			     C	 
			     C	;* hard coded service numbers  
			     C	 
 = 0007                      C	JSERV_PCBOOTED       =      7  ; PC is ready to service soft interrupts 
 = 0008                      C	JSERV_SCROLL         =      8  ; PC is scrolling its screen 
 = 0009                      C	JSERV_HARDDISK       =      9  ; Amiga reading PC hard disk 
 = 000A                      C	JSERV_READAMIGA      =      10 ; PC reading Amiga mem 
 = 000B                      C	JSERV_READPC         =      11 ; Amiga reading PC mem 
 = 000C                      C	JSERV_AMIGACALL      =      12 ; PC causing Amiga function call 
 = 000D                      C	JSERV_PCCALL         =      13 ; Amiga causing PC interrupt 
 = 000E                      C	JSERV_AMIGASERVICE   =      14 ; PC initiating Amiga side of a service 
 = 000F                      C	JSERV_PCSERVICE      =      15 ; Amiga initiating PC side of a service 
 = 0010                      C	JSERV_PCDISK         =      16 ; PC using AmigaDos files 
 = 0011                      C	JSERV_AMOUSE         =      17 ; AMouse Communications 
			     C	 
			     C	 
			     C	;--- JANUS PC Function calls ----------- 
			     C	; 
			     C	; This is the table of function codes. These functions allow controlling 
			     C	; of dynamically allocated services (dyn-service). 
			     C	;  
			     C	; 1.Generation:	(befor Mai'88) 
			     C	; 
 = 0000                      C	JFUNC_GETSERVICE1	=	 0	; not supported any more    	 
 = 0001                      C	JFUNC_GETBASE		=	 1	; report segments, offset of janus mem 
 = 0002                      C	JFUNC_ALLOCMEM		=	 2	; allocate janus memory 
 = 0003                      C	JFUNC_FREEMEM		=	 3	; free janus memory 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-5


 = 0004                      C	JFUNC_SETPARAM		=	 4	; set pointer to service parameter 
 = 0005                      C	JFUNC_SETSERVICE	=	 5	; not supported any more    	 
 = 0006                      C	JFUNC_STOPSERVICE	=	 6	; not supported any more    	 
 = 0007                      C	JFUNC_CALLAMIGA		=	 7	; call service on Amiga side 
 = 0008                      C	JFUNC_WAITAMIGA		=	 8 	; wait for service becomes ready 
 = 0009                      C	JFUNC_CHECKAMIGA	=	 9	; check service status 
			     C	;					 
			     C	; 2.Generation: 
			     C	; 
 = 000A                      C	JFUNC_ADDSERVICE	=	10	; add a dyn-service  
 = 000B                      C	JFUNC_GETSERVICE	=	11	; link to a dyn-service 
 = 000C                      C	JFUNC_CALLSERVICE	=	12	; call a dyn-service 
 = 000D                      C	JFUNC_RELEASESERVICE	=	13	; unlink from a dyn-service 
 = 000E                      C	JFUNC_DELETESERVICE	=	14	; delete a dyn-service 
 = 000F                      C	JFUNC_LOCKSERVICEDATA	=	15	; lock private mem of a dyn-service 
 = 0010                      C	JFUNC_UNLOCKSERVICEDATA	=	16	; unlock private mem of a dyn-service 
			     C	 
 = 0010                      C	JFUNC_MAX		=	16 	; Last function (for range check only) 
			     C	 
 = 000B                      C	JFUNC_JINT		=	0bh 
			     C	 
			     C	;* === ServiceData Structure ===============================================  
			     C	;* The ServiceData structure is used to share data among all callers of  
			     C	;* all of the Service routines.  One of these is allocated in janus memory  
			     C	;* for each service.   
			     C	 
			     C	ServiceData struc 
			     C	 
			     C	   ; The ServiceData ID numbers are used to uniquely identify 
			     C	   ; application-specific services.  There are two ID numbers: 
			     C	   ; the global ApplicationID and the application's local LocalID. 
			     C	   ; 
			     C	   ; The ApplicationID is a 32-bit number which *must* be assigned to 
			     C	   ; an application designer by Commodore-Amiga. 
			     C	   ; Once a service ApplicationID is assigned to an application 
			     C	   ; designer, that designer "owns" that ID number forever. 
			     C	   ; Note that this will provide unique ServiceData identification 
			     C	   ; numbers only for the first 4.3 billion ServiceData designers 
			     C	   ; after that, there's some risk of a collision. 
			     C	   ; 
			     C	   ; The LocalID, defined by the application designer, is a local 
			     C	   ; subcategory of the global ApplicationID.  These can mean anything 
			     C	   ; at all.  There are 65,536 of these local ID's. 
 0000  00000000              C	   sd_ApplicationID  dd 0 
 0004  0000                  C	   sd_LocalID        dw 0 
			     C	 
			     C	 
			     C	   ; The flag bits are defined below.  Some of these are set by the 
			     C	   ; application programs which use the service, and some are set 
			     C	   ; by the system. 
 0006  0000                  C	   sd_Flags    dw 0 
			     C	 
			     C	 
			     C	   ; This field is initialized by the system for you, and then  
			     C	   ; is never touched by the system again.  Users of the  
			     C	   ; service can agree by convention that they have to obtain  
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-6


			     C	   ; this lock before using the service.   
			     C	   ; If you are the AddService() caller and you want this lock  
			     C	   ; to be locked before the service is linked into the system,  
			     C	   ; set the AddService() ADDS_LOCKDATA argument flag.   
 0008  00                    C	   sd_ServiceDataLock   db 0 
			     C	 
			     C	 
			     C	   ; This tracks the number of users currently connected  
			     C	   ; to this service. 
 0009  00                    C	   sd_AmigaUserCount   db 0 
 000A  00                    C	   sd_PCUserCount      db 0 
 000B  00                    C	   sd_ReservedByte     db 0 
			     C	 
			     C	   ; These are the standard janus memory descriptions, which describe 
			     C	   ; the parameter memory associated with this service.  This memory 
			     C	   ; (if any) will be allocated automatically by the system when the 
			     C	   ; service if first added.  The creator of the service 
			     C	   ; (the one who calls AddService()) supplies the MemSize and 
			     C	   ; MemType values; after the service is added the MemPtr field 
			     C	   ; will point to the parameter memory.  GetService() callers, after 
			     C	   ; the service comes available, will find all of these fields 
			     C	   ; filled in with the appropriate values. 
			     C	   ; The AmigaMemPtr and PCMemPtr both point to the same location 
			     C	   ; of Janus memory; an Amiga program should use the AmigaMemPtr, 
			     C	   ; and a PC program should use the PCMemPtr 
 000C  0000                  C	   sd_MemSize        dw 0 
 000E  0000                  C	   sd_MemType        dw 0 
 0010  0000                  C	   sd_MemOffset      dw 0 
 0012  00000000              C	   sd_AmigaMemPtr    dd 0 
 0016  00000000              C	   sd_PCMemPtr       dd 0 
			     C	 
			     C	 
			     C	   ; This offset is used as the key for calls to AllocServiceMem()  
			     C	   ; and FreeServiceMem().  This key can be used by any one  
			     C	   ; who's learned about this service via either AddService()  
			     C	   ; or GetService().  The system makes no memory allocations  
			     C	   ; using this key, so it's completely under application control. 
			     C	   ; Any memory attached to this key by calls to AllocServiceMem()  
			     C	   ; will be freed automatically after the service has been  
			     C	   ; deleted and all users of the service have released the service.   
 001A  0000                  C	   sd_JRememberKey   dw 0 
			     C	 
			     C	 
			     C	   ; These pointers are for the system-maintained lists of 
			     C	   ; structures.  If you disturb any of these pointers, you will be 
			     C	   ; tickling the guru's nose, and when the guru sneezes ... 
 001C  0000                  C	   sd_NextServiceData      dw 0 
 001E  00000000              C	   sd_FirstPCCustomer      dd 0 
 0022  00000000              C	   sd_FirstAmigaCustomer   dd 0 
			     C	 
			     C	   ; 
			     C	   ; Semaphore structure pointer for services that allow multiple customers 
			     C	   ; 
 0026  00000000              C	   sd_Semaphore 	   dd 0 
			     C	 
			     C	   ; These fields are reserved for future use  
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-7


 002A  0004[                 C	   sd_ZaphodReserved    dd 4 dup (0) 
	   00000000          C	
			 ]   C	
			     C	
			     C	 
 003A                        C	ServiceData ends 
			     C	 
			     C	 
			     C	;* === Flag Definitions ===  
			     C	 
 = 0001                      C	SERVICE_DELETED      =   00001h    ; Owner of this service deleted it 
 = 0000                      C	SERVICE_DELETEDn     =   0 
 = 0002                      C	EXPUNGE_SERVICE      =   00002h    ; Owner of service should delete 
 = 0001                      C	EXPUNGE_SERVICEn     =   1 
 = 0004                      C	SERVICE_AMIGASIDE    =   00004h    ; Set if Amiga created the service 
 = 0002                      C	SERVICE_AMIGASIDEn   =   2 
 = 0008                      C	SERVICE_PCWAIT	     =   00008h	   ; Set when PC calls a service 
 = 0003                      C	SERVICE_PCWAITn      =   3	   ; Cleared when service replys 
 = 0010                      C	AMIGA_EXCLUSIVE      =   00010h    ; Only one Amiga customer allowed   
 = 0004                      C	AMIGA_EXCLUSIVEn     =   4 
 = 0020                      C	PC_EXCLUSIVE         =   00020h    ; Only one PC customer allowed      
 = 0005                      C	PC_EXCLUSIVEn        =   5 
 = 0040                      C	SERVICE_ADDED        =   00040h    ; Set when service is added         
 = 0006                      C	SERVICE_ADDEDn       =   6 
			     C	 
			     C	 
			     C	;* === ServiceCustomer Structure ===========================================  
			     C	;* A ServiceCustomer structure is created for each "customer" of a given  
			     C	;* channel 
			     C	 
			     C	ServiceCustomer	struc 
			     C	 
 0000  00000000              C		scs_NextCustomer 	dd 0 
			     C	 
 0004  0000                  C		scs_Flags		dw 0 
			     C	 
 0006  00000000              C		scs_Task			dd 0 ;This points to the task of the customer  
 000A  00000000              C		scs_SignalBit		dd 0 ;Signal the customer with this bit  
			     C	 
 000E  0004[                 C		scs_JazzReserved  	dd 4 dup (0) 
	   00000000          C	
			 ]   C	
			     C	
			     C	 
 001E                        C	ServiceCustomer	ends 
			     C	 
			     C	;* === Flag Definitions === * 
			     C	;* These flags are set/cleared by the system 
 = 0100                      C	CALL_TOPC_ONLY       =   0100h 
 = 0008                      C	CALL_TOPC_ONLYn      =   8 
 = 0200                      C	CALL_FROMPC_ONLY     =   0200h 
 = 0009                      C	CALL_FROMPC_ONLYn    =   9 
 = 0400                      C	CALL_TOAMIGA_ONLY    =   0400h 
 = 000A                      C	CALL_TOAMIGA_ONLYn   =   10 
 = 0800                      C	CALL_FROMAMIGA_ONLY  =   0800h 
 = 000B                      C	CALL_FROMAMIGA_ONLYn =   11 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-8


			     C	 
			     C	; === AddService() Flags ================================================== 
			     C	; These are the definitions of the flag arguments that can be passed to the  
			     C	; AddService() function. 
			     C	 
 = 0001                      C	ADDS_EXCLUSIVE       = 00001h ; You want to be the *only* Amiga customer 
 = 0000                      C	ADDS_EXCLUSIVEn      = 0 
 = 0002                      C	ADDS_TOPC_ONLY       = 00002h ; You want to send signals only to the PC 
 = 0001                      C	ADDS_TOPC_ONLYn      = 1 
 = 0004                      C	ADDS_FROMPC_ONLY     = 00004h ; You want to get signals only from the PC 
 = 0002                      C	ADDS_FROMPC_ONLYn    = 2 
 = 0008                      C	ADDS_TOAMIGA_ONLY    = 00008h ; You want to send signals only to the Amiga 
 = 0003                      C	ADDS_TOAMIGA_ONLYn   = 3 
 = 0010                      C	ADDS_FROMAMIGA_ONLY  = 00010h ; You want to get signals only from the Amiga 
 = 0004                      C	ADDS_FROMAMIGA_ONLYn = 4 
 = 0020                      C	ADDS_LOCKDATA        = 00020h ; S'DataLock locked before linking to system 
 = 0005                      C	ADDS_LOCKDATAn       = 5 
			     C	 
			     C	;* These are the system's AddService() Flags  
 = 0100                      C	SD_CREATED           = 00100h 
 = 0008                      C	SD_CREATEDn          = 8 
			     C	 
			     C	 
			     C	 
			     C	; === GetService() Flags ==================================================  
			     C	; These are the definitions of the flag arguments that can be passed to the  
			     C	; GetService() function. 
			     C	 
 = 0001                      C	GETS_WAIT            = 00001h ; If service not yet available, you'll wait 
 = 0000                      C	GETS_WAITn           = 0 
 = 0002                      C	GETS_TOPC_ONLY       = 00002h ; You want to send signals only to the PC 
 = 0001                      C	GETS_TOPC_ONLYn      = 1 
 = 0004                      C	GETS_FROMPC_ONLY     = 00004h ; You want to get signals only from the PC 
 = 0002                      C	GETS_FROMPC_ONLYn    = 2 
 = 0008                      C	GETS_TOAMIGA_ONLY    = 00008h ; You want to send signals only to the Amiga 
 = 0003                      C	GETS_TOAMIGA_ONLYn   = 3 
 = 0010                      C	GETS_FROMAMIGA_ONLY  = 00010h ; You want to get signals only from the Amiga 
 = 0004                      C	GETS_FROMAMIGA_ONLYn = 4 
 = 0020                      C	GETS_EXCLUSIVE       = 00020h ; You want to be the *only* Amiga customer 
 = 0005                      C	GETS_EXCLUSIVEn      = 5 
 = 0040                      C	GETS_ALOAD_A         = 00040h ; Autoload the service on the Amiga side 
 = 0006                      C	GETS_ALOAD_An        = 6 
 = 0080                      C	GETS_ALOAD_PC        = 00080h ; Autoload the service on the PC side 
 = 0007                      C	GETS_ALOAD_PCn       = 7 
			     C	 
			     C	 
			     C	 
			     C	; === Service() Result Codes ==========================================  
			     C	; These are the result codes that may be returned by a call to a Service  
			     C	; 
 =-0001                      C	JSERV_NOFUNCTION	= -1 	; Tried to call a not supported function 
 = 0000                      C	JSERV_OK         	=  0  	; All is well 
 = 0000                      C	JSERV_PENDING	 	=  0  	; Called service still pending on Amiga side 
 = 0001                      C	JSERV_FINISHED	 	=  1  	; Called service is finished on Amiga side 
 = 0002                      C	JSERV_NOJANUSBASE	=  2  	; ServiceBase structure not defined 
 = 0003                      C	JSERV_NOJANUSMEM 	=  3  	; We ran out of Janus memory 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-9


 = 0004                      C	JSERV_NOAMIGAMEM 	=  4  	; On the Amiga side we ran out of Amiga memory 
 = 0005                      C	JSERV_NOPCMEM    	=  5  	; On the PC side we ran out of PC memory 
 = 0006                      C	JSERV_NOSERVICE  	=  6  	; Tried to get a service that doesn't exist 
 = 0007                      C	JSERV_DUPSERVICE 	=  7  	; Tried to add a service that already existed 
 = 0008                      C	JSERV_ILLFUNCTION	=  8	; Tried to call an illegal function 
 = 0009                      C	JSERV_NOTEXCLUSIVE      =  9  ; Wanted to but couldn't be exclusive user  
 = 000A                      C	JSERV_BADAUTOLOAD       =  10 ; Wanted to autoload but couldn't 
			     C	 
			     C	 
			     C	 
			     C	 
			     C	 
				 
				include		janus\memory.inc 
			     C	;************************************************************************* 
			     C	; (PC side file) 
			     C	; 
			     C	; Memory.inc -- Structures and defines for Janus memory 
			     C	; 
			     C	; Copyright (c) 1986, Commodore Amiga Inc.,  All rights reserved. 
			     C	; 
			     C	;************************************************************************* 
			     C	 
			     C	 
			     C	;* magic constants for memory allocation  
			     C	 
 = 00FF                      C	MEM_TYPEMASK      =   000ffh   ; 8 memory areas 
 = 0000                      C	MEMB_PARAMETER    =   0        ; parameter memory 
 = 0001                      C	MEMB_BUFFER       =   1        ; buffer memory 
			     C	 
 = 0001                      C	MEMF_PARAMETER    =   (1 SHL 0)   ; parameter memory 
 = 0002                      C	MEMF_BUFFER       =   (1 SHL 1)   ; buffer memory 
			     C	 
 = 3000                      C	MEM_ACCESSMASK    =   03000h   ; bits that participate in access types 
 = 0000                      C	MEM_BYTEACCESS    =   00000h   ; pointer to byte access address space 
 = 1000                      C	MEM_WORDACCESS    =   01000h   ; pointer to word access address space 
 = 2000                      C	MEM_GRAPHICACCESS =   02000h   ; ptr to graphic access address space 
 = 3000                      C	MEM_IOACCESS      =   03000h   ; pointer to i/o access address space 
			     C	 
 = 0005                      C	TYPEACCESSTOADDR  =   5        ; # of bits to turn access mask to addr 
			     C	 
			     C	; The amiga side of the janus board has four sections of its address space. 
			     C	; Three of these parts are different arrangements of the same memory.  The 
			     C	; fourth part has the specific amiga accesible IO registers (jio_??). 
			     C	; The other three parts all contain the same data, but the data is arranged 
			     C	; in different ways: Byte Access lets the 68k read byte streams written 
			     C	; by the 8088, Word Access lets the 68k read word streams written by the 
			     C	; 8088, and Graphic Access lets the 68k read medium res graphics memory 
			     C	; in a more efficient manner (the pc uses packed two bit pixels; graphic 
			     C	; access rearranges these data bits into two bytes, one for each bit plane). 
			     C	 
 = 0000                      C	ByteAccessOffsetH     =   00h 
 = 0000                      C	ByteAccessOffsetL     =   0000h 
 = 0002                      C	WordAccessOffsetH     =   02h 
 = 0000                      C	WordAccessOffsetL     =   0000h 
 = 0004                      C	GraphicAccessOffsetH  =   04h 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-10


 = 0000                      C	GraphicAccessOffsetL  =   0000h 
 = 0006                      C	IoAccessOffsetH       =   06h 
 = 0000                      C	IoAccessOffsetL       =   0000h 
			     C	 
			     C	 
			     C	; within each bank of memory are several sub regions.  These are the 
			     C	; definitions for the sub regions 
			     C	 
 = 0000                      C	BufferOffsetH      =      00h 
 = 0000                      C	BufferOffsetL      =      0000h 
 = 0001                      C	ColorOffsetH       =      01h 
 = 0000                      C	ColorOffsetL       =      0000h 
 = 0001                      C	ParameterOffsetH   =      01h 
 = 8000                      C	ParameterOffsetL   =      08000h 
 = 0001                      C	MonoVideoOffsetH   =      01h 
 = C000                      C	MonoVideoOffsetL   =      0c000h 
 = 0001                      C	IoRegOffsetH       =      01h 
 = E000                      C	IoRegOffsetL       =      0e000h 
			     C	 
 = 0001                      C	BufferSizeH        =      01h 
 = 0000                      C	BufferSizeL        =      0000h 
 = 0000                      C	ParameterSizeH     =      00h 
 = 4000                      C	ParameterSizeL     =      04000h 
			     C	 
			     C	; constants for sizes of various janus regions 
			     C	 
 = 0000                      C	JANUSTOTALSIZE    =   512*1024 ; 1/2 megabyte 
 = 0000                      C	JANUSBANKSIZE     =   128*1024 ; 128K per memory bank 
 = 0004                      C	JANUSNUMBANKS     =   4        ; four memory banks 
 = 0006                      C	JANUSBANKMASKH    =   06h      ; mask bits for bank region 
 = 0000                      C	JANUSBANKMASKL    =   0000h 
			     C	 
			     C	 
			     C	; all bytes described here are described in the byte order of the 8088. 
			     C	; Note that words and longwords in these structures will be accessed from 
			     C	; the word access space to preserve the byte order in a word -- the 8088 
			     C	; will access longwords by reversing the words : like a 68000 access to the 
			     C	; word access memory 
			     C	 
			     C	; JanusMemHead -- a data structure roughly analogous to an exec mem chunk. 
			     C	; It is used to keep track of memory used between the 8088 and the 68000. 
			     C	 
			     C	 
			     C	JanusMemHead   struc 
			     C	 
 0000  00                    C	    jmh_Lock        db 0     ; lock byte between processors 
 0001  00                    C	    jmh_pad0        db 0 
 0002  00000000              C	    jmh_68000Base   dd 0     ; rptr's are relative to this 
 0006  0000                  C	    jmh_8088Segment dw 0     ; segment base for 8088 
 0008  0000                  C	    jmh_First       dw 0     ; offset to first free chunk 
 000A  0000                  C	    jmh_Max         dw 0     ; max allowable index 
 000C  0000                  C	    jmh_Free        dw 0     ; total number of free bytes -1 
			     C	 
 000E                        C	JanusMemHead   ends 
			     C	 
			     C	JanusMemChunk  struc 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-11


			     C	 
 0000  0000                  C	     jmc_Next dw 0            ; rptr to next free chunk 
 0002  0000                  C	     jmc_Size dw 0            ; size of chunk -1 
			     C	 
 0004                        C	JanusMemChunk  ends 
			     C	 
			     C	 
			     C	;* === =====================================================================  
			     C	;* === JanusRemember Structure =============================================  
			     C	;* === =====================================================================  
			     C	;* This is the structure used for the JRemember memory management routines  
			     C	 
			     C	JanusRemember  struc 
			     C	 
 0000  0000                  C	   jrm_NextRemember  dw 0 ; Pointer to the next JanusRemember struct 
 0002  0000                  C	   jrm_Offset        dw 0 ; Janus offset to this memory allocation 
 0004  0000                  C	   jrm_Size          dw 0 ; Size of this memory allocation 
 0006  0000                  C	   jrm_Type          dw 0 ; Type of this memory allocation 
			     C	 
 0008                        C	JanusRemember  ends 
			     C	 
			     C	 
			     C	 
				 
				include		privserv.inc 
			     C	;***************************************************************************** 
			     C	; 
			     C	; PrivServ.inc contains private structures and debug switches for service1+2  
			     C	; 
			     C	;****************************************************************************** 
			     C	.list 
			     C	 
				 
				include        	macros.inc 
			     C	;***************************************************************************** 
			     C	; 
			     C	; macros.inc	        
			     C	; 
			     C	;***************************************************************************** 
			     C	.list 
			     C	 
			     C	 
			     C	 
			     C	 
				 
				include        	vars_ext.inc 
			     C	;***************************************************************************** 
			     C	; 
			     C	; vars_ext.inc declares variable datas of PC janus handler as external; 
			     C	;	       these datas are defined in vars.inc	    
			     C	; 
			     C	;--- external data ----------------------------------------------------------- 
			     C	.list 
			     C	 
			     C	 
				 
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Page     1-12


				include		words.inc 
			     C	;************************************************ 
			     C	; File: words.inc 
			     C	;************************************************ 
			     C	; To access low words, the pc uses reverse order 
			     C	; to access them in memory to maintain 68000 long  
			     C	; word order. A DD sould be seen as: 
			     C	; 
			     C	;   offset	  0	1     2     3 to address 
			     C	;   -------------------------------------------- 
			     C	;    byte#	  2	3     0     1  of long word 
			     C	; 
			     C	; So we define: 
			     C	; 
 = 0000                      C	high_word =    0 
 = 0002                      C	low_word  =    2 
			     C	; 
			     C	;************************************************ 
			     C	 
				 
				include 	equ.inc 
			     C	;****************************************************************************** 
			     C	; 
			     C	; equ.inc contains equals, flag bits and register addresses  
			     C	; 
			     C	;****************************************************************************** 
			     C	.list 
			     C	 
			     C	 
			     C	 
				 
				include		debug.inc 
			     C	;****************************************************************************** 
			     C	; 
			     C	; Debug.inc contains flag to enable debug messageses  
			     C	; 
			     C	;****************************************************************************** 
			     C	 
			     C	include		mes.inc			; includes all message offsets 
			     C	;**************************************************************************** 
			     C	; 
			     C	; mes.inc contains external messages for PC janus handler 
			     C	; 
			     C	;**************************************************************************** 
			     C	.list 
			     C	 
			     C	 
			     C	 
			     C	 

Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Symbols-1


Macros:

		N a m e			Lines

ICALL  . . . . . . . . . . . . .  	   2
IFLAGS . . . . . . . . . . . . .  	  13
INFO . . . . . . . . . . . . . .  	  13
INFO_AX  . . . . . . . . . . . .  	  16
INFO_AX_BX . . . . . . . . . . .  	  20
JLOCK  . . . . . . . . . . . . .  	   8
POPAC  . . . . . . . . . . . . .  	   4
POPALL . . . . . . . . . . . . .  	   6
PUSHAC . . . . . . . . . . . . .  	   4
PUSHALL  . . . . . . . . . . . .  	   6
UNLOCK . . . . . . . . . . . . .  	   1

Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

JANUSAMIGA . . . . . . . . . . .  	0042	001B
  JA_LOCK  . . . . . . . . . . .  	0000
  JA_8088GO  . . . . . . . . . .  	0001
  JPM_LOCK . . . . . . . . . . .  	0002
  JPM_PAD0 . . . . . . . . . . .  	0003
  JPM_68000BASE  . . . . . . . .  	0004
  JPM_8088SEGMENT  . . . . . . .  	0008
  JPM_FIRST  . . . . . . . . . .  	000A
  JPM_MAX  . . . . . . . . . . .  	000C
  JPM_FREE . . . . . . . . . . .  	000E
  JBM_LOCK . . . . . . . . . . .  	0010
  JBM_PAD0 . . . . . . . . . . .  	0011
  JBM_68000BASE  . . . . . . . .  	0012
  JBM_8088SEGMENT  . . . . . . .  	0016
  JBM_FIRST  . . . . . . . . . .  	0018
  JBM_MAX  . . . . . . . . . . .  	001A
  JBM_FREE . . . . . . . . . . .  	001C
  JA_INTERRUPTS  . . . . . . . .  	001E
  JA_PARAMETERS  . . . . . . . .  	0020
  JA_NUMINTERRUPTS . . . . . . .  	0022
  JA_AMIGASTATE  . . . . . . . .  	0024
  JA_PCSTATE . . . . . . . . . .  	0026
  JA_JLIBREV . . . . . . . . . .  	0028
  JA_JLIBVER . . . . . . . . . .  	002A
  JA_JHANDLERREV . . . . . . . .  	002C
  JA_JHANDLERVER . . . . . . . .  	002E
  JA_HANDLERLOADED . . . . . . .  	0030
  JA_RESERVED  . . . . . . . . .  	0032
JANUSMEMCHUNK  . . . . . . . . .  	0004	0002
  JMC_NEXT . . . . . . . . . . .  	0000
  JMC_SIZE . . . . . . . . . . .  	0002
JANUSMEMHEAD . . . . . . . . . .  	000E	0007
  JMH_LOCK . . . . . . . . . . .  	0000
  JMH_PAD0 . . . . . . . . . . .  	0001
  JMH_68000BASE  . . . . . . . .  	0002
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Symbols-2


  JMH_8088SEGMENT  . . . . . . .  	0006
  JMH_FIRST  . . . . . . . . . .  	0008
  JMH_MAX  . . . . . . . . . . .  	000A
  JMH_FREE . . . . . . . . . . .  	000C
JANUSREMEMBER  . . . . . . . . .  	0008	0004
  JRM_NEXTREMEMBER . . . . . . .  	0000
  JRM_OFFSET . . . . . . . . . .  	0002
  JRM_SIZE . . . . . . . . . . .  	0004
  JRM_TYPE . . . . . . . . . . .  	0006
SERVICECUSTOMER  . . . . . . . .  	001E	0005
  SCS_NEXTCUSTOMER . . . . . . .  	0000
  SCS_FLAGS  . . . . . . . . . .  	0004
  SCS_TASK . . . . . . . . . . .  	0006
  SCS_SIGNALBIT  . . . . . . . .  	000A
  SCS_JAZZRESERVED . . . . . . .  	000E
SERVICEDATA  . . . . . . . . . .  	003A	0012
  SD_APPLICATIONID . . . . . . .  	0000
  SD_LOCALID . . . . . . . . . .  	0004
  SD_FLAGS . . . . . . . . . . .  	0006
  SD_SERVICEDATALOCK . . . . . .  	0008
  SD_AMIGAUSERCOUNT  . . . . . .  	0009
  SD_PCUSERCOUNT . . . . . . . .  	000A
  SD_RESERVEDBYTE  . . . . . . .  	000B
  SD_MEMSIZE . . . . . . . . . .  	000C
  SD_MEMTYPE . . . . . . . . . .  	000E
  SD_MEMOFFSET . . . . . . . . .  	0010
  SD_AMIGAMEMPTR . . . . . . . .  	0012
  SD_PCMEMPTR  . . . . . . . . .  	0016
  SD_JREMEMBERKEY  . . . . . . .  	001A
  SD_NEXTSERVICEDATA . . . . . .  	001C
  SD_FIRSTPCCUSTOMER . . . . . .  	001E
  SD_FIRSTAMIGACUSTOMER  . . . .  	0022
  SD_SEMAPHORE . . . . . . . . .  	0026
  SD_ZAPHODRESERVED  . . . . . .  	002A
SERVICEPARAM . . . . . . . . . .  	0034	000A
  SERVICELOCK  . . . . . . . . .  	0000
  RESERVEPAD1  . . . . . . . . .  	0001
  PCTOAMIGA  . . . . . . . . . .  	0002
  AMIGATOPC  . . . . . . . . . .  	000A
  PCADDSERVICE . . . . . . . . .  	0012
  PCDELETESERVICE  . . . . . . .  	0016
  AMIGAADDSERVICE  . . . . . . .  	001A
  AMIGADELETESERVICE . . . . . .  	001E
  FIRSTSERVICEDATA . . . . . . .  	0022
  CYCLOPSRESERVED  . . . . . . .  	0024
STACKFRAME . . . . . . . . . . .  	0012	0009
  REGAX  . . . . . . . . . . . .  	0000
  REGBX  . . . . . . . . . . . .  	0002
  REGCX  . . . . . . . . . . . .  	0004
  REGDX  . . . . . . . . . . . .  	0006
  REGBP  . . . . . . . . . . . .  	0008
  REGDI  . . . . . . . . . . . .  	000A
  REGSI  . . . . . . . . . . . .  	000C
  REGDS  . . . . . . . . . . . .  	000E
  REGES  . . . . . . . . . . . .  	0010
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Symbols-3


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CSEG . . . . . . . . . . . . . .  	063B	PARA	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

ACKINT . . . . . . . . . . . . .  	NUMBER	007F	
ACTIVEFLAG . . . . . . . . . . .  	V BYTE	0000	CSEG	External
ADDSERVICE . . . . . . . . . . .  	N PROC	0032	CSEG	Global	Length = 01A1
ADDS_EXCLUSIVE . . . . . . . . .  	NUMBER	0001	
ADDS_EXCLUSIVEN  . . . . . . . .  	NUMBER	0000	
ADDS_FROMAMIGA_ONLY  . . . . . .  	NUMBER	0010	
ADDS_FROMAMIGA_ONLYN . . . . . .  	NUMBER	0004	
ADDS_FROMPC_ONLY . . . . . . . .  	NUMBER	0004	
ADDS_FROMPC_ONLYN  . . . . . . .  	NUMBER	0002	
ADDS_LOCKDATA  . . . . . . . . .  	NUMBER	0020	
ADDS_LOCKDATAN . . . . . . . . .  	NUMBER	0005	
ADDS_TOAMIGA_ONLY  . . . . . . .  	NUMBER	0008	
ADDS_TOAMIGA_ONLYN . . . . . . .  	NUMBER	0003	
ADDS_TOPC_ONLY . . . . . . . . .  	NUMBER	0002	
ADDS_TOPC_ONLYN  . . . . . . . .  	NUMBER	0001	
ADD_FOUND  . . . . . . . . . . .  	L NEAR	058F	CSEG
ALLOCMEM . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
ALLOCMEMORY  . . . . . . . . . .  	L NEAR	00BF	CSEG
ALLOCPARAM . . . . . . . . . . .  	V BYTE	0000	CSEG	External
ALREADYCALLED  . . . . . . . . .  	NUMBER	0054	
AMIGA  . . . . . . . . . . . . .  	NUMBER	000A	
AMIGAADDMSG  . . . . . . . . . .  	V BYTE	0000	CSEG	External
AMIGACALLMSG . . . . . . . . . .  	V BYTE	0000	CSEG	External
AMIGADELETEMSG . . . . . . . . .  	V BYTE	0000	CSEG	External
AMIGAINT . . . . . . . . . . . .  	NUMBER	0004	
AMIGASTATE_RESERVED  . . . . . .  	NUMBER	FFFE	
AMIGA_EXCLUSIVE  . . . . . . . .  	NUMBER	0010	
AMIGA_EXCLUSIVEN . . . . . . . .  	NUMBER	0004	
AMIGA_NUMLOCK_RESET  . . . . . .  	NUMBER	0002	
AMIGA_NUMLOCK_RESETN . . . . . .  	NUMBER	0001	
AMIGA_NUMLOCK_SET  . . . . . . .  	NUMBER	0001	
AMIGA_NUMLOCK_SETN . . . . . . .  	NUMBER	0000	
AS_EXIT  . . . . . . . . . . . .  	L NEAR	01C0	CSEG
AS_LOCKSTRUC . . . . . . . . . .  	L NEAR	0051	CSEG
AS_LOOPBASE  . . . . . . . . . .  	L NEAR	0040	CSEG
AS_NOBASE  . . . . . . . . . . .  	L NEAR	01C0	CSEG
AS_NO_CUSTOMER_LOCK  . . . . . .  	L NEAR	0160	CSEG

BASEMSG  . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
BELL . . . . . . . . . . . . . .  	NUMBER	0007	
BIOS_INT10 . . . . . . . . . . .  	V DWORD	0000	CSEG	External
BIOS_INT13 . . . . . . . . . . .  	V DWORD	0000	CSEG	External
BIOS_INT16 . . . . . . . . . . .  	V DWORD	0000	CSEG	External
BIOS_INT1C . . . . . . . . . . .  	V DWORD	0000	CSEG	External
BOOT_INT . . . . . . . . . . . .  	NUMBER	0019	
BS . . . . . . . . . . . . . . .  	NUMBER	0008	
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Symbols-4


BUFFERMSG  . . . . . . . . . . .  	V BYTE	0000	CSEG	External
BUFFEROFFSETH  . . . . . . . . .  	NUMBER	0000	
BUFFEROFFSETL  . . . . . . . . .  	NUMBER	0000	
BUFFERSIZEH  . . . . . . . . . .  	NUMBER	0001	
BUFFERSIZEL  . . . . . . . . . .  	NUMBER	0000	
BYTEACCESSOFFSETH  . . . . . . .  	NUMBER	0000	
BYTEACCESSOFFSETL  . . . . . . .  	NUMBER	0000	

CALLAMIGASERVICE . . . . . . . .  	V BYTE	0000	CSEG	External
CALLEDFIRST  . . . . . . . . . .  	NUMBER	0042	
CALLSERVICE  . . . . . . . . . .  	N PROC	0364	CSEG	Global	Length = 0091
CALL_FROMAMIGA_ONLY  . . . . . .  	NUMBER	0800	
CALL_FROMAMIGA_ONLYN . . . . . .  	NUMBER	000B	
CALL_FROMPC_ONLY . . . . . . . .  	NUMBER	0200	
CALL_FROMPC_ONLYN  . . . . . . .  	NUMBER	0009	
CALL_TOAMIGA_ONLY  . . . . . . .  	NUMBER	0400	
CALL_TOAMIGA_ONLYN . . . . . . .  	NUMBER	000A	
CALL_TOPC_ONLY . . . . . . . . .  	NUMBER	0100	
CALL_TOPC_ONLYN  . . . . . . . .  	NUMBER	0008	
CHAIN_VEC  . . . . . . . . . . .  	V DWORD	0000	CSEG	External
CHANNELMSG . . . . . . . . . . .  	V BYTE	0000	CSEG	External
CLEARMEM . . . . . . . . . . . .  	L NEAR	031B	CSEG
COLOROFFSETH . . . . . . . . . .  	NUMBER	0001	
COLOROFFSETL . . . . . . . . . .  	NUMBER	0000	
CR . . . . . . . . . . . . . . .  	NUMBER	000D	
CS_EXIT  . . . . . . . . . . . .  	L NEAR	03E2	CSEG
CS_LOCKSTRUC . . . . . . . . . .  	L NEAR	0383	CSEG
CS_LOOPBASE  . . . . . . . . . .  	L NEAR	0372	CSEG
CS_NOBASE  . . . . . . . . . . .  	L NEAR	03E2	CSEG

DBG_ALLOCPARAM . . . . . . . . .  	NUMBER	0000	
DBG_AMIGAADDMSG  . . . . . . . .  	NUMBER	0000	
DBG_AMIGACALLMSG . . . . . . . .  	NUMBER	0000	
DBG_AMIGADELETEMSG . . . . . . .  	NUMBER	0000	
DBG_BASEMSG  . . . . . . . . . .  	NUMBER	0000	
DBG_BLOCKMOVE  . . . . . . . . .  	NUMBER	0000	
DBG_BUFFERMSG  . . . . . . . . .  	NUMBER	0000	
DBG_CALLAMIGASERVICE . . . . . .  	NUMBER	0000	
DBG_COPYMSG  . . . . . . . . . .  	NUMBER	0000	
DBG_DISKMSG1 . . . . . . . . . .  	NUMBER	0000	
DBG_DOSMSGA  . . . . . . . . . .  	NUMBER	0000	
DBG_DOSMSGN  . . . . . . . . . .  	NUMBER	0000	
DBG_EXEINTMES  . . . . . . . . .  	NUMBER	0000	
DBG_EXITSDMSG  . . . . . . . . .  	NUMBER	0000	
DBG_FOUNDINTMES  . . . . . . . .  	NUMBER	0000	
DBG_GOTSERVICEINT  . . . . . . .  	NUMBER	0000	
DBG_HANDLERMSG . . . . . . . . .  	NUMBER	0000	
DBG_HANDLERVERSIONMSG  . . . . .  	NUMBER	0001	
DBG_HDPART . . . . . . . . . . .  	NUMBER	0000	
DBG_HWMSGP . . . . . . . . . . .  	NUMBER	0000	
DBG_HWMSGPC  . . . . . . . . . .  	NUMBER	0000	
DBG_HWMSGR . . . . . . . . . . .  	NUMBER	0000	
DBG_IDLEMSG  . . . . . . . . . .  	NUMBER	0000	
DBG_INITPOINTERS . . . . . . . .  	NUMBER	0000	
DBG_INITWAITPOINTERS . . . . . .  	NUMBER	0000	
DBG_INTCTRLMES . . . . . . . . .  	NUMBER	0000	
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Symbols-5


DBG_INTSMSG  . . . . . . . . . .  	NUMBER	0000	
DBG_INTTBLMES  . . . . . . . . .  	NUMBER	0000	
DBG_JPARTBASE  . . . . . . . . .  	NUMBER	0000	
DBG_LIBVERSIONMSG  . . . . . . .  	NUMBER	0001	
DBG_LOADMSG  . . . . . . . . . .  	NUMBER	0000	
DBG_MAKESERVICE  . . . . . . . .  	NUMBER	0000	
DBG_MEMCHUNK . . . . . . . . . .  	NUMBER	0000	
DBG_NEXTSLOTMSG  . . . . . . . .  	NUMBER	0000	
DBG_NOBASEMSG  . . . . . . . . .  	NUMBER	0001	
DBG_NOINTMES . . . . . . . . . .  	NUMBER	0000	
DBG_NOSERVICEBASEMSG . . . . . .  	NUMBER	0001	
DBG_PARASMSG . . . . . . . . . .  	NUMBER	0000	
DBG_PASTLOCK . . . . . . . . . .  	NUMBER	0000	
DBG_PRELOCK  . . . . . . . . . .  	NUMBER	0000	
DBG_REGMSG . . . . . . . . . . .  	NUMBER	0000	
DBG_REMOVEMSG  . . . . . . . . .  	NUMBER	0000	
DBG_SCROLL . . . . . . . . . . .  	NUMBER	0000	
DBG_SERVICEADDED . . . . . . . .  	NUMBER	0000	
DBG_SERVICEAVAILABLE . . . . . .  	NUMBER	0000	
DBG_SERVICEDELETED . . . . . . .  	NUMBER	0000	
DBG_SERVICESEARCH  . . . . . . .  	NUMBER	0000	
DBG_UCOUNTMSG  . . . . . . . . .  	NUMBER	0000	
DBG_UPDATEMSG  . . . . . . . . .  	NUMBER	0000	
DBG_WAITSTATUS . . . . . . . . .  	NUMBER	0000	
DBG_WRONGVERSIONMSG  . . . . . .  	NUMBER	0001	
DELETESERVICE  . . . . . . . . .  	N PROC	045E	CSEG	Global	Length = 00B5
DELETE_FOUND . . . . . . . . . .  	L NEAR	05B2	CSEG
DISKMSG1 . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
DISK_INT . . . . . . . . . . . .  	NUMBER	0013	
DOS  . . . . . . . . . . . . . .  	NUMBER	0080	
DOS12  . . . . . . . . . . . . .  	NUMBER	0001	
DOS16  . . . . . . . . . . . . .  	NUMBER	0004	
DOSMSGA  . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
DOSMSGN  . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
DOS_INT28  . . . . . . . . . . .  	V DWORD	0000	CSEG	External
DS_EXIT  . . . . . . . . . . . .  	L NEAR	0500	CSEG
DS_LOCKSTRUC . . . . . . . . . .  	L NEAR	047D	CSEG
DS_LOOPBASE  . . . . . . . . . .  	L NEAR	046C	CSEG
DS_NOBASE  . . . . . . . . . . .  	L NEAR	0500	CSEG
DUMMY  . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
DUMMYFLAG  . . . . . . . . . . .  	V BYTE	0000	CSEG	External
D_SEG  . . . . . . . . . . . . .  	NUMBER	D000	

EOI  . . . . . . . . . . . . . .  	NUMBER	0020	
ERRALLOCJ  . . . . . . . . . . .  	L NEAR	035D	CSEG
ERRALLOCP  . . . . . . . . . . .  	L NEAR	01AD	CSEG
ERRALLOCS  . . . . . . . . . . .  	L NEAR	01B6	CSEG
ERRCHANNEL . . . . . . . . . . .  	L NEAR	0355	CSEG
ERREXIST . . . . . . . . . . . .  	L NEAR	01C0	CSEG
ERREXIT  . . . . . . . . . . . .  	L NEAR	02E2	CSEG
ERRFATAL . . . . . . . . . . . .  	L NEAR	01A2	CSEG
ERRFREE  . . . . . . . . . . . .  	L NEAR	03E2	CSEG
ERRID  . . . . . . . . . . . . .  	L NEAR	02E0	CSEG
ESC_CHAR . . . . . . . . . . . .  	NUMBER	001B	
ESDI_MES . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
EXEINTMES  . . . . . . . . . . .  	V BYTE	0000	CSEG	External
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Symbols-6


EXITSDMSG  . . . . . . . . . . .  	V BYTE	0000	CSEG	External
EXPUNGE_SERVICE  . . . . . . . .  	NUMBER	0002	
EXPUNGE_SERVICEN . . . . . . . .  	NUMBER	0001	

FAKEDOSFLAG  . . . . . . . . . .  	V BYTE	0000	CSEG	External
FINDSERVICE  . . . . . . . . . .  	L NEAR	006A	CSEG
FINDSLOT . . . . . . . . . . . .  	L NEAR	039E	CSEG
FIRSTSERVICE . . . . . . . . . .  	L NEAR	0344	CSEG
FOUNDBASE  . . . . . . . . . . .  	L NEAR	0021	CSEG
FOUNDINTMES  . . . . . . . . . .  	V BYTE	0000	CSEG	External
FOUND_PARA . . . . . . . . . . .  	L NEAR	0126	CSEG
FOUND_PC_PARA  . . . . . . . . .  	L NEAR	0107	CSEG
FREEFOUND  . . . . . . . . . . .  	L NEAR	03CB	CSEG
FREEMEM  . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
F_SEG  . . . . . . . . . . . . .  	NUMBER	F000	

GETBASE  . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
GETSERVICE . . . . . . . . . . .  	N PROC	01D3	CSEG	Global	Length = 012C
GETS_ALOAD_A . . . . . . . . . .  	NUMBER	0040	
GETS_ALOAD_AN  . . . . . . . . .  	NUMBER	0006	
GETS_ALOAD_PC  . . . . . . . . .  	NUMBER	0080	
GETS_ALOAD_PCN . . . . . . . . .  	NUMBER	0007	
GETS_EXCLUSIVE . . . . . . . . .  	NUMBER	0020	
GETS_EXCLUSIVEN  . . . . . . . .  	NUMBER	0005	
GETS_FROMAMIGA_ONLY  . . . . . .  	NUMBER	0010	
GETS_FROMAMIGA_ONLYN . . . . . .  	NUMBER	0004	
GETS_FROMPC_ONLY . . . . . . . .  	NUMBER	0004	
GETS_FROMPC_ONLYN  . . . . . . .  	NUMBER	0002	
GETS_TOAMIGA_ONLY  . . . . . . .  	NUMBER	0008	
GETS_TOAMIGA_ONLYN . . . . . . .  	NUMBER	0003	
GETS_TOPC_ONLY . . . . . . . . .  	NUMBER	0002	
GETS_TOPC_ONLYN  . . . . . . . .  	NUMBER	0001	
GETS_WAIT  . . . . . . . . . . .  	NUMBER	0001	
GETS_WAITN . . . . . . . . . . .  	NUMBER	0000	
GOTSERVICEINT  . . . . . . . . .  	V BYTE	0000	CSEG	External
GRAPHICACCESSOFFSETH . . . . . .  	NUMBER	0004	
GRAPHICACCESSOFFSETL . . . . . .  	NUMBER	0000	
GS_CHECKWAIT . . . . . . . . . .  	L NEAR	027E	CSEG
GS_EXIT  . . . . . . . . . . . .  	L NEAR	02EC	CSEG
GS_FINDSERVICE . . . . . . . . .  	L NEAR	020B	CSEG
GS_LOCKSTRUC . . . . . . . . . .  	L NEAR	01F2	CSEG
GS_LOOPBASE  . . . . . . . . . .  	L NEAR	01E1	CSEG
GS_NEWCUSTOMER . . . . . . . . .  	L NEAR	0256	CSEG
GS_NEXTSERVICE . . . . . . . . .  	L NEAR	022D	CSEG
GS_NOBASE  . . . . . . . . . . .  	L NEAR	02E2	CSEG
GS_SERVICEFOUND  . . . . . . . .  	L NEAR	023A	CSEG
GS_UPDATEUSERCOUNT . . . . . . .  	L NEAR	0252	CSEG
GS_WAIT  . . . . . . . . . . . .  	L NEAR	0288	CSEG
GS_WAITFORSERVICE  . . . . . . .  	L NEAR	029B	CSEG
GS_WAITLOOP  . . . . . . . . . .  	L NEAR	02C2	CSEG

HANDLERMSG . . . . . . . . . . .  	V BYTE	0000	CSEG	External
HANDLERPTR . . . . . . . . . . .  	V DWORD	0000	CSEG	External
HANDLERVERSIONMSG  . . . . . . .  	V BYTE	0000	CSEG	External
HIGH_WORD  . . . . . . . . . . .  	NUMBER	0000	
HWMSGP . . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Symbols-7


HWMSGPC  . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
HWMSGR . . . . . . . . . . . . .  	V BYTE	0000	CSEG	External

IDLE . . . . . . . . . . . . . .  	NUMBER	0000	
IDLEDOS  . . . . . . . . . . . .  	NUMBER	0010	
IDLEMSG  . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
IDLE_INT . . . . . . . . . . . .  	NUMBER	0028	
INFOLEVEL  . . . . . . . . . . .  	NUMBER	000A	
INFORMEXIT . . . . . . . . . . .  	L NEAR	060B	CSEG
INFORMPC . . . . . . . . . . . .  	N PROC	05CB	CSEG	Length = 0045
INFORM_DEL . . . . . . . . . . .  	L NEAR	04AF	CSEG
INITPOINTERS . . . . . . . . . .  	V BYTE	0000	CSEG	External
INITSERVICEPTR . . . . . . . . .  	N PROC	0000	CSEG	Global	Length = 0032
INITWAITPOINTERS . . . . . . . .  	V BYTE	0000	CSEG	External
INTCOUNT . . . . . . . . . . . .  	V WORD	0000	CSEG	External
INTCTRLMES . . . . . . . . . . .  	V BYTE	0000	CSEG	External
INTEN_REG  . . . . . . . . . . .  	NUMBER	0379	
INTSMSG  . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
INTTBLMES  . . . . . . . . . . .  	V BYTE	0000	CSEG	External
INT_ACTIVE . . . . . . . . . . .  	NUMBER	0001	
INT_ENABLE . . . . . . . . . . .  	V DWORD	0000	CSEG	External
INT_REQ  . . . . . . . . . . . .  	V DWORD	0000	CSEG	External
IOACCESSOFFSETH  . . . . . . . .  	NUMBER	0006	
IOACCESSOFFSETL  . . . . . . . .  	NUMBER	0000	
IOREGOFFSETH . . . . . . . . . .  	NUMBER	0001	
IOREGOFFSETL . . . . . . . . . .  	NUMBER	E000	
IRQ3EN . . . . . . . . . . . . .  	NUMBER	FFF7	
IRQ3RESET  . . . . . . . . . . .  	NUMBER	03B0	

JANINT8  . . . . . . . . . . . .  	NUMBER	0008	
JANPCINT . . . . . . . . . . . .  	NUMBER	0040	
JANUS  . . . . . . . . . . . . .  	NUMBER	0040	
JANUSBANKMASKH . . . . . . . . .  	NUMBER	0006	
JANUSBANKMASKL . . . . . . . . .  	NUMBER	0000	
JANUSBANKSIZE  . . . . . . . . .  	NUMBER	0000	
JANUSNUMBANKS  . . . . . . . . .  	NUMBER	0004	
JANUSTOTALSIZE . . . . . . . . .  	NUMBER	0000	
JANUS_BASE_SEG . . . . . . . . .  	V WORD	0000	CSEG	External
JANUS_BUFFER_SEG . . . . . . . .  	V WORD	0000	CSEG	External
JANUS_PARAM_SEG  . . . . . . . .  	V WORD	0000	CSEG	External
JANUS_PART_BASE  . . . . . . . .  	V WORD	0000	CSEG	External
JFUNC_ADDSERVICE . . . . . . . .  	NUMBER	000A	
JFUNC_ALLOCMEM . . . . . . . . .  	NUMBER	0002	
JFUNC_CALLAMIGA  . . . . . . . .  	NUMBER	0007	
JFUNC_CALLSERVICE  . . . . . . .  	NUMBER	000C	
JFUNC_CHECKAMIGA . . . . . . . .  	NUMBER	0009	
JFUNC_DELETESERVICE  . . . . . .  	NUMBER	000E	
JFUNC_FREEMEM  . . . . . . . . .  	NUMBER	0003	
JFUNC_GETBASE  . . . . . . . . .  	NUMBER	0001	
JFUNC_GETSERVICE . . . . . . . .  	NUMBER	000B	
JFUNC_GETSERVICE1  . . . . . . .  	NUMBER	0000	
JFUNC_JINT . . . . . . . . . . .  	NUMBER	000B	
JFUNC_LOCKSERVICEDATA  . . . . .  	NUMBER	000F	
JFUNC_MAX  . . . . . . . . . . .  	NUMBER	0010	
JFUNC_RELEASESERVICE . . . . . .  	NUMBER	000D	
JFUNC_SETPARAM . . . . . . . . .  	NUMBER	0004	
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Symbols-8


JFUNC_SETSERVICE . . . . . . . .  	NUMBER	0005	
JFUNC_STOPSERVICE  . . . . . . .  	NUMBER	0006	
JFUNC_UNLOCKSERVICEDATA  . . . .  	NUMBER	0010	
JFUNC_WAITAMIGA  . . . . . . . .  	NUMBER	0008	
JSERV_AMIGACALL  . . . . . . . .  	NUMBER	000C	
JSERV_AMIGASERVICE . . . . . . .  	NUMBER	000E	
JSERV_AMOUSE . . . . . . . . . .  	NUMBER	0011	
JSERV_BADAUTOLOAD  . . . . . . .  	NUMBER	000A	
JSERV_COM2INT  . . . . . . . . .  	NUMBER	0006	
JSERV_CRT1INT  . . . . . . . . .  	NUMBER	0002	
JSERV_CRT2INT  . . . . . . . . .  	NUMBER	0003	
JSERV_DUPSERVICE . . . . . . . .  	NUMBER	0007	
JSERV_ENBKB  . . . . . . . . . .  	NUMBER	0004	
JSERV_FINISHED . . . . . . . . .  	NUMBER	0001	
JSERV_GINT . . . . . . . . . . .  	NUMBER	0001	
JSERV_HARDDISK . . . . . . . . .  	NUMBER	0009	
JSERV_ILLFUNCTION  . . . . . . .  	NUMBER	0008	
JSERV_LPT1INT  . . . . . . . . .  	NUMBER	0005	
JSERV_MINT . . . . . . . . . . .  	NUMBER	0000	
JSERV_NOAMIGAMEM . . . . . . . .  	NUMBER	0004	
JSERV_NOFUNCTION . . . . . . . .  	NUMBER	-0001	
JSERV_NOJANUSBASE  . . . . . . .  	NUMBER	0002	
JSERV_NOJANUSMEM . . . . . . . .  	NUMBER	0003	
JSERV_NOPCMEM  . . . . . . . . .  	NUMBER	0005	
JSERV_NOSERVICE  . . . . . . . .  	NUMBER	0006	
JSERV_NOTEXCLUSIVE . . . . . . .  	NUMBER	0009	
JSERV_OK . . . . . . . . . . . .  	NUMBER	0000	
JSERV_PCBOOTED . . . . . . . . .  	NUMBER	0007	
JSERV_PCCALL . . . . . . . . . .  	NUMBER	000D	
JSERV_PCDISK . . . . . . . . . .  	NUMBER	0010	
JSERV_PCSERVICE  . . . . . . . .  	NUMBER	000F	
JSERV_PENDING  . . . . . . . . .  	NUMBER	0000	
JSERV_READAMIGA  . . . . . . . .  	NUMBER	000A	
JSERV_READPC . . . . . . . . . .  	NUMBER	000B	
JSERV_SCROLL . . . . . . . . . .  	NUMBER	0008	
JSETINT  . . . . . . . . . . . .  	NUMBER	007F	

KEYB_INT . . . . . . . . . . . .  	NUMBER	0016	

LF . . . . . . . . . . . . . . .  	NUMBER	000A	
LIBVERSIONMSG  . . . . . . . . .  	V BYTE	0000	CSEG	External
LOADERRMSG . . . . . . . . . . .  	V BYTE	0000	CSEG	External
LOCKSERVICEDATA  . . . . . . . .  	N PROC	0610	CSEG	Global	Length = 0019
LOOPBASE . . . . . . . . . . . .  	L NEAR	000C	CSEG
LOOPFREE . . . . . . . . . . . .  	L NEAR	03A1	CSEG
LOOPSLOT . . . . . . . . . . . .  	L NEAR	055E	CSEG
LOW_WORD . . . . . . . . . . . .  	NUMBER	0002	

MAKESERVICE  . . . . . . . . . .  	V BYTE	0000	CSEG	External
MAKESERVICEDATA  . . . . . . . .  	N PROC	0306	CSEG	Global	Length = 005E
MAXHANDLER . . . . . . . . . . .  	NUMBER	0020	
MAXINT . . . . . . . . . . . . .  	NUMBER	0020	
MEMB_BUFFER  . . . . . . . . . .  	NUMBER	0001	
MEMB_PARAMETER . . . . . . . . .  	NUMBER	0000	
MEMCHUNK . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
MEMF_BUFFER  . . . . . . . . . .  	NUMBER	0002	
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Symbols-9


MEMF_PARAMETER . . . . . . . . .  	NUMBER	0001	
MEMLOCK  . . . . . . . . . . . .  	NUMBER	00FF	
MEMUNLOCK  . . . . . . . . . . .  	NUMBER	007F	
MEM_ACCESSMASK . . . . . . . . .  	NUMBER	3000	
MEM_BYTEACCESS . . . . . . . . .  	NUMBER	0000	
MEM_GRAPHICACCESS  . . . . . . .  	NUMBER	2000	
MEM_IOACCESS . . . . . . . . . .  	NUMBER	3000	
MEM_TYPEMASK . . . . . . . . . .  	NUMBER	00FF	
MEM_WORDACCESS . . . . . . . . .  	NUMBER	1000	
MONOVIDEOOFFSETH . . . . . . . .  	NUMBER	0001	
MONOVIDEOOFFSETL . . . . . . . .  	NUMBER	C000	
MSD_EXIT . . . . . . . . . . . .  	L NEAR	035D	CSEG

NEWLINE  . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
NEXTFREE . . . . . . . . . . . .  	L NEAR	03A4	CSEG
NEXTSERVICE  . . . . . . . . . .  	L NEAR	008C	CSEG
NEXTSLOT . . . . . . . . . . . .  	L NEAR	0572	CSEG
NEXTSLOTMSG  . . . . . . . . . .  	V BYTE	0000	CSEG	External
NOBASE . . . . . . . . . . . . .  	L NEAR	0028	CSEG
NOBASEMSG  . . . . . . . . . . .  	V BYTE	0000	CSEG	External
NODRIVEMSG . . . . . . . . . . .  	V BYTE	0000	CSEG	External
NOHANMES . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
NOINTMES . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
NOPARTMSG  . . . . . . . . . . .  	V BYTE	0000	CSEG	External
NOSERVICE  . . . . . . . . . . .  	L NEAR	00AC	CSEG
NOSERVICEBASEMSG . . . . . . . .  	V BYTE	0000	CSEG	External
NO_OLD_ADD . . . . . . . . . . .  	L NEAR	04F2	CSEG
NULL . . . . . . . . . . . . . .  	NUMBER	0000	

OLD_ADD_FOUND  . . . . . . . . .  	L NEAR	04E8	CSEG
OUTHXB . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
OUTHXW . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
OUTINT . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

PARAMETEROFFSETH . . . . . . . .  	NUMBER	0001	
PARAMETEROFFSETL . . . . . . . .  	NUMBER	8000	
PARAMETERSIZEH . . . . . . . . .  	NUMBER	0000	
PARAMETERSIZEL . . . . . . . . .  	NUMBER	4000	
PARASMSG . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
PAS_FOUND  . . . . . . . . . . .  	L NEAR	0186	CSEG
PAS_NOT_FOUND  . . . . . . . . .  	L NEAR	0160	CSEG
PCSTATE_RESERVED . . . . . . . .  	NUMBER	FFFF	
PC_EXCLUSIVE . . . . . . . . . .  	NUMBER	0020	
PC_EXCLUSIVEN  . . . . . . . . .  	NUMBER	0005	
PDS_FOUND  . . . . . . . . . . .  	L NEAR	04D5	CSEG
PDS_NOT_FOUND  . . . . . . . . .  	L NEAR	04AF	CSEG
PIC_00 . . . . . . . . . . . . .  	NUMBER	0020	
PIC_01 . . . . . . . . . . . . .  	NUMBER	0021	
PREPARERETURN  . . . . . . . . .  	L NEAR	0197	CSEG
PSTRNG . . . . . . . . . . . . .  	L NEAR	0000	CSEG	External

REGMSG . . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
RELEASESERVICE . . . . . . . . .  	N PROC	03F5	CSEG	Global	Length = 0069
REMOVEMSG  . . . . . . . . . . .  	V BYTE	0000	CSEG	External
REMOVESERVICE  . . . . . . . . .  	N PROC	0513	CSEG	Length = 003D
REMOVESTRUC  . . . . . . . . . .  	L NEAR	0446	CSEG
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Symbols-10


RETURNPOINTER  . . . . . . . . .  	L NEAR	034E	CSEG
RS_EXIT  . . . . . . . . . . . .  	L NEAR	044B	CSEG
RS_FREEMEM . . . . . . . . . . .  	L NEAR	053A	CSEG
RS_FREESERVICESTRUCTURE  . . . .  	L NEAR	0548	CSEG
RS_LOCKSTRUC . . . . . . . . . .  	L NEAR	0414	CSEG
RS_LOOPBASE  . . . . . . . . . .  	L NEAR	0403	CSEG
RS_MERGE . . . . . . . . . . . .  	L NEAR	0529	CSEG
RS_NEXT  . . . . . . . . . . . .  	L NEAR	051D	CSEG
RS_NOBASE  . . . . . . . . . . .  	L NEAR	044B	CSEG
RS_NOMERGE . . . . . . . . . . .  	L NEAR	0534	CSEG

SCROLL . . . . . . . . . . . . .  	NUMBER	0000	
SCROLLFLAG . . . . . . . . . . .  	V BYTE	0000	CSEG	External
SCROLLING  . . . . . . . . . . .  	NUMBER	0006	
SD_CREATED . . . . . . . . . . .  	NUMBER	0100	
SD_CREATEDN  . . . . . . . . . .  	NUMBER	0008	
SD_EXIT  . . . . . . . . . . . .  	L NEAR	05C1	CSEG
SD_SERVICEFOUND  . . . . . . . .  	L NEAR	056D	CSEG
SENDJANUSINT . . . . . . . . . .  	L NEAR	0000	CSEG	External
SERIAL . . . . . . . . . . . . .  	NUMBER	0000	
SERIAL_INT . . . . . . . . . . .  	NUMBER	0014	
SERVICEADDED . . . . . . . . . .  	V BYTE	0000	CSEG	External
SERVICEAVAILABLE . . . . . . . .  	V BYTE	0000	CSEG	External
SERVICEDELETED . . . . . . . . .  	V BYTE	0000	CSEG	External
SERVICEDISPATCH  . . . . . . . .  	N PROC	0550	CSEG	Global	Length = 007B
SERVICEEXISTS  . . . . . . . . .  	L NEAR	00A7	CSEG
SERVICEFOUND . . . . . . . . . .  	L NEAR	0099	CSEG
SERVICESEARCH  . . . . . . . . .  	V BYTE	0000	CSEG	External
SERVICE_ADDED  . . . . . . . . .  	NUMBER	0040	
SERVICE_ADDEDN . . . . . . . . .  	NUMBER	0006	
SERVICE_AMIGASIDE  . . . . . . .  	NUMBER	0004	
SERVICE_AMIGASIDEN . . . . . . .  	NUMBER	0002	
SERVICE_DELETED  . . . . . . . .  	NUMBER	0001	
SERVICE_DELETEDN . . . . . . . .  	NUMBER	0000	
SERVICE_PCWAIT . . . . . . . . .  	NUMBER	0008	
SERVICE_PCWAITN  . . . . . . . .  	NUMBER	0003	
SERVSTATTAB  . . . . . . . . . .  	V BYTE	0000	CSEG	External
SETPARAM . . . . . . . . . . . .  	L NEAR	0000	CSEG	External
SIGNALADD  . . . . . . . . . . .  	L NEAR	057B	CSEG
SIGNALCUSTOMER . . . . . . . . .  	NUMBER	0055	
SIGNALDELETE . . . . . . . . . .  	L NEAR	059E	CSEG
SPACE  . . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
SRV_INT  . . . . . . . . . . . .  	NUMBER	000B	
SSTACK . . . . . . . . . . . . .  	V WORD	0000	CSEG	External
STACKLENGTH  . . . . . . . . . .  	NUMBER	4000	
STATUSREG  . . . . . . . . . . .  	NUMBER	0062	
STOPSCROLL . . . . . . . . . . .  	NUMBER	00FF	

TESTINTMES . . . . . . . . . . .  	V BYTE	0000	CSEG	External
TICKS  . . . . . . . . . . . . .  	V WORD	0000	CSEG	External
TIME_INT . . . . . . . . . . . .  	NUMBER	001C	
TYPEACCESSTOADDR . . . . . . . .  	NUMBER	0005	

UCOUNTMSG  . . . . . . . . . . .  	V BYTE	0000	CSEG	External
UNLOCKSERVICEDATA  . . . . . . .  	N PROC	0629	CSEG	Global	Length = 0012
UPDATEMSG  . . . . . . . . . . .  	V BYTE	0000	CSEG	External
Microsoft (R) Macro Assembler Version 5.00                  10/10/88 17:35:42
SERVICE2  -  COPYRIGHT (C) 1986 - 1988 Commodore Amiga Inc. Symbols-11


UPDATEPARAM  . . . . . . . . . .  	L NEAR	00D1	CSEG
UPDATERATE . . . . . . . . . . .  	NUMBER	0BB8	
USTACK . . . . . . . . . . . . .  	V WORD	0000	CSEG	External

VIDEO  . . . . . . . . . . . . .  	NUMBER	0001	
VIDEO_INT  . . . . . . . . . . .  	NUMBER	0010	

W  . . . . . . . . . . . . . . .  	TEXT  word ptr		
WAITFLAG . . . . . . . . . . . .  	V BYTE	0000	CSEG	External
WAITS  . . . . . . . . . . . . .  	F PROC	02FF	CSEG	Length = 0007
WAITSTATUS . . . . . . . . . . .  	V BYTE	0000	CSEG	External
WAIT_FREE_LOOP . . . . . . . . .  	NUMBER	0064	
WORDACCESSOFFSETH  . . . . . . .  	NUMBER	0002	
WORDACCESSOFFSETL  . . . . . . .  	NUMBER	0000	
WRITE_TTY  . . . . . . . . . . .  	NUMBER	000E	
WRONGVERSIONMSG  . . . . . . . .  	V BYTE	0000	CSEG	External

??0000 . . . . . . . . . . . . .  	L NEAR	0051	CSEG
??0001 . . . . . . . . . . . . .  	L NEAR	005C	CSEG
??0002 . . . . . . . . . . . . .  	L NEAR	0167	CSEG
??0003 . . . . . . . . . . . . .  	L NEAR	0172	CSEG
??0004 . . . . . . . . . . . . .  	L NEAR	01F2	CSEG
??0005 . . . . . . . . . . . . .  	L NEAR	01FD	CSEG
??0006 . . . . . . . . . . . . .  	L NEAR	02CC	CSEG
??0007 . . . . . . . . . . . . .  	L NEAR	02D7	CSEG
??0008 . . . . . . . . . . . . .  	L NEAR	0383	CSEG
??0009 . . . . . . . . . . . . .  	L NEAR	038E	CSEG
??000A . . . . . . . . . . . . .  	L NEAR	03B9	CSEG
??000B . . . . . . . . . . . . .  	L NEAR	03C4	CSEG
??000C . . . . . . . . . . . . .  	L NEAR	0414	CSEG
??000D . . . . . . . . . . . . .  	L NEAR	041F	CSEG
??000E . . . . . . . . . . . . .  	L NEAR	047D	CSEG
??000F . . . . . . . . . . . . .  	L NEAR	0488	CSEG
??0010 . . . . . . . . . . . . .  	L NEAR	04B6	CSEG
??0011 . . . . . . . . . . . . .  	L NEAR	04C1	CSEG
??0012 . . . . . . . . . . . . .  	L NEAR	0618	CSEG
??0013 . . . . . . . . . . . . .  	L NEAR	0624	CSEG
@FILENAME  . . . . . . . . . . .  	TEXT  SERVICE2		


   2178 Source  Lines
   2772 Total   Lines
    562 Symbols

  44696 + 176424 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
