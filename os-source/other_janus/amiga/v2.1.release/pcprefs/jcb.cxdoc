#include <stdio.h>


#define CTL_PORT 0xFF9F
void help();
static unsigned char far *mem_addr;

main()
{
   
   unsigned int board_offset;
   char cmd;
     
   
   printf("Input board ofset in hex\n");
   scanf("%lX",&board_offset);
   mem_addr =(char far *) (board_offset += CTL_PORT);
   printf("control port address = %lX\n",mem_addr);
   *mem_addr = 0xDD;
   cmd = 0;
   help();
   while (cmd != 'Q')
   {
      cmd = fgetchar();
      cmd = toupper(cmd);
      switch (cmd)
      {
         case 'Q': 
                  break;
         case 'H': 
                  help();
                  break;
         case '1':
                  printf(" 1      A=INT  B=INT  BYTES=0 2 4  FS0/3=0 0 0 \n");
                  *mem_addr = 0x00;  
                  *mem_addr = 0x02;  
                  *mem_addr = 0x04;
                  break; 
         case '2':
                  printf(" 2      A=INT  B=SHA  BYTES=0 3 4  FS0/3=0 1 0 \n");
                  *mem_addr = 0x00;  
                  *mem_addr = 0x03;  
                  *mem_addr = 0x04;
                  break;
         case '3':
                  printf(" 3      A=INT  B=EXT  BYTES=1 3 4  FS0/3=1 1 0 \n");
                  *mem_addr = 0x01;  
                  *mem_addr = 0x03;  
                  *mem_addr = 0x04;
                  break;
         case '4':
                  printf(" 4      A=EXT  B=INT  BYTES=0 2 5  FS0/3=0 0 1 \n");
                  *mem_addr = 0x00;  
                  *mem_addr = 0x02;  
                  *mem_addr = 0x05;
                 break;
         case '5':
                  printf(" 5      A=SHA  B=INT  BYTES=1 2 5  FS0/3=1 0 1 \n");
                  *mem_addr = 0x01;  
                  *mem_addr = 0x02;  
                  *mem_addr = 0x05;
                  break;
         case '6':
                  printf(" 6      A=EXT  B=SHA  BYTES=1 2 4  FS0/3=1 0 0 \n");
                  *mem_addr = 0x01;  
                  *mem_addr = 0x02;  
                  *mem_addr = 0x04;
                  break;
         case '7':
                  printf(" 7      A=SHA  B=EXT  BYTES=1 3 5  FS0/3=1 1 1 \n");
                  *mem_addr = 0x01;  
                  *mem_addr = 0x03;  
                  *mem_addr = 0x05;
                  break;
         case '8':
                  printf(" 8      SPEAKER ON    BYTE=7       SPK  =1 \n");
                  *mem_addr = 0x07;  
                  break;
         case '9':
                  printf(" 9      SPEAKER OFF   BYTE=6       SPK  =0 \n");
                  *mem_addr = 0x06;  
                  break;
         case 'A':
                  printf(" A      VIDEO MDA     BYTE=9       VID  =1 \n");
                  *mem_addr = 0x09;  
                  break;
         case 'B':
                  printf(" B      VID CGA       BYTE=8       VID  =0 \n");
                  *mem_addr = 0x08;  
                  break;
         case 'C':
                  printf(" C      FLOPPY PC MD  BYTE=B       AMODE=1 \n");
                  *mem_addr = 0x0B;  
                  break;
         case 'D':
                  printf(" D      FLOPPY AMIGA  BYTE=A       AMODE=0 \n");
                  *mem_addr = 0x0A;  
                  break;                  
         default :
                  break;
      }
                  
      if (cmd != 'Q') cmd =0;
   }
   


}

void help()
{
   
 
   printf("COMMAND FUNCTION      WRITE        PINS        \n");
   printf("------- ------------  -----------  ----------- \n");  
   printf(" 1      A=INT  B=INT  BYTES=0 2 4  FS0/3=0 0 0 \n");
   printf(" 2      A=INT  B=SHA  BYTES=0 3 4  FS0/3=0 1 0 \n");
   printf(" 3      A=INT  B=EXT  BYTES=1 3 4  FS0/3=1 1 0 \n");
   printf(" 4      A=EXT  B=INT  BYTES=0 2 5  FS0/3=0 0 1 \n");
   printf(" 5      A=SHA  B=INT  BYTES=1 2 5  FS0/3=1 0 1 \n");
   printf(" 6      A=EXT  B=SHA  BYTES=1 2 4  FS0/3=1 0 0 \n");
   printf(" 7      A=SHA  B=EXT  BYTES=1 3 5  FS0/3=1 1 1 \n");
   printf(" 8      SPEAKER ON    BYTE=7       SPK  =1 \n");
   printf(" 9      SPEAKER OFF   BYTE=6       SPK  =0 \n");
   printf(" A      VIDEO MDA     BYTE=9       VID  =1 \n");
   printf(" B      VID CGA       BYTE=8       VID  =0 \n");
   printf(" C      FLOPPY PC MD  BYTE=B       AMODE=1 \n");
   printf(" D      FLOPPY AMIGA  BYTE=A       AMODE=0 \n");
   printf("\n");
   printf(" H      HELP\n");
   printf(" Q      QUIT\n");
      
}
