      xref     _CGA_Base
      xref     _ChangeBuff
      xref     _RenderChar
      xref     _NFuncTable
      xref     _CFuncTable
      xref     _Plane0
      xref     _Plane1
      xref     _Plane2
      xref     _sigmask
      xref     _RamWritten
      xref     _LVOWaitTOF
      xref     _LVOWait
      xref     _GfxBase
      xref     _DTaskRun
      xref     _Rows
      xref     _Cols
      xref     _BPR
      xref     _JanusBase
      xref     _LVOSetJanusEnable

      xdef     _RefreshCGA

      csect    text,0,0,1,2

_RefreshCGA:
      movem.l  D2-D7/A2-A6,-(SP)

again:
   cmp.b    #0,_DTaskRun
   bne      Cont
   move.l   #0,D0
   movea.l  4,A6
   jsr      _LVOWait(A6)

Cont:
   movea.l  _GfxBase,A6
   jsr      _LVOWaitTOF(A6)


   cmp.l    #0,_RamWritten
   beq      again
   move.l   #0,_RamWritten

   movea.l  _NFuncTable,A2
   movea.l  _CFuncTable,A3
   move.l   _Plane0,D2
   move.l   _Plane1,D4
   move.l   _Plane2,D3
again1:

*  CBPtr=ChangeBuff;
   movea.l  _ChangeBuff,A5

*  WPtr=CGA_Base;
   movea.l  _CGA_Base,A6

*  RowOff=0;
   clr.l    D7

*  for(YCount=0;YCount<25;YCount++)
*  {
   move.w   _Rows,D5
   subq.w   #1,D5
YLoop:

*     ColOff=0;
      clr.w    D6

      swap     D5
*     for(XCount=0;XCount<80;XCount++)
*     {
      move.w   _Cols,D5
      subq.w   #1,D5
XLoop:

*        CWord=*WPtr++;
         move.w   (A6)+,D0

*        CHWord=*CBPtr;
         move.w   (A5),D1

*        if(CWord != CHWord)
*        {
         cmp.w    D1,D0
         beq.s    NoChange

*           Off=RowOff+ColOff;
            movea.l  #0,A4
            adda.l   D7,A4
            adda.w   D6,A4

*           *CBPtr=CWord;
            move.w   D0,(A5)

*           /* expects _CWord _Off, _NFuncTable, _CFuncTable */
*           /* _Plane0-3                                        */
*           RenderChar();
            jsr      _RenderChar

*        }
NoChange:

*        CBPtr++;
         addq.l   #2,A5

*        ColOff++;
         addq.w   #1,D6

*     }
      dbf      D5,XLoop

*     RowOff+=(BPR << 3);
      add.l   _BPR,D7
      add.l   _BPR,D7
      add.l   _BPR,D7
      add.l   _BPR,D7
      add.l   _BPR,D7
      add.l   _BPR,D7
      add.l   _BPR,D7
      add.l   _BPR,D7

*  }
   swap  D5
   dbf   D5,YLoop

*}
      moveq.l  #1,D0
      moveq.l  #1,D1
      movea.l  _JanusBase,A6
      jsr      _LVOSetJanusEnable(A6)

      bra   again

exit:
      movem.l  (SP)+,D2-D7/A2-A6
      RTS

      END
