
The Bridge Card and Janus.Library 
Robert J. Mical
27 April 1988
Copyright (C) 1986, 1987, 1988, Commodore-Amiga Inc.
All Rights Reserved




This reference document describes the capabilities and features the Bridge 
hardware and of janus.library, the Amiga software library that supports 
inter-processor communications between the Amiga and the Bridge PC.  
Programming techniques are discussed, with examples provided to 
illustrate the required techniques.  

This document describes Version 2.0 of the janus.library.  

This is a pre-beta release of this document.  You will notice that some 
of the descriptions, especially about the lower system levels, are 
sparse at best, and in some places non-existant.  On the other hand, 
the autodocs and data structures are quite solid and can be depended on.  


This document is comprised of the following sections:  
	- Introduction
	- Services
	- Janus Memory Requirements and Routines
	- Other Support Routines
	- Janus Signal Management
	- Bridge/Janus Interrupts
	- Amiga Function Call Specifications ("autodocs")
	- Amiga Include Files
	- PC Include File and Assembler Interface Specifications
	- ARead, AWrite and JFTrans on the PC
	- Brief Hardware Description
	- Hardware Registers



=== ===========================================================================
=== Introduction ==============================================================
=== ===========================================================================

"Where's that confounded bridge?"
Led Zeppelin


The Amiga 2000's Bridge board provides PC compatiblity to the Amiga.  
This is accomplished with a complete PC hardware environment on the 
Bridge card combined with special card slots inside the A2000 to accomodate 
PC hardware cards.  

Except when they pause to communicate, both the Amiga and the PC are 
able to execute at full speed without interfering with one another.  
In this way, the A2000 can provide a true multi-processor environment, 
which, while perhaps not as powerful as the multi-processor environment 
of a Cray X-MP, has great potential indeed.  

When the two machines need to communicate, they do so through a software 
interface called "Janus", which name comes from the mythological god 
with two faces (though some of the engineers would have named the interface 
"Zaphod" after the popular-fiction character who had two heads which were 
constantly bickering).  The Janus interface uses the Bridge board's 
interrupt system and 128K of dual-ported RAM to provide these 
inter-machine communications.  This RAM can be accessed by either the 
Amiga's or the PC's processor.  It is a special sort of RAM that is not 
generally available to Amiga programs, so you have to use the special 
janus.library function calls to allocate and manipulate this memory.  
Details of this are described in the "Janus Memory Requirements and 
Routines" section of this document.  

Software on the two machines can communicate on three levels.  At the 
top is, as you might imagine, the most convenient level to use:  services.  
Janus Service routines provide an easy way for Amiga and PC programs to 
communicate.  The entire underlying support for these communications is 
hidden from the programmer, requiring but a few standard Amiga and PC 
programming techniques to send and receive signals and data between the 
two CPU's.  Below the services routines are the Janus signal interrupt 
routines, which code creates a level of interacting with the PC that 
requires direct handshaking with the PC but hides the complexities of 
interrupt handling from the programmer.  Beneath this level is the Janus 
interrupt level itself.  Here is found the routines which allow you to 
interact with the Bridge hardware on an interrupt basis.  Most programmers 
don't even want to know about this level, let alone actually use it.  
Besides, most of the hardware interrupts are spoken for.  

To learn more about the three levels of system support, refer, in 
descending order, to the sections "Services," "Janus Signal Management" 
and "Janus Interrupts" of this document.  

The Amiga programmer's interface and the PC interface are almost 
identical.  There are a handful of differences which reflect the fact 
that the Amiga multi-tasks, the Amiga doesn't allow busy-wait loops, 
the Amiga doesn't allow hard-coded addresses for routines, and other 
stuff like that there.  The interface to the PC routines can be found 
in the "PC Include File and Assembler Interface Specifications" section.  
A library of C-language-callable routines will be available soon.  

